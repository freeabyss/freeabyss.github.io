{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/Java_IO_01.jpg","path":"images/Java_IO_01.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":0},{"_id":"source/images/graph_01.png","path":"images/graph_01.png","modified":0,"renderable":0},{"_id":"source/images/graph_02.png","path":"images/graph_02.png","modified":0,"renderable":0},{"_id":"source/images/graph_03.png","path":"images/graph_03.png","modified":0,"renderable":0},{"_id":"source/images/graph_04.png","path":"images/graph_04.png","modified":0,"renderable":0},{"_id":"source/images/java_idea_1.png","path":"images/java_idea_1.png","modified":0,"renderable":0},{"_id":"source/images/magic_1.jpg","path":"images/magic_1.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_0.jpg","path":"images/magic_0.jpg","modified":0,"renderable":0},{"_id":"source/images/java_idea_2.png","path":"images/java_idea_2.png","modified":0,"renderable":0},{"_id":"source/images/magic_2.jpg","path":"images/magic_2.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_6.jpg","path":"images/magic_6.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_5.jpg","path":"images/magic_5.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_3.jpg","path":"images/magic_3.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_4.jpg","path":"images/magic_4.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_8.jpg","path":"images/magic_8.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_7.jpg","path":"images/magic_7.jpg","modified":0,"renderable":0},{"_id":"source/images/magic_9.jpg","path":"images/magic_9.jpg","modified":0,"renderable":0},{"_id":"source/images/graph_05.png","path":"images/graph_05.png","modified":0,"renderable":0},{"_id":"source/images/graph_06.png","path":"images/graph_06.png","modified":0,"renderable":0},{"_id":"source/images/propostion_01.png","path":"images/propostion_01.png","modified":0,"renderable":0},{"_id":"source/images/Java_IO_01.png","path":"images/Java_IO_01.png","modified":0,"renderable":0},{"_id":"source/images/inference_rule_!.png","path":"images/inference_rule_!.png","modified":0,"renderable":0},{"_id":"source/images/inference_rule.png","path":"images/inference_rule.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"source/images/math_function_2.png","path":"images/math_function_2.png","modified":0,"renderable":0},{"_id":"source/images/math_function_1.png","path":"images/math_function_1.png","modified":0,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"909a2b39bf012a9bb70865f9ba4569a08b165adb","modified":1472871440000},{"_id":"source/.DS_Store","hash":"1bf5aff81e7c7a0d8ba102b221c1535167b67b36","modified":1502764853000},{"_id":"source/CNAME","hash":"5c00228fe6fec1d4945c95bf59da340b3b0cae80","modified":1472745780000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1472867980000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1472867980000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"550a06a7bc0bbd1f64a9033b67de07432f01f16d","modified":1581070482947},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1472867980000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1472867980000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_drafts/初等函数.md","hash":"25b955f7d5a59b95b503812a325dd99064d998ab","modified":1472895063000},{"_id":"source/about/index.md","hash":"b5a62e7f233f49b5b8e1921b95ee43e2abecb9ec","modified":1473577195000},{"_id":"source/categories/index.md","hash":"a618cd201268e8416cb3b52cd8f68576592dba71","modified":1472871030000},{"_id":"source/_posts/Application.md","hash":"972174ab71130102c434341a569e391d296e0525","modified":1582728695724},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1502787768000},{"_id":"source/_posts/Function-01-康托尔对角化论证.md","hash":"1780487dd6ec041f658827be8884391285eda2c0","modified":1582728695543},{"_id":"source/_posts/Function-02-取整函数.md","hash":"a9dc64d5f73d016234d41cf000e57514c1cdf0f7","modified":1582728695544},{"_id":"source/_posts/Function-03-线性同余法生成伪随机数.md","hash":"402324e1fab923d95af43d07b0357d26fbcd52b6","modified":1582728695544},{"_id":"source/_posts/Function-04-最大公约数和最小公倍数算法.md","hash":"e22c6d6572cdcd53b7a6daa156c81476b2fdf70f","modified":1582728695545},{"_id":"source/_posts/Function-05-二进制运算.md","hash":"a40a7e2a9f6b769ca45373e79114cd819849136a","modified":1582728695545},{"_id":"source/_posts/Java-Java-序列化.md","hash":"2e29ca07b2f2e262bef173375e2fb9a113fb48bf","modified":1582728695546},{"_id":"source/_posts/Java-Java-IO-概述.md","hash":"b38761075d418e3be1db232b5252f83ff03d1abe","modified":1582728695545},{"_id":"source/_posts/Java-Java8下使用wsdl2java命令报错解决方案.md","hash":"f0ea323b79b4d27eefbb8d817bef994384aeec21","modified":1582728695546},{"_id":"source/_posts/Java-Log4j-properties配置解释.md","hash":"3f5335a0c3379d6ef2be620f62341842b7aeee6f","modified":1582728695547},{"_id":"source/_posts/Java-javassist 的版本兼容问题.md","hash":"7cae94938e4f375d2187391a4ff40181aa826e49","modified":1582728695547},{"_id":"source/_posts/JavaScript-JavaScript-编程风格.md","hash":"fa014756eb42038dda3790115efb35b0c2e1f87c","modified":1582728695548},{"_id":"source/_posts/JavaScript-JavaScript-最佳实践.md","hash":"7401b6a1b4bd1865ba5beb25baa488be7756d4b4","modified":1582728695548},{"_id":"source/_posts/JavaScript-NPM-概述.md","hash":"595b83bc0a55fff52cbdf558309e0fa8ac551969","modified":1582728695549},{"_id":"source/_posts/JavaScript-node-Mac 安装 Node.js .md","hash":"7c79a8de237a9d234f3d26e4b0dbcd61ee2e6903","modified":1582728695549},{"_id":"source/_posts/JavaScript之表达式和运算符.md","hash":"7e21ea3bd82d216109b9dbd7a9c10a78399f8d24","modified":1582728695550},{"_id":"source/_posts/Linux-清空或删除文件.md","hash":"2a97a0146aaeaea64bb3fbc8fe531ddcebe2428f","modified":1582728695550},{"_id":"source/_posts/Mac-Mac下制作MacOS启动盘.md","hash":"225f8a115528d1f1d246e790e9b98d6f9e6c68a6","modified":1582728695550},{"_id":"source/_posts/Math-01-幻方.md","hash":"61293398652fd6277d086dfe06918200a1da0a0c","modified":1582728695551},{"_id":"source/_posts/Math-DM-01-基本逻辑.md","hash":"6a3fbaa1aebe7ca99401a5b3c071706b9875d6be","modified":1582728687217},{"_id":"source/_posts/Math-DM-02-逻辑等价.md","hash":"332c427f51fcb96e5e9053e29bcd888b92da03c7","modified":1582728687218},{"_id":"source/_posts/Math-DM-03-谓词逻辑.md","hash":"fd1d383e334890407f8353fa3dae220628aa9204","modified":1582728687218},{"_id":"source/_posts/Math-DM-04-嵌套量词.md","hash":"786bb023d03131f6a41744103a54ddb3433bef6a","modified":1582728687218},{"_id":"source/_posts/Math-DM-05-推理规则.md","hash":"f6173563297aeb89e6050746ba3556bb0453c22c","modified":1582728687218},{"_id":"source/_posts/Math-DM-06-证明导论.md","hash":"00b93bbe55a90f6a7218b289d26b2b07f775fc06","modified":1582728687219},{"_id":"source/_posts/Math-DM-07-集合.md","hash":"496df76f8bbbbb36290be21d4bfb1cbdd3c31a5b","modified":1582728687219},{"_id":"source/_posts/Math-算法-整数－矩阵.md","hash":"26565aa7bb21d72e053045b30a699779806fb1a3","modified":1582728687220},{"_id":"source/_posts/MathJax-tutorial.md","hash":"87f894e9354cceab35afa5754cb07baf1e2c02e9","modified":1582728695721},{"_id":"source/_posts/Math-集合-函数-数列.md","hash":"91937f583e7b4f5025b20ce6ca09e05274d7b156","modified":1582728687221},{"_id":"source/_posts/My-Sublime-Text-Setting.md","hash":"7072dc483288f6cc47f3bdac121598fb5fa5d3f1","modified":1473773963000},{"_id":"source/_posts/MySQL-ERROR-01.md","hash":"1bd116b4b077989e6892130cd2e51785abfe2067","modified":1582728695551},{"_id":"source/_posts/Python语法预览.md","hash":"570a4056595033c9674d8b89bdab60aff48ec378","modified":1472917601000},{"_id":"source/_posts/Python资料收集.md","hash":"856858805f8066a8e36e0bfb14a5986ca410e633","modified":1474778834000},{"_id":"source/_posts/Quart表达式详解.md","hash":"bfd0776c26ed799831be92ba6a014fe24e595028","modified":1472920383000},{"_id":"source/_posts/Regular-常用的正则表达式.md","hash":"2f61b5d53e89c2416469da6b82c8a1ea8d233a60","modified":1582728695552},{"_id":"source/_posts/Sublime-Text之Evernote.md","hash":"4cb9fb66a4c27a413cab0d99c7fe5ec422472849","modified":1473773655000},{"_id":"source/_posts/Sublime-Text之OmniMarkupPreviewer.md","hash":"460bd2d4abbcfc106bfae29f13b668221fcad0bb","modified":1473773905000},{"_id":"source/_posts/Web-XML-Schema-01-简要.md","hash":"ef4e19a7b0fda3e9764c4f7a4613d9449622b5f5","modified":1582728695552},{"_id":"source/_posts/Web-XML-Schema-02-限定.md","hash":"56e593293d86995042eb3906bd2367f6a9078685","modified":1582728695553},{"_id":"source/_posts/Web-XML-Schema-03-简易元素及属性.md","hash":"997e36e16d61e7c5e3862fdbd14dc45f9fd879dd","modified":1582728695553},{"_id":"source/_posts/Web-XML-Schema-04-指示器.md","hash":"9520a13adde5ccb4632dc5173eb8683beeaf1b08","modified":1582728695554},{"_id":"source/_posts/Web-XML-Schema-05-复合元素.md","hash":"50fbfec2153652020ce14cf18ee7136b137b6af8","modified":1582728695554},{"_id":"source/_posts/Web-XML详解.md","hash":"4f3156849629adaa0fa0cfdc3bfa76a68747e3d5","modified":1582728695554},{"_id":"source/_posts/Window-Windows-10-快速安装-NET-3-5.md","hash":"a491319fc7340267211ff438d8735afff498440b","modified":1582728695555},{"_id":"source/_posts/Window-Window下将脚本或程序注册成服务.md","hash":"05040b5e9745123ace67eac36e5423fa1e4c6351","modified":1582728695555},{"_id":"source/_posts/在IDEA上远程调试Java-Web项目.md","hash":"4deb31cf1ff629de0a326a31714bba3649d4508d","modified":1472919572000},{"_id":"source/_posts/对象的创建和销毁-《Effective-Java》笔记.md","hash":"84164aa976e8890d62d86522a0ffdb7f7219d37d","modified":1473262113000},{"_id":"source/_posts/设计模式概述.md","hash":"439b38a8ae8515129896deb99aadb386128f5b72","modified":1473697026000},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1490665552000},{"_id":"source/images/Java_IO_01.jpg","hash":"75286b39ad1cc0eae978ed4a57edd4389dc7e201","modified":1582728695556},{"_id":"source/images/avatar.jpeg","hash":"78e21b0e2038c70af8c58054fd0994bc5b9c3a79","modified":1472868535000},{"_id":"source/images/favicon.png","hash":"f7ca08f91ff7a432d6e8a75e8f2750862ab9aa37","modified":1472889643000},{"_id":"source/images/graph_01.png","hash":"04fa188a6c8f19651a5c2acce76031457d4b8de1","modified":1582728695557},{"_id":"source/images/graph_02.png","hash":"4a4a56bc19c10db78f63a8d52bb3c49ec0b2f08a","modified":1582728695557},{"_id":"source/images/graph_03.png","hash":"83f5a301d3d600ea559ee52d4b23c3da149cff39","modified":1582728695558},{"_id":"source/images/graph_04.png","hash":"0b362f24f6c21c80b2034a0a4e0235831e611722","modified":1582728695558},{"_id":"source/images/java_idea_1.png","hash":"3c766b4c85a268817369651217b05312d5bc3974","modified":1472919117000},{"_id":"source/images/magic_1.jpg","hash":"91b7d3f594c8a8981d6cc8dfeff952aec2f075d5","modified":1582728695560},{"_id":"source/images/magic_0.jpg","hash":"3c1fbca9bc23f70b4e310cee3d199cdda2f77807","modified":1582728695560},{"_id":"source/images/java_idea_2.png","hash":"caaa69b506af5d5ed351706a801f4e2b38d4a1b5","modified":1472919140000},{"_id":"source/images/magic_2.jpg","hash":"81b7c1d44b0da2d20ffc975675f70ce1aa3f9228","modified":1582728695560},{"_id":"source/images/magic_6.jpg","hash":"a2033bf7f6e79b18824ce1ecad379e64a72ddc69","modified":1582728695561},{"_id":"source/images/magic_5.jpg","hash":"6baaaeb5861f9cba3e8683bebefca0cc8f9ad78b","modified":1582728695561},{"_id":"source/images/magic_3.jpg","hash":"db5c63cf4f597583524f533efe6268a8c117ff08","modified":1582728695561},{"_id":"source/images/magic_4.jpg","hash":"c7e5e6b607b143ed5e1ddc3bf5c4637b221bc49f","modified":1582728695561},{"_id":"source/images/magic_8.jpg","hash":"0dccb3f4890dcde6216c867501cc941dfff44c8a","modified":1582728695562},{"_id":"source/images/magic_7.jpg","hash":"8f3568d6ac01611c2a1efa4fae5cb85ec540607b","modified":1582728695561},{"_id":"source/images/magic_9.jpg","hash":"1dc43b6ba5c9c53f87b3723e25494bd69cba5620","modified":1582728695562},{"_id":"source/tags/index.md","hash":"8264669fdde2509f11a5e695a4662ff493ab294a","modified":1472870978000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1472867980000},{"_id":"themes/next/.git/config","hash":"ca83ce520f770c3104c997d323b9f293dd920073","modified":1472867980000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1472867734000},{"_id":"themes/next/.git/index","hash":"49b35bcdf31076ed61e9367b49a6a48806f9ed08","modified":1577018410309},{"_id":"themes/next/.git/packed-refs","hash":"5299dd07c22750af4a0d99f89ea2c8e2d52787e3","modified":1472867980000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1579601971610},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1472867980000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1472867980000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1472867980000},{"_id":"source/images/graph_05.png","hash":"460ed6910586fa6d74d157c7c7b99aca711cd9da","modified":1582728695559},{"_id":"source/images/graph_06.png","hash":"2bbcb4fc77387eed0ae75720e7c126c0250372b9","modified":1582728695559},{"_id":"source/images/propostion_01.png","hash":"68643624b54bd64e0110a81b88df0b3d8d20296d","modified":1582728695563},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"source/images/Java_IO_01.png","hash":"fefc0b4f1668b0da649025ccf3597f0772a7502d","modified":1582728695557},{"_id":"source/images/inference_rule_!.png","hash":"8ec94dd9db817ac18fed669f3647c33546a11f91","modified":1475334900000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1472867734000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1472867734000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1472867734000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1472867734000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1472867734000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1472867734000},{"_id":"themes/next/.git/logs/HEAD","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"f17d45ec7135f39ab85f2a19d51ebbfe80cd7eac","modified":1579603388511},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"9c6ad83286eada4a900ffa31fa490cc3b102d2d3","modified":1579603186883},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1472867980000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"26d95dfc5220d041841fa4ac66adb53d768b23d5","modified":1581071120903},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1472867980000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1472867980000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1472867980000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1472867980000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1472867980000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1472867980000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1472867980000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1472867980000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1472867980000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1472867980000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1472867980000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1472867980000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1472867980000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1472867980000},{"_id":"source/images/inference_rule.png","hash":"6c6214e358d9874a8d732b02d4c5df41f0a7de8e","modified":1475331259000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/.git/refs/heads/master","hash":"a000ff7ceba1704584e39c908e83fe3db5859335","modified":1472867980000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1472867980000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1472867980000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1472867980000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1472867980000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1472867980000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1472867980000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1472867980000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/.git/objects/pack/pack-86fef626de1eb962abc5ba6bb6a3172ba82e6ec3.idx","hash":"df3e80c427ffb662152d057bc39d5e53ad3f3ffe","modified":1472867980000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"1e3e1c6231408e18e8485a8e0e59e8880349b210","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1472867980000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1472867980000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1472867980000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1472867980000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1472867980000},{"_id":"source/images/math_function_2.png","hash":"e39ff63946e552708eb658042326859ab8dfecd4","modified":1472894932000},{"_id":"source/images/math_function_1.png","hash":"204487aaca8b35436dfa3d575a90d3d14bbc3f90","modified":1472893705000},{"_id":"themes/next/.git/objects/pack/pack-86fef626de1eb962abc5ba6bb6a3172ba82e6ec3.pack","hash":"8b28a22776ffc0e6313769e8f2cc855633f4de03","modified":1472867980000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"public/404.html","hash":"54fbe4bb0d8606cdbbc35b04f5de38372eb91d2e","modified":1582729419366},{"_id":"public/about/index.html","hash":"b74089f645d65aa230d0daad50763bc2f7c06a0c","modified":1582729419366},{"_id":"public/categories/index.html","hash":"7ea633c97c73f0b0cf070c1cdbac588578fa2ade","modified":1582729419366},{"_id":"public/tags/index.html","hash":"4d4f1bcb01055091680f796a968eb112fdade8e5","modified":1582729419366},{"_id":"public/Mac/Mac-Mac下制作MacOS启动盘.html","hash":"7e59ffd4e7b15439eb4f3a3f3f3bde3e1f6d8612","modified":1582729419366},{"_id":"public/Window/Window-Windows-10-快速安装-NET-3-5.html","hash":"ddffa09aa5b8315caf8a4a72e06a1dde0ab297c6","modified":1582729419366},{"_id":"public/JavaScript/JavaScript-NPM-概述.html","hash":"5e305f4855f678f7b0d88434459b4b64321aefb2","modified":1582729419366},{"_id":"public/categories/JavaScript/index.html","hash":"3757731d2f240a10c50d01ce5459d7e9ba0486b7","modified":1582729419366},{"_id":"public/categories/Java/index.html","hash":"80a9ee4cd98d395a03abb27e4fb550cf9fbbf3ed","modified":1582729419366},{"_id":"public/categories/Node/index.html","hash":"c2f6db3407027e8a30121d03856a9941f7f95bf1","modified":1582729419366},{"_id":"public/categories/shell/index.html","hash":"a31d21e5d529c7944b55a45654606808a3337aec","modified":1582729419366},{"_id":"public/categories/Mac/index.html","hash":"0b1808e14245e8d62a072f3e57b058a8ca7957f7","modified":1582729419366},{"_id":"public/categories/MathJax/index.html","hash":"fb4df8c70412fdcfa4bd3f5f7ee445d3f503d8d9","modified":1582729419366},{"_id":"public/categories/sublime/index.html","hash":"e22d773b2d095ef256246364fcfe215111903666","modified":1582729419366},{"_id":"public/categories/MySQL/index.html","hash":"75763a15cd0ac15000f30f133cceafec777fb02c","modified":1582729419366},{"_id":"public/categories/Python/index.html","hash":"5994d643d5251587d55df01a81b8eb948083e5d4","modified":1582729419366},{"_id":"public/categories/Regular/index.html","hash":"9a8ed945a60148c5d92f3b28afd45910eba307d6","modified":1582729419366},{"_id":"public/categories/XML/index.html","hash":"a36df42b8c74ba50486353bb95a6b349461d8e23","modified":1582729419366},{"_id":"public/categories/Window/index.html","hash":"81b1c42eccc0fb9f6b792f815047d6ef500c3c04","modified":1582729419366},{"_id":"public/categories/IDEA/index.html","hash":"3b8cbba34d69cd9bc2fe07d8042ca56509644079","modified":1582729419366},{"_id":"public/categories/设计模式/index.html","hash":"a550716412a7fd8edef08d869cec72fc2d42cb51","modified":1582729419366},{"_id":"public/archives/2015/index.html","hash":"027595e5e0b3e11315ba16b449618a46a8a0ada1","modified":1582729419366},{"_id":"public/archives/2015/08/index.html","hash":"f46964ff562b968e27c981555698ce7c2e8ccf95","modified":1582729419366},{"_id":"public/archives/2015/12/index.html","hash":"c53c72554b86623c5f3fdc14535b6182c0e1b974","modified":1582729419366},{"_id":"public/archives/2016/05/index.html","hash":"c2b863e865b3557e32f9770170de286994971055","modified":1582729419366},{"_id":"public/archives/2016/08/index.html","hash":"c96679b053f24339cd7c7014c145bfcf1330ac56","modified":1582729419366},{"_id":"public/archives/2016/09/index.html","hash":"e59218eaa1533ab5b98d2d2700e0cf6500978ef8","modified":1582729419366},{"_id":"public/archives/2016/10/index.html","hash":"5b802fbb931619fe3dac7f2d3f548be9c34905a6","modified":1582729419366},{"_id":"public/archives/2016/11/index.html","hash":"59af0ccdeec60c09eb7b6aa5c7c257f04ff42863","modified":1582729419366},{"_id":"public/archives/2017/01/index.html","hash":"af844a8098382a49fe622fdc104ed1dd51d53e17","modified":1582729419366},{"_id":"public/archives/2017/02/index.html","hash":"70fba7ea88fdff8fe8f5fca62df0dcd0a431c44b","modified":1582729419366},{"_id":"public/archives/2017/03/index.html","hash":"f853be59d8f15c03db0f652dc8cffb89e324282c","modified":1582729419366},{"_id":"public/archives/2017/08/index.html","hash":"024479ab5033fae612c1f1b6658317e92f9e03d3","modified":1582729419366},{"_id":"public/tags/app/index.html","hash":"c426645c95f2670ba6f855c966ff7c64e42066c4","modified":1582729419366},{"_id":"public/tags/Mac/index.html","hash":"f3df772c53cb81a44a3467bcf66eb4958cfa7661","modified":1582729419366},{"_id":"public/tags/Window/index.html","hash":"482d0d4509506c172764ba9e73a55895472f73ea","modified":1582729419366},{"_id":"public/tags/Linux/index.html","hash":"5f252842a12dfcd37d8b7dec6a3b972c8d200050","modified":1582729419366},{"_id":"public/tags/function/index.html","hash":"486eca1d353500f7d04d5f6a422ed14eb6f55909","modified":1582729419366},{"_id":"public/tags/Alg/index.html","hash":"0485164cdb4db30dd981550ac406618cc6f8be8d","modified":1582729419366},{"_id":"public/tags/Java/index.html","hash":"192f30248bef203d5639ed52a1f5c4580a131c98","modified":1582729419366},{"_id":"public/tags/IO/index.html","hash":"93b25a5e02986a9ce6573e1abba166b41faf1f99","modified":1582729419366},{"_id":"public/tags/wsdl/index.html","hash":"2b4cd8d2fa277dbed63db83a47cb58153abff732","modified":1582729419366},{"_id":"public/tags/cxf/index.html","hash":"8590d3be7dcdc10e2e2d0b7b1dd3759e431c6b24","modified":1582729419366},{"_id":"public/tags/javassist/index.html","hash":"a81e8709f2434b9885ba6586275d718292229af9","modified":1582729419366},{"_id":"public/tags/dubbo/index.html","hash":"aa7c72db7aa7f9f938167b6790664f9a2588810b","modified":1582729419366},{"_id":"public/tags/JavaScript/index.html","hash":"a40fb14076aea9873344051379f20d1885ff759c","modified":1582729419366},{"_id":"public/tags/style-guideline/index.html","hash":"764e23d931912c8f0fa7e9d6393b106e88796fd4","modified":1582729419366},{"_id":"public/tags/log4j/index.html","hash":"9ddcf64c26a85d18254fcee9c8ddc87501cf290f","modified":1582729419366},{"_id":"public/tags/npm/index.html","hash":"e6617c5202cbdb4524bcffda70e0c0f2b437bec6","modified":1582729419366},{"_id":"public/tags/effective/index.html","hash":"67d92c3cca1ceed9ebd0c187966a7e9aabb911df","modified":1582729419366},{"_id":"public/tags/Node/index.html","hash":"07b5e6b384624127261b1d8a78c24488f19c2a77","modified":1582729419366},{"_id":"public/tags/shell/index.html","hash":"d9c89a083a0c3e025e8cac992de3d8e49358e832","modified":1582729419366},{"_id":"public/tags/Web/index.html","hash":"49ede7658c41e4ee97bcfe4c3394bbcc774af006","modified":1582729419366},{"_id":"public/tags/os/index.html","hash":"54efbaf025737a01dfaa19b9994ae3403de4ec2b","modified":1582729419366},{"_id":"public/tags/tools/index.html","hash":"8ca97d05a7b8f868bff768d757345064edf4b30f","modified":1582729419366},{"_id":"public/tags/MathJax/index.html","hash":"78308878fbd170b1ad398827f92247c6320ebc4a","modified":1582729419366},{"_id":"public/tags/markdown/index.html","hash":"af591d64402efa5fe7b4a4413dc08f37e5fd58ed","modified":1582729419366},{"_id":"public/tags/sublime/index.html","hash":"2b6aa361d761c65c4dcb1c67cb207ef9a8d1aa46","modified":1582729419366},{"_id":"public/tags/MySQL/index.html","hash":"7dae500c56e451411708621e7eedcce080da73fe","modified":1582729419366},{"_id":"public/tags/error/index.html","hash":"3f2f1912c995247f9682a77d3d8f9e5256148fbc","modified":1582729419366},{"_id":"public/tags/Python/index.html","hash":"b52a59b199eca55ecfa34d6055b312d916bb6561","modified":1582729419366},{"_id":"public/tags/QuartZ/index.html","hash":"1ba587553f20f5bf600463f9da57c80bd4d0b2eb","modified":1582729419366},{"_id":"public/tags/Cron/index.html","hash":"6e5bc4f9304173f1205320ade5549be557ddd2d5","modified":1582729419366},{"_id":"public/tags/Regular/index.html","hash":"c2d0e12f8286d7d8c6ba31e122643bf6e4c874f5","modified":1582729419366},{"_id":"public/tags/XML/index.html","hash":"b9ad1a66919f9e5762e7447c58f359e5a89b3836","modified":1582729419366},{"_id":"public/tags/net/index.html","hash":"781e5c0d656c613ae975e6a3f3c13a605a891214","modified":1582729419366},{"_id":"public/tags/Service/index.html","hash":"bf8049375314a694613c6a125a6c048113bf58f7","modified":1582729419366},{"_id":"public/tags/IntelliJ-IDEA/index.html","hash":"0fd27a5aae80a82cfd815b55a982b75a9ecbbab8","modified":1582729419366},{"_id":"public/tags/skill/index.html","hash":"1df2c8a23c752c434c5d0798919d3d17f34dc8b0","modified":1582729419366},{"_id":"public/tags/Effective/index.html","hash":"76a436ef931bc7b68e3209f29000495b8e6b93bc","modified":1582729419366},{"_id":"public/tags/设计模式/index.html","hash":"24efc057e690c0ddc10e234a482390ce308535dd","modified":1582729419366},{"_id":"public/Java/Java-javassist 的版本兼容问题.html","hash":"9c31dd575b95bb8679fcf910b60605d2f28c0f13","modified":1582729419366},{"_id":"public/Node/JavaScript-node-Mac 安装 Node.js .html","hash":"7e57fbdb14614daf01e98b1d2cbda88df55b31f0","modified":1582729419366},{"_id":"public/Java/Java-Java-序列化.html","hash":"c69d750ab2dcc9b24233f9b875e0f245e194ae05","modified":1582729419366},{"_id":"public/MySQL/MySQL-ERROR-01.html","hash":"0815e5682a80321a9aed3fda3ec2f20448c232b1","modified":1582729419366},{"_id":"public/Regular/Regular-常用的正则表达式.html","hash":"30b9345cffa8e379c1fb85a373eb282c69c6e56e","modified":1582729419366},{"_id":"public/Window/Window-Window下将脚本或程序注册成服务.html","hash":"d3029be2ea4337f029638386e2adaf5ef86b6b34","modified":1582729419366},{"_id":"public/JavaScript/JavaScript-JavaScript-最佳实践.html","hash":"b34f88b545a7925f42c640672ccd44f88a1b6f00","modified":1582729419366},{"_id":"public/JavaScript/JavaScript-JavaScript-编程风格.html","hash":"0ca21b4a7d779655c8768944805d2dc5e6cdcd95","modified":1582729419366},{"_id":"public/Math/Math-01-幻方.html","hash":"76390336dac28c7f785c5f06d02b7df7c190de96","modified":1582729419366},{"_id":"public/Math/Function-05-二进制运算.html","hash":"bdb45563cf46c65a2bb5ea2cdf3fe168e12ea6a8","modified":1582729419366},{"_id":"public/Math/Function-04-最大公约数和最小公倍数算法.html","hash":"3a1886c642c6069f7bbf18fbc44c5ec1667bc535","modified":1582729419366},{"_id":"public/Math/Function-03-线性同余法生成伪随机数.html","hash":"546ecb843991b95bee89f169c4679571f9dd3fff","modified":1582729419366},{"_id":"public/XML/Web-XML-Schema-04-指示器.html","hash":"c2fa551ffe856220b6765cd14d8802fc01549929","modified":1582729419366},{"_id":"public/XML/Web-XML-Schema-02-限定.html","hash":"138f4340c1cfdf5c19d5fc532868e360d18a009e","modified":1582729419366},{"_id":"public/XML/Web-XML-Schema-05-复合元素.html","hash":"855ca4815b245105450f8f43409f2edce16c14f9","modified":1582729419366},{"_id":"public/XML/Web-XML-Schema-03-简易元素及属性.html","hash":"4474ff58c027b49b9393f895040222b2945444c2","modified":1582729419366},{"_id":"public/XML/Web-XML-Schema-01-简要.html","hash":"951a3617f1ced72bc30892d05ea73ae5a4b2f552","modified":1582729419366},{"_id":"public/XML/Web-XML详解.html","hash":"792d7b5980628105a82db480ea1d756ae0bc5a91","modified":1582729419366},{"_id":"public/Math/Function-01-康托尔对角化论证.html","hash":"124ff9cb844cb7b238ecb43d481067ef27d5d70b","modified":1582729419366},{"_id":"public/Math/Function-02-取整函数.html","hash":"1867bd5bfeb4c1e22fdc2c47088a3f9adc49956a","modified":1582729419366},{"_id":"public/Java/Java-Log4j-properties配置解释.html","hash":"6a6b65c4f4f8739b9df81efac39524405c4737d0","modified":1582729419366},{"_id":"public/Java/Java-Java8下使用wsdl2java命令报错解决方案.html","hash":"eb2b5e7780cd04d733c86d2b2f8a5bbdd5dd9860","modified":1582729419366},{"_id":"public/shell/Linux-清空或删除文件.html","hash":"7255dd6f7e0c1c861403393a95ccfcf17954b850","modified":1582729419366},{"_id":"public/Math/Math-DM-07-集合.html","hash":"4b038b4c133a560020a0284861474b48abbd327d","modified":1582729419366},{"_id":"public/Math/Math-DM-06-证明导论.html","hash":"0d7f23f5d8b221d5fc4d86d86ee08bf04b9353ec","modified":1582729419366},{"_id":"public/Math/Math-DM-05-推理规则.html","hash":"401dd7b074bae976374cd7f6d73d07e21a1ae084","modified":1582729419366},{"_id":"public/Math/Math-DM-04-嵌套量词.html","hash":"ee56334a77a31ddaa0fe5e43b044d8ed5482e8d6","modified":1582729419366},{"_id":"public/Math/Math-DM-03-谓词逻辑.html","hash":"bfbfe67eea573db35425a4e6796406ef048ef841","modified":1582729419366},{"_id":"public/Math/Math-DM-02-逻辑等价.html","hash":"3a6412a0460bc1c764b803011f9c20445ace8d55","modified":1582729419366},{"_id":"public/Math/Math-DM-01-基本逻辑.html","hash":"6a0e0d023334dde3be710470d0e7e92c7808452a","modified":1582729419366},{"_id":"public/JavaScript/Application.html","hash":"1312d0d8c30ee25642d2bb6b7f05f2bbd5e41a7c","modified":1582729419366},{"_id":"public/Math/Math-算法-整数－矩阵.html","hash":"14e3c0f112d161ce53338108cc14d39f13d6fefd","modified":1582729419366},{"_id":"public/Math/Math-集合-函数-数列.html","hash":"1d8949cd3aacb3551c23bdf726d261ea6b546d09","modified":1582729419366},{"_id":"public/sublime/Sublime-Text之OmniMarkupPreviewer.html","hash":"6440d1c4ffe9535fe922d6d88d5c320837e037ac","modified":1582729419366},{"_id":"public/sublime/My-Sublime-Text-Setting.html","hash":"f6ed6f3aa460d90a2c7b57e73324da5527eb9b7c","modified":1582729419366},{"_id":"public/sublime/Sublime-Text之Evernote.html","hash":"73b1f73ffb611a9b0e2d3d66553b2b6453afc8cf","modified":1582729419366},{"_id":"public/Python/Python资料收集.html","hash":"8eb02a10b425f9df781b25003963162c336e87e9","modified":1582729419366},{"_id":"public/设计模式/设计模式概述.html","hash":"489e10d0e0f1e9db275d73bcf49669687b89d466","modified":1582729419366},{"_id":"public/MathJax/MathJax-tutorial.html","hash":"fdeced15324de2458b1237db736d2afad49ba6a2","modified":1582729419366},{"_id":"public/JavaScript/JavaScript之表达式和运算符.html","hash":"7e69cfc79ead7a5c579bb54edc3b873ca7166654","modified":1582729419366},{"_id":"public/Java/对象的创建和销毁-《Effective-Java》笔记.html","hash":"931ba059b875a210c288e102fd820427922ecd8f","modified":1582729419366},{"_id":"public/Java/Java-Java-IO-概述.html","hash":"8caba86dc6e72bb9f1543aad8256acd9a3111d0a","modified":1582729419366},{"_id":"public/Java/Quart表达式详解.html","hash":"944fdc6090918210e8a63c75d3c17331266d7dd9","modified":1582729419366},{"_id":"public/Python/Python语法预览.html","hash":"d168ba130a63c6922ae4f7eef1179afc7968bf47","modified":1582729419366},{"_id":"public/IDEA/在IDEA上远程调试Java-Web项目.html","hash":"45bf235abfb6b6a8f7f9a394cc9b02597325d576","modified":1582729419366},{"_id":"public/categories/Math/index.html","hash":"6fa2d5530c0f8684074f2bb4156820ccb3252ef0","modified":1582729419366},{"_id":"public/archives/index.html","hash":"d91fd952992f3e46763bd34ef1df83dde0eadd7e","modified":1582729419366},{"_id":"public/archives/page/2/index.html","hash":"3966b4ab7f8d800f93afa2437c0e232c1816ca71","modified":1582729419366},{"_id":"public/archives/page/3/index.html","hash":"a6d01f7b5d9f1696c7b6d42ab0d85b8f81e95fe5","modified":1582729419366},{"_id":"public/archives/2016/index.html","hash":"41b28bb2e0b42129a92f6ddbdc4cf3b2e3be42a6","modified":1582729419366},{"_id":"public/archives/2016/page/2/index.html","hash":"922f69f82ce68f80a1542ee2e2ffe2bcf1b994b1","modified":1582729419366},{"_id":"public/archives/2016/12/index.html","hash":"5bd0de265d706098d71f5d439ebe2370a87d1beb","modified":1582729419366},{"_id":"public/archives/2017/index.html","hash":"35826ebadc9ed9414439d0cb84ff2fe0e4d2a410","modified":1582729419366},{"_id":"public/index.html","hash":"13b16350e6c4c612dd9777adbab8f9930cc3380d","modified":1582729419366},{"_id":"public/page/2/index.html","hash":"8a1959b38ce5900e08a325877227f579c000b0ee","modified":1582729419366},{"_id":"public/page/3/index.html","hash":"cc84722172a3d772bb4466aa8e8ba35f6cafc308","modified":1582729419366},{"_id":"public/tags/Math/index.html","hash":"5c4bdd59de4faacb0a076b77ee8f033602ece780","modified":1582729419366},{"_id":"public/tags/note/index.html","hash":"c5f531e2294c11d286efc17bbb0743ea73111698","modified":1582729419366},{"_id":"public/tags/Discrete-Mathematics/index.html","hash":"e3a0cafc52d138ce4cdeb6736c693edd9633266c","modified":1582729419366},{"_id":"public/CNAME","hash":"5c00228fe6fec1d4945c95bf59da340b3b0cae80","modified":1582729419366},{"_id":"public/images/avatar.jpeg","hash":"78e21b0e2038c70af8c58054fd0994bc5b9c3a79","modified":1582729419366},{"_id":"public/images/favicon.png","hash":"f7ca08f91ff7a432d6e8a75e8f2750862ab9aa37","modified":1582729419366},{"_id":"public/images/Java_IO_01.jpg","hash":"75286b39ad1cc0eae978ed4a57edd4389dc7e201","modified":1582729419366},{"_id":"public/images/graph_01.png","hash":"04fa188a6c8f19651a5c2acce76031457d4b8de1","modified":1582729419366},{"_id":"public/images/graph_03.png","hash":"83f5a301d3d600ea559ee52d4b23c3da149cff39","modified":1582729419366},{"_id":"public/images/graph_02.png","hash":"4a4a56bc19c10db78f63a8d52bb3c49ec0b2f08a","modified":1582729419366},{"_id":"public/images/graph_04.png","hash":"0b362f24f6c21c80b2034a0a4e0235831e611722","modified":1582729419366},{"_id":"public/images/magic_0.jpg","hash":"3c1fbca9bc23f70b4e310cee3d199cdda2f77807","modified":1582729419366},{"_id":"public/images/magic_1.jpg","hash":"91b7d3f594c8a8981d6cc8dfeff952aec2f075d5","modified":1582729419366},{"_id":"public/images/java_idea_1.png","hash":"3c766b4c85a268817369651217b05312d5bc3974","modified":1582729419366},{"_id":"public/images/java_idea_2.png","hash":"caaa69b506af5d5ed351706a801f4e2b38d4a1b5","modified":1582729419366},{"_id":"public/images/magic_6.jpg","hash":"a2033bf7f6e79b18824ce1ecad379e64a72ddc69","modified":1582729419366},{"_id":"public/images/magic_5.jpg","hash":"6baaaeb5861f9cba3e8683bebefca0cc8f9ad78b","modified":1582729419366},{"_id":"public/images/magic_3.jpg","hash":"db5c63cf4f597583524f533efe6268a8c117ff08","modified":1582729419366},{"_id":"public/images/magic_2.jpg","hash":"81b7c1d44b0da2d20ffc975675f70ce1aa3f9228","modified":1582729419366},{"_id":"public/images/magic_7.jpg","hash":"8f3568d6ac01611c2a1efa4fae5cb85ec540607b","modified":1582729419366},{"_id":"public/images/magic_4.jpg","hash":"c7e5e6b607b143ed5e1ddc3bf5c4637b221bc49f","modified":1582729419366},{"_id":"public/images/magic_8.jpg","hash":"0dccb3f4890dcde6216c867501cc941dfff44c8a","modified":1582729419366},{"_id":"public/images/magic_9.jpg","hash":"1dc43b6ba5c9c53f87b3723e25494bd69cba5620","modified":1582729419366},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1582729419366},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1582729419366},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1582729419366},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1582729419366},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1582729419366},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1582729419366},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1582729419366},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1582729419366},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1582729419366},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1582729419366},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1582729419366},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1582729419366},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1582729419366},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1582729419366},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1582729419366},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1582729419366},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1582729419366},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1582729419366},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1582729419366},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1582729419366},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1582729419366},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1582729419366},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1582729419366},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1582729419366},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1582729419366},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1582729419366},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1582729419366},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1582729419366},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1582729419366},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1582729419366},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1582729419366},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1582729419366},{"_id":"public/images/graph_06.png","hash":"2bbcb4fc77387eed0ae75720e7c126c0250372b9","modified":1582729419366},{"_id":"public/images/propostion_01.png","hash":"68643624b54bd64e0110a81b88df0b3d8d20296d","modified":1582729419366},{"_id":"public/images/graph_05.png","hash":"460ed6910586fa6d74d157c7c7b99aca711cd9da","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1582729419366},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1582729419366},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1582729419366},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1582729419366},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1582729419366},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1582729419366},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1582729419366},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1582729419366},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1582729419366},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1582729419366},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1582729419366},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1582729419366},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1582729419366},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1582729419366},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1582729419366},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1582729419366},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1582729419366},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1582729419366},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1582729419366},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1582729419366},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1582729419366},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1582729419366},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1582729419366},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1582729419366},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1582729419366},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1582729419366},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1582729419366},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1582729419366},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1582729419366},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1582729419366},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1582729419366},{"_id":"public/lib/fastclick/README.html","hash":"b9e008af0866799103e596e2eda466a33d7dde18","modified":1582729419366},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"7eecc5e472416b9870580c53b7ed0c44474ed23a","modified":1582729419366},{"_id":"public/lib/jquery_lazyload/README.html","hash":"9c91bba4263a20004f2c10772d438cfa8312c308","modified":1582729419366},{"_id":"public/css/main.css","hash":"f7e4aa05cc8dd2ddbf13ea682a5d154c658647e0","modified":1582729419366},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1582729419366},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1582729419366},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1582729419366},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1582729419366},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1582729419366},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1582729419366},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1582729419366},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1582729419366},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1582729419366},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1582729419366},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1582729419366},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1582729419366},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1582729419366},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1582729419366},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1582729419366},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1582729419366},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1582729419366},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1582729419366},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1582729419366},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1582729419366},{"_id":"public/images/Java_IO_01.png","hash":"fefc0b4f1668b0da649025ccf3597f0772a7502d","modified":1582729419366},{"_id":"public/images/inference_rule_!.png","hash":"8ec94dd9db817ac18fed669f3647c33546a11f91","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1582729419366},{"_id":"public/images/inference_rule.png","hash":"6c6214e358d9874a8d732b02d4c5df41f0a7de8e","modified":1582729419366},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1582729419366},{"_id":"public/images/math_function_1.png","hash":"204487aaca8b35436dfa3d575a90d3d14bbc3f90","modified":1582729419366},{"_id":"public/images/math_function_2.png","hash":"e39ff63946e552708eb658042326859ab8dfecd4","modified":1582729419366}],"Category":[{"name":"Math","_id":"ck73g2bh5001h1ovct3abk4uw"},{"name":"JavaScript","_id":"ck73g2bhi001j1ovcw00tveg8"},{"name":"Java","_id":"ck73g2bhn001v1ovc7eg1q0t6"},{"name":"Node","_id":"ck73g2bht002b1ovcig7smlog"},{"name":"shell","_id":"ck73g2bhu002d1ovcysb57psy"},{"name":"Mac","_id":"ck73g2bhw002h1ovcolzdylsa"},{"name":"MathJax","_id":"ck73g2bi400331ovcynjfzg4f"},{"name":"sublime","_id":"ck73g2bi500351ovcxlo7eogr"},{"name":"MySQL","_id":"ck73g2bi600371ovc29k9rf3e"},{"name":"Python","_id":"ck73g2bi600391ovcj5er1uz3"},{"name":"Regular","_id":"ck73g2bi8003f1ovcl51yh9hw"},{"name":"XML","_id":"ck73g2bib003k1ovcu31kzz2l"},{"name":"Window","_id":"ck73g2bie003w1ovcjyv5yyez"},{"name":"IDEA","_id":"ck73g2bif00401ovcd3clki5o"},{"name":"设计模式","_id":"ck73g2big00441ovcizo735jr"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2018-09-08T01:29:13.706Z","updated":"2016-09-03T02:57:20.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ck73g2bc000001ovc6w19cy1c","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n<meta name=\"generator\" content=\"Hexo 4.2.0\"></head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n<meta name=\"generator\" content=\"Hexo 4.2.0\"></head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"title":"about","date":"2016-09-03T01:14:03.000Z","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-09-03 09:14:03\ncomments: false\n---\n","updated":"2016-09-11T06:59:55.000Z","path":"about/index.html","layout":"page","_id":"ck73g2bdb00011ovcuzy2dwpj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2016-09-03T02:50:00.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-09-03 10:50:00\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-09-03T02:50:30.000Z","path":"categories/index.html","layout":"page","_id":"ck73g2bde00031ovclfuxz6c0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-09-03T02:48:41.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-09-03 10:48:41\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-09-03T02:49:38.000Z","path":"tags/index.html","layout":"page","_id":"ck73g2bdf00051ovc2crcgrgb","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"初等函数","date":"2016-09-03T08:47:57.000Z","_content":"\n## 定义\n设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$\n${x}$称为自变量，其取值范围${A}$叫做函数的定义域。   \n${y}$称为函数值，其取值范围称为函数的值域。\n\n### 区间的概念\n* 闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$\n* 开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$\n* 半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$\n\n### 函数地表示方法\n* 解析法：用数学表达式表示\n* 图像法\n* 列表法\n\n## 函数的性质\n### 单调性\n* 减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)> f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。\n* 增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)< f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。\n\n如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。\n### 奇偶性\n* 偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$\n* 奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$\n\n## 初等函数\n### 指数函数\n#### 指数和幂运算\n次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。\n根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。\n运算公式：\n> ${a^ra^s=a^{r+s}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(a^r)^s=a^{rs}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(ab)^r=a^rb^s}$ ${(a>0 , b>0, r,s \\in Q)}$   \n> ${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a>0 ; m,n \\in N^+ 且n>1)}$   \n> ${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a>0 ; m,n \\in N^+ 且n>1)}$  \n\n#### 指数函数及其性质\n一般的，函数${y=a^x} (a>0,且a\\neq 1) x\\in R$ 具有以下性质\n![](../images/math_function_1.png)\n\n### 对数函数\n#### 对数\n如果 $a^x=N (a>0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:    \n$$\n    x=\\log_a N\n$$\n其中，$a$叫做对数的底数，$N$叫做真数。    \n常用对数：以10为底的对数，记作 $\\lg N$   \n自然对数：以$e$为底的对数，记作$In N$\n\n运算公式: \n> 前提条件，$a>0 且a\\neq 1,M>0, N>0$   \n> $\\log_a (M*N) = \\log_a M + \\log_a N$     \n> $\\log_a {M\\over N} = \\log_a M -\\log_a N $   \n> $\\log_a {M^n}= n\\log_a M (n\\in R)$\n\n#### 对数函数及性质\n一般的，函数$y=\\log_a x (a>0 且 a\\neq 1) x\\in (0,+\\infty)$\n![](../images/math_function_2.png)\n\n\n","source":"_drafts/初等函数.md","raw":"---\ntitle: 初等函数\ndate: 2016-09-03 16:47:57\ntags: [Math, Elementary mathematics, note]\ncategories: Math\n---\n\n## 定义\n设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$\n${x}$称为自变量，其取值范围${A}$叫做函数的定义域。   \n${y}$称为函数值，其取值范围称为函数的值域。\n\n### 区间的概念\n* 闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$\n* 开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$\n* 半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$\n\n### 函数地表示方法\n* 解析法：用数学表达式表示\n* 图像法\n* 列表法\n\n## 函数的性质\n### 单调性\n* 减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)> f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。\n* 增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)< f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。\n\n如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。\n### 奇偶性\n* 偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$\n* 奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$\n\n## 初等函数\n### 指数函数\n#### 指数和幂运算\n次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。\n根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。\n运算公式：\n> ${a^ra^s=a^{r+s}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(a^r)^s=a^{rs}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(ab)^r=a^rb^s}$ ${(a>0 , b>0, r,s \\in Q)}$   \n> ${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a>0 ; m,n \\in N^+ 且n>1)}$   \n> ${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a>0 ; m,n \\in N^+ 且n>1)}$  \n\n#### 指数函数及其性质\n一般的，函数${y=a^x} (a>0,且a\\neq 1) x\\in R$ 具有以下性质\n![](../images/math_function_1.png)\n\n### 对数函数\n#### 对数\n如果 $a^x=N (a>0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:    \n$$\n    x=\\log_a N\n$$\n其中，$a$叫做对数的底数，$N$叫做真数。    \n常用对数：以10为底的对数，记作 $\\lg N$   \n自然对数：以$e$为底的对数，记作$In N$\n\n运算公式: \n> 前提条件，$a>0 且a\\neq 1,M>0, N>0$   \n> $\\log_a (M*N) = \\log_a M + \\log_a N$     \n> $\\log_a {M\\over N} = \\log_a M -\\log_a N $   \n> $\\log_a {M^n}= n\\log_a M (n\\in R)$\n\n#### 对数函数及性质\n一般的，函数$y=\\log_a x (a>0 且 a\\neq 1) x\\in (0,+\\infty)$\n![](../images/math_function_2.png)\n\n\n","slug":"初等函数","published":0,"updated":"2016-09-03T09:31:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdb00021ovc8sqi3cr7","content":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$<br>${x}$称为自变量，其取值范围${A}$叫做函数的定义域。<br>${y}$称为函数值，其取值范围称为函数的值域。</p>\n<h3 id=\"区间的概念\"><a href=\"#区间的概念\" class=\"headerlink\" title=\"区间的概念\"></a>区间的概念</h3><ul>\n<li>闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$</li>\n<li>开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$</li>\n<li>半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$</li>\n</ul>\n<h3 id=\"函数地表示方法\"><a href=\"#函数地表示方法\" class=\"headerlink\" title=\"函数地表示方法\"></a>函数地表示方法</h3><ul>\n<li>解析法：用数学表达式表示</li>\n<li>图像法</li>\n<li>列表法</li>\n</ul>\n<h2 id=\"函数的性质\"><a href=\"#函数的性质\" class=\"headerlink\" title=\"函数的性质\"></a>函数的性质</h2><h3 id=\"单调性\"><a href=\"#单调性\" class=\"headerlink\" title=\"单调性\"></a>单调性</h3><ul>\n<li>减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&gt; f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。</li>\n<li>增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&lt; f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。</li>\n</ul>\n<p>如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。</p>\n<h3 id=\"奇偶性\"><a href=\"#奇偶性\" class=\"headerlink\" title=\"奇偶性\"></a>奇偶性</h3><ul>\n<li>偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$</li>\n<li>奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$</li>\n</ul>\n<h2 id=\"初等函数\"><a href=\"#初等函数\" class=\"headerlink\" title=\"初等函数\"></a>初等函数</h2><h3 id=\"指数函数\"><a href=\"#指数函数\" class=\"headerlink\" title=\"指数函数\"></a>指数函数</h3><h4 id=\"指数和幂运算\"><a href=\"#指数和幂运算\" class=\"headerlink\" title=\"指数和幂运算\"></a>指数和幂运算</h4><p>次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。<br>根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。<br>运算公式：</p>\n<blockquote>\n<p>${a^ra^s=a^{r+s}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(a^r)^s=a^{rs}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(ab)^r=a^rb^s}$ ${(a&gt;0 , b&gt;0, r,s \\in Q)}$<br>${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$<br>${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$  </p>\n</blockquote>\n<h4 id=\"指数函数及其性质\"><a href=\"#指数函数及其性质\" class=\"headerlink\" title=\"指数函数及其性质\"></a>指数函数及其性质</h4><p>一般的，函数${y=a^x} (a&gt;0,且a\\neq 1) x\\in R$ 具有以下性质<br><img src=\"../images/math_function_1.png\" alt=\"\"></p>\n<h3 id=\"对数函数\"><a href=\"#对数函数\" class=\"headerlink\" title=\"对数函数\"></a>对数函数</h3><h4 id=\"对数\"><a href=\"#对数\" class=\"headerlink\" title=\"对数\"></a>对数</h4><p>如果 $a^x=N (a&gt;0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:<br>$$<br>    x=\\log_a N<br>$$<br>其中，$a$叫做对数的底数，$N$叫做真数。<br>常用对数：以10为底的对数，记作 $\\lg N$<br>自然对数：以$e$为底的对数，记作$In N$</p>\n<p>运算公式: </p>\n<blockquote>\n<p>前提条件，$a&gt;0 且a\\neq 1,M&gt;0, N&gt;0$<br>$\\log_a (M*N) = \\log_a M + \\log_a N$<br>$\\log_a {M\\over N} = \\log_a M -\\log_a N $<br>$\\log_a {M^n}= n\\log_a M (n\\in R)$</p>\n</blockquote>\n<h4 id=\"对数函数及性质\"><a href=\"#对数函数及性质\" class=\"headerlink\" title=\"对数函数及性质\"></a>对数函数及性质</h4><p>一般的，函数$y=\\log_a x (a&gt;0 且 a\\neq 1) x\\in (0,+\\infty)$<br><img src=\"../images/math_function_2.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$<br>${x}$称为自变量，其取值范围${A}$叫做函数的定义域。<br>${y}$称为函数值，其取值范围称为函数的值域。</p>\n<h3 id=\"区间的概念\"><a href=\"#区间的概念\" class=\"headerlink\" title=\"区间的概念\"></a>区间的概念</h3><ul>\n<li>闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$</li>\n<li>开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$</li>\n<li>半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$</li>\n</ul>\n<h3 id=\"函数地表示方法\"><a href=\"#函数地表示方法\" class=\"headerlink\" title=\"函数地表示方法\"></a>函数地表示方法</h3><ul>\n<li>解析法：用数学表达式表示</li>\n<li>图像法</li>\n<li>列表法</li>\n</ul>\n<h2 id=\"函数的性质\"><a href=\"#函数的性质\" class=\"headerlink\" title=\"函数的性质\"></a>函数的性质</h2><h3 id=\"单调性\"><a href=\"#单调性\" class=\"headerlink\" title=\"单调性\"></a>单调性</h3><ul>\n<li>减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&gt; f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。</li>\n<li>增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&lt; f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。</li>\n</ul>\n<p>如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。</p>\n<h3 id=\"奇偶性\"><a href=\"#奇偶性\" class=\"headerlink\" title=\"奇偶性\"></a>奇偶性</h3><ul>\n<li>偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$</li>\n<li>奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$</li>\n</ul>\n<h2 id=\"初等函数\"><a href=\"#初等函数\" class=\"headerlink\" title=\"初等函数\"></a>初等函数</h2><h3 id=\"指数函数\"><a href=\"#指数函数\" class=\"headerlink\" title=\"指数函数\"></a>指数函数</h3><h4 id=\"指数和幂运算\"><a href=\"#指数和幂运算\" class=\"headerlink\" title=\"指数和幂运算\"></a>指数和幂运算</h4><p>次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。<br>根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。<br>运算公式：</p>\n<blockquote>\n<p>${a^ra^s=a^{r+s}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(a^r)^s=a^{rs}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(ab)^r=a^rb^s}$ ${(a&gt;0 , b&gt;0, r,s \\in Q)}$<br>${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$<br>${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$  </p>\n</blockquote>\n<h4 id=\"指数函数及其性质\"><a href=\"#指数函数及其性质\" class=\"headerlink\" title=\"指数函数及其性质\"></a>指数函数及其性质</h4><p>一般的，函数${y=a^x} (a&gt;0,且a\\neq 1) x\\in R$ 具有以下性质<br><img src=\"../images/math_function_1.png\" alt=\"\"></p>\n<h3 id=\"对数函数\"><a href=\"#对数函数\" class=\"headerlink\" title=\"对数函数\"></a>对数函数</h3><h4 id=\"对数\"><a href=\"#对数\" class=\"headerlink\" title=\"对数\"></a>对数</h4><p>如果 $a^x=N (a&gt;0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:<br>$$<br>    x=\\log_a N<br>$$<br>其中，$a$叫做对数的底数，$N$叫做真数。<br>常用对数：以10为底的对数，记作 $\\lg N$<br>自然对数：以$e$为底的对数，记作$In N$</p>\n<p>运算公式: </p>\n<blockquote>\n<p>前提条件，$a&gt;0 且a\\neq 1,M&gt;0, N&gt;0$<br>$\\log_a (M*N) = \\log_a M + \\log_a N$<br>$\\log_a {M\\over N} = \\log_a M -\\log_a N $<br>$\\log_a {M^n}= n\\log_a M (n\\in R)$</p>\n</blockquote>\n<h4 id=\"对数函数及性质\"><a href=\"#对数函数及性质\" class=\"headerlink\" title=\"对数函数及性质\"></a>对数函数及性质</h4><p>一般的，函数$y=\\log_a x (a&gt;0 且 a\\neq 1) x\\in (0,+\\infty)$<br><img src=\"../images/math_function_2.png\" alt=\"\"></p>\n"},{"title":"软件推荐","date":"2016-11-26T06:56:00.000Z","_content":"\n|名称|描述|平台|\n|:--|:--| :--|\n|[Toogl](https://www.toggl.com/)| 时间管理软件|all|\n|[Pomotodo](https://pomotodo.com/app/)|番茄工作法| all|\n|[Alfred](https://www.alfredapp.com/powerpack/) [Alfred 插件集合](http://alfredworkflow.com/)| Mac最好用的快速启动工具|Mac|\n|[Moom](http://manytricks.com/moom/)| 分屏工具 |Mac|\n|[Go2Shell](http://zipzapmac.com/Go2Shell)|在Finder打开terminal |Mac|\n|[OmniFocus](https://www.omnigroup.com/)|GTD管理软件|Mac iOS|\n|[Snappy](http://wwww.snappy-app.com)|截屏软件|Mac|\n|[Near Lock](http://nearlock.me/)| 用iPhone解锁Mac| Mac iOS|\n|[Dropbox](https://www.dropbox.com/) | Dropbox 软件|Mac Window Linux iPhone Android|\n|[Intellij IDEA](https://www.jetbrains.com/idea/) | 最好用，最智能的Java IDE|Mac Window|\n|[Sublime Text](https://www.sublimetext.com/) | 流行的跨平台编辑器|Mac Window|\n|[TyBase](http://www.typhoonsystems.com.au/projects/tybase/)| 数据库设计| Mac|\n|[Basejump](https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8)| base64编码工具| Mac|\n|[fHash](https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8)| 哈希计算工具，支持MD5,SHA1,SHA256,CRC32|Mac|\n|[noodle](https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8) |SSH 连接工具|Mac|\n|[Minity](https://minifyapp.com/)|代码压缩 |Mac|\n|AVPlayer| 视频播放器，可通过FTP，web等多种方式播放视频| iOS|\n<<<<<<< HEAD\n=======\n|[Aria2](https://aria2.github.io/)|实现百度云、迅雷离线满速下载| Window, Mac, iOS|\n\n\n## Chrome 插件\n|名称|描述|\n|:--|:--|\n|[Simple Blocker](https://chrome.google.com/webstore/detail/simple-blocker/akfbkbiialncppkngofjpglbbobjoeoe/related) | 禁止浏览器访问指定的软件|\n|Evernote Web Clipper | 收藏网页内容至印象笔记|\n|[Octotree](https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja) | 方便查看github项目中的文件    |\n|[Page Ruler](https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja)|网页标尺，查看尺寸|\n|[BuiltWith Technology Profiler](https://chrome.google.com/webstore/detail/builtwith-technology-prof/dapjbgnjinbpoindlpdmhochffioedbn?hl=zh-CN)|查看网站用了那些技术|\n|[Octo Mate](https://chrome.google.com/webstore/detail/octo-mate/baggcehellihkglakjnmnhpnjmkbmpkf)|增强Github体验，方便下载文件|\n>>>>>>> master\n\n","source":"_posts/Application.md","raw":"---\ntitle: 软件推荐\ndate: 2016-11-26 14:56:00\ntags: [app,Mac,Window,Linux]\ncategories: JavaScript\n---\n\n|名称|描述|平台|\n|:--|:--| :--|\n|[Toogl](https://www.toggl.com/)| 时间管理软件|all|\n|[Pomotodo](https://pomotodo.com/app/)|番茄工作法| all|\n|[Alfred](https://www.alfredapp.com/powerpack/) [Alfred 插件集合](http://alfredworkflow.com/)| Mac最好用的快速启动工具|Mac|\n|[Moom](http://manytricks.com/moom/)| 分屏工具 |Mac|\n|[Go2Shell](http://zipzapmac.com/Go2Shell)|在Finder打开terminal |Mac|\n|[OmniFocus](https://www.omnigroup.com/)|GTD管理软件|Mac iOS|\n|[Snappy](http://wwww.snappy-app.com)|截屏软件|Mac|\n|[Near Lock](http://nearlock.me/)| 用iPhone解锁Mac| Mac iOS|\n|[Dropbox](https://www.dropbox.com/) | Dropbox 软件|Mac Window Linux iPhone Android|\n|[Intellij IDEA](https://www.jetbrains.com/idea/) | 最好用，最智能的Java IDE|Mac Window|\n|[Sublime Text](https://www.sublimetext.com/) | 流行的跨平台编辑器|Mac Window|\n|[TyBase](http://www.typhoonsystems.com.au/projects/tybase/)| 数据库设计| Mac|\n|[Basejump](https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8)| base64编码工具| Mac|\n|[fHash](https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8)| 哈希计算工具，支持MD5,SHA1,SHA256,CRC32|Mac|\n|[noodle](https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8) |SSH 连接工具|Mac|\n|[Minity](https://minifyapp.com/)|代码压缩 |Mac|\n|AVPlayer| 视频播放器，可通过FTP，web等多种方式播放视频| iOS|\n<<<<<<< HEAD\n=======\n|[Aria2](https://aria2.github.io/)|实现百度云、迅雷离线满速下载| Window, Mac, iOS|\n\n\n## Chrome 插件\n|名称|描述|\n|:--|:--|\n|[Simple Blocker](https://chrome.google.com/webstore/detail/simple-blocker/akfbkbiialncppkngofjpglbbobjoeoe/related) | 禁止浏览器访问指定的软件|\n|Evernote Web Clipper | 收藏网页内容至印象笔记|\n|[Octotree](https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja) | 方便查看github项目中的文件    |\n|[Page Ruler](https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja)|网页标尺，查看尺寸|\n|[BuiltWith Technology Profiler](https://chrome.google.com/webstore/detail/builtwith-technology-prof/dapjbgnjinbpoindlpdmhochffioedbn?hl=zh-CN)|查看网站用了那些技术|\n|[Octo Mate](https://chrome.google.com/webstore/detail/octo-mate/baggcehellihkglakjnmnhpnjmkbmpkf)|增强Github体验，方便下载文件|\n>>>>>>> master\n\n","slug":"Application","published":1,"updated":"2020-02-26T14:51:35.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdf00041ovci442oqoe","content":"<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">平台</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://www.toggl.com/\" target=\"_blank\" rel=\"noopener\">Toogl</a></td>\n<td align=\"left\">时间管理软件</td>\n<td align=\"left\">all</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://pomotodo.com/app/\" target=\"_blank\" rel=\"noopener\">Pomotodo</a></td>\n<td align=\"left\">番茄工作法</td>\n<td align=\"left\">all</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.alfredapp.com/powerpack/\" target=\"_blank\" rel=\"noopener\">Alfred</a> <a href=\"http://alfredworkflow.com/\" target=\"_blank\" rel=\"noopener\">Alfred 插件集合</a></td>\n<td align=\"left\">Mac最好用的快速启动工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://manytricks.com/moom/\" target=\"_blank\" rel=\"noopener\">Moom</a></td>\n<td align=\"left\">分屏工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://zipzapmac.com/Go2Shell\" target=\"_blank\" rel=\"noopener\">Go2Shell</a></td>\n<td align=\"left\">在Finder打开terminal</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.omnigroup.com/\" target=\"_blank\" rel=\"noopener\">OmniFocus</a></td>\n<td align=\"left\">GTD管理软件</td>\n<td align=\"left\">Mac iOS</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://wwww.snappy-app.com\" target=\"_blank\" rel=\"noopener\">Snappy</a></td>\n<td align=\"left\">截屏软件</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://nearlock.me/\" target=\"_blank\" rel=\"noopener\">Near Lock</a></td>\n<td align=\"left\">用iPhone解锁Mac</td>\n<td align=\"left\">Mac iOS</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"noopener\">Dropbox</a></td>\n<td align=\"left\">Dropbox 软件</td>\n<td align=\"left\">Mac Window Linux iPhone Android</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">Intellij IDEA</a></td>\n<td align=\"left\">最好用，最智能的Java IDE</td>\n<td align=\"left\">Mac Window</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text</a></td>\n<td align=\"left\">流行的跨平台编辑器</td>\n<td align=\"left\">Mac Window</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.typhoonsystems.com.au/projects/tybase/\" target=\"_blank\" rel=\"noopener\">TyBase</a></td>\n<td align=\"left\">数据库设计</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">Basejump</a></td>\n<td align=\"left\">base64编码工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">fHash</a></td>\n<td align=\"left\">哈希计算工具，支持MD5,SHA1,SHA256,CRC32</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">noodle</a></td>\n<td align=\"left\">SSH 连接工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://minifyapp.com/\" target=\"_blank\" rel=\"noopener\">Minity</a></td>\n<td align=\"left\">代码压缩</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\">AVPlayer</td>\n<td align=\"left\">视频播放器，可通过FTP，web等多种方式播放视频</td>\n<td align=\"left\">iOS</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">=======</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">Aria2</a></td>\n<td align=\"left\">实现百度云、迅雷离线满速下载</td>\n<td align=\"left\">Window, Mac, iOS</td>\n</tr>\n</tbody></table>\n<h2 id=\"Chrome-插件\"><a href=\"#Chrome-插件\" class=\"headerlink\" title=\"Chrome 插件\"></a>Chrome 插件</h2><table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/simple-blocker/akfbkbiialncppkngofjpglbbobjoeoe/related\" target=\"_blank\" rel=\"noopener\">Simple Blocker</a></td>\n<td align=\"left\">禁止浏览器访问指定的软件</td>\n</tr>\n<tr>\n<td align=\"left\">Evernote Web Clipper</td>\n<td align=\"left\">收藏网页内容至印象笔记</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja\" target=\"_blank\" rel=\"noopener\">Octotree</a></td>\n<td align=\"left\">方便查看github项目中的文件</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja\" target=\"_blank\" rel=\"noopener\">Page Ruler</a></td>\n<td align=\"left\">网页标尺，查看尺寸</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/builtwith-technology-prof/dapjbgnjinbpoindlpdmhochffioedbn?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">BuiltWith Technology Profiler</a></td>\n<td align=\"left\">查看网站用了那些技术</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octo-mate/baggcehellihkglakjnmnhpnjmkbmpkf\" target=\"_blank\" rel=\"noopener\">Octo Mate</a></td>\n<td align=\"left\">增强Github体验，方便下载文件</td>\n</tr>\n</tbody></table>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">平台</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://www.toggl.com/\" target=\"_blank\" rel=\"noopener\">Toogl</a></td>\n<td align=\"left\">时间管理软件</td>\n<td align=\"left\">all</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://pomotodo.com/app/\" target=\"_blank\" rel=\"noopener\">Pomotodo</a></td>\n<td align=\"left\">番茄工作法</td>\n<td align=\"left\">all</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.alfredapp.com/powerpack/\" target=\"_blank\" rel=\"noopener\">Alfred</a> <a href=\"http://alfredworkflow.com/\" target=\"_blank\" rel=\"noopener\">Alfred 插件集合</a></td>\n<td align=\"left\">Mac最好用的快速启动工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://manytricks.com/moom/\" target=\"_blank\" rel=\"noopener\">Moom</a></td>\n<td align=\"left\">分屏工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://zipzapmac.com/Go2Shell\" target=\"_blank\" rel=\"noopener\">Go2Shell</a></td>\n<td align=\"left\">在Finder打开terminal</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.omnigroup.com/\" target=\"_blank\" rel=\"noopener\">OmniFocus</a></td>\n<td align=\"left\">GTD管理软件</td>\n<td align=\"left\">Mac iOS</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://wwww.snappy-app.com\" target=\"_blank\" rel=\"noopener\">Snappy</a></td>\n<td align=\"left\">截屏软件</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://nearlock.me/\" target=\"_blank\" rel=\"noopener\">Near Lock</a></td>\n<td align=\"left\">用iPhone解锁Mac</td>\n<td align=\"left\">Mac iOS</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"noopener\">Dropbox</a></td>\n<td align=\"left\">Dropbox 软件</td>\n<td align=\"left\">Mac Window Linux iPhone Android</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">Intellij IDEA</a></td>\n<td align=\"left\">最好用，最智能的Java IDE</td>\n<td align=\"left\">Mac Window</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text</a></td>\n<td align=\"left\">流行的跨平台编辑器</td>\n<td align=\"left\">Mac Window</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://www.typhoonsystems.com.au/projects/tybase/\" target=\"_blank\" rel=\"noopener\">TyBase</a></td>\n<td align=\"left\">数据库设计</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">Basejump</a></td>\n<td align=\"left\">base64编码工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">fHash</a></td>\n<td align=\"left\">哈希计算工具，支持MD5,SHA1,SHA256,CRC32</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8\" target=\"_blank\" rel=\"noopener\">noodle</a></td>\n<td align=\"left\">SSH 连接工具</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://minifyapp.com/\" target=\"_blank\" rel=\"noopener\">Minity</a></td>\n<td align=\"left\">代码压缩</td>\n<td align=\"left\">Mac</td>\n</tr>\n<tr>\n<td align=\"left\">AVPlayer</td>\n<td align=\"left\">视频播放器，可通过FTP，web等多种方式播放视频</td>\n<td align=\"left\">iOS</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">=======</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"noopener\">Aria2</a></td>\n<td align=\"left\">实现百度云、迅雷离线满速下载</td>\n<td align=\"left\">Window, Mac, iOS</td>\n</tr>\n</tbody></table>\n<h2 id=\"Chrome-插件\"><a href=\"#Chrome-插件\" class=\"headerlink\" title=\"Chrome 插件\"></a>Chrome 插件</h2><table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/simple-blocker/akfbkbiialncppkngofjpglbbobjoeoe/related\" target=\"_blank\" rel=\"noopener\">Simple Blocker</a></td>\n<td align=\"left\">禁止浏览器访问指定的软件</td>\n</tr>\n<tr>\n<td align=\"left\">Evernote Web Clipper</td>\n<td align=\"left\">收藏网页内容至印象笔记</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja\" target=\"_blank\" rel=\"noopener\">Octotree</a></td>\n<td align=\"left\">方便查看github项目中的文件</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=ja\" target=\"_blank\" rel=\"noopener\">Page Ruler</a></td>\n<td align=\"left\">网页标尺，查看尺寸</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/builtwith-technology-prof/dapjbgnjinbpoindlpdmhochffioedbn?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">BuiltWith Technology Profiler</a></td>\n<td align=\"left\">查看网站用了那些技术</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://chrome.google.com/webstore/detail/octo-mate/baggcehellihkglakjnmnhpnjmkbmpkf\" target=\"_blank\" rel=\"noopener\">Octo Mate</a></td>\n<td align=\"left\">增强Github体验，方便下载文件</td>\n</tr>\n</tbody></table>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"title":"康托尔对角化论证","date":"2016-12-15T12:47:43.000Z","_content":"对角论证法是乔治 · 康托尔于 1891 年提出的用于说明实数集合是不可数集的证明。    \n要证明实数集合是不可数的，就假定实数集合是可数的并得出矛盾。于是，所有落在$0$和$1$之间的实数所成的子集合也是可数的(因为可数集合的所有子集合都是可数的)。在此假设下，在$0$和$1$之间的实数按照某种顺序列出，比如说$r_1,r_2,r_3,\\dots$设这些实数的十进制表示为   \n$$\n    r_1 =0.d_{11}d_{12}d_{13}d_{14}\\dots \\\\\n    r_2 =0.d_{21}d_{22}d_{23}d_{24}\\dots \\\\\n    r_3 =0.d_{31}d_{32}d_{33}d_{34}\\dots \\\\\n    r_4 =0.d_{41}d_{42}d_{43}d_{44}\\dots \\\\\n    .\\\\\n    .\\\\\n    .\\\\\n$$ \n其中$d_{ij}\\in \\{0,1,2,3,4,5,6,7,8,9\\}$。(例如，如果$r_1=0.23794101\\dots$，就有$d_{11}=2,d_{12}=3,d_{14}=7\\dots$)于是，构造新的实数具有十进制展开式$r=0.d_1d_2d_3d_4\\dots$，其中用下列规则确定十进制数字：\n$$\nf(n) =\n\\begin{cases}\n4, & \\text{if $d_i\\neq$ 4} \\\\[2ex]\n5, & \\text{if $d_i$= 4}\n\\end{cases}\n$$\n例如，假定$r_1=0.23794102\\dots, r_2=0.44590138\\dots,r_3=0.09118764\\dots$等等，于是$r=0.d_1d_2d_3d_4\\dots =0.4544\\dots$,其中因为$d_{11}\\neq 4,d_1=4,d_{22}=4,d_2=5 \\dots$)     \n每个实数都有唯一的十进制展开式(展开式结尾全部由数字$9$组成的可能性除外)。于是，实数$r$不等于$r_1,r_2,\\dots $中的任何一个，因为对每个$i$来说，$r$的十进制展开式与$r_i$的十进制展开式在小数点右边第$i$位是不同的。    \n由于存在着不在列表中而在$0$和$1$之间的实数$r$，所以可以列出在$0$和$1$之间所有实数的假设必定为假。因此，不能列出在$0$和$1$之间的所有实数，在$0$和$1$之间的实数集合是不可数的。任何包含不可数子集合的集合都是不可数的。因此实数集合是不可数的。\n\n","source":"_posts/Function-01-康托尔对角化论证.md","raw":"---\ntitle: 康托尔对角化论证\ndate: 2016-12-15 20:47:43\ntags: [Math,function]\ncategories: [Math]\n---\n对角论证法是乔治 · 康托尔于 1891 年提出的用于说明实数集合是不可数集的证明。    \n要证明实数集合是不可数的，就假定实数集合是可数的并得出矛盾。于是，所有落在$0$和$1$之间的实数所成的子集合也是可数的(因为可数集合的所有子集合都是可数的)。在此假设下，在$0$和$1$之间的实数按照某种顺序列出，比如说$r_1,r_2,r_3,\\dots$设这些实数的十进制表示为   \n$$\n    r_1 =0.d_{11}d_{12}d_{13}d_{14}\\dots \\\\\n    r_2 =0.d_{21}d_{22}d_{23}d_{24}\\dots \\\\\n    r_3 =0.d_{31}d_{32}d_{33}d_{34}\\dots \\\\\n    r_4 =0.d_{41}d_{42}d_{43}d_{44}\\dots \\\\\n    .\\\\\n    .\\\\\n    .\\\\\n$$ \n其中$d_{ij}\\in \\{0,1,2,3,4,5,6,7,8,9\\}$。(例如，如果$r_1=0.23794101\\dots$，就有$d_{11}=2,d_{12}=3,d_{14}=7\\dots$)于是，构造新的实数具有十进制展开式$r=0.d_1d_2d_3d_4\\dots$，其中用下列规则确定十进制数字：\n$$\nf(n) =\n\\begin{cases}\n4, & \\text{if $d_i\\neq$ 4} \\\\[2ex]\n5, & \\text{if $d_i$= 4}\n\\end{cases}\n$$\n例如，假定$r_1=0.23794102\\dots, r_2=0.44590138\\dots,r_3=0.09118764\\dots$等等，于是$r=0.d_1d_2d_3d_4\\dots =0.4544\\dots$,其中因为$d_{11}\\neq 4,d_1=4,d_{22}=4,d_2=5 \\dots$)     \n每个实数都有唯一的十进制展开式(展开式结尾全部由数字$9$组成的可能性除外)。于是，实数$r$不等于$r_1,r_2,\\dots $中的任何一个，因为对每个$i$来说，$r$的十进制展开式与$r_i$的十进制展开式在小数点右边第$i$位是不同的。    \n由于存在着不在列表中而在$0$和$1$之间的实数$r$，所以可以列出在$0$和$1$之间所有实数的假设必定为假。因此，不能列出在$0$和$1$之间的所有实数，在$0$和$1$之间的实数集合是不可数的。任何包含不可数子集合的集合都是不可数的。因此实数集合是不可数的。\n\n","slug":"Function-01-康托尔对角化论证","published":1,"updated":"2020-02-26T14:51:35.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdg00061ovc9vi1n8wu","content":"<p>对角论证法是乔治 · 康托尔于 1891 年提出的用于说明实数集合是不可数集的证明。<br>要证明实数集合是不可数的，就假定实数集合是可数的并得出矛盾。于是，所有落在$0$和$1$之间的实数所成的子集合也是可数的(因为可数集合的所有子集合都是可数的)。在此假设下，在$0$和$1$之间的实数按照某种顺序列出，比如说$r_1,r_2,r_3,\\dots$设这些实数的十进制表示为<br>$$<br>    r_1 =0.d_{11}d_{12}d_{13}d_{14}\\dots \\<br>    r_2 =0.d_{21}d_{22}d_{23}d_{24}\\dots \\<br>    r_3 =0.d_{31}d_{32}d_{33}d_{34}\\dots \\<br>    r_4 =0.d_{41}d_{42}d_{43}d_{44}\\dots \\<br>    .\\<br>    .\\<br>    .\\<br>$$<br>其中$d_{ij}\\in {0,1,2,3,4,5,6,7,8,9}$。(例如，如果$r_1=0.23794101\\dots$，就有$d_{11}=2,d_{12}=3,d_{14}=7\\dots$)于是，构造新的实数具有十进制展开式$r=0.d_1d_2d_3d_4\\dots$，其中用下列规则确定十进制数字：<br>$$<br>f(n) =<br>\\begin{cases}<br>4, &amp; \\text{if $d_i\\neq$ 4} \\[2ex]<br>5, &amp; \\text{if $d_i$= 4}<br>\\end{cases}<br>$$<br>例如，假定$r_1=0.23794102\\dots, r_2=0.44590138\\dots,r_3=0.09118764\\dots$等等，于是$r=0.d_1d_2d_3d_4\\dots =0.4544\\dots$,其中因为$d_{11}\\neq 4,d_1=4,d_{22}=4,d_2=5 \\dots$)<br>每个实数都有唯一的十进制展开式(展开式结尾全部由数字$9$组成的可能性除外)。于是，实数$r$不等于$r_1,r_2,\\dots $中的任何一个，因为对每个$i$来说，$r$的十进制展开式与$r_i$的十进制展开式在小数点右边第$i$位是不同的。<br>由于存在着不在列表中而在$0$和$1$之间的实数$r$，所以可以列出在$0$和$1$之间所有实数的假设必定为假。因此，不能列出在$0$和$1$之间的所有实数，在$0$和$1$之间的实数集合是不可数的。任何包含不可数子集合的集合都是不可数的。因此实数集合是不可数的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>对角论证法是乔治 · 康托尔于 1891 年提出的用于说明实数集合是不可数集的证明。<br>要证明实数集合是不可数的，就假定实数集合是可数的并得出矛盾。于是，所有落在$0$和$1$之间的实数所成的子集合也是可数的(因为可数集合的所有子集合都是可数的)。在此假设下，在$0$和$1$之间的实数按照某种顺序列出，比如说$r_1,r_2,r_3,\\dots$设这些实数的十进制表示为<br>$$<br>    r_1 =0.d_{11}d_{12}d_{13}d_{14}\\dots \\<br>    r_2 =0.d_{21}d_{22}d_{23}d_{24}\\dots \\<br>    r_3 =0.d_{31}d_{32}d_{33}d_{34}\\dots \\<br>    r_4 =0.d_{41}d_{42}d_{43}d_{44}\\dots \\<br>    .\\<br>    .\\<br>    .\\<br>$$<br>其中$d_{ij}\\in {0,1,2,3,4,5,6,7,8,9}$。(例如，如果$r_1=0.23794101\\dots$，就有$d_{11}=2,d_{12}=3,d_{14}=7\\dots$)于是，构造新的实数具有十进制展开式$r=0.d_1d_2d_3d_4\\dots$，其中用下列规则确定十进制数字：<br>$$<br>f(n) =<br>\\begin{cases}<br>4, &amp; \\text{if $d_i\\neq$ 4} \\[2ex]<br>5, &amp; \\text{if $d_i$= 4}<br>\\end{cases}<br>$$<br>例如，假定$r_1=0.23794102\\dots, r_2=0.44590138\\dots,r_3=0.09118764\\dots$等等，于是$r=0.d_1d_2d_3d_4\\dots =0.4544\\dots$,其中因为$d_{11}\\neq 4,d_1=4,d_{22}=4,d_2=5 \\dots$)<br>每个实数都有唯一的十进制展开式(展开式结尾全部由数字$9$组成的可能性除外)。于是，实数$r$不等于$r_1,r_2,\\dots $中的任何一个，因为对每个$i$来说，$r$的十进制展开式与$r_i$的十进制展开式在小数点右边第$i$位是不同的。<br>由于存在着不在列表中而在$0$和$1$之间的实数$r$，所以可以列出在$0$和$1$之间所有实数的假设必定为假。因此，不能列出在$0$和$1$之间的所有实数，在$0$和$1$之间的实数集合是不可数的。任何包含不可数子集合的集合都是不可数的。因此实数集合是不可数的。</p>\n"},{"title":"取整函数","date":"2016-12-14T12:41:20.000Z","_content":"## 上取整函数\n上取整函数是指大于或等于实数$x$的最小整数，用$⎡x⎤$表示。\n\n## 下取整函数\n下取整函数是指小于或等于实数$x$的最大整数，用$⎣x⎦$表示。      \n> 下取整函数也被称为最大整数函数，这时往往用$［x］$表示\n\n## 性质\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n> 在考虑下取整函数相关的语句时，一个有用的方法是令$x=n+\\epsilon$，其中$n=⎣x⎦$是一个整数，$\\epsilon$是$x$的分数部分，满足不等式$0\\le\\epsilon\\lt 1$。 类似的考虑上取整函数时，通常写作$x=n-\\epsilon$，其中$n=⎡x⎤$且$0\\le\\epsilon\\lt 1$。\n\n","source":"_posts/Function-02-取整函数.md","raw":"---\ntitle: 取整函数\ndate: 2016-12-14 20:41:20\ntags: [Math,function,Alg]\ncategories: [Math]\n---\n## 上取整函数\n上取整函数是指大于或等于实数$x$的最小整数，用$⎡x⎤$表示。\n\n## 下取整函数\n下取整函数是指小于或等于实数$x$的最大整数，用$⎣x⎦$表示。      \n> 下取整函数也被称为最大整数函数，这时往往用$［x］$表示\n\n## 性质\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n> 在考虑下取整函数相关的语句时，一个有用的方法是令$x=n+\\epsilon$，其中$n=⎣x⎦$是一个整数，$\\epsilon$是$x$的分数部分，满足不等式$0\\le\\epsilon\\lt 1$。 类似的考虑上取整函数时，通常写作$x=n-\\epsilon$，其中$n=⎡x⎤$且$0\\le\\epsilon\\lt 1$。\n\n","slug":"Function-02-取整函数","published":1,"updated":"2020-02-26T14:51:35.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdg00071ovcgb36r6ut","content":"<h2 id=\"上取整函数\"><a href=\"#上取整函数\" class=\"headerlink\" title=\"上取整函数\"></a>上取整函数</h2><p>上取整函数是指大于或等于实数$x$的最小整数，用$⎡x⎤$表示。</p>\n<h2 id=\"下取整函数\"><a href=\"#下取整函数\" class=\"headerlink\" title=\"下取整函数\"></a>下取整函数</h2><p>下取整函数是指小于或等于实数$x$的最大整数，用$⎣x⎦$表示。      </p>\n<blockquote>\n<p>下取整函数也被称为最大整数函数，这时往往用$［x］$表示</p>\n</blockquote>\n<h2 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h2><ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<blockquote>\n<p>在考虑下取整函数相关的语句时，一个有用的方法是令$x=n+\\epsilon$，其中$n=⎣x⎦$是一个整数，$\\epsilon$是$x$的分数部分，满足不等式$0\\le\\epsilon\\lt 1$。 类似的考虑上取整函数时，通常写作$x=n-\\epsilon$，其中$n=⎡x⎤$且$0\\le\\epsilon\\lt 1$。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"上取整函数\"><a href=\"#上取整函数\" class=\"headerlink\" title=\"上取整函数\"></a>上取整函数</h2><p>上取整函数是指大于或等于实数$x$的最小整数，用$⎡x⎤$表示。</p>\n<h2 id=\"下取整函数\"><a href=\"#下取整函数\" class=\"headerlink\" title=\"下取整函数\"></a>下取整函数</h2><p>下取整函数是指小于或等于实数$x$的最大整数，用$⎣x⎦$表示。      </p>\n<blockquote>\n<p>下取整函数也被称为最大整数函数，这时往往用$［x］$表示</p>\n</blockquote>\n<h2 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h2><ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<blockquote>\n<p>在考虑下取整函数相关的语句时，一个有用的方法是令$x=n+\\epsilon$，其中$n=⎣x⎦$是一个整数，$\\epsilon$是$x$的分数部分，满足不等式$0\\le\\epsilon\\lt 1$。 类似的考虑上取整函数时，通常写作$x=n-\\epsilon$，其中$n=⎡x⎤$且$0\\le\\epsilon\\lt 1$。</p>\n</blockquote>\n"},{"title":"线性同余法生成伪随机数","date":"2016-12-21T13:49:30.000Z","_content":"## 线性同余法\n选择四个数:模数$m$、乘数$a$、增量$c$、和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：$$x_{n+1} = (ax_n +c)\\;\\mathbf {mod}\\; m$$。   \n### 示例\n例如，选取$m=9,a=7,c=4,x_0=3$，产生的伪随机数序列如下: \n$$\n    x_1 = 7x_0+4\\;\\mathbf {mod}\\; 9 = 25\\;\\mathbf {mod}\\; 9=7\\\\\n    x_2 = 7x_1+4\\;\\mathbf {mod}\\; 9 = 53\\;\\mathbf {mod}\\; 9=8\\\\\n    ...\n$$\n常使用的线性同余发生器的增量$c=0$。这样的发生器称为__纯乘式发生器__。例如以$2^{31}-1$为模，以$7^5$为乘数的纯乘式发生器就广为采用。会产生$2^{31}-2$个数，然后开始重复。      \n","source":"_posts/Function-03-线性同余法生成伪随机数.md","raw":"---\ntitle: 线性同余法生成伪随机数\ndate: 2016-12-21 21:49:30\ntags: [Math,function,Alg]\ncategories: [Math]\n---\n## 线性同余法\n选择四个数:模数$m$、乘数$a$、增量$c$、和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：$$x_{n+1} = (ax_n +c)\\;\\mathbf {mod}\\; m$$。   \n### 示例\n例如，选取$m=9,a=7,c=4,x_0=3$，产生的伪随机数序列如下: \n$$\n    x_1 = 7x_0+4\\;\\mathbf {mod}\\; 9 = 25\\;\\mathbf {mod}\\; 9=7\\\\\n    x_2 = 7x_1+4\\;\\mathbf {mod}\\; 9 = 53\\;\\mathbf {mod}\\; 9=8\\\\\n    ...\n$$\n常使用的线性同余发生器的增量$c=0$。这样的发生器称为__纯乘式发生器__。例如以$2^{31}-1$为模，以$7^5$为乘数的纯乘式发生器就广为采用。会产生$2^{31}-2$个数，然后开始重复。      \n","slug":"Function-03-线性同余法生成伪随机数","published":1,"updated":"2020-02-26T14:51:35.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdh00081ovcvmsxn5sk","content":"<h2 id=\"线性同余法\"><a href=\"#线性同余法\" class=\"headerlink\" title=\"线性同余法\"></a>线性同余法</h2><p>选择四个数:模数$m$、乘数$a$、增量$c$、和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列${x_n}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：$$x_{n+1} = (ax_n +c);\\mathbf {mod}; m$$。   </p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>例如，选取$m=9,a=7,c=4,x_0=3$，产生的伪随机数序列如下:<br>$$<br>    x_1 = 7x_0+4;\\mathbf {mod}; 9 = 25;\\mathbf {mod}; 9=7\\<br>    x_2 = 7x_1+4;\\mathbf {mod}; 9 = 53;\\mathbf {mod}; 9=8\\<br>    …<br>$$<br>常使用的线性同余发生器的增量$c=0$。这样的发生器称为<strong>纯乘式发生器</strong>。例如以$2^{31}-1$为模，以$7^5$为乘数的纯乘式发生器就广为采用。会产生$2^{31}-2$个数，然后开始重复。      </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"线性同余法\"><a href=\"#线性同余法\" class=\"headerlink\" title=\"线性同余法\"></a>线性同余法</h2><p>选择四个数:模数$m$、乘数$a$、增量$c$、和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列${x_n}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：$$x_{n+1} = (ax_n +c);\\mathbf {mod}; m$$。   </p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>例如，选取$m=9,a=7,c=4,x_0=3$，产生的伪随机数序列如下:<br>$$<br>    x_1 = 7x_0+4;\\mathbf {mod}; 9 = 25;\\mathbf {mod}; 9=7\\<br>    x_2 = 7x_1+4;\\mathbf {mod}; 9 = 53;\\mathbf {mod}; 9=8\\<br>    …<br>$$<br>常使用的线性同余发生器的增量$c=0$。这样的发生器称为<strong>纯乘式发生器</strong>。例如以$2^{31}-1$为模，以$7^5$为乘数的纯乘式发生器就广为采用。会产生$2^{31}-2$个数，然后开始重复。      </p>\n"},{"title":"最大公约数和最小公倍数算法","date":"2016-12-22T13:28:03.000Z","_content":"\n## 因数分解\n### 最大公约数\n假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n\n### 最小公倍数\n因素分解也可以用来求最大公倍数，求$a$和$b$的最小公倍数的公式为:    \n$$lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}$$\n\n## 欧几里得算法\n欧几里德算法又称辗转相除法，用于计算两个整数 a,b 的最大公约数。其计算原理依赖于下面的定理：     \n定理：$gcd(a,b) = gcd(b,a\\;\\mathbf{mod}\\; b)$            \n证明：$a$可以表示成$a = kb + r$，则 $r = a\\;\\mathbf{mod}\\;b$     \n假设$\\;d$是$a$,$b$的一个公约数，则有$d\\mid a$, $d\\mid b$，而$r= a - kb$，因此 $d\\mid r$       \n因此$\\;d$ 是$(b,a\\;\\mathbf{mod}\\; b)$的公约数      \n假设$\\;d$是$(b,a\\;\\mathbf{mod}\\;b)$ 的公约数，则$d\\mid b$ ,$d\\mid r$ ，但是$a = kb +r$      \n因此$\\;d$也是$(a,b)$的公约数\n","source":"_posts/Function-04-最大公约数和最小公倍数算法.md","raw":"---\ntitle: 最大公约数和最小公倍数算法\ndate: 2016-12-22 21:28:03\ntags: [Math,function,Alg]\ncategories: [Math]\n---\n\n## 因数分解\n### 最大公约数\n假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n\n### 最小公倍数\n因素分解也可以用来求最大公倍数，求$a$和$b$的最小公倍数的公式为:    \n$$lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}$$\n\n## 欧几里得算法\n欧几里德算法又称辗转相除法，用于计算两个整数 a,b 的最大公约数。其计算原理依赖于下面的定理：     \n定理：$gcd(a,b) = gcd(b,a\\;\\mathbf{mod}\\; b)$            \n证明：$a$可以表示成$a = kb + r$，则 $r = a\\;\\mathbf{mod}\\;b$     \n假设$\\;d$是$a$,$b$的一个公约数，则有$d\\mid a$, $d\\mid b$，而$r= a - kb$，因此 $d\\mid r$       \n因此$\\;d$ 是$(b,a\\;\\mathbf{mod}\\; b)$的公约数      \n假设$\\;d$是$(b,a\\;\\mathbf{mod}\\;b)$ 的公约数，则$d\\mid b$ ,$d\\mid r$ ，但是$a = kb +r$      \n因此$\\;d$也是$(a,b)$的公约数\n","slug":"Function-04-最大公约数和最小公倍数算法","published":1,"updated":"2020-02-26T14:51:35.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdi00091ovckiw05aj3","content":"<h2 id=\"因数分解\"><a href=\"#因数分解\" class=\"headerlink\" title=\"因数分解\"></a>因数分解</h2><h3 id=\"最大公约数\"><a href=\"#最大公约数\" class=\"headerlink\" title=\"最大公约数\"></a>最大公约数</h3><p>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\<br>    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\<br>    = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</p>\n<h3 id=\"最小公倍数\"><a href=\"#最小公倍数\" class=\"headerlink\" title=\"最小公倍数\"></a>最小公倍数</h3><p>因素分解也可以用来求最大公倍数，求$a$和$b$的最小公倍数的公式为:<br>$$lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}$$</p>\n<h2 id=\"欧几里得算法\"><a href=\"#欧几里得算法\" class=\"headerlink\" title=\"欧几里得算法\"></a>欧几里得算法</h2><p>欧几里德算法又称辗转相除法，用于计算两个整数 a,b 的最大公约数。其计算原理依赖于下面的定理：<br>定理：$gcd(a,b) = gcd(b,a;\\mathbf{mod}; b)$<br>证明：$a$可以表示成$a = kb + r$，则 $r = a;\\mathbf{mod};b$<br>假设$;d$是$a$,$b$的一个公约数，则有$d\\mid a$, $d\\mid b$，而$r= a - kb$，因此 $d\\mid r$<br>因此$;d$ 是$(b,a;\\mathbf{mod}; b)$的公约数<br>假设$;d$是$(b,a;\\mathbf{mod};b)$ 的公约数，则$d\\mid b$ ,$d\\mid r$ ，但是$a = kb +r$<br>因此$;d$也是$(a,b)$的公约数</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"因数分解\"><a href=\"#因数分解\" class=\"headerlink\" title=\"因数分解\"></a>因数分解</h2><h3 id=\"最大公约数\"><a href=\"#最大公约数\" class=\"headerlink\" title=\"最大公约数\"></a>最大公约数</h3><p>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\<br>    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\<br>    = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</p>\n<h3 id=\"最小公倍数\"><a href=\"#最小公倍数\" class=\"headerlink\" title=\"最小公倍数\"></a>最小公倍数</h3><p>因素分解也可以用来求最大公倍数，求$a$和$b$的最小公倍数的公式为:<br>$$lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}$$</p>\n<h2 id=\"欧几里得算法\"><a href=\"#欧几里得算法\" class=\"headerlink\" title=\"欧几里得算法\"></a>欧几里得算法</h2><p>欧几里德算法又称辗转相除法，用于计算两个整数 a,b 的最大公约数。其计算原理依赖于下面的定理：<br>定理：$gcd(a,b) = gcd(b,a;\\mathbf{mod}; b)$<br>证明：$a$可以表示成$a = kb + r$，则 $r = a;\\mathbf{mod};b$<br>假设$;d$是$a$,$b$的一个公约数，则有$d\\mid a$, $d\\mid b$，而$r= a - kb$，因此 $d\\mid r$<br>因此$;d$ 是$(b,a;\\mathbf{mod}; b)$的公约数<br>假设$;d$是$(b,a;\\mathbf{mod};b)$ 的公约数，则$d\\mid b$ ,$d\\mid r$ ，但是$a = kb +r$<br>因此$;d$也是$(a,b)$的公约数</p>\n"},{"title":"二进制运算","date":"2016-12-22T14:52:26.000Z","_content":"\n## 整数相加\n$$\n\\begin{array}{l}\n\\mathbf {procedure} \\; \\mathcal {add} (a, b:integer)\\\\  \n\\{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)_2和(b_{n-1}b_{n-2}\\dots b_1b_0)_2\\} \\\\\nc:= 0  \\\\\n\\mathbf {for}\\; j:=0 \\;\\mathbf {to}\\; n-1 \\\\\n\\mathbf {begin} \\\\\n\\qquad d:=\\lfloor (a_j+b_j+c)/2\\rfloor \\\\\n\\qquad s_j:=a_j+b_j+c-2d \\\\\n\\qquad c:=d \\\\\n\\mathbf {end}  \\\\\ns_n := c \\\\\n\\{和数的二进制展开是(s_ns_{n-1}\\dots s_0)_2\\} \n\\end{array}\n$$\n## 整数相乘\n$$\n\\begin{array}{l}\n\\mathbf {procedure} \\;\\mathcal {multiply} (a, b:integer)\\\\  \n\\{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)_2和(b_{n-1}b_{n-2}\\dots b_1b_0)_2\\} \\\\\n\\mathbf {for}\\; j:=0 \\;\\mathbf {to}\\; n-1 \\\\\n\\mathbf {begin} \\\\\n\\qquad \\mathbf {if}\\; b_j=1\\;\\mathbf {then}\\; c_j:=a\\;shifted\\; j places \\\\\n\\qquad \\mathbf{else}\\; c_j:=0\\\\\n\\mathbf {end} \\\\\n\\{c_0,c_1,\\dots,c_{n-1}是部分乘积\\} \\\\\np:=0\\\\\n\\mathbf {for}\\; j:=0\\;\\mathbf {to}\\; n-1 \\\\\n\\qquad p:=p+c_j \\\\\n\\{p是ab的值\\}\n\\end{array}\n$$\n","source":"_posts/Function-05-二进制运算.md","raw":"---\ntitle: 二进制运算\ndate: 2016-12-22 22:52:26\ntags: [Math,function,Alg]\ncategories: [Math]\n---\n\n## 整数相加\n$$\n\\begin{array}{l}\n\\mathbf {procedure} \\; \\mathcal {add} (a, b:integer)\\\\  \n\\{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)_2和(b_{n-1}b_{n-2}\\dots b_1b_0)_2\\} \\\\\nc:= 0  \\\\\n\\mathbf {for}\\; j:=0 \\;\\mathbf {to}\\; n-1 \\\\\n\\mathbf {begin} \\\\\n\\qquad d:=\\lfloor (a_j+b_j+c)/2\\rfloor \\\\\n\\qquad s_j:=a_j+b_j+c-2d \\\\\n\\qquad c:=d \\\\\n\\mathbf {end}  \\\\\ns_n := c \\\\\n\\{和数的二进制展开是(s_ns_{n-1}\\dots s_0)_2\\} \n\\end{array}\n$$\n## 整数相乘\n$$\n\\begin{array}{l}\n\\mathbf {procedure} \\;\\mathcal {multiply} (a, b:integer)\\\\  \n\\{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)_2和(b_{n-1}b_{n-2}\\dots b_1b_0)_2\\} \\\\\n\\mathbf {for}\\; j:=0 \\;\\mathbf {to}\\; n-1 \\\\\n\\mathbf {begin} \\\\\n\\qquad \\mathbf {if}\\; b_j=1\\;\\mathbf {then}\\; c_j:=a\\;shifted\\; j places \\\\\n\\qquad \\mathbf{else}\\; c_j:=0\\\\\n\\mathbf {end} \\\\\n\\{c_0,c_1,\\dots,c_{n-1}是部分乘积\\} \\\\\np:=0\\\\\n\\mathbf {for}\\; j:=0\\;\\mathbf {to}\\; n-1 \\\\\n\\qquad p:=p+c_j \\\\\n\\{p是ab的值\\}\n\\end{array}\n$$\n","slug":"Function-05-二进制运算","published":1,"updated":"2020-02-26T14:51:35.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdi000a1ovc7k4wpp2f","content":"<h2 id=\"整数相加\"><a href=\"#整数相加\" class=\"headerlink\" title=\"整数相加\"></a>整数相加</h2><p>$$<br>\\begin{array}{l}<br>\\mathbf {procedure} ; \\mathcal {add} (a, b:integer)\\<br>{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)<em>2和(b</em>{n-1}b_{n-2}\\dots b_1b_0)<em>2} \\<br>c:= 0  \\<br>\\mathbf {for}; j:=0 ;\\mathbf {to}; n-1 \\<br>\\mathbf {begin} \\<br>\\qquad d:=\\lfloor (a_j+b_j+c)/2\\rfloor \\<br>\\qquad s_j:=a_j+b_j+c-2d \\<br>\\qquad c:=d \\<br>\\mathbf {end}  \\<br>s_n := c \\<br>{和数的二进制展开是(s_ns</em>{n-1}\\dots s_0)_2}<br>\\end{array}<br>$$</p>\n<h2 id=\"整数相乘\"><a href=\"#整数相乘\" class=\"headerlink\" title=\"整数相乘\"></a>整数相乘</h2><p>$$<br>\\begin{array}{l}<br>\\mathbf {procedure} ;\\mathcal {multiply} (a, b:integer)\\<br>{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)<em>2和(b</em>{n-1}b_{n-2}\\dots b_1b_0)<em>2} \\<br>\\mathbf {for}; j:=0 ;\\mathbf {to}; n-1 \\<br>\\mathbf {begin} \\<br>\\qquad \\mathbf {if}; b_j=1;\\mathbf {then}; c_j:=a;shifted; j places \\<br>\\qquad \\mathbf{else}; c_j:=0\\<br>\\mathbf {end} \\<br>{c_0,c_1,\\dots,c</em>{n-1}是部分乘积} \\<br>p:=0\\<br>\\mathbf {for}; j:=0;\\mathbf {to}; n-1 \\<br>\\qquad p:=p+c_j \\<br>{p是ab的值}<br>\\end{array}<br>$$</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"整数相加\"><a href=\"#整数相加\" class=\"headerlink\" title=\"整数相加\"></a>整数相加</h2><p>$$<br>\\begin{array}{l}<br>\\mathbf {procedure} ; \\mathcal {add} (a, b:integer)\\<br>{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)<em>2和(b</em>{n-1}b_{n-2}\\dots b_1b_0)<em>2} \\<br>c:= 0  \\<br>\\mathbf {for}; j:=0 ;\\mathbf {to}; n-1 \\<br>\\mathbf {begin} \\<br>\\qquad d:=\\lfloor (a_j+b_j+c)/2\\rfloor \\<br>\\qquad s_j:=a_j+b_j+c-2d \\<br>\\qquad c:=d \\<br>\\mathbf {end}  \\<br>s_n := c \\<br>{和数的二进制展开是(s_ns</em>{n-1}\\dots s_0)_2}<br>\\end{array}<br>$$</p>\n<h2 id=\"整数相乘\"><a href=\"#整数相乘\" class=\"headerlink\" title=\"整数相乘\"></a>整数相乘</h2><p>$$<br>\\begin{array}{l}<br>\\mathbf {procedure} ;\\mathcal {multiply} (a, b:integer)\\<br>{a和b的二进制展开分别是(a_{n-1}a_{n-2}\\dots a_1a_0)<em>2和(b</em>{n-1}b_{n-2}\\dots b_1b_0)<em>2} \\<br>\\mathbf {for}; j:=0 ;\\mathbf {to}; n-1 \\<br>\\mathbf {begin} \\<br>\\qquad \\mathbf {if}; b_j=1;\\mathbf {then}; c_j:=a;shifted; j places \\<br>\\qquad \\mathbf{else}; c_j:=0\\<br>\\mathbf {end} \\<br>{c_0,c_1,\\dots,c</em>{n-1}是部分乘积} \\<br>p:=0\\<br>\\mathbf {for}; j:=0;\\mathbf {to}; n-1 \\<br>\\qquad p:=p+c_j \\<br>{p是ab的值}<br>\\end{array}<br>$$</p>\n"},{"title":"Java 浅析序列化","date":"2017-03-18T06:44:26.000Z","_content":"## 前言\n本篇文章从以下几个方面，讲述Java序列化相关的内容： \n> * 什么是序列化？\n> * 如何实现序列化？\n> * 修改默认的序列化机制\n> * 多个对象共享一个引用时，序列化和反序列化会有什么结果？\n> * 如何解决兼容问题？\n> * 序列化应用时需要注意的问题\n> * 父类的序列化问题\n> * 安全问题\n\n## 什么是序列化\n__序列化__是指将对象表示为一个字节序列的过程，该字节序列包含对象所存储的数据、数据的类型以及对象的类型信息。 __反序列化__是将字节序列转化为对象的过程。 \n序列化是对对象的持久化，将对象序列化后可以存入文件中，也可以通过网络传递到远程服务器中。         \n    \n## 实现序列化\n在实现序列化的过程中，需要用到三个类`ObjectInputStream`、`ObjectOutputStream`和`Serializable`。首先，让需要序列化的对象所属类实现`Serializable`接口，该接口不需要实现任何方法，是典型的标记接口。 然后使用`ObjectInputStream`、`ObjectOutputStream`进行读写。   \n\n{% gist 3d8ae4af25273ee8fec1c10c5c0002a2 %}\n\n当存储一个对象时，这个对象所属的类也必须存储，这个类的描述包含 \n\n* 类名。\n* 序列化的版本唯一的ID，它是通过对类、超类、接口、域类型和方法签名按照规范方式排序，然后应用SHA算法获得，并且只取前8位。它相当于一个类的指纹，假如类中存在`serialVersionUID`字段，则用它作为类的指纹。     \n* 描述序列化方法的标志集。\n* 对数据域的描述。  \n\n     \n静态变量和被`transient`修饰的变量将不会被序列化。除非超类也实现了`Serializable`接口，否则超类的数据域不会被序列化。   \n\n## 修改默认的序列化机制\nJava提供了三种方式，用以修改默认的序列化机制。   \n考虑以下这种情况，某些数据域，例如只对本地方法有意义的存储文件句柄，这种信息在重新加载或传送到其他机器上时都是没有用处的，甚至会引起程序崩溃。因此为了防止这种情况，使用`transient`修饰符，被该修饰符修饰后的数据域将被序列化机制跳过。       \n      \n另外一种情况是，类中的某些数据域没有实现`Serializable`接口，却又要将其序列化，这时就需要先将其标记为`transient`避免抛出`NotSerializableException`，然后通过重写`readObject`和`writeObject`方法，自定义序列化。这种两个方法是私有的，并且只能被序列化机制调用。   \n\n下面是一个典型示例，在`java.awt.geom`包中有大量的类都是不可序列化的，例如`Point2D.Double`，现在要序列化一个包含该类型字段的类，\n\n```java\npublic class LabeledPoint implements Serializable {\n\tprivate String label;\n\tprivate transient Point2D.Double point;\n\n    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException{\n        in.defaultReadObject();\n       \tdouble x = in.readDouble();\n       \tdouble y = in.readDouble();\n       \tpoint = new Point2D.Double(x, y);\n    }\n\n    private void writeObject(ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeDouble(point.getX());\n        out.writeDouble(point.getY());\n    }\n}\n```\n`defaultWriteObject`和`defaultReadObject`是特殊的方法，只能在序列化类的`writeObject`和`readObject`方法中被调用。`defaultWriteObject`表示使用默认的序列化机制，`defaultReadObject`反之。这两个方法也可以不调用，这样就跟下面讲的`Externalizable`接口差不多。      \n       \n除了重写`readObject`和`writeObject`方法修改默认的序列化机制外，还可使用`Externalizable`接口，自定义序列化机制。     \n\n```java\npublic class Director implements Externalizable {\n    private String title;\n    private String bonus;\n\n    @Override\n    public void writeExternal(ObjectOutput out) throws IOException {\n        out.writeUTF(title);\n        out.writeUTF(bonus);\n    }\n\n    @Override\n    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n        title = in.readUTF();\n        bonus = in.readUTF();\n    }\n}\n```\n### `Externalizable`和`Serializable`的不同\n`Externalizable`和`Serializable`最大的不同就是，`Externalizable`会调用类的无参构造函数来创建对象，`Serializable`则不然。  另外就是`readObject`和`writeObject`只能被序列化机制调用，而`readExternal`和`writeExternal`方法是公共的。   \n      \n## 序列化中遇到的问题\n在序列化中，有一个重要的情况需要考虑：当一个对象被多个对象共享，作为它们各种状态的一部分时，会发生什么情况？ \n\n```java\npublic class Manager extends Employee {\n    private Employee secretary;\n\n    public static void main(String[] args) {\n        Employee tony = new Employee();\n        tony.setName(\"Tony\");\n        tony.setSalary(10000);\n        tony.setHireDay(new Date());\n\n        Manager harry = new Manager();\n        harry.setSalary(1000);\n        harry.setName(\"Harry\");\n        harry.setSecretary(tony);\n\n        Manager carl = new Manager();\n        carl.setName(\"Carl\");\n        carl.setSalary(10000);\n        carl.setSecretary(tony);\n\n        ByteArrayOutputStream byteArr = new ByteArrayOutputStream();\n        try (ObjectOutputStream out = new ObjectOutputStream(byteArr)) {\n            out.writeObject(harry);\n            out.writeObject(carl);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        try (ByteArrayInputStream input = new ByteArrayInputStream(byteArr.toByteArray());\n             ObjectInputStream objInput = new ObjectInputStream(input)) {\n            Manager harry1 = (Manager) objInput.readObject();\n            Manager carl1 = (Manager) objInput.readObject();\n            // out true\n            System.out.println(harry1.getSecretary() == carl1.getSecretary());\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n经过序列化后，两个对象依然共享同一对象。造成这种现象的原因是：每个对象都是用一个序列号（serial number，即前面提到的「指纹」）保存的，这也是这种机制之所以被称为对象序列化的原因。 下面是其算法：    \n\n* 对你遇到的每一个对象引用都关联一个序列号。    \n* 对于每个对象，当第一次遇到时，保存其对象数据到流中。    \n* 如果某个对象之前已经被保存过，那么只写出「与之前保存过的序列号为$x$的对象相同」。 在读回对象时，整个过程是反过来的。   \n* 当遇到「与之前保存过的序列号为$x$的对象相同」标记时，获取与这个顺序号相关联的对象引用。   \n\n> 因为保存原生的内存地址毫无意义，因此序列化用序列号代替了内存地址。   \n\n## 如何解决兼容问题\n如果使用序列化保存对象，就需要考虑版本问题，修改后的类能否读入旧文件？或者反之旧版本能否读入新版本产生的文件。      \n     \n这时候就体现到`serialVersionUID`字段的重要性来了。假设将SHA指纹作为序列化版本的唯一ID的话，无论类的定义产生了什么样的变化，它的SHA指纹也会跟着变化，而我们都知道对象流将拒绝读入具有不同指纹的对象。为了保持兼容性，我们必须使用`serialVersionUID`常量作为序列化版本的唯一ID。      \n\n如果这个类只有方法发生了变化，那么在读入新对象数据时是不会有任何问题的。但是，如果数据域产生了变化，那么就有可能会有问题，不过对象流将尽力将流对象转化成这个类的当前版本。   \n    \n对象流会将这个类当前版本的数据域与流中版本的数据域进行比较，当然，对象流只会考虑非静态和非`transient`的数据域。    \n\n* 如果名字匹配而类型不匹配，那么对象流不会尝试将一种类型转换成另一种类型，因为这两个对象不兼容。   \n* 如果流中对象具有在当前版本中所没有的数据域，那么对象流会忽略这些额外的数据。    \n* 如果当前版本具有在流中对象所没有的数据域，那么这些新添加的域将被设置成它们的默认值。   \n    \n这种丢弃数据域或者将数据域设置为`null`有可能会产生bug，建议设计者重写`readObject`方法来修订版本不兼容问题。   \n\n## 序列化应用时需要注意的问题\n### 序列化单例和类型安全的枚举 \n如果你使用Java语言的`enum`结构，那么不用担心序列化，它能够正常工作。但考虑以下风格的代码：    \n\n```java\npublic class Orientation {\n    public static final Orientation HORIZONTAL = new Orientation(1);\n    public static final Orientation VERTICAL = new Orientation(2);\n\n    private int value;\n\n    private Orientation(int value) {\n        this.value = value;\n    }\n}\n```\n    \n这种风格的代码在`enum`之前很常见，这个类的构造器是私有的，你不可能创建除`HORIZONTAL`和`VERTICAL`之外的对象，因此你可以使用`==`操作符来测试对象的等同性。      \n\n```java\nif (orientation == Orientation.HORIZONTAL) ...\n```\n   \n当我们序列化这样的类时，既是构造器是私有的，序列化机制也可以创建新的对象（序列化机制不通过构造器创建对象），因此上述代码就会产生bug。    \n   \n为了解决这个问题，我们需要定义另外一种称为`readResolve`的特殊序列化方法。该方法会在对象被序列化之后被调用。它必须返回一个对象，而该对象之后会成为`readObject`的返回值。因此我们可以这么做：    \n\n```java\n    private Object readResolve() throws ObjectStreamException {\n        if (value == 1) return HORIZONTAL;\n        if (value == 2) return VERTICAL;\n        return null;\n    }\n```\n    \n请记住向遗留代码中所有类型安全的枚举以及向所有支持单例设计模式的类中添加`readResolve`方法。 \n    \n### 使用序列化clone对象\n序列化机制有一种很有趣的用法，即提供了一种`clone`对象的简便途径，只需要将对象序列化到输出流中，并且将其读回。这种方式虽然方便，但性能比显式地构建新对象的方式慢的多。  \n\n## 父类的序列化问题\n一个子类实现了`Serializable`接口，而它的父类没有实现`Serializable`接口，那么序列化时父类所属的数据域并不会被序列化。__要想父类也序列化，就需要让父类也实现`Serializable`接口__。     \n     \n有一点非常重要，如果父类没有实现`Serializable`接口的话，就__需要有默认的无参的构造函数__。这是因为在父类没有实现`Serializable`接口时，虚拟机不会序列化父对象，而一个Java对象的构造必须先有父对象，才有子对象，反序列化也不列外。  \n\n## 安全问题\n序列化后的字节序列并没有加密，若被黑客窃取了这部分数据，很容易的解析出数据域里的内容。 一个解决方案就是重写`writeObject`方法，对敏感内容加密后写入对象流，然后在`readObject`中解密。   ","source":"_posts/Java-Java-序列化.md","raw":"---\ntitle: Java 浅析序列化\ndate: 2017-03-18 14:44:26\ntags: [Java,IO]\ncategories: [Java]\n---\n## 前言\n本篇文章从以下几个方面，讲述Java序列化相关的内容： \n> * 什么是序列化？\n> * 如何实现序列化？\n> * 修改默认的序列化机制\n> * 多个对象共享一个引用时，序列化和反序列化会有什么结果？\n> * 如何解决兼容问题？\n> * 序列化应用时需要注意的问题\n> * 父类的序列化问题\n> * 安全问题\n\n## 什么是序列化\n__序列化__是指将对象表示为一个字节序列的过程，该字节序列包含对象所存储的数据、数据的类型以及对象的类型信息。 __反序列化__是将字节序列转化为对象的过程。 \n序列化是对对象的持久化，将对象序列化后可以存入文件中，也可以通过网络传递到远程服务器中。         \n    \n## 实现序列化\n在实现序列化的过程中，需要用到三个类`ObjectInputStream`、`ObjectOutputStream`和`Serializable`。首先，让需要序列化的对象所属类实现`Serializable`接口，该接口不需要实现任何方法，是典型的标记接口。 然后使用`ObjectInputStream`、`ObjectOutputStream`进行读写。   \n\n{% gist 3d8ae4af25273ee8fec1c10c5c0002a2 %}\n\n当存储一个对象时，这个对象所属的类也必须存储，这个类的描述包含 \n\n* 类名。\n* 序列化的版本唯一的ID，它是通过对类、超类、接口、域类型和方法签名按照规范方式排序，然后应用SHA算法获得，并且只取前8位。它相当于一个类的指纹，假如类中存在`serialVersionUID`字段，则用它作为类的指纹。     \n* 描述序列化方法的标志集。\n* 对数据域的描述。  \n\n     \n静态变量和被`transient`修饰的变量将不会被序列化。除非超类也实现了`Serializable`接口，否则超类的数据域不会被序列化。   \n\n## 修改默认的序列化机制\nJava提供了三种方式，用以修改默认的序列化机制。   \n考虑以下这种情况，某些数据域，例如只对本地方法有意义的存储文件句柄，这种信息在重新加载或传送到其他机器上时都是没有用处的，甚至会引起程序崩溃。因此为了防止这种情况，使用`transient`修饰符，被该修饰符修饰后的数据域将被序列化机制跳过。       \n      \n另外一种情况是，类中的某些数据域没有实现`Serializable`接口，却又要将其序列化，这时就需要先将其标记为`transient`避免抛出`NotSerializableException`，然后通过重写`readObject`和`writeObject`方法，自定义序列化。这种两个方法是私有的，并且只能被序列化机制调用。   \n\n下面是一个典型示例，在`java.awt.geom`包中有大量的类都是不可序列化的，例如`Point2D.Double`，现在要序列化一个包含该类型字段的类，\n\n```java\npublic class LabeledPoint implements Serializable {\n\tprivate String label;\n\tprivate transient Point2D.Double point;\n\n    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException{\n        in.defaultReadObject();\n       \tdouble x = in.readDouble();\n       \tdouble y = in.readDouble();\n       \tpoint = new Point2D.Double(x, y);\n    }\n\n    private void writeObject(ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeDouble(point.getX());\n        out.writeDouble(point.getY());\n    }\n}\n```\n`defaultWriteObject`和`defaultReadObject`是特殊的方法，只能在序列化类的`writeObject`和`readObject`方法中被调用。`defaultWriteObject`表示使用默认的序列化机制，`defaultReadObject`反之。这两个方法也可以不调用，这样就跟下面讲的`Externalizable`接口差不多。      \n       \n除了重写`readObject`和`writeObject`方法修改默认的序列化机制外，还可使用`Externalizable`接口，自定义序列化机制。     \n\n```java\npublic class Director implements Externalizable {\n    private String title;\n    private String bonus;\n\n    @Override\n    public void writeExternal(ObjectOutput out) throws IOException {\n        out.writeUTF(title);\n        out.writeUTF(bonus);\n    }\n\n    @Override\n    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n        title = in.readUTF();\n        bonus = in.readUTF();\n    }\n}\n```\n### `Externalizable`和`Serializable`的不同\n`Externalizable`和`Serializable`最大的不同就是，`Externalizable`会调用类的无参构造函数来创建对象，`Serializable`则不然。  另外就是`readObject`和`writeObject`只能被序列化机制调用，而`readExternal`和`writeExternal`方法是公共的。   \n      \n## 序列化中遇到的问题\n在序列化中，有一个重要的情况需要考虑：当一个对象被多个对象共享，作为它们各种状态的一部分时，会发生什么情况？ \n\n```java\npublic class Manager extends Employee {\n    private Employee secretary;\n\n    public static void main(String[] args) {\n        Employee tony = new Employee();\n        tony.setName(\"Tony\");\n        tony.setSalary(10000);\n        tony.setHireDay(new Date());\n\n        Manager harry = new Manager();\n        harry.setSalary(1000);\n        harry.setName(\"Harry\");\n        harry.setSecretary(tony);\n\n        Manager carl = new Manager();\n        carl.setName(\"Carl\");\n        carl.setSalary(10000);\n        carl.setSecretary(tony);\n\n        ByteArrayOutputStream byteArr = new ByteArrayOutputStream();\n        try (ObjectOutputStream out = new ObjectOutputStream(byteArr)) {\n            out.writeObject(harry);\n            out.writeObject(carl);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        try (ByteArrayInputStream input = new ByteArrayInputStream(byteArr.toByteArray());\n             ObjectInputStream objInput = new ObjectInputStream(input)) {\n            Manager harry1 = (Manager) objInput.readObject();\n            Manager carl1 = (Manager) objInput.readObject();\n            // out true\n            System.out.println(harry1.getSecretary() == carl1.getSecretary());\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n经过序列化后，两个对象依然共享同一对象。造成这种现象的原因是：每个对象都是用一个序列号（serial number，即前面提到的「指纹」）保存的，这也是这种机制之所以被称为对象序列化的原因。 下面是其算法：    \n\n* 对你遇到的每一个对象引用都关联一个序列号。    \n* 对于每个对象，当第一次遇到时，保存其对象数据到流中。    \n* 如果某个对象之前已经被保存过，那么只写出「与之前保存过的序列号为$x$的对象相同」。 在读回对象时，整个过程是反过来的。   \n* 当遇到「与之前保存过的序列号为$x$的对象相同」标记时，获取与这个顺序号相关联的对象引用。   \n\n> 因为保存原生的内存地址毫无意义，因此序列化用序列号代替了内存地址。   \n\n## 如何解决兼容问题\n如果使用序列化保存对象，就需要考虑版本问题，修改后的类能否读入旧文件？或者反之旧版本能否读入新版本产生的文件。      \n     \n这时候就体现到`serialVersionUID`字段的重要性来了。假设将SHA指纹作为序列化版本的唯一ID的话，无论类的定义产生了什么样的变化，它的SHA指纹也会跟着变化，而我们都知道对象流将拒绝读入具有不同指纹的对象。为了保持兼容性，我们必须使用`serialVersionUID`常量作为序列化版本的唯一ID。      \n\n如果这个类只有方法发生了变化，那么在读入新对象数据时是不会有任何问题的。但是，如果数据域产生了变化，那么就有可能会有问题，不过对象流将尽力将流对象转化成这个类的当前版本。   \n    \n对象流会将这个类当前版本的数据域与流中版本的数据域进行比较，当然，对象流只会考虑非静态和非`transient`的数据域。    \n\n* 如果名字匹配而类型不匹配，那么对象流不会尝试将一种类型转换成另一种类型，因为这两个对象不兼容。   \n* 如果流中对象具有在当前版本中所没有的数据域，那么对象流会忽略这些额外的数据。    \n* 如果当前版本具有在流中对象所没有的数据域，那么这些新添加的域将被设置成它们的默认值。   \n    \n这种丢弃数据域或者将数据域设置为`null`有可能会产生bug，建议设计者重写`readObject`方法来修订版本不兼容问题。   \n\n## 序列化应用时需要注意的问题\n### 序列化单例和类型安全的枚举 \n如果你使用Java语言的`enum`结构，那么不用担心序列化，它能够正常工作。但考虑以下风格的代码：    \n\n```java\npublic class Orientation {\n    public static final Orientation HORIZONTAL = new Orientation(1);\n    public static final Orientation VERTICAL = new Orientation(2);\n\n    private int value;\n\n    private Orientation(int value) {\n        this.value = value;\n    }\n}\n```\n    \n这种风格的代码在`enum`之前很常见，这个类的构造器是私有的，你不可能创建除`HORIZONTAL`和`VERTICAL`之外的对象，因此你可以使用`==`操作符来测试对象的等同性。      \n\n```java\nif (orientation == Orientation.HORIZONTAL) ...\n```\n   \n当我们序列化这样的类时，既是构造器是私有的，序列化机制也可以创建新的对象（序列化机制不通过构造器创建对象），因此上述代码就会产生bug。    \n   \n为了解决这个问题，我们需要定义另外一种称为`readResolve`的特殊序列化方法。该方法会在对象被序列化之后被调用。它必须返回一个对象，而该对象之后会成为`readObject`的返回值。因此我们可以这么做：    \n\n```java\n    private Object readResolve() throws ObjectStreamException {\n        if (value == 1) return HORIZONTAL;\n        if (value == 2) return VERTICAL;\n        return null;\n    }\n```\n    \n请记住向遗留代码中所有类型安全的枚举以及向所有支持单例设计模式的类中添加`readResolve`方法。 \n    \n### 使用序列化clone对象\n序列化机制有一种很有趣的用法，即提供了一种`clone`对象的简便途径，只需要将对象序列化到输出流中，并且将其读回。这种方式虽然方便，但性能比显式地构建新对象的方式慢的多。  \n\n## 父类的序列化问题\n一个子类实现了`Serializable`接口，而它的父类没有实现`Serializable`接口，那么序列化时父类所属的数据域并不会被序列化。__要想父类也序列化，就需要让父类也实现`Serializable`接口__。     \n     \n有一点非常重要，如果父类没有实现`Serializable`接口的话，就__需要有默认的无参的构造函数__。这是因为在父类没有实现`Serializable`接口时，虚拟机不会序列化父对象，而一个Java对象的构造必须先有父对象，才有子对象，反序列化也不列外。  \n\n## 安全问题\n序列化后的字节序列并没有加密，若被黑客窃取了这部分数据，很容易的解析出数据域里的内容。 一个解决方案就是重写`writeObject`方法，对敏感内容加密后写入对象流，然后在`readObject`中解密。   ","slug":"Java-Java-序列化","published":1,"updated":"2020-02-26T14:51:35.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdj000b1ovc4vm3a525","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇文章从以下几个方面，讲述Java序列化相关的内容： </p>\n<blockquote>\n<ul>\n<li>什么是序列化？</li>\n<li>如何实现序列化？</li>\n<li>修改默认的序列化机制</li>\n<li>多个对象共享一个引用时，序列化和反序列化会有什么结果？</li>\n<li>如何解决兼容问题？</li>\n<li>序列化应用时需要注意的问题</li>\n<li>父类的序列化问题</li>\n<li>安全问题</li>\n</ul>\n</blockquote>\n<h2 id=\"什么是序列化\"><a href=\"#什么是序列化\" class=\"headerlink\" title=\"什么是序列化\"></a>什么是序列化</h2><p><strong>序列化</strong>是指将对象表示为一个字节序列的过程，该字节序列包含对象所存储的数据、数据的类型以及对象的类型信息。 <strong>反序列化</strong>是将字节序列转化为对象的过程。<br>序列化是对对象的持久化，将对象序列化后可以存入文件中，也可以通过网络传递到远程服务器中。         </p>\n<h2 id=\"实现序列化\"><a href=\"#实现序列化\" class=\"headerlink\" title=\"实现序列化\"></a>实现序列化</h2><p>在实现序列化的过程中，需要用到三个类<code>ObjectInputStream</code>、<code>ObjectOutputStream</code>和<code>Serializable</code>。首先，让需要序列化的对象所属类实现<code>Serializable</code>接口，该接口不需要实现任何方法，是典型的标记接口。 然后使用<code>ObjectInputStream</code>、<code>ObjectOutputStream</code>进行读写。   </p>\n<script src=\"//gist.github.com/3d8ae4af25273ee8fec1c10c5c0002a2.js\"></script>\n\n<p>当存储一个对象时，这个对象所属的类也必须存储，这个类的描述包含 </p>\n<ul>\n<li>类名。</li>\n<li>序列化的版本唯一的ID，它是通过对类、超类、接口、域类型和方法签名按照规范方式排序，然后应用SHA算法获得，并且只取前8位。它相当于一个类的指纹，假如类中存在<code>serialVersionUID</code>字段，则用它作为类的指纹。     </li>\n<li>描述序列化方法的标志集。</li>\n<li>对数据域的描述。  </li>\n</ul>\n<p>静态变量和被<code>transient</code>修饰的变量将不会被序列化。除非超类也实现了<code>Serializable</code>接口，否则超类的数据域不会被序列化。   </p>\n<h2 id=\"修改默认的序列化机制\"><a href=\"#修改默认的序列化机制\" class=\"headerlink\" title=\"修改默认的序列化机制\"></a>修改默认的序列化机制</h2><p>Java提供了三种方式，用以修改默认的序列化机制。<br>考虑以下这种情况，某些数据域，例如只对本地方法有意义的存储文件句柄，这种信息在重新加载或传送到其他机器上时都是没有用处的，甚至会引起程序崩溃。因此为了防止这种情况，使用<code>transient</code>修饰符，被该修饰符修饰后的数据域将被序列化机制跳过。       </p>\n<p>另外一种情况是，类中的某些数据域没有实现<code>Serializable</code>接口，却又要将其序列化，这时就需要先将其标记为<code>transient</code>避免抛出<code>NotSerializableException</code>，然后通过重写<code>readObject</code>和<code>writeObject</code>方法，自定义序列化。这种两个方法是私有的，并且只能被序列化机制调用。   </p>\n<p>下面是一个典型示例，在<code>java.awt.geom</code>包中有大量的类都是不可序列化的，例如<code>Point2D.Double</code>，现在要序列化一个包含该类型字段的类，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LabeledPoint</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String label;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">transient</span> Point2D.Double point;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">readObject</span><span class=\"params\">(ObjectInputStream in)</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException</span>&#123;</span><br><span class=\"line\">        in.defaultReadObject();</span><br><span class=\"line\">       \t<span class=\"keyword\">double</span> x = in.readDouble();</span><br><span class=\"line\">       \t<span class=\"keyword\">double</span> y = in.readDouble();</span><br><span class=\"line\">       \tpoint = <span class=\"keyword\">new</span> Point2D.Double(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeObject</span><span class=\"params\">(ObjectOutputStream out)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        out.defaultWriteObject();</span><br><span class=\"line\">        out.writeDouble(point.getX());</span><br><span class=\"line\">        out.writeDouble(point.getY());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>defaultWriteObject</code>和<code>defaultReadObject</code>是特殊的方法，只能在序列化类的<code>writeObject</code>和<code>readObject</code>方法中被调用。<code>defaultWriteObject</code>表示使用默认的序列化机制，<code>defaultReadObject</code>反之。这两个方法也可以不调用，这样就跟下面讲的<code>Externalizable</code>接口差不多。      </p>\n<p>除了重写<code>readObject</code>和<code>writeObject</code>方法修改默认的序列化机制外，还可使用<code>Externalizable</code>接口，自定义序列化机制。     </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Director</span> <span class=\"keyword\">implements</span> <span class=\"title\">Externalizable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String bonus;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeExternal</span><span class=\"params\">(ObjectOutput out)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        out.writeUTF(title);</span><br><span class=\"line\">        out.writeUTF(bonus);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readExternal</span><span class=\"params\">(ObjectInput in)</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class=\"line\">        title = in.readUTF();</span><br><span class=\"line\">        bonus = in.readUTF();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Externalizable和Serializable的不同\"><a href=\"#Externalizable和Serializable的不同\" class=\"headerlink\" title=\"Externalizable和Serializable的不同\"></a><code>Externalizable</code>和<code>Serializable</code>的不同</h3><p><code>Externalizable</code>和<code>Serializable</code>最大的不同就是，<code>Externalizable</code>会调用类的无参构造函数来创建对象，<code>Serializable</code>则不然。  另外就是<code>readObject</code>和<code>writeObject</code>只能被序列化机制调用，而<code>readExternal</code>和<code>writeExternal</code>方法是公共的。   </p>\n<h2 id=\"序列化中遇到的问题\"><a href=\"#序列化中遇到的问题\" class=\"headerlink\" title=\"序列化中遇到的问题\"></a>序列化中遇到的问题</h2><p>在序列化中，有一个重要的情况需要考虑：当一个对象被多个对象共享，作为它们各种状态的一部分时，会发生什么情况？ </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Manager</span> <span class=\"keyword\">extends</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Employee secretary;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Employee tony = <span class=\"keyword\">new</span> Employee();</span><br><span class=\"line\">        tony.setName(<span class=\"string\">\"Tony\"</span>);</span><br><span class=\"line\">        tony.setSalary(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        tony.setHireDay(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\"></span><br><span class=\"line\">        Manager harry = <span class=\"keyword\">new</span> Manager();</span><br><span class=\"line\">        harry.setSalary(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        harry.setName(<span class=\"string\">\"Harry\"</span>);</span><br><span class=\"line\">        harry.setSecretary(tony);</span><br><span class=\"line\"></span><br><span class=\"line\">        Manager carl = <span class=\"keyword\">new</span> Manager();</span><br><span class=\"line\">        carl.setName(<span class=\"string\">\"Carl\"</span>);</span><br><span class=\"line\">        carl.setSalary(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        carl.setSecretary(tony);</span><br><span class=\"line\"></span><br><span class=\"line\">        ByteArrayOutputStream byteArr = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ObjectOutputStream out = <span class=\"keyword\">new</span> ObjectOutputStream(byteArr)) &#123;</span><br><span class=\"line\">            out.writeObject(harry);</span><br><span class=\"line\">            out.writeObject(carl);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ByteArrayInputStream input = <span class=\"keyword\">new</span> ByteArrayInputStream(byteArr.toByteArray());</span><br><span class=\"line\">             ObjectInputStream objInput = <span class=\"keyword\">new</span> ObjectInputStream(input)) &#123;</span><br><span class=\"line\">            Manager harry1 = (Manager) objInput.readObject();</span><br><span class=\"line\">            Manager carl1 = (Manager) objInput.readObject();</span><br><span class=\"line\">            <span class=\"comment\">// out true</span></span><br><span class=\"line\">            System.out.println(harry1.getSecretary() == carl1.getSecretary());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>经过序列化后，两个对象依然共享同一对象。造成这种现象的原因是：每个对象都是用一个序列号（serial number，即前面提到的「指纹」）保存的，这也是这种机制之所以被称为对象序列化的原因。 下面是其算法：    </p>\n<ul>\n<li>对你遇到的每一个对象引用都关联一个序列号。    </li>\n<li>对于每个对象，当第一次遇到时，保存其对象数据到流中。    </li>\n<li>如果某个对象之前已经被保存过，那么只写出「与之前保存过的序列号为$x$的对象相同」。 在读回对象时，整个过程是反过来的。   </li>\n<li>当遇到「与之前保存过的序列号为$x$的对象相同」标记时，获取与这个顺序号相关联的对象引用。   </li>\n</ul>\n<blockquote>\n<p>因为保存原生的内存地址毫无意义，因此序列化用序列号代替了内存地址。   </p>\n</blockquote>\n<h2 id=\"如何解决兼容问题\"><a href=\"#如何解决兼容问题\" class=\"headerlink\" title=\"如何解决兼容问题\"></a>如何解决兼容问题</h2><p>如果使用序列化保存对象，就需要考虑版本问题，修改后的类能否读入旧文件？或者反之旧版本能否读入新版本产生的文件。      </p>\n<p>这时候就体现到<code>serialVersionUID</code>字段的重要性来了。假设将SHA指纹作为序列化版本的唯一ID的话，无论类的定义产生了什么样的变化，它的SHA指纹也会跟着变化，而我们都知道对象流将拒绝读入具有不同指纹的对象。为了保持兼容性，我们必须使用<code>serialVersionUID</code>常量作为序列化版本的唯一ID。      </p>\n<p>如果这个类只有方法发生了变化，那么在读入新对象数据时是不会有任何问题的。但是，如果数据域产生了变化，那么就有可能会有问题，不过对象流将尽力将流对象转化成这个类的当前版本。   </p>\n<p>对象流会将这个类当前版本的数据域与流中版本的数据域进行比较，当然，对象流只会考虑非静态和非<code>transient</code>的数据域。    </p>\n<ul>\n<li>如果名字匹配而类型不匹配，那么对象流不会尝试将一种类型转换成另一种类型，因为这两个对象不兼容。   </li>\n<li>如果流中对象具有在当前版本中所没有的数据域，那么对象流会忽略这些额外的数据。    </li>\n<li>如果当前版本具有在流中对象所没有的数据域，那么这些新添加的域将被设置成它们的默认值。   </li>\n</ul>\n<p>这种丢弃数据域或者将数据域设置为<code>null</code>有可能会产生bug，建议设计者重写<code>readObject</code>方法来修订版本不兼容问题。   </p>\n<h2 id=\"序列化应用时需要注意的问题\"><a href=\"#序列化应用时需要注意的问题\" class=\"headerlink\" title=\"序列化应用时需要注意的问题\"></a>序列化应用时需要注意的问题</h2><h3 id=\"序列化单例和类型安全的枚举\"><a href=\"#序列化单例和类型安全的枚举\" class=\"headerlink\" title=\"序列化单例和类型安全的枚举\"></a>序列化单例和类型安全的枚举</h3><p>如果你使用Java语言的<code>enum</code>结构，那么不用担心序列化，它能够正常工作。但考虑以下风格的代码：    </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Orientation</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Orientation HORIZONTAL = <span class=\"keyword\">new</span> Orientation(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Orientation VERTICAL = <span class=\"keyword\">new</span> Orientation(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Orientation</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这种风格的代码在<code>enum</code>之前很常见，这个类的构造器是私有的，你不可能创建除<code>HORIZONTAL</code>和<code>VERTICAL</code>之外的对象，因此你可以使用<code>==</code>操作符来测试对象的等同性。      </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (orientation == Orientation.HORIZONTAL) ...</span><br></pre></td></tr></table></figure>\n\n<p>当我们序列化这样的类时，既是构造器是私有的，序列化机制也可以创建新的对象（序列化机制不通过构造器创建对象），因此上述代码就会产生bug。    </p>\n<p>为了解决这个问题，我们需要定义另外一种称为<code>readResolve</code>的特殊序列化方法。该方法会在对象被序列化之后被调用。它必须返回一个对象，而该对象之后会成为<code>readObject</code>的返回值。因此我们可以这么做：    </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Object <span class=\"title\">readResolve</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ObjectStreamException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> HORIZONTAL;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> VERTICAL;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请记住向遗留代码中所有类型安全的枚举以及向所有支持单例设计模式的类中添加<code>readResolve</code>方法。 </p>\n<h3 id=\"使用序列化clone对象\"><a href=\"#使用序列化clone对象\" class=\"headerlink\" title=\"使用序列化clone对象\"></a>使用序列化clone对象</h3><p>序列化机制有一种很有趣的用法，即提供了一种<code>clone</code>对象的简便途径，只需要将对象序列化到输出流中，并且将其读回。这种方式虽然方便，但性能比显式地构建新对象的方式慢的多。  </p>\n<h2 id=\"父类的序列化问题\"><a href=\"#父类的序列化问题\" class=\"headerlink\" title=\"父类的序列化问题\"></a>父类的序列化问题</h2><p>一个子类实现了<code>Serializable</code>接口，而它的父类没有实现<code>Serializable</code>接口，那么序列化时父类所属的数据域并不会被序列化。<strong>要想父类也序列化，就需要让父类也实现<code>Serializable</code>接口</strong>。     </p>\n<p>有一点非常重要，如果父类没有实现<code>Serializable</code>接口的话，就<strong>需要有默认的无参的构造函数</strong>。这是因为在父类没有实现<code>Serializable</code>接口时，虚拟机不会序列化父对象，而一个Java对象的构造必须先有父对象，才有子对象，反序列化也不列外。  </p>\n<h2 id=\"安全问题\"><a href=\"#安全问题\" class=\"headerlink\" title=\"安全问题\"></a>安全问题</h2><p>序列化后的字节序列并没有加密，若被黑客窃取了这部分数据，很容易的解析出数据域里的内容。 一个解决方案就是重写<code>writeObject</code>方法，对敏感内容加密后写入对象流，然后在<code>readObject</code>中解密。   </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇文章从以下几个方面，讲述Java序列化相关的内容： </p>\n<blockquote>\n<ul>\n<li>什么是序列化？</li>\n<li>如何实现序列化？</li>\n<li>修改默认的序列化机制</li>\n<li>多个对象共享一个引用时，序列化和反序列化会有什么结果？</li>\n<li>如何解决兼容问题？</li>\n<li>序列化应用时需要注意的问题</li>\n<li>父类的序列化问题</li>\n<li>安全问题</li>\n</ul>\n</blockquote>\n<h2 id=\"什么是序列化\"><a href=\"#什么是序列化\" class=\"headerlink\" title=\"什么是序列化\"></a>什么是序列化</h2><p><strong>序列化</strong>是指将对象表示为一个字节序列的过程，该字节序列包含对象所存储的数据、数据的类型以及对象的类型信息。 <strong>反序列化</strong>是将字节序列转化为对象的过程。<br>序列化是对对象的持久化，将对象序列化后可以存入文件中，也可以通过网络传递到远程服务器中。         </p>\n<h2 id=\"实现序列化\"><a href=\"#实现序列化\" class=\"headerlink\" title=\"实现序列化\"></a>实现序列化</h2><p>在实现序列化的过程中，需要用到三个类<code>ObjectInputStream</code>、<code>ObjectOutputStream</code>和<code>Serializable</code>。首先，让需要序列化的对象所属类实现<code>Serializable</code>接口，该接口不需要实现任何方法，是典型的标记接口。 然后使用<code>ObjectInputStream</code>、<code>ObjectOutputStream</code>进行读写。   </p>\n<script src=\"//gist.github.com/3d8ae4af25273ee8fec1c10c5c0002a2.js\"></script>\n\n<p>当存储一个对象时，这个对象所属的类也必须存储，这个类的描述包含 </p>\n<ul>\n<li>类名。</li>\n<li>序列化的版本唯一的ID，它是通过对类、超类、接口、域类型和方法签名按照规范方式排序，然后应用SHA算法获得，并且只取前8位。它相当于一个类的指纹，假如类中存在<code>serialVersionUID</code>字段，则用它作为类的指纹。     </li>\n<li>描述序列化方法的标志集。</li>\n<li>对数据域的描述。  </li>\n</ul>\n<p>静态变量和被<code>transient</code>修饰的变量将不会被序列化。除非超类也实现了<code>Serializable</code>接口，否则超类的数据域不会被序列化。   </p>\n<h2 id=\"修改默认的序列化机制\"><a href=\"#修改默认的序列化机制\" class=\"headerlink\" title=\"修改默认的序列化机制\"></a>修改默认的序列化机制</h2><p>Java提供了三种方式，用以修改默认的序列化机制。<br>考虑以下这种情况，某些数据域，例如只对本地方法有意义的存储文件句柄，这种信息在重新加载或传送到其他机器上时都是没有用处的，甚至会引起程序崩溃。因此为了防止这种情况，使用<code>transient</code>修饰符，被该修饰符修饰后的数据域将被序列化机制跳过。       </p>\n<p>另外一种情况是，类中的某些数据域没有实现<code>Serializable</code>接口，却又要将其序列化，这时就需要先将其标记为<code>transient</code>避免抛出<code>NotSerializableException</code>，然后通过重写<code>readObject</code>和<code>writeObject</code>方法，自定义序列化。这种两个方法是私有的，并且只能被序列化机制调用。   </p>\n<p>下面是一个典型示例，在<code>java.awt.geom</code>包中有大量的类都是不可序列化的，例如<code>Point2D.Double</code>，现在要序列化一个包含该类型字段的类，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LabeledPoint</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String label;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">transient</span> Point2D.Double point;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">readObject</span><span class=\"params\">(ObjectInputStream in)</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException</span>&#123;</span><br><span class=\"line\">        in.defaultReadObject();</span><br><span class=\"line\">       \t<span class=\"keyword\">double</span> x = in.readDouble();</span><br><span class=\"line\">       \t<span class=\"keyword\">double</span> y = in.readDouble();</span><br><span class=\"line\">       \tpoint = <span class=\"keyword\">new</span> Point2D.Double(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeObject</span><span class=\"params\">(ObjectOutputStream out)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        out.defaultWriteObject();</span><br><span class=\"line\">        out.writeDouble(point.getX());</span><br><span class=\"line\">        out.writeDouble(point.getY());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>defaultWriteObject</code>和<code>defaultReadObject</code>是特殊的方法，只能在序列化类的<code>writeObject</code>和<code>readObject</code>方法中被调用。<code>defaultWriteObject</code>表示使用默认的序列化机制，<code>defaultReadObject</code>反之。这两个方法也可以不调用，这样就跟下面讲的<code>Externalizable</code>接口差不多。      </p>\n<p>除了重写<code>readObject</code>和<code>writeObject</code>方法修改默认的序列化机制外，还可使用<code>Externalizable</code>接口，自定义序列化机制。     </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Director</span> <span class=\"keyword\">implements</span> <span class=\"title\">Externalizable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String bonus;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeExternal</span><span class=\"params\">(ObjectOutput out)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        out.writeUTF(title);</span><br><span class=\"line\">        out.writeUTF(bonus);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readExternal</span><span class=\"params\">(ObjectInput in)</span> <span class=\"keyword\">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class=\"line\">        title = in.readUTF();</span><br><span class=\"line\">        bonus = in.readUTF();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Externalizable和Serializable的不同\"><a href=\"#Externalizable和Serializable的不同\" class=\"headerlink\" title=\"Externalizable和Serializable的不同\"></a><code>Externalizable</code>和<code>Serializable</code>的不同</h3><p><code>Externalizable</code>和<code>Serializable</code>最大的不同就是，<code>Externalizable</code>会调用类的无参构造函数来创建对象，<code>Serializable</code>则不然。  另外就是<code>readObject</code>和<code>writeObject</code>只能被序列化机制调用，而<code>readExternal</code>和<code>writeExternal</code>方法是公共的。   </p>\n<h2 id=\"序列化中遇到的问题\"><a href=\"#序列化中遇到的问题\" class=\"headerlink\" title=\"序列化中遇到的问题\"></a>序列化中遇到的问题</h2><p>在序列化中，有一个重要的情况需要考虑：当一个对象被多个对象共享，作为它们各种状态的一部分时，会发生什么情况？ </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Manager</span> <span class=\"keyword\">extends</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Employee secretary;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Employee tony = <span class=\"keyword\">new</span> Employee();</span><br><span class=\"line\">        tony.setName(<span class=\"string\">\"Tony\"</span>);</span><br><span class=\"line\">        tony.setSalary(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        tony.setHireDay(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\"></span><br><span class=\"line\">        Manager harry = <span class=\"keyword\">new</span> Manager();</span><br><span class=\"line\">        harry.setSalary(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        harry.setName(<span class=\"string\">\"Harry\"</span>);</span><br><span class=\"line\">        harry.setSecretary(tony);</span><br><span class=\"line\"></span><br><span class=\"line\">        Manager carl = <span class=\"keyword\">new</span> Manager();</span><br><span class=\"line\">        carl.setName(<span class=\"string\">\"Carl\"</span>);</span><br><span class=\"line\">        carl.setSalary(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        carl.setSecretary(tony);</span><br><span class=\"line\"></span><br><span class=\"line\">        ByteArrayOutputStream byteArr = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ObjectOutputStream out = <span class=\"keyword\">new</span> ObjectOutputStream(byteArr)) &#123;</span><br><span class=\"line\">            out.writeObject(harry);</span><br><span class=\"line\">            out.writeObject(carl);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ByteArrayInputStream input = <span class=\"keyword\">new</span> ByteArrayInputStream(byteArr.toByteArray());</span><br><span class=\"line\">             ObjectInputStream objInput = <span class=\"keyword\">new</span> ObjectInputStream(input)) &#123;</span><br><span class=\"line\">            Manager harry1 = (Manager) objInput.readObject();</span><br><span class=\"line\">            Manager carl1 = (Manager) objInput.readObject();</span><br><span class=\"line\">            <span class=\"comment\">// out true</span></span><br><span class=\"line\">            System.out.println(harry1.getSecretary() == carl1.getSecretary());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>经过序列化后，两个对象依然共享同一对象。造成这种现象的原因是：每个对象都是用一个序列号（serial number，即前面提到的「指纹」）保存的，这也是这种机制之所以被称为对象序列化的原因。 下面是其算法：    </p>\n<ul>\n<li>对你遇到的每一个对象引用都关联一个序列号。    </li>\n<li>对于每个对象，当第一次遇到时，保存其对象数据到流中。    </li>\n<li>如果某个对象之前已经被保存过，那么只写出「与之前保存过的序列号为$x$的对象相同」。 在读回对象时，整个过程是反过来的。   </li>\n<li>当遇到「与之前保存过的序列号为$x$的对象相同」标记时，获取与这个顺序号相关联的对象引用。   </li>\n</ul>\n<blockquote>\n<p>因为保存原生的内存地址毫无意义，因此序列化用序列号代替了内存地址。   </p>\n</blockquote>\n<h2 id=\"如何解决兼容问题\"><a href=\"#如何解决兼容问题\" class=\"headerlink\" title=\"如何解决兼容问题\"></a>如何解决兼容问题</h2><p>如果使用序列化保存对象，就需要考虑版本问题，修改后的类能否读入旧文件？或者反之旧版本能否读入新版本产生的文件。      </p>\n<p>这时候就体现到<code>serialVersionUID</code>字段的重要性来了。假设将SHA指纹作为序列化版本的唯一ID的话，无论类的定义产生了什么样的变化，它的SHA指纹也会跟着变化，而我们都知道对象流将拒绝读入具有不同指纹的对象。为了保持兼容性，我们必须使用<code>serialVersionUID</code>常量作为序列化版本的唯一ID。      </p>\n<p>如果这个类只有方法发生了变化，那么在读入新对象数据时是不会有任何问题的。但是，如果数据域产生了变化，那么就有可能会有问题，不过对象流将尽力将流对象转化成这个类的当前版本。   </p>\n<p>对象流会将这个类当前版本的数据域与流中版本的数据域进行比较，当然，对象流只会考虑非静态和非<code>transient</code>的数据域。    </p>\n<ul>\n<li>如果名字匹配而类型不匹配，那么对象流不会尝试将一种类型转换成另一种类型，因为这两个对象不兼容。   </li>\n<li>如果流中对象具有在当前版本中所没有的数据域，那么对象流会忽略这些额外的数据。    </li>\n<li>如果当前版本具有在流中对象所没有的数据域，那么这些新添加的域将被设置成它们的默认值。   </li>\n</ul>\n<p>这种丢弃数据域或者将数据域设置为<code>null</code>有可能会产生bug，建议设计者重写<code>readObject</code>方法来修订版本不兼容问题。   </p>\n<h2 id=\"序列化应用时需要注意的问题\"><a href=\"#序列化应用时需要注意的问题\" class=\"headerlink\" title=\"序列化应用时需要注意的问题\"></a>序列化应用时需要注意的问题</h2><h3 id=\"序列化单例和类型安全的枚举\"><a href=\"#序列化单例和类型安全的枚举\" class=\"headerlink\" title=\"序列化单例和类型安全的枚举\"></a>序列化单例和类型安全的枚举</h3><p>如果你使用Java语言的<code>enum</code>结构，那么不用担心序列化，它能够正常工作。但考虑以下风格的代码：    </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Orientation</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Orientation HORIZONTAL = <span class=\"keyword\">new</span> Orientation(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Orientation VERTICAL = <span class=\"keyword\">new</span> Orientation(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Orientation</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这种风格的代码在<code>enum</code>之前很常见，这个类的构造器是私有的，你不可能创建除<code>HORIZONTAL</code>和<code>VERTICAL</code>之外的对象，因此你可以使用<code>==</code>操作符来测试对象的等同性。      </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (orientation == Orientation.HORIZONTAL) ...</span><br></pre></td></tr></table></figure>\n\n<p>当我们序列化这样的类时，既是构造器是私有的，序列化机制也可以创建新的对象（序列化机制不通过构造器创建对象），因此上述代码就会产生bug。    </p>\n<p>为了解决这个问题，我们需要定义另外一种称为<code>readResolve</code>的特殊序列化方法。该方法会在对象被序列化之后被调用。它必须返回一个对象，而该对象之后会成为<code>readObject</code>的返回值。因此我们可以这么做：    </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Object <span class=\"title\">readResolve</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ObjectStreamException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> HORIZONTAL;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> VERTICAL;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请记住向遗留代码中所有类型安全的枚举以及向所有支持单例设计模式的类中添加<code>readResolve</code>方法。 </p>\n<h3 id=\"使用序列化clone对象\"><a href=\"#使用序列化clone对象\" class=\"headerlink\" title=\"使用序列化clone对象\"></a>使用序列化clone对象</h3><p>序列化机制有一种很有趣的用法，即提供了一种<code>clone</code>对象的简便途径，只需要将对象序列化到输出流中，并且将其读回。这种方式虽然方便，但性能比显式地构建新对象的方式慢的多。  </p>\n<h2 id=\"父类的序列化问题\"><a href=\"#父类的序列化问题\" class=\"headerlink\" title=\"父类的序列化问题\"></a>父类的序列化问题</h2><p>一个子类实现了<code>Serializable</code>接口，而它的父类没有实现<code>Serializable</code>接口，那么序列化时父类所属的数据域并不会被序列化。<strong>要想父类也序列化，就需要让父类也实现<code>Serializable</code>接口</strong>。     </p>\n<p>有一点非常重要，如果父类没有实现<code>Serializable</code>接口的话，就<strong>需要有默认的无参的构造函数</strong>。这是因为在父类没有实现<code>Serializable</code>接口时，虚拟机不会序列化父对象，而一个Java对象的构造必须先有父对象，才有子对象，反序列化也不列外。  </p>\n<h2 id=\"安全问题\"><a href=\"#安全问题\" class=\"headerlink\" title=\"安全问题\"></a>安全问题</h2><p>序列化后的字节序列并没有加密，若被黑客窃取了这部分数据，很容易的解析出数据域里的内容。 一个解决方案就是重写<code>writeObject</code>方法，对敏感内容加密后写入对象流，然后在<code>readObject</code>中解密。   </p>\n"},{"title":"Java I/O类概述","date":"2016-05-29T04:08:34.000Z","_content":"## I/O\n&ensp;&ensp; I/O是input和output的简写，Java API中，可以读入字节或字符序列的对象称为输入流，可以写入字节或字符序列的对象称为输出流。其来源地和目的地可以是文件，也可以是socket、http、数组甚至是两个线程之间。   \n\n&ensp;&ensp; I/O包下有几十个类文件，大概分为以下几种：   \n\n* 由`InputStream`、`OutputStream`、`Reader`、`Writer`为代表的I/O类 \n* 与文件系统相关的泪，例如`File`、`FileFilter`、`RandomAccessFile`等\n* 序列化相关的类 \n* 其他，例如工具类、异常类\n\n## 流家族\n\n从`InputStream`和`OutputStream`中继承的类是用来处理字节流。从`Reader`和`Writer`继承的类是用来处理Unicode字符，这些类的读写操作都是基于Unicode码元的。通过`InputStreamReader`和`OutputStreamWriter`可以将字节流转为字符流。     \n      \n流家族体系      \n![Java_IO_01.png](../images/Java_IO_01.png)     \n上图中，红色的类表示已被弃用。    \n\n### 字节流\n#### InputStream\n`InputStream`有几个常用的方法 ：  \n* mark : `mark`方法用于标记当前读取的位置，与`reset`方法配合使用。   \n* reset : 返回`mark`标记的位置，重新从该位置读取字节\n* markSupported : 是否支持mark/reset \n* available : 剩余未读取的字节数\n* skip : 跳过并丢弃指定的字节数\n* read : 读取字节\n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|ByteArrayInputStream | 支持|支持|输入源，将`byte[]`作为输入源的类|\n|FileInputStream | 支持|支持|输入源，将文件作为输入源的类|\n|PipedInputStream| 不支持|支持|输入源，用于进程间通信，与`PipedOutputStream`配合使用|\n|SequenceInputStream|不支持|支持|将多个输入源合并成一个输入源，`available`方法只返回当前输入源的`available`|\n\n#### FilterInputStream\n继承自`FilterInputStream`子类是装饰器类，它们不能自己产生字节序列，需要配合输入源才能使用，它们的主要作用是增加输入流的功能。在别的编程语言里，诸如缓冲机制和预览等细节都是自动处理的，相对而言，Java就比较麻烦，必须配合装饰器类才能实现。但是这种方式带来极大的灵活性。   \n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|BufferedInputStream | 支持|支持|给输入流增加缓冲机制|\n|PushbackInputStream | 不支持|支持|给输入流增加推回功能，即将读取的字节推回到缓冲区|\n|DataInputStream| 不支持|支持|允许应用程序以与机器无关方式从底层输入流中读取基本Java 数据类型，一般与`DataOutputStream`配合使用，另外`DataInputStream`读取时采用的Java版的UTF-8编码，与标准UTF-8不同。所以`DataInputStream`读取的字节流必须时通过`DataOutputStream`写入的，不然会出问题|\n\n#### OutputStream\n`OutputStream`有几种常用的方法： \n\n|类| 说明|\n|:--|:----|\n|ByteArrayOutputStream |将输出流转化为`byte[]`|\n|FileOutputStream | 文件输出流|\n|PipedOutputStream |管道输出流，与`PipedOutputStream`配合使用|\n\n#### FilterOutputStream\n类似于`FilterInputStream`，`FilterOutputStream`也是装饰器类的基类。    \n\n|类| 说明|\n|:--|:----|\n|BufferedOutputStream |给输出流增加缓冲机制|\n|PrintStream |打印输出流<br>可直接输出至文件(里面封装了`FileOutputStream`)<br>自动刷新功能，遇到`\\n`或者写入一个`byte`数组之后自动调用`flush`方法<br>可方便打印各种数据值表示形式<br>与其他输出流不同，它产生的`IOException`异常会被自身函数捕获，可以通过`checkError`检查是否发生过异常<br>通过`format`方法，支持格式化输出<br>打印的字符使用平台默认字符编码转换为字节，也可以指定编码类型<br>`null`值会被转为`null`字符，布尔类型会被转为`true`和`false`字符|\n|DataOutputStream|允许应用程序以与机器无关方式写入基本Java数据类型，配合`DataInputStream`使用。|\n\n#### ObjectOutput 和ObjectInput\n`ObjectInputStream`和`ObjectOutputStream`用于对象的序列化，可以将任何Java类型包括对象，序列化成字节序列。    \n\n### 字符流\n#### Reader\n`Reader`用于读取字符流的抽象类，使用字符流读取文件，比字节流更高效。可通过`InputStreamReader`将字节流转换为字符流。   \n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|CharArrayReader |支持|支持|输入源，将`char[]`作为输入源的类|\n|StringReader |支持|支持|输入源，将`String`作为输入源的类|\n|PipedReader|不支持|支持| 类似`PipedInputStream`|\n|FileReader| 不支持|支持| 类似`FileInputStream`，实际上就是在`FileInputStream`外面套了`InputStreamReader`类|\n|InputStreamReader|不支持|支持|将字节流转为字符流，可以指定字符编码|\n|BufferedReader |支持|支持|类似于`BufferedInputStream`，带有缓冲机制的字符流，需要提供输入源|\n|PushbackReader|不支持|支持|类似`PushbackInputStream`|\n\n#### Writer\n\n|类| 说明|\n|:--|:----|\n|CharArrayWriter |将输出流转为`char[]`。`null`值被转为`null`字符串|\n|StringWriter | 将输出流转为`String`。`null`值被转为`null`字符串|\n|PipedWriter| 类似`PipedOutputStream`|\n|PrintWriter| 类似`PrintStream`|\n|OutStreamWriter|将字节流转为字符流，可以指定字符编码|\n|BufferedWriter |类似于`BufferedOutputStream`，带有缓冲机制的字符流，需要提供输入源|","source":"_posts/Java-Java-IO-概述.md","raw":"---\ntitle: Java I/O类概述\ndate: 2016-05-29 12:08:34\ntags: [Java,IO]\ncategories: [Java]\n---\n## I/O\n&ensp;&ensp; I/O是input和output的简写，Java API中，可以读入字节或字符序列的对象称为输入流，可以写入字节或字符序列的对象称为输出流。其来源地和目的地可以是文件，也可以是socket、http、数组甚至是两个线程之间。   \n\n&ensp;&ensp; I/O包下有几十个类文件，大概分为以下几种：   \n\n* 由`InputStream`、`OutputStream`、`Reader`、`Writer`为代表的I/O类 \n* 与文件系统相关的泪，例如`File`、`FileFilter`、`RandomAccessFile`等\n* 序列化相关的类 \n* 其他，例如工具类、异常类\n\n## 流家族\n\n从`InputStream`和`OutputStream`中继承的类是用来处理字节流。从`Reader`和`Writer`继承的类是用来处理Unicode字符，这些类的读写操作都是基于Unicode码元的。通过`InputStreamReader`和`OutputStreamWriter`可以将字节流转为字符流。     \n      \n流家族体系      \n![Java_IO_01.png](../images/Java_IO_01.png)     \n上图中，红色的类表示已被弃用。    \n\n### 字节流\n#### InputStream\n`InputStream`有几个常用的方法 ：  \n* mark : `mark`方法用于标记当前读取的位置，与`reset`方法配合使用。   \n* reset : 返回`mark`标记的位置，重新从该位置读取字节\n* markSupported : 是否支持mark/reset \n* available : 剩余未读取的字节数\n* skip : 跳过并丢弃指定的字节数\n* read : 读取字节\n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|ByteArrayInputStream | 支持|支持|输入源，将`byte[]`作为输入源的类|\n|FileInputStream | 支持|支持|输入源，将文件作为输入源的类|\n|PipedInputStream| 不支持|支持|输入源，用于进程间通信，与`PipedOutputStream`配合使用|\n|SequenceInputStream|不支持|支持|将多个输入源合并成一个输入源，`available`方法只返回当前输入源的`available`|\n\n#### FilterInputStream\n继承自`FilterInputStream`子类是装饰器类，它们不能自己产生字节序列，需要配合输入源才能使用，它们的主要作用是增加输入流的功能。在别的编程语言里，诸如缓冲机制和预览等细节都是自动处理的，相对而言，Java就比较麻烦，必须配合装饰器类才能实现。但是这种方式带来极大的灵活性。   \n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|BufferedInputStream | 支持|支持|给输入流增加缓冲机制|\n|PushbackInputStream | 不支持|支持|给输入流增加推回功能，即将读取的字节推回到缓冲区|\n|DataInputStream| 不支持|支持|允许应用程序以与机器无关方式从底层输入流中读取基本Java 数据类型，一般与`DataOutputStream`配合使用，另外`DataInputStream`读取时采用的Java版的UTF-8编码，与标准UTF-8不同。所以`DataInputStream`读取的字节流必须时通过`DataOutputStream`写入的，不然会出问题|\n\n#### OutputStream\n`OutputStream`有几种常用的方法： \n\n|类| 说明|\n|:--|:----|\n|ByteArrayOutputStream |将输出流转化为`byte[]`|\n|FileOutputStream | 文件输出流|\n|PipedOutputStream |管道输出流，与`PipedOutputStream`配合使用|\n\n#### FilterOutputStream\n类似于`FilterInputStream`，`FilterOutputStream`也是装饰器类的基类。    \n\n|类| 说明|\n|:--|:----|\n|BufferedOutputStream |给输出流增加缓冲机制|\n|PrintStream |打印输出流<br>可直接输出至文件(里面封装了`FileOutputStream`)<br>自动刷新功能，遇到`\\n`或者写入一个`byte`数组之后自动调用`flush`方法<br>可方便打印各种数据值表示形式<br>与其他输出流不同，它产生的`IOException`异常会被自身函数捕获，可以通过`checkError`检查是否发生过异常<br>通过`format`方法，支持格式化输出<br>打印的字符使用平台默认字符编码转换为字节，也可以指定编码类型<br>`null`值会被转为`null`字符，布尔类型会被转为`true`和`false`字符|\n|DataOutputStream|允许应用程序以与机器无关方式写入基本Java数据类型，配合`DataInputStream`使用。|\n\n#### ObjectOutput 和ObjectInput\n`ObjectInputStream`和`ObjectOutputStream`用于对象的序列化，可以将任何Java类型包括对象，序列化成字节序列。    \n\n### 字符流\n#### Reader\n`Reader`用于读取字符流的抽象类，使用字符流读取文件，比字节流更高效。可通过`InputStreamReader`将字节流转换为字符流。   \n\n|类|markSupported | skip| 说明|\n|:--|:-----|:------|:----|\n|CharArrayReader |支持|支持|输入源，将`char[]`作为输入源的类|\n|StringReader |支持|支持|输入源，将`String`作为输入源的类|\n|PipedReader|不支持|支持| 类似`PipedInputStream`|\n|FileReader| 不支持|支持| 类似`FileInputStream`，实际上就是在`FileInputStream`外面套了`InputStreamReader`类|\n|InputStreamReader|不支持|支持|将字节流转为字符流，可以指定字符编码|\n|BufferedReader |支持|支持|类似于`BufferedInputStream`，带有缓冲机制的字符流，需要提供输入源|\n|PushbackReader|不支持|支持|类似`PushbackInputStream`|\n\n#### Writer\n\n|类| 说明|\n|:--|:----|\n|CharArrayWriter |将输出流转为`char[]`。`null`值被转为`null`字符串|\n|StringWriter | 将输出流转为`String`。`null`值被转为`null`字符串|\n|PipedWriter| 类似`PipedOutputStream`|\n|PrintWriter| 类似`PrintStream`|\n|OutStreamWriter|将字节流转为字符流，可以指定字符编码|\n|BufferedWriter |类似于`BufferedOutputStream`，带有缓冲机制的字符流，需要提供输入源|","slug":"Java-Java-IO-概述","published":1,"updated":"2020-02-26T14:51:35.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdj000c1ovc4y514ibm","content":"<h2 id=\"I-O\"><a href=\"#I-O\" class=\"headerlink\" title=\"I/O\"></a>I/O</h2><p>&ensp;&ensp; I/O是input和output的简写，Java API中，可以读入字节或字符序列的对象称为输入流，可以写入字节或字符序列的对象称为输出流。其来源地和目的地可以是文件，也可以是socket、http、数组甚至是两个线程之间。   </p>\n<p>&ensp;&ensp; I/O包下有几十个类文件，大概分为以下几种：   </p>\n<ul>\n<li>由<code>InputStream</code>、<code>OutputStream</code>、<code>Reader</code>、<code>Writer</code>为代表的I/O类 </li>\n<li>与文件系统相关的泪，例如<code>File</code>、<code>FileFilter</code>、<code>RandomAccessFile</code>等</li>\n<li>序列化相关的类 </li>\n<li>其他，例如工具类、异常类</li>\n</ul>\n<h2 id=\"流家族\"><a href=\"#流家族\" class=\"headerlink\" title=\"流家族\"></a>流家族</h2><p>从<code>InputStream</code>和<code>OutputStream</code>中继承的类是用来处理字节流。从<code>Reader</code>和<code>Writer</code>继承的类是用来处理Unicode字符，这些类的读写操作都是基于Unicode码元的。通过<code>InputStreamReader</code>和<code>OutputStreamWriter</code>可以将字节流转为字符流。     </p>\n<p>流家族体系<br><img src=\"../images/Java_IO_01.png\" alt=\"Java_IO_01.png\"><br>上图中，红色的类表示已被弃用。    </p>\n<h3 id=\"字节流\"><a href=\"#字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流</h3><h4 id=\"InputStream\"><a href=\"#InputStream\" class=\"headerlink\" title=\"InputStream\"></a>InputStream</h4><p><code>InputStream</code>有几个常用的方法 ：  </p>\n<ul>\n<li>mark : <code>mark</code>方法用于标记当前读取的位置，与<code>reset</code>方法配合使用。   </li>\n<li>reset : 返回<code>mark</code>标记的位置，重新从该位置读取字节</li>\n<li>markSupported : 是否支持mark/reset </li>\n<li>available : 剩余未读取的字节数</li>\n<li>skip : 跳过并丢弃指定的字节数</li>\n<li>read : 读取字节</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ByteArrayInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>byte[]</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">FileInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将文件作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">PipedInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，用于进程间通信，与<code>PipedOutputStream</code>配合使用</td>\n</tr>\n<tr>\n<td align=\"left\">SequenceInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">将多个输入源合并成一个输入源，<code>available</code>方法只返回当前输入源的<code>available</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"FilterInputStream\"><a href=\"#FilterInputStream\" class=\"headerlink\" title=\"FilterInputStream\"></a>FilterInputStream</h4><p>继承自<code>FilterInputStream</code>子类是装饰器类，它们不能自己产生字节序列，需要配合输入源才能使用，它们的主要作用是增加输入流的功能。在别的编程语言里，诸如缓冲机制和预览等细节都是自动处理的，相对而言，Java就比较麻烦，必须配合装饰器类才能实现。但是这种方式带来极大的灵活性。   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">BufferedInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">给输入流增加缓冲机制</td>\n</tr>\n<tr>\n<td align=\"left\">PushbackInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">给输入流增加推回功能，即将读取的字节推回到缓冲区</td>\n</tr>\n<tr>\n<td align=\"left\">DataInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">允许应用程序以与机器无关方式从底层输入流中读取基本Java 数据类型，一般与<code>DataOutputStream</code>配合使用，另外<code>DataInputStream</code>读取时采用的Java版的UTF-8编码，与标准UTF-8不同。所以<code>DataInputStream</code>读取的字节流必须时通过<code>DataOutputStream</code>写入的，不然会出问题</td>\n</tr>\n</tbody></table>\n<h4 id=\"OutputStream\"><a href=\"#OutputStream\" class=\"headerlink\" title=\"OutputStream\"></a>OutputStream</h4><p><code>OutputStream</code>有几种常用的方法： </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ByteArrayOutputStream</td>\n<td align=\"left\">将输出流转化为<code>byte[]</code></td>\n</tr>\n<tr>\n<td align=\"left\">FileOutputStream</td>\n<td align=\"left\">文件输出流</td>\n</tr>\n<tr>\n<td align=\"left\">PipedOutputStream</td>\n<td align=\"left\">管道输出流，与<code>PipedOutputStream</code>配合使用</td>\n</tr>\n</tbody></table>\n<h4 id=\"FilterOutputStream\"><a href=\"#FilterOutputStream\" class=\"headerlink\" title=\"FilterOutputStream\"></a>FilterOutputStream</h4><p>类似于<code>FilterInputStream</code>，<code>FilterOutputStream</code>也是装饰器类的基类。    </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">BufferedOutputStream</td>\n<td align=\"left\">给输出流增加缓冲机制</td>\n</tr>\n<tr>\n<td align=\"left\">PrintStream</td>\n<td align=\"left\">打印输出流<br>可直接输出至文件(里面封装了<code>FileOutputStream</code>)<br>自动刷新功能，遇到<code>\\n</code>或者写入一个<code>byte</code>数组之后自动调用<code>flush</code>方法<br>可方便打印各种数据值表示形式<br>与其他输出流不同，它产生的<code>IOException</code>异常会被自身函数捕获，可以通过<code>checkError</code>检查是否发生过异常<br>通过<code>format</code>方法，支持格式化输出<br>打印的字符使用平台默认字符编码转换为字节，也可以指定编码类型<br><code>null</code>值会被转为<code>null</code>字符，布尔类型会被转为<code>true</code>和<code>false</code>字符</td>\n</tr>\n<tr>\n<td align=\"left\">DataOutputStream</td>\n<td align=\"left\">允许应用程序以与机器无关方式写入基本Java数据类型，配合<code>DataInputStream</code>使用。</td>\n</tr>\n</tbody></table>\n<h4 id=\"ObjectOutput-和ObjectInput\"><a href=\"#ObjectOutput-和ObjectInput\" class=\"headerlink\" title=\"ObjectOutput 和ObjectInput\"></a>ObjectOutput 和ObjectInput</h4><p><code>ObjectInputStream</code>和<code>ObjectOutputStream</code>用于对象的序列化，可以将任何Java类型包括对象，序列化成字节序列。    </p>\n<h3 id=\"字符流\"><a href=\"#字符流\" class=\"headerlink\" title=\"字符流\"></a>字符流</h3><h4 id=\"Reader\"><a href=\"#Reader\" class=\"headerlink\" title=\"Reader\"></a>Reader</h4><p><code>Reader</code>用于读取字符流的抽象类，使用字符流读取文件，比字节流更高效。可通过<code>InputStreamReader</code>将字节流转换为字符流。   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CharArrayReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>char[]</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">StringReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>String</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">PipedReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>PipedInputStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">FileReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>FileInputStream</code>，实际上就是在<code>FileInputStream</code>外面套了<code>InputStreamReader</code>类</td>\n</tr>\n<tr>\n<td align=\"left\">InputStreamReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">将字节流转为字符流，可以指定字符编码</td>\n</tr>\n<tr>\n<td align=\"left\">BufferedReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似于<code>BufferedInputStream</code>，带有缓冲机制的字符流，需要提供输入源</td>\n</tr>\n<tr>\n<td align=\"left\">PushbackReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>PushbackInputStream</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"Writer\"><a href=\"#Writer\" class=\"headerlink\" title=\"Writer\"></a>Writer</h4><table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CharArrayWriter</td>\n<td align=\"left\">将输出流转为<code>char[]</code>。<code>null</code>值被转为<code>null</code>字符串</td>\n</tr>\n<tr>\n<td align=\"left\">StringWriter</td>\n<td align=\"left\">将输出流转为<code>String</code>。<code>null</code>值被转为<code>null</code>字符串</td>\n</tr>\n<tr>\n<td align=\"left\">PipedWriter</td>\n<td align=\"left\">类似<code>PipedOutputStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">PrintWriter</td>\n<td align=\"left\">类似<code>PrintStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">OutStreamWriter</td>\n<td align=\"left\">将字节流转为字符流，可以指定字符编码</td>\n</tr>\n<tr>\n<td align=\"left\">BufferedWriter</td>\n<td align=\"left\">类似于<code>BufferedOutputStream</code>，带有缓冲机制的字符流，需要提供输入源</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"I-O\"><a href=\"#I-O\" class=\"headerlink\" title=\"I/O\"></a>I/O</h2><p>&ensp;&ensp; I/O是input和output的简写，Java API中，可以读入字节或字符序列的对象称为输入流，可以写入字节或字符序列的对象称为输出流。其来源地和目的地可以是文件，也可以是socket、http、数组甚至是两个线程之间。   </p>\n<p>&ensp;&ensp; I/O包下有几十个类文件，大概分为以下几种：   </p>\n<ul>\n<li>由<code>InputStream</code>、<code>OutputStream</code>、<code>Reader</code>、<code>Writer</code>为代表的I/O类 </li>\n<li>与文件系统相关的泪，例如<code>File</code>、<code>FileFilter</code>、<code>RandomAccessFile</code>等</li>\n<li>序列化相关的类 </li>\n<li>其他，例如工具类、异常类</li>\n</ul>\n<h2 id=\"流家族\"><a href=\"#流家族\" class=\"headerlink\" title=\"流家族\"></a>流家族</h2><p>从<code>InputStream</code>和<code>OutputStream</code>中继承的类是用来处理字节流。从<code>Reader</code>和<code>Writer</code>继承的类是用来处理Unicode字符，这些类的读写操作都是基于Unicode码元的。通过<code>InputStreamReader</code>和<code>OutputStreamWriter</code>可以将字节流转为字符流。     </p>\n<p>流家族体系<br><img src=\"../images/Java_IO_01.png\" alt=\"Java_IO_01.png\"><br>上图中，红色的类表示已被弃用。    </p>\n<h3 id=\"字节流\"><a href=\"#字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流</h3><h4 id=\"InputStream\"><a href=\"#InputStream\" class=\"headerlink\" title=\"InputStream\"></a>InputStream</h4><p><code>InputStream</code>有几个常用的方法 ：  </p>\n<ul>\n<li>mark : <code>mark</code>方法用于标记当前读取的位置，与<code>reset</code>方法配合使用。   </li>\n<li>reset : 返回<code>mark</code>标记的位置，重新从该位置读取字节</li>\n<li>markSupported : 是否支持mark/reset </li>\n<li>available : 剩余未读取的字节数</li>\n<li>skip : 跳过并丢弃指定的字节数</li>\n<li>read : 读取字节</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ByteArrayInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>byte[]</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">FileInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将文件作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">PipedInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，用于进程间通信，与<code>PipedOutputStream</code>配合使用</td>\n</tr>\n<tr>\n<td align=\"left\">SequenceInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">将多个输入源合并成一个输入源，<code>available</code>方法只返回当前输入源的<code>available</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"FilterInputStream\"><a href=\"#FilterInputStream\" class=\"headerlink\" title=\"FilterInputStream\"></a>FilterInputStream</h4><p>继承自<code>FilterInputStream</code>子类是装饰器类，它们不能自己产生字节序列，需要配合输入源才能使用，它们的主要作用是增加输入流的功能。在别的编程语言里，诸如缓冲机制和预览等细节都是自动处理的，相对而言，Java就比较麻烦，必须配合装饰器类才能实现。但是这种方式带来极大的灵活性。   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">BufferedInputStream</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">给输入流增加缓冲机制</td>\n</tr>\n<tr>\n<td align=\"left\">PushbackInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">给输入流增加推回功能，即将读取的字节推回到缓冲区</td>\n</tr>\n<tr>\n<td align=\"left\">DataInputStream</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">允许应用程序以与机器无关方式从底层输入流中读取基本Java 数据类型，一般与<code>DataOutputStream</code>配合使用，另外<code>DataInputStream</code>读取时采用的Java版的UTF-8编码，与标准UTF-8不同。所以<code>DataInputStream</code>读取的字节流必须时通过<code>DataOutputStream</code>写入的，不然会出问题</td>\n</tr>\n</tbody></table>\n<h4 id=\"OutputStream\"><a href=\"#OutputStream\" class=\"headerlink\" title=\"OutputStream\"></a>OutputStream</h4><p><code>OutputStream</code>有几种常用的方法： </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ByteArrayOutputStream</td>\n<td align=\"left\">将输出流转化为<code>byte[]</code></td>\n</tr>\n<tr>\n<td align=\"left\">FileOutputStream</td>\n<td align=\"left\">文件输出流</td>\n</tr>\n<tr>\n<td align=\"left\">PipedOutputStream</td>\n<td align=\"left\">管道输出流，与<code>PipedOutputStream</code>配合使用</td>\n</tr>\n</tbody></table>\n<h4 id=\"FilterOutputStream\"><a href=\"#FilterOutputStream\" class=\"headerlink\" title=\"FilterOutputStream\"></a>FilterOutputStream</h4><p>类似于<code>FilterInputStream</code>，<code>FilterOutputStream</code>也是装饰器类的基类。    </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">BufferedOutputStream</td>\n<td align=\"left\">给输出流增加缓冲机制</td>\n</tr>\n<tr>\n<td align=\"left\">PrintStream</td>\n<td align=\"left\">打印输出流<br>可直接输出至文件(里面封装了<code>FileOutputStream</code>)<br>自动刷新功能，遇到<code>\\n</code>或者写入一个<code>byte</code>数组之后自动调用<code>flush</code>方法<br>可方便打印各种数据值表示形式<br>与其他输出流不同，它产生的<code>IOException</code>异常会被自身函数捕获，可以通过<code>checkError</code>检查是否发生过异常<br>通过<code>format</code>方法，支持格式化输出<br>打印的字符使用平台默认字符编码转换为字节，也可以指定编码类型<br><code>null</code>值会被转为<code>null</code>字符，布尔类型会被转为<code>true</code>和<code>false</code>字符</td>\n</tr>\n<tr>\n<td align=\"left\">DataOutputStream</td>\n<td align=\"left\">允许应用程序以与机器无关方式写入基本Java数据类型，配合<code>DataInputStream</code>使用。</td>\n</tr>\n</tbody></table>\n<h4 id=\"ObjectOutput-和ObjectInput\"><a href=\"#ObjectOutput-和ObjectInput\" class=\"headerlink\" title=\"ObjectOutput 和ObjectInput\"></a>ObjectOutput 和ObjectInput</h4><p><code>ObjectInputStream</code>和<code>ObjectOutputStream</code>用于对象的序列化，可以将任何Java类型包括对象，序列化成字节序列。    </p>\n<h3 id=\"字符流\"><a href=\"#字符流\" class=\"headerlink\" title=\"字符流\"></a>字符流</h3><h4 id=\"Reader\"><a href=\"#Reader\" class=\"headerlink\" title=\"Reader\"></a>Reader</h4><p><code>Reader</code>用于读取字符流的抽象类，使用字符流读取文件，比字节流更高效。可通过<code>InputStreamReader</code>将字节流转换为字符流。   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">markSupported</th>\n<th align=\"left\">skip</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CharArrayReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>char[]</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">StringReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">输入源，将<code>String</code>作为输入源的类</td>\n</tr>\n<tr>\n<td align=\"left\">PipedReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>PipedInputStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">FileReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>FileInputStream</code>，实际上就是在<code>FileInputStream</code>外面套了<code>InputStreamReader</code>类</td>\n</tr>\n<tr>\n<td align=\"left\">InputStreamReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">将字节流转为字符流，可以指定字符编码</td>\n</tr>\n<tr>\n<td align=\"left\">BufferedReader</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似于<code>BufferedInputStream</code>，带有缓冲机制的字符流，需要提供输入源</td>\n</tr>\n<tr>\n<td align=\"left\">PushbackReader</td>\n<td align=\"left\">不支持</td>\n<td align=\"left\">支持</td>\n<td align=\"left\">类似<code>PushbackInputStream</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"Writer\"><a href=\"#Writer\" class=\"headerlink\" title=\"Writer\"></a>Writer</h4><table>\n<thead>\n<tr>\n<th align=\"left\">类</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CharArrayWriter</td>\n<td align=\"left\">将输出流转为<code>char[]</code>。<code>null</code>值被转为<code>null</code>字符串</td>\n</tr>\n<tr>\n<td align=\"left\">StringWriter</td>\n<td align=\"left\">将输出流转为<code>String</code>。<code>null</code>值被转为<code>null</code>字符串</td>\n</tr>\n<tr>\n<td align=\"left\">PipedWriter</td>\n<td align=\"left\">类似<code>PipedOutputStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">PrintWriter</td>\n<td align=\"left\">类似<code>PrintStream</code></td>\n</tr>\n<tr>\n<td align=\"left\">OutStreamWriter</td>\n<td align=\"left\">将字节流转为字符流，可以指定字符编码</td>\n</tr>\n<tr>\n<td align=\"left\">BufferedWriter</td>\n<td align=\"left\">类似于<code>BufferedOutputStream</code>，带有缓冲机制的字符流，需要提供输入源</td>\n</tr>\n</tbody></table>\n"},{"title":"Java8下使用wsdl2java命令报错解决方案","date":"2016-12-13T12:23:40.000Z","_content":"## 环境\nJDK:1.8     \napache-cxf: 2.7.x\n## 描述\n使用`wsdl2java`命令生产代码时抛出如下异常：       \n```shell\njava.lang.AssertionError: org.xml.sax.SAXParseException; systemId: jar:file:/path/to/glassfish/modules/jaxb-osgi.jar!/com/sun/tools/xjc/reader/xmlschema/bindinfo/binding.xsd; lineNumber: 52; columnNumber: 88; schema_reference: Failed to read schema document 'xjc.xsd', because'file' access is not allowed due to restriction set by the accessExternalSchema property.\n```\n\n## 解决方案\n将以下内容保存为`jaxp.properties`文件，然后放到`%JAVA_HOME%\\jre\\lib`目录下。 \n```shell\njavax.xml.accessExternalSchema = all\n```\n引用 [http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8](http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8)","source":"_posts/Java-Java8下使用wsdl2java命令报错解决方案.md","raw":"---\ntitle: Java8下使用wsdl2java命令报错解决方案\ndate: 2016-12-13 20:23:40\ntags: [Java, wsdl, cxf]\ncategories: [Java]\n---\n## 环境\nJDK:1.8     \napache-cxf: 2.7.x\n## 描述\n使用`wsdl2java`命令生产代码时抛出如下异常：       \n```shell\njava.lang.AssertionError: org.xml.sax.SAXParseException; systemId: jar:file:/path/to/glassfish/modules/jaxb-osgi.jar!/com/sun/tools/xjc/reader/xmlschema/bindinfo/binding.xsd; lineNumber: 52; columnNumber: 88; schema_reference: Failed to read schema document 'xjc.xsd', because'file' access is not allowed due to restriction set by the accessExternalSchema property.\n```\n\n## 解决方案\n将以下内容保存为`jaxp.properties`文件，然后放到`%JAVA_HOME%\\jre\\lib`目录下。 \n```shell\njavax.xml.accessExternalSchema = all\n```\n引用 [http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8](http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8)","slug":"Java-Java8下使用wsdl2java命令报错解决方案","published":1,"updated":"2020-02-26T14:51:35.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdk000d1ovca6rujuon","content":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>JDK:1.8<br>apache-cxf: 2.7.x</p>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>使用<code>wsdl2java</code>命令生产代码时抛出如下异常：       </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.AssertionError: org.xml.sax.SAXParseException; systemId: jar:file:/path/to/glassfish/modules/jaxb-osgi.jar!/com/sun/tools/xjc/reader/xmlschema/bindinfo/binding.xsd; lineNumber: 52; columnNumber: 88; schema_reference: Failed to read schema document 'xjc.xsd', because'file' access is not allowed due to restriction set by the accessExternalSchema property.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>将以下内容保存为<code>jaxp.properties</code>文件，然后放到<code>%JAVA_HOME%\\jre\\lib</code>目录下。 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javax.xml.accessExternalSchema = all</span><br></pre></td></tr></table></figure>\n<p>引用 <a href=\"http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>JDK:1.8<br>apache-cxf: 2.7.x</p>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>使用<code>wsdl2java</code>命令生产代码时抛出如下异常：       </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.AssertionError: org.xml.sax.SAXParseException; systemId: jar:file:/path/to/glassfish/modules/jaxb-osgi.jar!/com/sun/tools/xjc/reader/xmlschema/bindinfo/binding.xsd; lineNumber: 52; columnNumber: 88; schema_reference: Failed to read schema document 'xjc.xsd', because'file' access is not allowed due to restriction set by the accessExternalSchema property.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>将以下内容保存为<code>jaxp.properties</code>文件，然后放到<code>%JAVA_HOME%\\jre\\lib</code>目录下。 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javax.xml.accessExternalSchema = all</span><br></pre></td></tr></table></figure>\n<p>引用 <a href=\"http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/23011547/webservice-client-generation-error-with-jdk8</a></p>\n"},{"title":"javassist 版本兼容问题","date":"2017-08-15T02:08:15.000Z","_content":"项目使用 dubbo 2.5.3 作为分布式框架。 今天运行项目时发现 javassist 抛出一以下异常：\n\n`java.lang.RuntimeException: java.io.IOException: invalid constant type: 18`\n\n回想起来周末的时候，顺手升级了 JDK，可能是因此造成的版本不兼容。根据网上回答，将 dubbo 引用的 javassist 版本升级到 3.18.0-GA 即可解决问题。\n\n**注意** 不能升级到 3.20.0-GA ，我刚才开始也是直接升级到 3.20.0-GA，结果发现依然会抛出这个异常，直到降到 3.18.0-GA 才可以。\n\n\n\n##### 升级到 3.18.0-GA 的办法 \n\ndubbo 2.5.3 版本引用的 javassist 的版本是 3.15.0-GA ,在maven下升级到 3.18.0-GA 的方法就是排除 dubbo 的 javassist 依赖，重新引入 3.18.0-GA 版本的 javassist。\n\n```xml\n  <dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>dubbo</artifactId>\n    <version>2.5.3</version>\n    <exclusions>\n      <exclusion>\n        <groupId>org.javassist</groupId>\n        <artifactId>javassist</artifactId>\n      </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n  <groupId>org.javassist</groupId>\n  <artifactId>javassist</artifactId>\n  <version>3.18.0-GA</version>\n</dependency>\n```\n\n\n\n另外贴一下，自己 JDK  的版本信息\n\n```shell\njava version \"1.8.0_121\"\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n```\n\n\n\n","source":"_posts/Java-javassist 的版本兼容问题.md","raw":"---\ntitle: javassist 版本兼容问题\ndate: 2017-08-15 10:08:15\ntags: [Java, javassist,dubbo]\ncategories: [Java]\n---\n项目使用 dubbo 2.5.3 作为分布式框架。 今天运行项目时发现 javassist 抛出一以下异常：\n\n`java.lang.RuntimeException: java.io.IOException: invalid constant type: 18`\n\n回想起来周末的时候，顺手升级了 JDK，可能是因此造成的版本不兼容。根据网上回答，将 dubbo 引用的 javassist 版本升级到 3.18.0-GA 即可解决问题。\n\n**注意** 不能升级到 3.20.0-GA ，我刚才开始也是直接升级到 3.20.0-GA，结果发现依然会抛出这个异常，直到降到 3.18.0-GA 才可以。\n\n\n\n##### 升级到 3.18.0-GA 的办法 \n\ndubbo 2.5.3 版本引用的 javassist 的版本是 3.15.0-GA ,在maven下升级到 3.18.0-GA 的方法就是排除 dubbo 的 javassist 依赖，重新引入 3.18.0-GA 版本的 javassist。\n\n```xml\n  <dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>dubbo</artifactId>\n    <version>2.5.3</version>\n    <exclusions>\n      <exclusion>\n        <groupId>org.javassist</groupId>\n        <artifactId>javassist</artifactId>\n      </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n  <groupId>org.javassist</groupId>\n  <artifactId>javassist</artifactId>\n  <version>3.18.0-GA</version>\n</dependency>\n```\n\n\n\n另外贴一下，自己 JDK  的版本信息\n\n```shell\njava version \"1.8.0_121\"\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n```\n\n\n\n","slug":"Java-javassist 的版本兼容问题","published":1,"updated":"2020-02-26T14:51:35.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdl000e1ovc05k4xg5f","content":"<p>项目使用 dubbo 2.5.3 作为分布式框架。 今天运行项目时发现 javassist 抛出一以下异常：</p>\n<p><code>java.lang.RuntimeException: java.io.IOException: invalid constant type: 18</code></p>\n<p>回想起来周末的时候，顺手升级了 JDK，可能是因此造成的版本不兼容。根据网上回答，将 dubbo 引用的 javassist 版本升级到 3.18.0-GA 即可解决问题。</p>\n<p><strong>注意</strong> 不能升级到 3.20.0-GA ，我刚才开始也是直接升级到 3.20.0-GA，结果发现依然会抛出这个异常，直到降到 3.18.0-GA 才可以。</p>\n<h5 id=\"升级到-3-18-0-GA-的办法\"><a href=\"#升级到-3-18-0-GA-的办法\" class=\"headerlink\" title=\"升级到 3.18.0-GA 的办法\"></a>升级到 3.18.0-GA 的办法</h5><p>dubbo 2.5.3 版本引用的 javassist 的版本是 3.15.0-GA ,在maven下升级到 3.18.0-GA 的方法就是排除 dubbo 的 javassist 依赖，重新引入 3.18.0-GA 版本的 javassist。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.javassist<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javassist<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.javassist<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javassist<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.18.0-GA<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外贴一下，自己 JDK  的版本信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java version \"1.8.0_121\"</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>项目使用 dubbo 2.5.3 作为分布式框架。 今天运行项目时发现 javassist 抛出一以下异常：</p>\n<p><code>java.lang.RuntimeException: java.io.IOException: invalid constant type: 18</code></p>\n<p>回想起来周末的时候，顺手升级了 JDK，可能是因此造成的版本不兼容。根据网上回答，将 dubbo 引用的 javassist 版本升级到 3.18.0-GA 即可解决问题。</p>\n<p><strong>注意</strong> 不能升级到 3.20.0-GA ，我刚才开始也是直接升级到 3.20.0-GA，结果发现依然会抛出这个异常，直到降到 3.18.0-GA 才可以。</p>\n<h5 id=\"升级到-3-18-0-GA-的办法\"><a href=\"#升级到-3-18-0-GA-的办法\" class=\"headerlink\" title=\"升级到 3.18.0-GA 的办法\"></a>升级到 3.18.0-GA 的办法</h5><p>dubbo 2.5.3 版本引用的 javassist 的版本是 3.15.0-GA ,在maven下升级到 3.18.0-GA 的方法就是排除 dubbo 的 javassist 依赖，重新引入 3.18.0-GA 版本的 javassist。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.javassist<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javassist<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.javassist<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javassist<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.18.0-GA<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外贴一下，自己 JDK  的版本信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java version \"1.8.0_121\"</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"JavaScript编程风格","date":"2017-01-17T02:40:58.000Z","_content":"## 编程风格\n### 基本格式化\n#### 缩进\n使用4个空格进行缩进     \n#### 语句结尾\n不要省略分号     \n#### 长度限制\n每行的长度不要超过100字符  \n#### 换行    \n当需要换行时，最好在运算符后换行，下一行增加两个层级的缩进。\n\n```javascript\ncallAFunction(document, element, window, \"some string value\", true, 123,\n        navigator);\n```\n例外:当给变量赋值时，第二行的位置应当和赋值运算符的位置保持对齐，比如:      \n\n```javascript\nvar result = something + anotherThing + yeAnotherTing + somethingElse + \n             anotherSomethingElse;\n```\n#### 空行\n一般在以下场景中添加空行:      \n* 方法之间\n* 方法中的局部变量和第一条语句之间\n* 在多行或单行注释之前\n* 在方法内的逻辑片段之间插入空行，提高可读性\n\n#### 命名\n* 遵照小驼峰式大小写命名法，即由小写字母开始，后续每个单词首字母都大写   \n* 变量尽量以名词作为前缀，函数以动词作为前缀  \n* 尽量在变量名中体现出值的数据类型，例如`count`、`length`和`size`表明数据类型是数字，`name`、`title`和`message`表明数据类型是字符串\n* 单个字符命名的变量，例如`i`、`j`和`k`通常在循环中使用   \n##### 动词常见的约定\n|动词| 含义|\n|:--|:---|\n|can| 函数返回一个布尔值|\n|has| 函数返回一个布尔值|\n|is | 函数返回一个布尔值|\n|get| 函数返回一个非布尔值|\n|set| 函数用来保存一个值|\n\n##### 常量\n使用大写字母和下划线 \n##### 构造函数\n构造函数即前面冠以`new`运算符的函数，遵循大驼峰命名法，即以大写字母开始，后续每个单词首字母都大写。     \n\n#### 直接量字符串使用双引号，主要是因为方便在`Java`和`JavaScript`之间来回切换。    \n禁止使用多行字符串，使用字符串连接符将字符串分成多份。     \n\n```javascript\n// bad\nvar longString = \"Here's the sotry, of a man \\\nnamed Brady\";\n// good\nvar longString = \"Here's the sotry, of a man \" +\n                 \"named Brady\";\n```\n\n\n### 注释\n#### 单行注释\n* 独占一行的注释，用来解释下一行代码。这行注释之前总是有一个空行，且缩进层级和下一行代码保持一致\n* 代码行尾部的注释。代码结束到注释之间至少有一个缩进。并且不应当超过单行最大字符数限制，如果超过了应该将注释放在代码行上方\n* 单行注释不应该以连续多行注释的形式出现，除非你注释掉一大段代码\n\n#### 多行注释\n* 多行注释推荐使用`Java`的风格\n\n```javascript\n/*\n * 这是一段多行注释\n * 这段注释包含两行文本\n */\n```\n* 多行注释和代码之间没有空行，注释上方应当有一行空行，并且缩进层级和下放的代码保持一致\n\n#### 使用注释\n* 难于理解的代码通常都应当加注释\n* 可能被误认为错误的代码，应当添加注释，防止被好心的开发者“修复”\n\n## 语句和表达式\n无论何种情况下，所有块语句都应当使用花括号，包括:\n* if...else\n* for\n* while\n* do...while\n* try...catch...finally\n\n### 花括号的对齐方式\n```javascript\nif (condition) {\n    doSomething();\n} else {\n    doSomethingElse();\n}\n```\n### switch语句\n#### 缩进\n* 每条`case`语句相对于`switch`关键字都缩进一个层级\n* 从第二条`case`语句开始，每条`case`语句前后各有一个空行\n* 连续的`case`语句之间省略空行\n* `default`语句是必须的\n\n```javascript\nswitch (condition) {\n    case \"first\":\n         // 代码\n         break;\n\n    case \"second\":\n    case \"third\":\n         // 代码\n         break;\n    default: \n}\n```\n\n## 变量、函数和运算符\n### 变量声明\n推荐将局部变量的定义作为函数内第一条语句。 并且推荐使用单`var`语句风格，每个变量的初始化独占一行，没有初始值的变量放在`var`语句的尾部。 例如:\n\n```javascript\nfunction doSomethingWithItems(items) {\n    var value = 10,\n        result = value + 10,\n        i, len;\n\n    for (i=0, len=items.length; i<len; i++) {\n        doSomething(items[i]);\n    }\n}\n```\n\n### 函数声明\n* 推荐先声明函数，再使用\n* 对于函数内的局部函数，应该紧接着变量声明之后声明，之间用空行隔开\n* 函数声明禁止出现在`if`、`while`、`for`、`try...catch`、`switch`的语句块内\n\n### 立即调用的函数\n为了让立即执行的函数能够被一眼看出来，将函数用一对圆括号包裹起来。比如:    \n\n```javascript\nvar value = (function() {\n    // 函数体\n    \n    return {\n        message: \"Hi\"\n    }\n}());\n```\n\n### 严格模式\n最好不要在全局作用域使用`\"use strict\"`。 如果你将多个文件连接合并成一个文件时，当期中一个文件在全局作用域中启用了严格模式，则所有的代码都将以严格模式解析，这会很可能造成其他以非严格模式写的代码报错。     \n\n```javascript\n// bad\n\"use strict\";\nfunction doSomething() {\n    // code \n}\n\n// good\nfunction doSomething() {\n    \"use strict\";\n    // code\n}\n```\n推荐所有函数中都加上`\"use strict\"`。 \n### 相等\n因为强制类型转换的缘故，推荐使用`===`和`!==`，而不要使用`==`和`!=`。\n\n### eval()\n* 尽量避免使用`eval()`，如果无它法，尽量在严格模式下使用`eval()`\n* 严禁使用`Function` \n* 可以使用`setTimeout()`和`setInterval()`，但不要用字符串形式，要用函数\n\n### 原始包装类型\n禁止使用原始包装类型\n\n","source":"_posts/JavaScript-JavaScript-编程风格.md","raw":"---\ntitle: JavaScript编程风格\ndate: 2017-01-17 10:40:58\ntags: [JavaScript,style guideline]\ncategories: [JavaScript]\n---\n## 编程风格\n### 基本格式化\n#### 缩进\n使用4个空格进行缩进     \n#### 语句结尾\n不要省略分号     \n#### 长度限制\n每行的长度不要超过100字符  \n#### 换行    \n当需要换行时，最好在运算符后换行，下一行增加两个层级的缩进。\n\n```javascript\ncallAFunction(document, element, window, \"some string value\", true, 123,\n        navigator);\n```\n例外:当给变量赋值时，第二行的位置应当和赋值运算符的位置保持对齐，比如:      \n\n```javascript\nvar result = something + anotherThing + yeAnotherTing + somethingElse + \n             anotherSomethingElse;\n```\n#### 空行\n一般在以下场景中添加空行:      \n* 方法之间\n* 方法中的局部变量和第一条语句之间\n* 在多行或单行注释之前\n* 在方法内的逻辑片段之间插入空行，提高可读性\n\n#### 命名\n* 遵照小驼峰式大小写命名法，即由小写字母开始，后续每个单词首字母都大写   \n* 变量尽量以名词作为前缀，函数以动词作为前缀  \n* 尽量在变量名中体现出值的数据类型，例如`count`、`length`和`size`表明数据类型是数字，`name`、`title`和`message`表明数据类型是字符串\n* 单个字符命名的变量，例如`i`、`j`和`k`通常在循环中使用   \n##### 动词常见的约定\n|动词| 含义|\n|:--|:---|\n|can| 函数返回一个布尔值|\n|has| 函数返回一个布尔值|\n|is | 函数返回一个布尔值|\n|get| 函数返回一个非布尔值|\n|set| 函数用来保存一个值|\n\n##### 常量\n使用大写字母和下划线 \n##### 构造函数\n构造函数即前面冠以`new`运算符的函数，遵循大驼峰命名法，即以大写字母开始，后续每个单词首字母都大写。     \n\n#### 直接量字符串使用双引号，主要是因为方便在`Java`和`JavaScript`之间来回切换。    \n禁止使用多行字符串，使用字符串连接符将字符串分成多份。     \n\n```javascript\n// bad\nvar longString = \"Here's the sotry, of a man \\\nnamed Brady\";\n// good\nvar longString = \"Here's the sotry, of a man \" +\n                 \"named Brady\";\n```\n\n\n### 注释\n#### 单行注释\n* 独占一行的注释，用来解释下一行代码。这行注释之前总是有一个空行，且缩进层级和下一行代码保持一致\n* 代码行尾部的注释。代码结束到注释之间至少有一个缩进。并且不应当超过单行最大字符数限制，如果超过了应该将注释放在代码行上方\n* 单行注释不应该以连续多行注释的形式出现，除非你注释掉一大段代码\n\n#### 多行注释\n* 多行注释推荐使用`Java`的风格\n\n```javascript\n/*\n * 这是一段多行注释\n * 这段注释包含两行文本\n */\n```\n* 多行注释和代码之间没有空行，注释上方应当有一行空行，并且缩进层级和下放的代码保持一致\n\n#### 使用注释\n* 难于理解的代码通常都应当加注释\n* 可能被误认为错误的代码，应当添加注释，防止被好心的开发者“修复”\n\n## 语句和表达式\n无论何种情况下，所有块语句都应当使用花括号，包括:\n* if...else\n* for\n* while\n* do...while\n* try...catch...finally\n\n### 花括号的对齐方式\n```javascript\nif (condition) {\n    doSomething();\n} else {\n    doSomethingElse();\n}\n```\n### switch语句\n#### 缩进\n* 每条`case`语句相对于`switch`关键字都缩进一个层级\n* 从第二条`case`语句开始，每条`case`语句前后各有一个空行\n* 连续的`case`语句之间省略空行\n* `default`语句是必须的\n\n```javascript\nswitch (condition) {\n    case \"first\":\n         // 代码\n         break;\n\n    case \"second\":\n    case \"third\":\n         // 代码\n         break;\n    default: \n}\n```\n\n## 变量、函数和运算符\n### 变量声明\n推荐将局部变量的定义作为函数内第一条语句。 并且推荐使用单`var`语句风格，每个变量的初始化独占一行，没有初始值的变量放在`var`语句的尾部。 例如:\n\n```javascript\nfunction doSomethingWithItems(items) {\n    var value = 10,\n        result = value + 10,\n        i, len;\n\n    for (i=0, len=items.length; i<len; i++) {\n        doSomething(items[i]);\n    }\n}\n```\n\n### 函数声明\n* 推荐先声明函数，再使用\n* 对于函数内的局部函数，应该紧接着变量声明之后声明，之间用空行隔开\n* 函数声明禁止出现在`if`、`while`、`for`、`try...catch`、`switch`的语句块内\n\n### 立即调用的函数\n为了让立即执行的函数能够被一眼看出来，将函数用一对圆括号包裹起来。比如:    \n\n```javascript\nvar value = (function() {\n    // 函数体\n    \n    return {\n        message: \"Hi\"\n    }\n}());\n```\n\n### 严格模式\n最好不要在全局作用域使用`\"use strict\"`。 如果你将多个文件连接合并成一个文件时，当期中一个文件在全局作用域中启用了严格模式，则所有的代码都将以严格模式解析，这会很可能造成其他以非严格模式写的代码报错。     \n\n```javascript\n// bad\n\"use strict\";\nfunction doSomething() {\n    // code \n}\n\n// good\nfunction doSomething() {\n    \"use strict\";\n    // code\n}\n```\n推荐所有函数中都加上`\"use strict\"`。 \n### 相等\n因为强制类型转换的缘故，推荐使用`===`和`!==`，而不要使用`==`和`!=`。\n\n### eval()\n* 尽量避免使用`eval()`，如果无它法，尽量在严格模式下使用`eval()`\n* 严禁使用`Function` \n* 可以使用`setTimeout()`和`setInterval()`，但不要用字符串形式，要用函数\n\n### 原始包装类型\n禁止使用原始包装类型\n\n","slug":"JavaScript-JavaScript-编程风格","published":1,"updated":"2020-02-26T14:51:35.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdl000f1ovc4bl71u5r","content":"<h2 id=\"编程风格\"><a href=\"#编程风格\" class=\"headerlink\" title=\"编程风格\"></a>编程风格</h2><h3 id=\"基本格式化\"><a href=\"#基本格式化\" class=\"headerlink\" title=\"基本格式化\"></a>基本格式化</h3><h4 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h4><p>使用4个空格进行缩进     </p>\n<h4 id=\"语句结尾\"><a href=\"#语句结尾\" class=\"headerlink\" title=\"语句结尾\"></a>语句结尾</h4><p>不要省略分号     </p>\n<h4 id=\"长度限制\"><a href=\"#长度限制\" class=\"headerlink\" title=\"长度限制\"></a>长度限制</h4><p>每行的长度不要超过100字符  </p>\n<h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><p>当需要换行时，最好在运算符后换行，下一行增加两个层级的缩进。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callAFunction(<span class=\"built_in\">document</span>, element, <span class=\"built_in\">window</span>, <span class=\"string\">\"some string value\"</span>, <span class=\"literal\">true</span>, <span class=\"number\">123</span>,</span><br><span class=\"line\">        navigator);</span><br></pre></td></tr></table></figure>\n<p>例外:当给变量赋值时，第二行的位置应当和赋值运算符的位置保持对齐，比如:      </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = something + anotherThing + yeAnotherTing + somethingElse + </span><br><span class=\"line\">             anotherSomethingElse;</span><br></pre></td></tr></table></figure>\n<h4 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h4><p>一般在以下场景中添加空行:      </p>\n<ul>\n<li>方法之间</li>\n<li>方法中的局部变量和第一条语句之间</li>\n<li>在多行或单行注释之前</li>\n<li>在方法内的逻辑片段之间插入空行，提高可读性</li>\n</ul>\n<h4 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h4><ul>\n<li>遵照小驼峰式大小写命名法，即由小写字母开始，后续每个单词首字母都大写   </li>\n<li>变量尽量以名词作为前缀，函数以动词作为前缀  </li>\n<li>尽量在变量名中体现出值的数据类型，例如<code>count</code>、<code>length</code>和<code>size</code>表明数据类型是数字，<code>name</code>、<code>title</code>和<code>message</code>表明数据类型是字符串</li>\n<li>单个字符命名的变量，例如<code>i</code>、<code>j</code>和<code>k</code>通常在循环中使用   <h5 id=\"动词常见的约定\"><a href=\"#动词常见的约定\" class=\"headerlink\" title=\"动词常见的约定\"></a>动词常见的约定</h5><table>\n<thead>\n<tr>\n<th align=\"left\">动词</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">can</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">has</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">is</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">get</td>\n<td align=\"left\">函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">set</td>\n<td align=\"left\">函数用来保存一个值</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h5 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h5><p>使用大写字母和下划线 </p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p>构造函数即前面冠以<code>new</code>运算符的函数，遵循大驼峰命名法，即以大写字母开始，后续每个单词首字母都大写。     </p>\n<h4 id=\"直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\"><a href=\"#直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\" class=\"headerlink\" title=\"直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\"></a>直接量字符串使用双引号，主要是因为方便在<code>Java</code>和<code>JavaScript</code>之间来回切换。</h4><p>禁止使用多行字符串，使用字符串连接符将字符串分成多份。     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longString = <span class=\"string\">\"Here's the sotry, of a man \\</span></span><br><span class=\"line\"><span class=\"string\">named Brady\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longString = <span class=\"string\">\"Here's the sotry, of a man \"</span> +</span><br><span class=\"line\">                 <span class=\"string\">\"named Brady\"</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h4 id=\"单行注释\"><a href=\"#单行注释\" class=\"headerlink\" title=\"单行注释\"></a>单行注释</h4><ul>\n<li>独占一行的注释，用来解释下一行代码。这行注释之前总是有一个空行，且缩进层级和下一行代码保持一致</li>\n<li>代码行尾部的注释。代码结束到注释之间至少有一个缩进。并且不应当超过单行最大字符数限制，如果超过了应该将注释放在代码行上方</li>\n<li>单行注释不应该以连续多行注释的形式出现，除非你注释掉一大段代码</li>\n</ul>\n<h4 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h4><ul>\n<li>多行注释推荐使用<code>Java</code>的风格</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 这是一段多行注释</span></span><br><span class=\"line\"><span class=\"comment\"> * 这段注释包含两行文本</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>多行注释和代码之间没有空行，注释上方应当有一行空行，并且缩进层级和下放的代码保持一致</li>\n</ul>\n<h4 id=\"使用注释\"><a href=\"#使用注释\" class=\"headerlink\" title=\"使用注释\"></a>使用注释</h4><ul>\n<li>难于理解的代码通常都应当加注释</li>\n<li>可能被误认为错误的代码，应当添加注释，防止被好心的开发者“修复”</li>\n</ul>\n<h2 id=\"语句和表达式\"><a href=\"#语句和表达式\" class=\"headerlink\" title=\"语句和表达式\"></a>语句和表达式</h2><p>无论何种情况下，所有块语句都应当使用花括号，包括:</p>\n<ul>\n<li>if…else</li>\n<li>for</li>\n<li>while</li>\n<li>do…while</li>\n<li>try…catch…finally</li>\n</ul>\n<h3 id=\"花括号的对齐方式\"><a href=\"#花括号的对齐方式\" class=\"headerlink\" title=\"花括号的对齐方式\"></a>花括号的对齐方式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    doSomethingElse();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h3><h4 id=\"缩进-1\"><a href=\"#缩进-1\" class=\"headerlink\" title=\"缩进\"></a>缩进</h4><ul>\n<li>每条<code>case</code>语句相对于<code>switch</code>关键字都缩进一个层级</li>\n<li>从第二条<code>case</code>语句开始，每条<code>case</code>语句前后各有一个空行</li>\n<li>连续的<code>case</code>语句之间省略空行</li>\n<li><code>default</code>语句是必须的</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (condition) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"first\"</span>:</span><br><span class=\"line\">         <span class=\"comment\">// 代码</span></span><br><span class=\"line\">         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"second\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"third\"</span>:</span><br><span class=\"line\">         <span class=\"comment\">// 代码</span></span><br><span class=\"line\">         <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量、函数和运算符\"><a href=\"#变量、函数和运算符\" class=\"headerlink\" title=\"变量、函数和运算符\"></a>变量、函数和运算符</h2><h3 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h3><p>推荐将局部变量的定义作为函数内第一条语句。 并且推荐使用单<code>var</code>语句风格，每个变量的初始化独占一行，没有初始值的变量放在<code>var</code>语句的尾部。 例如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingWithItems</span>(<span class=\"params\">items</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"number\">10</span>,</span><br><span class=\"line\">        result = value + <span class=\"number\">10</span>,</span><br><span class=\"line\">        i, len;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>, len=items.length; i&lt;len; i++) &#123;</span><br><span class=\"line\">        doSomething(items[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数声明\"><a href=\"#函数声明\" class=\"headerlink\" title=\"函数声明\"></a>函数声明</h3><ul>\n<li>推荐先声明函数，再使用</li>\n<li>对于函数内的局部函数，应该紧接着变量声明之后声明，之间用空行隔开</li>\n<li>函数声明禁止出现在<code>if</code>、<code>while</code>、<code>for</code>、<code>try...catch</code>、<code>switch</code>的语句块内</li>\n</ul>\n<h3 id=\"立即调用的函数\"><a href=\"#立即调用的函数\" class=\"headerlink\" title=\"立即调用的函数\"></a>立即调用的函数</h3><p>为了让立即执行的函数能够被一眼看出来，将函数用一对圆括号包裹起来。比如:    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        message: <span class=\"string\">\"Hi\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"严格模式\"><a href=\"#严格模式\" class=\"headerlink\" title=\"严格模式\"></a>严格模式</h3><p>最好不要在全局作用域使用<code>&quot;use strict&quot;</code>。 如果你将多个文件连接合并成一个文件时，当期中一个文件在全局作用域中启用了严格模式，则所有的代码都将以严格模式解析，这会很可能造成其他以非严格模式写的代码报错。     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// code </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    \"use strict\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>推荐所有函数中都加上<code>&quot;use strict&quot;</code>。 </p>\n<h3 id=\"相等\"><a href=\"#相等\" class=\"headerlink\" title=\"相等\"></a>相等</h3><p>因为强制类型转换的缘故，推荐使用<code>===</code>和<code>!==</code>，而不要使用<code>==</code>和<code>!=</code>。</p>\n<h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><ul>\n<li>尽量避免使用<code>eval()</code>，如果无它法，尽量在严格模式下使用<code>eval()</code></li>\n<li>严禁使用<code>Function</code> </li>\n<li>可以使用<code>setTimeout()</code>和<code>setInterval()</code>，但不要用字符串形式，要用函数</li>\n</ul>\n<h3 id=\"原始包装类型\"><a href=\"#原始包装类型\" class=\"headerlink\" title=\"原始包装类型\"></a>原始包装类型</h3><p>禁止使用原始包装类型</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"编程风格\"><a href=\"#编程风格\" class=\"headerlink\" title=\"编程风格\"></a>编程风格</h2><h3 id=\"基本格式化\"><a href=\"#基本格式化\" class=\"headerlink\" title=\"基本格式化\"></a>基本格式化</h3><h4 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h4><p>使用4个空格进行缩进     </p>\n<h4 id=\"语句结尾\"><a href=\"#语句结尾\" class=\"headerlink\" title=\"语句结尾\"></a>语句结尾</h4><p>不要省略分号     </p>\n<h4 id=\"长度限制\"><a href=\"#长度限制\" class=\"headerlink\" title=\"长度限制\"></a>长度限制</h4><p>每行的长度不要超过100字符  </p>\n<h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><p>当需要换行时，最好在运算符后换行，下一行增加两个层级的缩进。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callAFunction(<span class=\"built_in\">document</span>, element, <span class=\"built_in\">window</span>, <span class=\"string\">\"some string value\"</span>, <span class=\"literal\">true</span>, <span class=\"number\">123</span>,</span><br><span class=\"line\">        navigator);</span><br></pre></td></tr></table></figure>\n<p>例外:当给变量赋值时，第二行的位置应当和赋值运算符的位置保持对齐，比如:      </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = something + anotherThing + yeAnotherTing + somethingElse + </span><br><span class=\"line\">             anotherSomethingElse;</span><br></pre></td></tr></table></figure>\n<h4 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h4><p>一般在以下场景中添加空行:      </p>\n<ul>\n<li>方法之间</li>\n<li>方法中的局部变量和第一条语句之间</li>\n<li>在多行或单行注释之前</li>\n<li>在方法内的逻辑片段之间插入空行，提高可读性</li>\n</ul>\n<h4 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h4><ul>\n<li>遵照小驼峰式大小写命名法，即由小写字母开始，后续每个单词首字母都大写   </li>\n<li>变量尽量以名词作为前缀，函数以动词作为前缀  </li>\n<li>尽量在变量名中体现出值的数据类型，例如<code>count</code>、<code>length</code>和<code>size</code>表明数据类型是数字，<code>name</code>、<code>title</code>和<code>message</code>表明数据类型是字符串</li>\n<li>单个字符命名的变量，例如<code>i</code>、<code>j</code>和<code>k</code>通常在循环中使用   <h5 id=\"动词常见的约定\"><a href=\"#动词常见的约定\" class=\"headerlink\" title=\"动词常见的约定\"></a>动词常见的约定</h5><table>\n<thead>\n<tr>\n<th align=\"left\">动词</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">can</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">has</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">is</td>\n<td align=\"left\">函数返回一个布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">get</td>\n<td align=\"left\">函数返回一个非布尔值</td>\n</tr>\n<tr>\n<td align=\"left\">set</td>\n<td align=\"left\">函数用来保存一个值</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h5 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h5><p>使用大写字母和下划线 </p>\n<h5 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h5><p>构造函数即前面冠以<code>new</code>运算符的函数，遵循大驼峰命名法，即以大写字母开始，后续每个单词首字母都大写。     </p>\n<h4 id=\"直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\"><a href=\"#直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\" class=\"headerlink\" title=\"直接量字符串使用双引号，主要是因为方便在Java和JavaScript之间来回切换。\"></a>直接量字符串使用双引号，主要是因为方便在<code>Java</code>和<code>JavaScript</code>之间来回切换。</h4><p>禁止使用多行字符串，使用字符串连接符将字符串分成多份。     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longString = <span class=\"string\">\"Here's the sotry, of a man \\</span></span><br><span class=\"line\"><span class=\"string\">named Brady\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longString = <span class=\"string\">\"Here's the sotry, of a man \"</span> +</span><br><span class=\"line\">                 <span class=\"string\">\"named Brady\"</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h4 id=\"单行注释\"><a href=\"#单行注释\" class=\"headerlink\" title=\"单行注释\"></a>单行注释</h4><ul>\n<li>独占一行的注释，用来解释下一行代码。这行注释之前总是有一个空行，且缩进层级和下一行代码保持一致</li>\n<li>代码行尾部的注释。代码结束到注释之间至少有一个缩进。并且不应当超过单行最大字符数限制，如果超过了应该将注释放在代码行上方</li>\n<li>单行注释不应该以连续多行注释的形式出现，除非你注释掉一大段代码</li>\n</ul>\n<h4 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h4><ul>\n<li>多行注释推荐使用<code>Java</code>的风格</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 这是一段多行注释</span></span><br><span class=\"line\"><span class=\"comment\"> * 这段注释包含两行文本</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>多行注释和代码之间没有空行，注释上方应当有一行空行，并且缩进层级和下放的代码保持一致</li>\n</ul>\n<h4 id=\"使用注释\"><a href=\"#使用注释\" class=\"headerlink\" title=\"使用注释\"></a>使用注释</h4><ul>\n<li>难于理解的代码通常都应当加注释</li>\n<li>可能被误认为错误的代码，应当添加注释，防止被好心的开发者“修复”</li>\n</ul>\n<h2 id=\"语句和表达式\"><a href=\"#语句和表达式\" class=\"headerlink\" title=\"语句和表达式\"></a>语句和表达式</h2><p>无论何种情况下，所有块语句都应当使用花括号，包括:</p>\n<ul>\n<li>if…else</li>\n<li>for</li>\n<li>while</li>\n<li>do…while</li>\n<li>try…catch…finally</li>\n</ul>\n<h3 id=\"花括号的对齐方式\"><a href=\"#花括号的对齐方式\" class=\"headerlink\" title=\"花括号的对齐方式\"></a>花括号的对齐方式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    doSomethingElse();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h3><h4 id=\"缩进-1\"><a href=\"#缩进-1\" class=\"headerlink\" title=\"缩进\"></a>缩进</h4><ul>\n<li>每条<code>case</code>语句相对于<code>switch</code>关键字都缩进一个层级</li>\n<li>从第二条<code>case</code>语句开始，每条<code>case</code>语句前后各有一个空行</li>\n<li>连续的<code>case</code>语句之间省略空行</li>\n<li><code>default</code>语句是必须的</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (condition) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"first\"</span>:</span><br><span class=\"line\">         <span class=\"comment\">// 代码</span></span><br><span class=\"line\">         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"second\"</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"third\"</span>:</span><br><span class=\"line\">         <span class=\"comment\">// 代码</span></span><br><span class=\"line\">         <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量、函数和运算符\"><a href=\"#变量、函数和运算符\" class=\"headerlink\" title=\"变量、函数和运算符\"></a>变量、函数和运算符</h2><h3 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h3><p>推荐将局部变量的定义作为函数内第一条语句。 并且推荐使用单<code>var</code>语句风格，每个变量的初始化独占一行，没有初始值的变量放在<code>var</code>语句的尾部。 例如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingWithItems</span>(<span class=\"params\">items</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = <span class=\"number\">10</span>,</span><br><span class=\"line\">        result = value + <span class=\"number\">10</span>,</span><br><span class=\"line\">        i, len;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>, len=items.length; i&lt;len; i++) &#123;</span><br><span class=\"line\">        doSomething(items[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数声明\"><a href=\"#函数声明\" class=\"headerlink\" title=\"函数声明\"></a>函数声明</h3><ul>\n<li>推荐先声明函数，再使用</li>\n<li>对于函数内的局部函数，应该紧接着变量声明之后声明，之间用空行隔开</li>\n<li>函数声明禁止出现在<code>if</code>、<code>while</code>、<code>for</code>、<code>try...catch</code>、<code>switch</code>的语句块内</li>\n</ul>\n<h3 id=\"立即调用的函数\"><a href=\"#立即调用的函数\" class=\"headerlink\" title=\"立即调用的函数\"></a>立即调用的函数</h3><p>为了让立即执行的函数能够被一眼看出来，将函数用一对圆括号包裹起来。比如:    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 函数体</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        message: <span class=\"string\">\"Hi\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"严格模式\"><a href=\"#严格模式\" class=\"headerlink\" title=\"严格模式\"></a>严格模式</h3><p>最好不要在全局作用域使用<code>&quot;use strict&quot;</code>。 如果你将多个文件连接合并成一个文件时，当期中一个文件在全局作用域中启用了严格模式，则所有的代码都将以严格模式解析，这会很可能造成其他以非严格模式写的代码报错。     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// code </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    \"use strict\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">// code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>推荐所有函数中都加上<code>&quot;use strict&quot;</code>。 </p>\n<h3 id=\"相等\"><a href=\"#相等\" class=\"headerlink\" title=\"相等\"></a>相等</h3><p>因为强制类型转换的缘故，推荐使用<code>===</code>和<code>!==</code>，而不要使用<code>==</code>和<code>!=</code>。</p>\n<h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><ul>\n<li>尽量避免使用<code>eval()</code>，如果无它法，尽量在严格模式下使用<code>eval()</code></li>\n<li>严禁使用<code>Function</code> </li>\n<li>可以使用<code>setTimeout()</code>和<code>setInterval()</code>，但不要用字符串形式，要用函数</li>\n</ul>\n<h3 id=\"原始包装类型\"><a href=\"#原始包装类型\" class=\"headerlink\" title=\"原始包装类型\"></a>原始包装类型</h3><p>禁止使用原始包装类型</p>\n"},{"title":"Log4j.properties配置解释","date":"2016-12-13T12:32:41.000Z","_content":"\n### 实例\n```python\n ### 设置###\nlog4j.rootLogger = debug,stdout,D,E\n\n### 输出信息到控制抬 ###\nlog4j.appender.stdout = org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target = System.out\nlog4j.appender.stdout.layout = org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n\n\n### 输出DEBUG 级别以上的日志到=E://logs/error.log ###\nlog4j.appender.D = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.D.File = E://logs/log.log\nlog4j.appender.D.Append = true\nlog4j.appender.D.Threshold = DEBUG \nlog4j.appender.D.layout = org.apache.log4j.PatternLayout\nlog4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n\n\n### 输出ERROR 级别以上的日志到=E://logs/error.log ###\nlog4j.appender.E = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.E.File =E://logs/error.log \nlog4j.appender.E.Append = true\nlog4j.appender.E.Threshold = ERROR \nlog4j.appender.E.layout = org.apache.log4j.PatternLayout\nlog4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n\n```\n\n### Appender 解释\n```python\norg.apache.log4j.ConsoleAppender（控制台），\norg.apache.log4j.FileAppender（文件），\norg.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），\norg.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），\norg.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）\n```\n### Layout解释\n```python\norg.apache.log4j.HTMLLayout（以 HTML 表格形式布局），\norg.apache.log4j.PatternLayout（可以灵活地指定布局模式），\norg.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），\norg.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）\n```\n\n### 打印参数解释\n```python\n%m   输出代码中指定的消息\n%p   输出优先级，即 DEBUG，INFO，WARN，ERROR，FATAL \n%r   输出自应用启动到输出该 log 信息耗费的毫秒数 \n%c   输出所属的类目，通常就是所在类的全名 \n%t   输出产生该日志事件的线程名 \n%n   输出一个回车换行符，Windows 平台为 “\\r\\n”，Unix 平台为 “\\n” \n%d   输出日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002 年 10 月 18 日  22 ： 10 ： 28 ， 921  \n%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 ) \n```\n\n### 环境变量\nlog4j可以以`${catalina.home}`的形式，使用操作系统的环境变量，或者VM的环境变量\n","source":"_posts/Java-Log4j-properties配置解释.md","raw":"---\ntitle: Log4j.properties配置解释\ndate: 2016-12-13 20:32:41\ntags: [Java, log4j]\ncategories: [Java]\n---\n\n### 实例\n```python\n ### 设置###\nlog4j.rootLogger = debug,stdout,D,E\n\n### 输出信息到控制抬 ###\nlog4j.appender.stdout = org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target = System.out\nlog4j.appender.stdout.layout = org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n\n\n### 输出DEBUG 级别以上的日志到=E://logs/error.log ###\nlog4j.appender.D = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.D.File = E://logs/log.log\nlog4j.appender.D.Append = true\nlog4j.appender.D.Threshold = DEBUG \nlog4j.appender.D.layout = org.apache.log4j.PatternLayout\nlog4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n\n\n### 输出ERROR 级别以上的日志到=E://logs/error.log ###\nlog4j.appender.E = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.E.File =E://logs/error.log \nlog4j.appender.E.Append = true\nlog4j.appender.E.Threshold = ERROR \nlog4j.appender.E.layout = org.apache.log4j.PatternLayout\nlog4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n\n```\n\n### Appender 解释\n```python\norg.apache.log4j.ConsoleAppender（控制台），\norg.apache.log4j.FileAppender（文件），\norg.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），\norg.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），\norg.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）\n```\n### Layout解释\n```python\norg.apache.log4j.HTMLLayout（以 HTML 表格形式布局），\norg.apache.log4j.PatternLayout（可以灵活地指定布局模式），\norg.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），\norg.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）\n```\n\n### 打印参数解释\n```python\n%m   输出代码中指定的消息\n%p   输出优先级，即 DEBUG，INFO，WARN，ERROR，FATAL \n%r   输出自应用启动到输出该 log 信息耗费的毫秒数 \n%c   输出所属的类目，通常就是所在类的全名 \n%t   输出产生该日志事件的线程名 \n%n   输出一个回车换行符，Windows 平台为 “\\r\\n”，Unix 平台为 “\\n” \n%d   输出日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002 年 10 月 18 日  22 ： 10 ： 28 ， 921  \n%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 ) \n```\n\n### 环境变量\nlog4j可以以`${catalina.home}`的形式，使用操作系统的环境变量，或者VM的环境变量\n","slug":"Java-Log4j-properties配置解释","published":1,"updated":"2020-02-26T14:51:35.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdm000g1ovc5pf87dn9","content":"<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">### 设置###</span></span><br><span class=\"line\">log4j.rootLogger = debug,stdout,D,E</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出信息到控制抬 ###</span></span><br><span class=\"line\">log4j.appender.stdout = org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.stdout.Target = System.out</span><br><span class=\"line\">log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.stdout.layout.ConversionPattern = [%<span class=\"number\">-5</span>p] %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; method:%l%n%m%n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出DEBUG 级别以上的日志到=E://logs/error.log ###</span></span><br><span class=\"line\">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.D.File = E://logs/log.log</span><br><span class=\"line\">log4j.appender.D.Append = true</span><br><span class=\"line\">log4j.appender.D.Threshold = DEBUG </span><br><span class=\"line\">log4j.appender.D.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出ERROR 级别以上的日志到=E://logs/error.log ###</span></span><br><span class=\"line\">log4j.appender.E = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.E.File =E://logs/error.log </span><br><span class=\"line\">log4j.appender.E.Append = true</span><br><span class=\"line\">log4j.appender.E.Threshold = ERROR </span><br><span class=\"line\">log4j.appender.E.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.E.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Appender-解释\"><a href=\"#Appender-解释\" class=\"headerlink\" title=\"Appender 解释\"></a>Appender 解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.apache.log4j.ConsoleAppender（控制台），</span><br><span class=\"line\">org.apache.log4j.FileAppender（文件），</span><br><span class=\"line\">org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），</span><br><span class=\"line\">org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），</span><br><span class=\"line\">org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</span><br></pre></td></tr></table></figure>\n<h3 id=\"Layout解释\"><a href=\"#Layout解释\" class=\"headerlink\" title=\"Layout解释\"></a>Layout解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.apache.log4j.HTMLLayout（以 HTML 表格形式布局），</span><br><span class=\"line\">org.apache.log4j.PatternLayout（可以灵活地指定布局模式），</span><br><span class=\"line\">org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），</span><br><span class=\"line\">org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打印参数解释\"><a href=\"#打印参数解释\" class=\"headerlink\" title=\"打印参数解释\"></a>打印参数解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%m   输出代码中指定的消息</span><br><span class=\"line\">%p   输出优先级，即 DEBUG，INFO，WARN，ERROR，FATAL </span><br><span class=\"line\">%r   输出自应用启动到输出该 log 信息耗费的毫秒数 </span><br><span class=\"line\">%c   输出所属的类目，通常就是所在类的全名 </span><br><span class=\"line\">%t   输出产生该日志事件的线程名 </span><br><span class=\"line\">%n   输出一个回车换行符，Windows 平台为 “\\r\\n”，Unix 平台为 “\\n” </span><br><span class=\"line\">%d   输出日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格式，比如：%d&#123;yyy MMM dd HH:mm:ss , SSS&#125;，输出类似：<span class=\"number\">2002</span> 年 <span class=\"number\">10</span> 月 <span class=\"number\">18</span> 日  <span class=\"number\">22</span> ： <span class=\"number\">10</span> ： <span class=\"number\">28</span> ， <span class=\"number\">921</span>  </span><br><span class=\"line\">%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: <span class=\"number\">10</span> )</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>log4j可以以<code>${catalina.home}</code>的形式，使用操作系统的环境变量，或者VM的环境变量</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">### 设置###</span></span><br><span class=\"line\">log4j.rootLogger = debug,stdout,D,E</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出信息到控制抬 ###</span></span><br><span class=\"line\">log4j.appender.stdout = org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.stdout.Target = System.out</span><br><span class=\"line\">log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.stdout.layout.ConversionPattern = [%<span class=\"number\">-5</span>p] %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; method:%l%n%m%n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出DEBUG 级别以上的日志到=E://logs/error.log ###</span></span><br><span class=\"line\">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.D.File = E://logs/log.log</span><br><span class=\"line\">log4j.appender.D.Append = true</span><br><span class=\"line\">log4j.appender.D.Threshold = DEBUG </span><br><span class=\"line\">log4j.appender.D.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 输出ERROR 级别以上的日志到=E://logs/error.log ###</span></span><br><span class=\"line\">log4j.appender.E = org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.E.File =E://logs/error.log </span><br><span class=\"line\">log4j.appender.E.Append = true</span><br><span class=\"line\">log4j.appender.E.Threshold = ERROR </span><br><span class=\"line\">log4j.appender.E.layout = org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.E.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Appender-解释\"><a href=\"#Appender-解释\" class=\"headerlink\" title=\"Appender 解释\"></a>Appender 解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.apache.log4j.ConsoleAppender（控制台），</span><br><span class=\"line\">org.apache.log4j.FileAppender（文件），</span><br><span class=\"line\">org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），</span><br><span class=\"line\">org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），</span><br><span class=\"line\">org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</span><br></pre></td></tr></table></figure>\n<h3 id=\"Layout解释\"><a href=\"#Layout解释\" class=\"headerlink\" title=\"Layout解释\"></a>Layout解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.apache.log4j.HTMLLayout（以 HTML 表格形式布局），</span><br><span class=\"line\">org.apache.log4j.PatternLayout（可以灵活地指定布局模式），</span><br><span class=\"line\">org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），</span><br><span class=\"line\">org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打印参数解释\"><a href=\"#打印参数解释\" class=\"headerlink\" title=\"打印参数解释\"></a>打印参数解释</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%m   输出代码中指定的消息</span><br><span class=\"line\">%p   输出优先级，即 DEBUG，INFO，WARN，ERROR，FATAL </span><br><span class=\"line\">%r   输出自应用启动到输出该 log 信息耗费的毫秒数 </span><br><span class=\"line\">%c   输出所属的类目，通常就是所在类的全名 </span><br><span class=\"line\">%t   输出产生该日志事件的线程名 </span><br><span class=\"line\">%n   输出一个回车换行符，Windows 平台为 “\\r\\n”，Unix 平台为 “\\n” </span><br><span class=\"line\">%d   输出日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格式，比如：%d&#123;yyy MMM dd HH:mm:ss , SSS&#125;，输出类似：<span class=\"number\">2002</span> 年 <span class=\"number\">10</span> 月 <span class=\"number\">18</span> 日  <span class=\"number\">22</span> ： <span class=\"number\">10</span> ： <span class=\"number\">28</span> ， <span class=\"number\">921</span>  </span><br><span class=\"line\">%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: <span class=\"number\">10</span> )</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>log4j可以以<code>${catalina.home}</code>的形式，使用操作系统的环境变量，或者VM的环境变量</p>\n"},{"title":"npm 概述","date":"2017-01-08T04:24:29.000Z","_content":"","source":"_posts/JavaScript-NPM-概述.md","raw":"---\ntitle: npm 概述\ndate: 2017-01-08 12:24:29\ntags: [JavaScript, npm]\ncategories: [JavaScript]\n---\n","slug":"JavaScript-NPM-概述","published":1,"updated":"2020-02-26T14:51:35.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdm000h1ovcejahqjlo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"JavaScript 最佳实践","date":"2017-01-17T06:25:53.000Z","_content":"## UI 松耦合\n### 将JavaScript从CSS中抽离\nIE8及更早版本的IE有一个特性，允许将JavaScript直接插入CSS中。虽然IE9已经不在支持这种特性，但应当注意不要在CSS中嵌入JavaScript代码\n\n### 将CSS从JavaScript中抽离\n所有的样式信息都应当保持在CSS中，当需要通过JavaScript来修改元素样式的时候，最佳方法是操作CSS的`className`。     \n有一种情形可以例外:当需要给页面中的元素作定位，使其相对于另外一个元素或整个页面重新定位。这种计算是无法在CSS中完成的。    \n\n### 将JavaScript从HTML中抽离\n* 最好将所有的JavaScript代码都放入外置文件中，并在页面中通过`<script>`标签引用\n* 在HTML页面中，禁止使用`on`属性挂载事件处理程序。应当使用方法来添加事件\n\n### 将HTML从JavaScript中抽离\n尽量避免将HTML嵌入JavaScript代码中。\n\n## 避免使用全局变量\n全局变量和全局函数带来很多问题，例如命名冲突、代码脆弱性、难以测试、意外的bug。    \n\n### 零全局变量方式\n如果你的代码运行时不需要于其他代码产生交互，可以使用零全局变量方式 \n\n```javascript\n(function(win) {\n    \"use strict\";\n    // body\n}(window));\n```\n如果项目中使用jQuery框架的话，一般用`jQuery`代替`window`。 \n\n## 事件处理\n### 隔离应用逻辑\n将应用逻辑从事件处理程序中抽离出来有两点好处:一是可重用，二是方便测试。  \n\n```javascript \n// bad \nfunction handleClick(event) {\n    var popup = document.getElementById(\"popup\");\n    popup.style.left = event.clientX + \"px\";\n    popup.style.top = event.clientY + \"px\";\n    popup.className = \"reveal\";\n}\naddListener(element, \"click\", handleClick);\n// good\nvar MyApplication = {\n    handleClick: function(event) {\n        this.showPopup(event);\n    },\n    showPopup: function(event) {\n        var popup = document.getElementById(\"popup\");\n        popup.style.left = event.clientX + \"px\";\n        popup.style.top = event.clientY + \"px\";\n        popup.className = \"reveal\";        \n    }\n}\naddListener(element, \"click\", function(event){\n    MyApplication.handleClick(event);\n})\n```\n### 不要分发事件\n上述实例代码还存在一个问题，即`event`被毫无节制地分发，应用逻辑不应当依赖于`event`对像，原因如下:      \n\n* 方法接口没有表明那些数据是必要的。好的API应该明确清楚表明回调传值的用处以及需要传那些值 \n* 最重要的一点是，如果想测试这个方法，必须重新创建一个`event`对象并将它作为参数传入。\n\n最佳方法是让事件处理程序使用`event`对象来处理事件，然后拿到所有需要的数据传给应用逻辑。      \n另外，如果需要对`event`执行任何必要的操作，包括阻止默认事件或阻止事件冒泡，都应该直接包含在事件处理程序中。  \n\n```javascript\nvar MyApplication = {\n    handleClick: function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.showPopup(event.clientX, event.clientY);\n    },\n    showPopup: function(event) {\n        var popup = document.getElementById(\"popup\");\n        popup.style.left = x + \"px\";\n        popup.style.top = y +\"px\";\n        popup.className = \"reveal\";\n    }\n}\n```\n\n## 避免“空比较”\n### 检测原始值 \n如果你希望一个值是字符串、数字、布尔值或`undefined`，最佳选择是使用`typeof`运算符。`typeof`的独特之处在于，将其用于一个未声明的变量也不会报错。      \n`null`一般不应用于检测语句，简单的和`null`比较通常不会包含足够的信息以判断值的类型是否合法。 但是如果所期望的值真的是`null`，则可以直接和`null`比较。这时应当使用`===`或`!==` 。\n\n```javascript\nif (typeof name === \"string\") {\n    anotherName = name.substirng(3);\n}\nif (typeof count === \"number\") {\n    updateCount(count);\n}\nif (typeof found === \"boolean\" && found) {\n    message(\"Found!\");\n}\nif (typeof MyApp === \"undefined\") {\n    MyApp = {};\n}\n// null\nvar element = document.getElementById(\"my-div\");\nif (element !== null) {\n    element.className = \"found\";\n}\n```\n\n### 检测引用值\n* 杜绝使用`typeof`检测`null`的类型，因为`typeof null`会返回`object`\n* 检测自定义类型或者内置类型可以使用`value instanceof Object`来判断，不过因为`instanceof`不仅检测对象的构造器，还检测原型链，因此使用时需注意 \n\n### 检测函数\n检测函数最好的方法是使用`typeof`。  \n\n```javascript\nfunction myFunc() {}\nconsole.log(typeof myFunc === \"function\"); // true\n```\n\n### 检测数组\n检测数组最优雅的解决方案是:   \n\n```javascript\nfunction isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n}\n```\n这种方式在识别内置对象时往往十分有用。    \nECMAScript5 已经将`Array.isArray`正式引入JavaScript。\n\n### 检测属性\n* 判断属性是否存在的最好办法是使用`in`运算符。`in`运算符仅仅简单的判断属性是否存在，而不会读取属性的值 \n* `in`运算符同时会检测对象的原型，如果只想检测实例对象的某个属性是否存在，则使用`hasOwnProperty()`方法\n\n## 将配置数据从代码中分离出来\n配置数据示例:     \n\n* URL\n* 需要展现给用户的字符串\n* 重复的值\n* 设置(比如每页的配置项)\n* 任何可能发生变更的值\n\n最好将配置数据抽离出来，可以放在文件最前面，或者单独一个文件。好处是不用修改JavaScript源码已、方便修改和防止漏改。   \n\n## 抛出自定义错误\n### 抛出错误的方式\n抛出错误时，最好抛出`Error`类型对象\n\n```javascript\nthrow new Error('Something bad happened');\n```\n\n### 抛出错误的好处\n抛出错误有助于调试，例如:\n\n```javascript\nfunction getDivs(element) {\n    if (element && element.getElementsByTagName) {\n        return element.getElementsByTagName(\"div\");\n    }else {\n        throw new Error(\"getDivs() : Argument must be a DOM element.\");\n    }\n}\n```\n\n### 何时检查错误\n* 如果一个函数被已知的实体调用，错误检查很可能没有必要，一般情况下该函数为私有函数\n* 如果不能确定函数被调用的所有地方，则需要进行一些错误检查\n* 抛出错误最佳的地方是在工具函数中  \n* 一旦修复了一个很难调试的错误，尝试增加一两个自定义错误，当再次发生错误时，这将有助于更容易的解决问题\n* 如果正在编写代码，思考一下: “我希望[某些事情]不会发生，如果发生，我的代码会一团糟糕”。这时，如果“某些事情”发生，就抛出一个错误\n* 如果正在编写的代码别人也会使用，思考一下他们使用的方式在特定的情况下抛出错误\n* 抛出错误的目的不是防止错误，而是在错误发生时能更加容易地调试\n\n### 错误类型\n* 可以用`instanceof`判断错误类型，从而处理特定的错误\n* 自定义错误类型可以区别于浏览器抛出的错误\n* 不要将`try-catch`中的`catch`块留空\n\n\n\n## 直接量\n### 数字\n禁止八进制直接量\n### null\n以下场景应当使用`null`\n* 用来初始化一个变量\n* 用来和一个已初始化的变量比较\n* 当函数的入参和返回值\n\n以下场景不应当使用`null`   \n* 不要使用`null`来检测是否传入了某个参数 \n* 不要用`null`来检测一个未初始化的变量  \n理解`null`最好的方式是将它当作对象的占位符。    \n### undefined\n避免在代码中使用`undefined`。  尤其不要将一个变量赋值为`undefined`。\n\n### 对象直接量\n推荐使用对象直接量的方式创建一个对象。    \n\n### 数组直接量\n推荐使用数组直接量的方式创建数组\n\n## 语句\n### switch\n任何情况下，都不应该省略`default`语句。    \n","source":"_posts/JavaScript-JavaScript-最佳实践.md","raw":"---\ntitle: JavaScript 最佳实践\ndate: 2017-01-17 14:25:53\ntags: [JavaScript, effective]\ncategories: [JavaScript]\n---\n## UI 松耦合\n### 将JavaScript从CSS中抽离\nIE8及更早版本的IE有一个特性，允许将JavaScript直接插入CSS中。虽然IE9已经不在支持这种特性，但应当注意不要在CSS中嵌入JavaScript代码\n\n### 将CSS从JavaScript中抽离\n所有的样式信息都应当保持在CSS中，当需要通过JavaScript来修改元素样式的时候，最佳方法是操作CSS的`className`。     \n有一种情形可以例外:当需要给页面中的元素作定位，使其相对于另外一个元素或整个页面重新定位。这种计算是无法在CSS中完成的。    \n\n### 将JavaScript从HTML中抽离\n* 最好将所有的JavaScript代码都放入外置文件中，并在页面中通过`<script>`标签引用\n* 在HTML页面中，禁止使用`on`属性挂载事件处理程序。应当使用方法来添加事件\n\n### 将HTML从JavaScript中抽离\n尽量避免将HTML嵌入JavaScript代码中。\n\n## 避免使用全局变量\n全局变量和全局函数带来很多问题，例如命名冲突、代码脆弱性、难以测试、意外的bug。    \n\n### 零全局变量方式\n如果你的代码运行时不需要于其他代码产生交互，可以使用零全局变量方式 \n\n```javascript\n(function(win) {\n    \"use strict\";\n    // body\n}(window));\n```\n如果项目中使用jQuery框架的话，一般用`jQuery`代替`window`。 \n\n## 事件处理\n### 隔离应用逻辑\n将应用逻辑从事件处理程序中抽离出来有两点好处:一是可重用，二是方便测试。  \n\n```javascript \n// bad \nfunction handleClick(event) {\n    var popup = document.getElementById(\"popup\");\n    popup.style.left = event.clientX + \"px\";\n    popup.style.top = event.clientY + \"px\";\n    popup.className = \"reveal\";\n}\naddListener(element, \"click\", handleClick);\n// good\nvar MyApplication = {\n    handleClick: function(event) {\n        this.showPopup(event);\n    },\n    showPopup: function(event) {\n        var popup = document.getElementById(\"popup\");\n        popup.style.left = event.clientX + \"px\";\n        popup.style.top = event.clientY + \"px\";\n        popup.className = \"reveal\";        \n    }\n}\naddListener(element, \"click\", function(event){\n    MyApplication.handleClick(event);\n})\n```\n### 不要分发事件\n上述实例代码还存在一个问题，即`event`被毫无节制地分发，应用逻辑不应当依赖于`event`对像，原因如下:      \n\n* 方法接口没有表明那些数据是必要的。好的API应该明确清楚表明回调传值的用处以及需要传那些值 \n* 最重要的一点是，如果想测试这个方法，必须重新创建一个`event`对象并将它作为参数传入。\n\n最佳方法是让事件处理程序使用`event`对象来处理事件，然后拿到所有需要的数据传给应用逻辑。      \n另外，如果需要对`event`执行任何必要的操作，包括阻止默认事件或阻止事件冒泡，都应该直接包含在事件处理程序中。  \n\n```javascript\nvar MyApplication = {\n    handleClick: function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.showPopup(event.clientX, event.clientY);\n    },\n    showPopup: function(event) {\n        var popup = document.getElementById(\"popup\");\n        popup.style.left = x + \"px\";\n        popup.style.top = y +\"px\";\n        popup.className = \"reveal\";\n    }\n}\n```\n\n## 避免“空比较”\n### 检测原始值 \n如果你希望一个值是字符串、数字、布尔值或`undefined`，最佳选择是使用`typeof`运算符。`typeof`的独特之处在于，将其用于一个未声明的变量也不会报错。      \n`null`一般不应用于检测语句，简单的和`null`比较通常不会包含足够的信息以判断值的类型是否合法。 但是如果所期望的值真的是`null`，则可以直接和`null`比较。这时应当使用`===`或`!==` 。\n\n```javascript\nif (typeof name === \"string\") {\n    anotherName = name.substirng(3);\n}\nif (typeof count === \"number\") {\n    updateCount(count);\n}\nif (typeof found === \"boolean\" && found) {\n    message(\"Found!\");\n}\nif (typeof MyApp === \"undefined\") {\n    MyApp = {};\n}\n// null\nvar element = document.getElementById(\"my-div\");\nif (element !== null) {\n    element.className = \"found\";\n}\n```\n\n### 检测引用值\n* 杜绝使用`typeof`检测`null`的类型，因为`typeof null`会返回`object`\n* 检测自定义类型或者内置类型可以使用`value instanceof Object`来判断，不过因为`instanceof`不仅检测对象的构造器，还检测原型链，因此使用时需注意 \n\n### 检测函数\n检测函数最好的方法是使用`typeof`。  \n\n```javascript\nfunction myFunc() {}\nconsole.log(typeof myFunc === \"function\"); // true\n```\n\n### 检测数组\n检测数组最优雅的解决方案是:   \n\n```javascript\nfunction isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n}\n```\n这种方式在识别内置对象时往往十分有用。    \nECMAScript5 已经将`Array.isArray`正式引入JavaScript。\n\n### 检测属性\n* 判断属性是否存在的最好办法是使用`in`运算符。`in`运算符仅仅简单的判断属性是否存在，而不会读取属性的值 \n* `in`运算符同时会检测对象的原型，如果只想检测实例对象的某个属性是否存在，则使用`hasOwnProperty()`方法\n\n## 将配置数据从代码中分离出来\n配置数据示例:     \n\n* URL\n* 需要展现给用户的字符串\n* 重复的值\n* 设置(比如每页的配置项)\n* 任何可能发生变更的值\n\n最好将配置数据抽离出来，可以放在文件最前面，或者单独一个文件。好处是不用修改JavaScript源码已、方便修改和防止漏改。   \n\n## 抛出自定义错误\n### 抛出错误的方式\n抛出错误时，最好抛出`Error`类型对象\n\n```javascript\nthrow new Error('Something bad happened');\n```\n\n### 抛出错误的好处\n抛出错误有助于调试，例如:\n\n```javascript\nfunction getDivs(element) {\n    if (element && element.getElementsByTagName) {\n        return element.getElementsByTagName(\"div\");\n    }else {\n        throw new Error(\"getDivs() : Argument must be a DOM element.\");\n    }\n}\n```\n\n### 何时检查错误\n* 如果一个函数被已知的实体调用，错误检查很可能没有必要，一般情况下该函数为私有函数\n* 如果不能确定函数被调用的所有地方，则需要进行一些错误检查\n* 抛出错误最佳的地方是在工具函数中  \n* 一旦修复了一个很难调试的错误，尝试增加一两个自定义错误，当再次发生错误时，这将有助于更容易的解决问题\n* 如果正在编写代码，思考一下: “我希望[某些事情]不会发生，如果发生，我的代码会一团糟糕”。这时，如果“某些事情”发生，就抛出一个错误\n* 如果正在编写的代码别人也会使用，思考一下他们使用的方式在特定的情况下抛出错误\n* 抛出错误的目的不是防止错误，而是在错误发生时能更加容易地调试\n\n### 错误类型\n* 可以用`instanceof`判断错误类型，从而处理特定的错误\n* 自定义错误类型可以区别于浏览器抛出的错误\n* 不要将`try-catch`中的`catch`块留空\n\n\n\n## 直接量\n### 数字\n禁止八进制直接量\n### null\n以下场景应当使用`null`\n* 用来初始化一个变量\n* 用来和一个已初始化的变量比较\n* 当函数的入参和返回值\n\n以下场景不应当使用`null`   \n* 不要使用`null`来检测是否传入了某个参数 \n* 不要用`null`来检测一个未初始化的变量  \n理解`null`最好的方式是将它当作对象的占位符。    \n### undefined\n避免在代码中使用`undefined`。  尤其不要将一个变量赋值为`undefined`。\n\n### 对象直接量\n推荐使用对象直接量的方式创建一个对象。    \n\n### 数组直接量\n推荐使用数组直接量的方式创建数组\n\n## 语句\n### switch\n任何情况下，都不应该省略`default`语句。    \n","slug":"JavaScript-JavaScript-最佳实践","published":1,"updated":"2020-02-26T14:51:35.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdn000i1ovcj8fjhntf","content":"<h2 id=\"UI-松耦合\"><a href=\"#UI-松耦合\" class=\"headerlink\" title=\"UI 松耦合\"></a>UI 松耦合</h2><h3 id=\"将JavaScript从CSS中抽离\"><a href=\"#将JavaScript从CSS中抽离\" class=\"headerlink\" title=\"将JavaScript从CSS中抽离\"></a>将JavaScript从CSS中抽离</h3><p>IE8及更早版本的IE有一个特性，允许将JavaScript直接插入CSS中。虽然IE9已经不在支持这种特性，但应当注意不要在CSS中嵌入JavaScript代码</p>\n<h3 id=\"将CSS从JavaScript中抽离\"><a href=\"#将CSS从JavaScript中抽离\" class=\"headerlink\" title=\"将CSS从JavaScript中抽离\"></a>将CSS从JavaScript中抽离</h3><p>所有的样式信息都应当保持在CSS中，当需要通过JavaScript来修改元素样式的时候，最佳方法是操作CSS的<code>className</code>。<br>有一种情形可以例外:当需要给页面中的元素作定位，使其相对于另外一个元素或整个页面重新定位。这种计算是无法在CSS中完成的。    </p>\n<h3 id=\"将JavaScript从HTML中抽离\"><a href=\"#将JavaScript从HTML中抽离\" class=\"headerlink\" title=\"将JavaScript从HTML中抽离\"></a>将JavaScript从HTML中抽离</h3><ul>\n<li>最好将所有的JavaScript代码都放入外置文件中，并在页面中通过<code>&lt;script&gt;</code>标签引用</li>\n<li>在HTML页面中，禁止使用<code>on</code>属性挂载事件处理程序。应当使用方法来添加事件</li>\n</ul>\n<h3 id=\"将HTML从JavaScript中抽离\"><a href=\"#将HTML从JavaScript中抽离\" class=\"headerlink\" title=\"将HTML从JavaScript中抽离\"></a>将HTML从JavaScript中抽离</h3><p>尽量避免将HTML嵌入JavaScript代码中。</p>\n<h2 id=\"避免使用全局变量\"><a href=\"#避免使用全局变量\" class=\"headerlink\" title=\"避免使用全局变量\"></a>避免使用全局变量</h2><p>全局变量和全局函数带来很多问题，例如命名冲突、代码脆弱性、难以测试、意外的bug。    </p>\n<h3 id=\"零全局变量方式\"><a href=\"#零全局变量方式\" class=\"headerlink\" title=\"零全局变量方式\"></a>零全局变量方式</h3><p>如果你的代码运行时不需要于其他代码产生交互，可以使用零全局变量方式 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">win</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    \"use strict\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">// body</span></span><br><span class=\"line\">&#125;(<span class=\"built_in\">window</span>));</span><br></pre></td></tr></table></figure>\n<p>如果项目中使用jQuery框架的话，一般用<code>jQuery</code>代替<code>window</code>。 </p>\n<h2 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h2><h3 id=\"隔离应用逻辑\"><a href=\"#隔离应用逻辑\" class=\"headerlink\" title=\"隔离应用逻辑\"></a>隔离应用逻辑</h3><p>将应用逻辑从事件处理程序中抽离出来有两点好处:一是可重用，二是方便测试。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleClick</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">    popup.style.left = event.clientX + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">    popup.style.top = event.clientY + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">    popup.className = <span class=\"string\">\"reveal\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addListener(element, <span class=\"string\">\"click\"</span>, handleClick);</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> MyApplication = &#123;</span><br><span class=\"line\">    handleClick: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.showPopup(event);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    showPopup: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">        popup.style.left = event.clientX + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.style.top = event.clientY + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.className = <span class=\"string\">\"reveal\"</span>;        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addListener(element, <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    MyApplication.handleClick(event);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"不要分发事件\"><a href=\"#不要分发事件\" class=\"headerlink\" title=\"不要分发事件\"></a>不要分发事件</h3><p>上述实例代码还存在一个问题，即<code>event</code>被毫无节制地分发，应用逻辑不应当依赖于<code>event</code>对像，原因如下:      </p>\n<ul>\n<li>方法接口没有表明那些数据是必要的。好的API应该明确清楚表明回调传值的用处以及需要传那些值 </li>\n<li>最重要的一点是，如果想测试这个方法，必须重新创建一个<code>event</code>对象并将它作为参数传入。</li>\n</ul>\n<p>最佳方法是让事件处理程序使用<code>event</code>对象来处理事件，然后拿到所有需要的数据传给应用逻辑。<br>另外，如果需要对<code>event</code>执行任何必要的操作，包括阻止默认事件或阻止事件冒泡，都应该直接包含在事件处理程序中。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyApplication = &#123;</span><br><span class=\"line\">    handleClick: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        event.preventDefault();</span><br><span class=\"line\">        event.stopPropagation();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.showPopup(event.clientX, event.clientY);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    showPopup: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">        popup.style.left = x + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.style.top = y +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.className = <span class=\"string\">\"reveal\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"避免“空比较”\"><a href=\"#避免“空比较”\" class=\"headerlink\" title=\"避免“空比较”\"></a>避免“空比较”</h2><h3 id=\"检测原始值\"><a href=\"#检测原始值\" class=\"headerlink\" title=\"检测原始值\"></a>检测原始值</h3><p>如果你希望一个值是字符串、数字、布尔值或<code>undefined</code>，最佳选择是使用<code>typeof</code>运算符。<code>typeof</code>的独特之处在于，将其用于一个未声明的变量也不会报错。<br><code>null</code>一般不应用于检测语句，简单的和<code>null</code>比较通常不会包含足够的信息以判断值的类型是否合法。 但是如果所期望的值真的是<code>null</code>，则可以直接和<code>null</code>比较。这时应当使用<code>===</code>或<code>!==</code> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> name === <span class=\"string\">\"string\"</span>) &#123;</span><br><span class=\"line\">    anotherName = name.substirng(<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> count === <span class=\"string\">\"number\"</span>) &#123;</span><br><span class=\"line\">    updateCount(count);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> found === <span class=\"string\">\"boolean\"</span> &amp;&amp; found) &#123;</span><br><span class=\"line\">    message(<span class=\"string\">\"Found!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> MyApp === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">    MyApp = &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"my-div\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (element !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    element.className = <span class=\"string\">\"found\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测引用值\"><a href=\"#检测引用值\" class=\"headerlink\" title=\"检测引用值\"></a>检测引用值</h3><ul>\n<li>杜绝使用<code>typeof</code>检测<code>null</code>的类型，因为<code>typeof null</code>会返回<code>object</code></li>\n<li>检测自定义类型或者内置类型可以使用<code>value instanceof Object</code>来判断，不过因为<code>instanceof</code>不仅检测对象的构造器，还检测原型链，因此使用时需注意 </li>\n</ul>\n<h3 id=\"检测函数\"><a href=\"#检测函数\" class=\"headerlink\" title=\"检测函数\"></a>检测函数</h3><p>检测函数最好的方法是使用<code>typeof</code>。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunc</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> myFunc === <span class=\"string\">\"function\"</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测数组\"><a href=\"#检测数组\" class=\"headerlink\" title=\"检测数组\"></a>检测数组</h3><p>检测数组最优雅的解决方案是:   </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArray</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种方式在识别内置对象时往往十分有用。<br>ECMAScript5 已经将<code>Array.isArray</code>正式引入JavaScript。</p>\n<h3 id=\"检测属性\"><a href=\"#检测属性\" class=\"headerlink\" title=\"检测属性\"></a>检测属性</h3><ul>\n<li>判断属性是否存在的最好办法是使用<code>in</code>运算符。<code>in</code>运算符仅仅简单的判断属性是否存在，而不会读取属性的值 </li>\n<li><code>in</code>运算符同时会检测对象的原型，如果只想检测实例对象的某个属性是否存在，则使用<code>hasOwnProperty()</code>方法</li>\n</ul>\n<h2 id=\"将配置数据从代码中分离出来\"><a href=\"#将配置数据从代码中分离出来\" class=\"headerlink\" title=\"将配置数据从代码中分离出来\"></a>将配置数据从代码中分离出来</h2><p>配置数据示例:     </p>\n<ul>\n<li>URL</li>\n<li>需要展现给用户的字符串</li>\n<li>重复的值</li>\n<li>设置(比如每页的配置项)</li>\n<li>任何可能发生变更的值</li>\n</ul>\n<p>最好将配置数据抽离出来，可以放在文件最前面，或者单独一个文件。好处是不用修改JavaScript源码已、方便修改和防止漏改。   </p>\n<h2 id=\"抛出自定义错误\"><a href=\"#抛出自定义错误\" class=\"headerlink\" title=\"抛出自定义错误\"></a>抛出自定义错误</h2><h3 id=\"抛出错误的方式\"><a href=\"#抛出错误的方式\" class=\"headerlink\" title=\"抛出错误的方式\"></a>抛出错误的方式</h3><p>抛出错误时，最好抛出<code>Error</code>类型对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Something bad happened'</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"抛出错误的好处\"><a href=\"#抛出错误的好处\" class=\"headerlink\" title=\"抛出错误的好处\"></a>抛出错误的好处</h3><p>抛出错误有助于调试，例如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDivs</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element &amp;&amp; element.getElementsByTagName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> element.getElementsByTagName(<span class=\"string\">\"div\"</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"getDivs() : Argument must be a DOM element.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"何时检查错误\"><a href=\"#何时检查错误\" class=\"headerlink\" title=\"何时检查错误\"></a>何时检查错误</h3><ul>\n<li>如果一个函数被已知的实体调用，错误检查很可能没有必要，一般情况下该函数为私有函数</li>\n<li>如果不能确定函数被调用的所有地方，则需要进行一些错误检查</li>\n<li>抛出错误最佳的地方是在工具函数中  </li>\n<li>一旦修复了一个很难调试的错误，尝试增加一两个自定义错误，当再次发生错误时，这将有助于更容易的解决问题</li>\n<li>如果正在编写代码，思考一下: “我希望[某些事情]不会发生，如果发生，我的代码会一团糟糕”。这时，如果“某些事情”发生，就抛出一个错误</li>\n<li>如果正在编写的代码别人也会使用，思考一下他们使用的方式在特定的情况下抛出错误</li>\n<li>抛出错误的目的不是防止错误，而是在错误发生时能更加容易地调试</li>\n</ul>\n<h3 id=\"错误类型\"><a href=\"#错误类型\" class=\"headerlink\" title=\"错误类型\"></a>错误类型</h3><ul>\n<li>可以用<code>instanceof</code>判断错误类型，从而处理特定的错误</li>\n<li>自定义错误类型可以区别于浏览器抛出的错误</li>\n<li>不要将<code>try-catch</code>中的<code>catch</code>块留空</li>\n</ul>\n<h2 id=\"直接量\"><a href=\"#直接量\" class=\"headerlink\" title=\"直接量\"></a>直接量</h2><h3 id=\"数字\"><a href=\"#数字\" class=\"headerlink\" title=\"数字\"></a>数字</h3><p>禁止八进制直接量</p>\n<h3 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h3><p>以下场景应当使用<code>null</code></p>\n<ul>\n<li>用来初始化一个变量</li>\n<li>用来和一个已初始化的变量比较</li>\n<li>当函数的入参和返回值</li>\n</ul>\n<p>以下场景不应当使用<code>null</code>   </p>\n<ul>\n<li>不要使用<code>null</code>来检测是否传入了某个参数 </li>\n<li>不要用<code>null</code>来检测一个未初始化的变量<br>理解<code>null</code>最好的方式是将它当作对象的占位符。    <h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3>避免在代码中使用<code>undefined</code>。  尤其不要将一个变量赋值为<code>undefined</code>。</li>\n</ul>\n<h3 id=\"对象直接量\"><a href=\"#对象直接量\" class=\"headerlink\" title=\"对象直接量\"></a>对象直接量</h3><p>推荐使用对象直接量的方式创建一个对象。    </p>\n<h3 id=\"数组直接量\"><a href=\"#数组直接量\" class=\"headerlink\" title=\"数组直接量\"></a>数组直接量</h3><p>推荐使用数组直接量的方式创建数组</p>\n<h2 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h2><h3 id=\"switch\"><a href=\"#switch\" class=\"headerlink\" title=\"switch\"></a>switch</h3><p>任何情况下，都不应该省略<code>default</code>语句。    </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"UI-松耦合\"><a href=\"#UI-松耦合\" class=\"headerlink\" title=\"UI 松耦合\"></a>UI 松耦合</h2><h3 id=\"将JavaScript从CSS中抽离\"><a href=\"#将JavaScript从CSS中抽离\" class=\"headerlink\" title=\"将JavaScript从CSS中抽离\"></a>将JavaScript从CSS中抽离</h3><p>IE8及更早版本的IE有一个特性，允许将JavaScript直接插入CSS中。虽然IE9已经不在支持这种特性，但应当注意不要在CSS中嵌入JavaScript代码</p>\n<h3 id=\"将CSS从JavaScript中抽离\"><a href=\"#将CSS从JavaScript中抽离\" class=\"headerlink\" title=\"将CSS从JavaScript中抽离\"></a>将CSS从JavaScript中抽离</h3><p>所有的样式信息都应当保持在CSS中，当需要通过JavaScript来修改元素样式的时候，最佳方法是操作CSS的<code>className</code>。<br>有一种情形可以例外:当需要给页面中的元素作定位，使其相对于另外一个元素或整个页面重新定位。这种计算是无法在CSS中完成的。    </p>\n<h3 id=\"将JavaScript从HTML中抽离\"><a href=\"#将JavaScript从HTML中抽离\" class=\"headerlink\" title=\"将JavaScript从HTML中抽离\"></a>将JavaScript从HTML中抽离</h3><ul>\n<li>最好将所有的JavaScript代码都放入外置文件中，并在页面中通过<code>&lt;script&gt;</code>标签引用</li>\n<li>在HTML页面中，禁止使用<code>on</code>属性挂载事件处理程序。应当使用方法来添加事件</li>\n</ul>\n<h3 id=\"将HTML从JavaScript中抽离\"><a href=\"#将HTML从JavaScript中抽离\" class=\"headerlink\" title=\"将HTML从JavaScript中抽离\"></a>将HTML从JavaScript中抽离</h3><p>尽量避免将HTML嵌入JavaScript代码中。</p>\n<h2 id=\"避免使用全局变量\"><a href=\"#避免使用全局变量\" class=\"headerlink\" title=\"避免使用全局变量\"></a>避免使用全局变量</h2><p>全局变量和全局函数带来很多问题，例如命名冲突、代码脆弱性、难以测试、意外的bug。    </p>\n<h3 id=\"零全局变量方式\"><a href=\"#零全局变量方式\" class=\"headerlink\" title=\"零全局变量方式\"></a>零全局变量方式</h3><p>如果你的代码运行时不需要于其他代码产生交互，可以使用零全局变量方式 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">win</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    \"use strict\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">// body</span></span><br><span class=\"line\">&#125;(<span class=\"built_in\">window</span>));</span><br></pre></td></tr></table></figure>\n<p>如果项目中使用jQuery框架的话，一般用<code>jQuery</code>代替<code>window</code>。 </p>\n<h2 id=\"事件处理\"><a href=\"#事件处理\" class=\"headerlink\" title=\"事件处理\"></a>事件处理</h2><h3 id=\"隔离应用逻辑\"><a href=\"#隔离应用逻辑\" class=\"headerlink\" title=\"隔离应用逻辑\"></a>隔离应用逻辑</h3><p>将应用逻辑从事件处理程序中抽离出来有两点好处:一是可重用，二是方便测试。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleClick</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">    popup.style.left = event.clientX + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">    popup.style.top = event.clientY + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">    popup.className = <span class=\"string\">\"reveal\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addListener(element, <span class=\"string\">\"click\"</span>, handleClick);</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> MyApplication = &#123;</span><br><span class=\"line\">    handleClick: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.showPopup(event);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    showPopup: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">        popup.style.left = event.clientX + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.style.top = event.clientY + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.className = <span class=\"string\">\"reveal\"</span>;        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addListener(element, <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    MyApplication.handleClick(event);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"不要分发事件\"><a href=\"#不要分发事件\" class=\"headerlink\" title=\"不要分发事件\"></a>不要分发事件</h3><p>上述实例代码还存在一个问题，即<code>event</code>被毫无节制地分发，应用逻辑不应当依赖于<code>event</code>对像，原因如下:      </p>\n<ul>\n<li>方法接口没有表明那些数据是必要的。好的API应该明确清楚表明回调传值的用处以及需要传那些值 </li>\n<li>最重要的一点是，如果想测试这个方法，必须重新创建一个<code>event</code>对象并将它作为参数传入。</li>\n</ul>\n<p>最佳方法是让事件处理程序使用<code>event</code>对象来处理事件，然后拿到所有需要的数据传给应用逻辑。<br>另外，如果需要对<code>event</code>执行任何必要的操作，包括阻止默认事件或阻止事件冒泡，都应该直接包含在事件处理程序中。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyApplication = &#123;</span><br><span class=\"line\">    handleClick: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        event.preventDefault();</span><br><span class=\"line\">        event.stopPropagation();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.showPopup(event.clientX, event.clientY);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    showPopup: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> popup = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"popup\"</span>);</span><br><span class=\"line\">        popup.style.left = x + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.style.top = y +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        popup.className = <span class=\"string\">\"reveal\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"避免“空比较”\"><a href=\"#避免“空比较”\" class=\"headerlink\" title=\"避免“空比较”\"></a>避免“空比较”</h2><h3 id=\"检测原始值\"><a href=\"#检测原始值\" class=\"headerlink\" title=\"检测原始值\"></a>检测原始值</h3><p>如果你希望一个值是字符串、数字、布尔值或<code>undefined</code>，最佳选择是使用<code>typeof</code>运算符。<code>typeof</code>的独特之处在于，将其用于一个未声明的变量也不会报错。<br><code>null</code>一般不应用于检测语句，简单的和<code>null</code>比较通常不会包含足够的信息以判断值的类型是否合法。 但是如果所期望的值真的是<code>null</code>，则可以直接和<code>null</code>比较。这时应当使用<code>===</code>或<code>!==</code> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> name === <span class=\"string\">\"string\"</span>) &#123;</span><br><span class=\"line\">    anotherName = name.substirng(<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> count === <span class=\"string\">\"number\"</span>) &#123;</span><br><span class=\"line\">    updateCount(count);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> found === <span class=\"string\">\"boolean\"</span> &amp;&amp; found) &#123;</span><br><span class=\"line\">    message(<span class=\"string\">\"Found!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> MyApp === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">    MyApp = &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"my-div\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (element !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    element.className = <span class=\"string\">\"found\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测引用值\"><a href=\"#检测引用值\" class=\"headerlink\" title=\"检测引用值\"></a>检测引用值</h3><ul>\n<li>杜绝使用<code>typeof</code>检测<code>null</code>的类型，因为<code>typeof null</code>会返回<code>object</code></li>\n<li>检测自定义类型或者内置类型可以使用<code>value instanceof Object</code>来判断，不过因为<code>instanceof</code>不仅检测对象的构造器，还检测原型链，因此使用时需注意 </li>\n</ul>\n<h3 id=\"检测函数\"><a href=\"#检测函数\" class=\"headerlink\" title=\"检测函数\"></a>检测函数</h3><p>检测函数最好的方法是使用<code>typeof</code>。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunc</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> myFunc === <span class=\"string\">\"function\"</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测数组\"><a href=\"#检测数组\" class=\"headerlink\" title=\"检测数组\"></a>检测数组</h3><p>检测数组最优雅的解决方案是:   </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArray</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种方式在识别内置对象时往往十分有用。<br>ECMAScript5 已经将<code>Array.isArray</code>正式引入JavaScript。</p>\n<h3 id=\"检测属性\"><a href=\"#检测属性\" class=\"headerlink\" title=\"检测属性\"></a>检测属性</h3><ul>\n<li>判断属性是否存在的最好办法是使用<code>in</code>运算符。<code>in</code>运算符仅仅简单的判断属性是否存在，而不会读取属性的值 </li>\n<li><code>in</code>运算符同时会检测对象的原型，如果只想检测实例对象的某个属性是否存在，则使用<code>hasOwnProperty()</code>方法</li>\n</ul>\n<h2 id=\"将配置数据从代码中分离出来\"><a href=\"#将配置数据从代码中分离出来\" class=\"headerlink\" title=\"将配置数据从代码中分离出来\"></a>将配置数据从代码中分离出来</h2><p>配置数据示例:     </p>\n<ul>\n<li>URL</li>\n<li>需要展现给用户的字符串</li>\n<li>重复的值</li>\n<li>设置(比如每页的配置项)</li>\n<li>任何可能发生变更的值</li>\n</ul>\n<p>最好将配置数据抽离出来，可以放在文件最前面，或者单独一个文件。好处是不用修改JavaScript源码已、方便修改和防止漏改。   </p>\n<h2 id=\"抛出自定义错误\"><a href=\"#抛出自定义错误\" class=\"headerlink\" title=\"抛出自定义错误\"></a>抛出自定义错误</h2><h3 id=\"抛出错误的方式\"><a href=\"#抛出错误的方式\" class=\"headerlink\" title=\"抛出错误的方式\"></a>抛出错误的方式</h3><p>抛出错误时，最好抛出<code>Error</code>类型对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Something bad happened'</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"抛出错误的好处\"><a href=\"#抛出错误的好处\" class=\"headerlink\" title=\"抛出错误的好处\"></a>抛出错误的好处</h3><p>抛出错误有助于调试，例如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDivs</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element &amp;&amp; element.getElementsByTagName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> element.getElementsByTagName(<span class=\"string\">\"div\"</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"getDivs() : Argument must be a DOM element.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"何时检查错误\"><a href=\"#何时检查错误\" class=\"headerlink\" title=\"何时检查错误\"></a>何时检查错误</h3><ul>\n<li>如果一个函数被已知的实体调用，错误检查很可能没有必要，一般情况下该函数为私有函数</li>\n<li>如果不能确定函数被调用的所有地方，则需要进行一些错误检查</li>\n<li>抛出错误最佳的地方是在工具函数中  </li>\n<li>一旦修复了一个很难调试的错误，尝试增加一两个自定义错误，当再次发生错误时，这将有助于更容易的解决问题</li>\n<li>如果正在编写代码，思考一下: “我希望[某些事情]不会发生，如果发生，我的代码会一团糟糕”。这时，如果“某些事情”发生，就抛出一个错误</li>\n<li>如果正在编写的代码别人也会使用，思考一下他们使用的方式在特定的情况下抛出错误</li>\n<li>抛出错误的目的不是防止错误，而是在错误发生时能更加容易地调试</li>\n</ul>\n<h3 id=\"错误类型\"><a href=\"#错误类型\" class=\"headerlink\" title=\"错误类型\"></a>错误类型</h3><ul>\n<li>可以用<code>instanceof</code>判断错误类型，从而处理特定的错误</li>\n<li>自定义错误类型可以区别于浏览器抛出的错误</li>\n<li>不要将<code>try-catch</code>中的<code>catch</code>块留空</li>\n</ul>\n<h2 id=\"直接量\"><a href=\"#直接量\" class=\"headerlink\" title=\"直接量\"></a>直接量</h2><h3 id=\"数字\"><a href=\"#数字\" class=\"headerlink\" title=\"数字\"></a>数字</h3><p>禁止八进制直接量</p>\n<h3 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h3><p>以下场景应当使用<code>null</code></p>\n<ul>\n<li>用来初始化一个变量</li>\n<li>用来和一个已初始化的变量比较</li>\n<li>当函数的入参和返回值</li>\n</ul>\n<p>以下场景不应当使用<code>null</code>   </p>\n<ul>\n<li>不要使用<code>null</code>来检测是否传入了某个参数 </li>\n<li>不要用<code>null</code>来检测一个未初始化的变量<br>理解<code>null</code>最好的方式是将它当作对象的占位符。    <h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3>避免在代码中使用<code>undefined</code>。  尤其不要将一个变量赋值为<code>undefined</code>。</li>\n</ul>\n<h3 id=\"对象直接量\"><a href=\"#对象直接量\" class=\"headerlink\" title=\"对象直接量\"></a>对象直接量</h3><p>推荐使用对象直接量的方式创建一个对象。    </p>\n<h3 id=\"数组直接量\"><a href=\"#数组直接量\" class=\"headerlink\" title=\"数组直接量\"></a>数组直接量</h3><p>推荐使用数组直接量的方式创建数组</p>\n<h2 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h2><h3 id=\"switch\"><a href=\"#switch\" class=\"headerlink\" title=\"switch\"></a>switch</h3><p>任何情况下，都不应该省略<code>default</code>语句。    </p>\n"},{"title":"Mac 下安装 Node.js","date":"2017-03-25T11:47:43.000Z","_content":"\n## 前言\n\n安装 Node.js （以下简称node）有很多种方式。在 Mac 下常用的方式是使用 Homebrew 进行安装。不过由于 node 更新频繁，在开发过程中很有可能会有切换 node 版本的需求，因此建议使用 nvm 安装管理 node。Homebrew 上面虽然有 nvm 但是官方不建议使用 Homebrew 进行安装。我也用过 Homebrew 安装过，不过容易出问题，最终又卸载了。 \n\n本文包括两方面内容： \n\n*  安装 nvm\n* 使用 nvm 管理 node 版本\n\n## 安装 nvm\n\n如果用过 Homebrew 安装过 nvm 建议您卸载了，`brew uninstall nvm`\n\n详细的安装流程可以参阅官方文档 [nvm](https://github.com/creationix/nvm)\n\n安装命令如下： \n\n```shel\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash\n```\n\n安装完毕后，不需要额外的配置即可使用 ，以下内容会被自动的添加到 profile 文件中\n\n```shell\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n## 使用 nvm 管理 Node.js\n\nnvm 切换 node 版本的原理无非通过是修改环境变量，指向不同版本的 node 所在的路径。\n\n以下是常有的 nvm 命令，更多命令参考 [nvm github 地址](https://github.com/creationix/nvm/blob/master/README.markdown)\n\n`nvm ls-remote` 查看可安装的版本\n\n`nvm install <version>` 安装指定版本的 node\n\n` nvm ls`  列出目前安装的版本\n\n`nvm use <version>` 切换版本，`use`  命令只对当前 shell 窗口有效\n\n`nvm alias default <version>` 设置默认的 node 版本，对所有 shell 窗口有效\n\n`nvm install node`  安装最新的node\n\n`nvm use node`  使用最新的node\n\n","source":"_posts/JavaScript-node-Mac 安装 Node.js .md","raw":"---\ntitle: Mac 下安装 Node.js\ndate: 2017-03-25 19:47:43\ntags: [JavaScript,  Node]\ncategories: [Node]\n---\n\n## 前言\n\n安装 Node.js （以下简称node）有很多种方式。在 Mac 下常用的方式是使用 Homebrew 进行安装。不过由于 node 更新频繁，在开发过程中很有可能会有切换 node 版本的需求，因此建议使用 nvm 安装管理 node。Homebrew 上面虽然有 nvm 但是官方不建议使用 Homebrew 进行安装。我也用过 Homebrew 安装过，不过容易出问题，最终又卸载了。 \n\n本文包括两方面内容： \n\n*  安装 nvm\n* 使用 nvm 管理 node 版本\n\n## 安装 nvm\n\n如果用过 Homebrew 安装过 nvm 建议您卸载了，`brew uninstall nvm`\n\n详细的安装流程可以参阅官方文档 [nvm](https://github.com/creationix/nvm)\n\n安装命令如下： \n\n```shel\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash\n```\n\n安装完毕后，不需要额外的配置即可使用 ，以下内容会被自动的添加到 profile 文件中\n\n```shell\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n## 使用 nvm 管理 Node.js\n\nnvm 切换 node 版本的原理无非通过是修改环境变量，指向不同版本的 node 所在的路径。\n\n以下是常有的 nvm 命令，更多命令参考 [nvm github 地址](https://github.com/creationix/nvm/blob/master/README.markdown)\n\n`nvm ls-remote` 查看可安装的版本\n\n`nvm install <version>` 安装指定版本的 node\n\n` nvm ls`  列出目前安装的版本\n\n`nvm use <version>` 切换版本，`use`  命令只对当前 shell 窗口有效\n\n`nvm alias default <version>` 设置默认的 node 版本，对所有 shell 窗口有效\n\n`nvm install node`  安装最新的node\n\n`nvm use node`  使用最新的node\n\n","slug":"JavaScript-node-Mac 安装 Node.js ","published":1,"updated":"2020-02-26T14:51:35.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdn000j1ovcx6f6r9sg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>安装 Node.js （以下简称node）有很多种方式。在 Mac 下常用的方式是使用 Homebrew 进行安装。不过由于 node 更新频繁，在开发过程中很有可能会有切换 node 版本的需求，因此建议使用 nvm 安装管理 node。Homebrew 上面虽然有 nvm 但是官方不建议使用 Homebrew 进行安装。我也用过 Homebrew 安装过，不过容易出问题，最终又卸载了。 </p>\n<p>本文包括两方面内容： </p>\n<ul>\n<li>安装 nvm</li>\n<li>使用 nvm 管理 node 版本</li>\n</ul>\n<h2 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h2><p>如果用过 Homebrew 安装过 nvm 建议您卸载了，<code>brew uninstall nvm</code></p>\n<p>详细的安装流程可以参阅官方文档 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a></p>\n<p>安装命令如下： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.1&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>安装完毕后，不需要额外的配置即可使用 ，以下内容会被自动的添加到 profile 文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=\"$HOME/.nvm\"</span><br><span class=\"line\">[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; . \"$NVM_DIR/nvm.sh\" # This loads nvm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-nvm-管理-Node-js\"><a href=\"#使用-nvm-管理-Node-js\" class=\"headerlink\" title=\"使用 nvm 管理 Node.js\"></a>使用 nvm 管理 Node.js</h2><p>nvm 切换 node 版本的原理无非通过是修改环境变量，指向不同版本的 node 所在的路径。</p>\n<p>以下是常有的 nvm 命令，更多命令参考 <a href=\"https://github.com/creationix/nvm/blob/master/README.markdown\" target=\"_blank\" rel=\"noopener\">nvm github 地址</a></p>\n<p><code>nvm ls-remote</code> 查看可安装的版本</p>\n<p><code>nvm install &lt;version&gt;</code> 安装指定版本的 node</p>\n<p><code>nvm ls</code>  列出目前安装的版本</p>\n<p><code>nvm use &lt;version&gt;</code> 切换版本，<code>use</code>  命令只对当前 shell 窗口有效</p>\n<p><code>nvm alias default &lt;version&gt;</code> 设置默认的 node 版本，对所有 shell 窗口有效</p>\n<p><code>nvm install node</code>  安装最新的node</p>\n<p><code>nvm use node</code>  使用最新的node</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>安装 Node.js （以下简称node）有很多种方式。在 Mac 下常用的方式是使用 Homebrew 进行安装。不过由于 node 更新频繁，在开发过程中很有可能会有切换 node 版本的需求，因此建议使用 nvm 安装管理 node。Homebrew 上面虽然有 nvm 但是官方不建议使用 Homebrew 进行安装。我也用过 Homebrew 安装过，不过容易出问题，最终又卸载了。 </p>\n<p>本文包括两方面内容： </p>\n<ul>\n<li>安装 nvm</li>\n<li>使用 nvm 管理 node 版本</li>\n</ul>\n<h2 id=\"安装-nvm\"><a href=\"#安装-nvm\" class=\"headerlink\" title=\"安装 nvm\"></a>安装 nvm</h2><p>如果用过 Homebrew 安装过 nvm 建议您卸载了，<code>brew uninstall nvm</code></p>\n<p>详细的安装流程可以参阅官方文档 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm</a></p>\n<p>安装命令如下： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.1&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>安装完毕后，不需要额外的配置即可使用 ，以下内容会被自动的添加到 profile 文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=\"$HOME/.nvm\"</span><br><span class=\"line\">[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; . \"$NVM_DIR/nvm.sh\" # This loads nvm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-nvm-管理-Node-js\"><a href=\"#使用-nvm-管理-Node-js\" class=\"headerlink\" title=\"使用 nvm 管理 Node.js\"></a>使用 nvm 管理 Node.js</h2><p>nvm 切换 node 版本的原理无非通过是修改环境变量，指向不同版本的 node 所在的路径。</p>\n<p>以下是常有的 nvm 命令，更多命令参考 <a href=\"https://github.com/creationix/nvm/blob/master/README.markdown\" target=\"_blank\" rel=\"noopener\">nvm github 地址</a></p>\n<p><code>nvm ls-remote</code> 查看可安装的版本</p>\n<p><code>nvm install &lt;version&gt;</code> 安装指定版本的 node</p>\n<p><code>nvm ls</code>  列出目前安装的版本</p>\n<p><code>nvm use &lt;version&gt;</code> 切换版本，<code>use</code>  命令只对当前 shell 窗口有效</p>\n<p><code>nvm alias default &lt;version&gt;</code> 设置默认的 node 版本，对所有 shell 窗口有效</p>\n<p><code>nvm install node</code>  安装最新的node</p>\n<p><code>nvm use node</code>  使用最新的node</p>\n"},{"title":"Linux 清空或删除文件","date":"2016-12-09T14:35:00.000Z","_content":"## 使用重定向的方式清空文件\n```shell\n> access.log # 在Mac下没有成功\n: > access.log # 在Mac下成功\ncat /dev/null > access.log # 使用cat 显示/dev/null中的内容，然后重定向access.log文件中\ncp /dev/null access.log # 复制/dev/null 的内容到access.log文件，达到清空的目的。\necho \" \" > access.log #使用echo 将空白字符重定向access.log中\necho > access.log # 同上\necho -n > access.log\n```\n\n> 在Linux中，`null`设备基本上被用来丢弃某个进程不再需要的输出流，或者作为某个输入流的空白文件。\n\n## 使用`truncate`\n`truncate`可用来将一个文件缩小或者扩展到某个给定的大小。Mac中不存在该命令\n```shell\ntruncate -s 0 access.log #使用-s 指定文件大小\n```\n","source":"_posts/Linux-清空或删除文件.md","raw":"---\ntitle: Linux 清空或删除文件\ndate: 2016-12-09 22:35:00\ntags: [Linux, shell]\ncategories: [shell]\n---\n## 使用重定向的方式清空文件\n```shell\n> access.log # 在Mac下没有成功\n: > access.log # 在Mac下成功\ncat /dev/null > access.log # 使用cat 显示/dev/null中的内容，然后重定向access.log文件中\ncp /dev/null access.log # 复制/dev/null 的内容到access.log文件，达到清空的目的。\necho \" \" > access.log #使用echo 将空白字符重定向access.log中\necho > access.log # 同上\necho -n > access.log\n```\n\n> 在Linux中，`null`设备基本上被用来丢弃某个进程不再需要的输出流，或者作为某个输入流的空白文件。\n\n## 使用`truncate`\n`truncate`可用来将一个文件缩小或者扩展到某个给定的大小。Mac中不存在该命令\n```shell\ntruncate -s 0 access.log #使用-s 指定文件大小\n```\n","slug":"Linux-清空或删除文件","published":1,"updated":"2020-02-26T14:51:35.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdo000k1ovcuhrvrds5","content":"<h2 id=\"使用重定向的方式清空文件\"><a href=\"#使用重定向的方式清空文件\" class=\"headerlink\" title=\"使用重定向的方式清空文件\"></a>使用重定向的方式清空文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> access.log <span class=\"comment\"># 在Mac下没有成功</span></span></span><br><span class=\"line\">: &gt; access.log # 在Mac下成功</span><br><span class=\"line\">cat /dev/null &gt; access.log # 使用cat 显示/dev/null中的内容，然后重定向access.log文件中</span><br><span class=\"line\">cp /dev/null access.log # 复制/dev/null 的内容到access.log文件，达到清空的目的。</span><br><span class=\"line\">echo \" \" &gt; access.log #使用echo 将空白字符重定向access.log中</span><br><span class=\"line\">echo &gt; access.log # 同上</span><br><span class=\"line\">echo -n &gt; access.log</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在Linux中，<code>null</code>设备基本上被用来丢弃某个进程不再需要的输出流，或者作为某个输入流的空白文件。</p>\n</blockquote>\n<h2 id=\"使用truncate\"><a href=\"#使用truncate\" class=\"headerlink\" title=\"使用truncate\"></a>使用<code>truncate</code></h2><p><code>truncate</code>可用来将一个文件缩小或者扩展到某个给定的大小。Mac中不存在该命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">truncate -s 0 access.log #使用-s 指定文件大小</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用重定向的方式清空文件\"><a href=\"#使用重定向的方式清空文件\" class=\"headerlink\" title=\"使用重定向的方式清空文件\"></a>使用重定向的方式清空文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> access.log <span class=\"comment\"># 在Mac下没有成功</span></span></span><br><span class=\"line\">: &gt; access.log # 在Mac下成功</span><br><span class=\"line\">cat /dev/null &gt; access.log # 使用cat 显示/dev/null中的内容，然后重定向access.log文件中</span><br><span class=\"line\">cp /dev/null access.log # 复制/dev/null 的内容到access.log文件，达到清空的目的。</span><br><span class=\"line\">echo \" \" &gt; access.log #使用echo 将空白字符重定向access.log中</span><br><span class=\"line\">echo &gt; access.log # 同上</span><br><span class=\"line\">echo -n &gt; access.log</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在Linux中，<code>null</code>设备基本上被用来丢弃某个进程不再需要的输出流，或者作为某个输入流的空白文件。</p>\n</blockquote>\n<h2 id=\"使用truncate\"><a href=\"#使用truncate\" class=\"headerlink\" title=\"使用truncate\"></a>使用<code>truncate</code></h2><p><code>truncate</code>可用来将一个文件缩小或者扩展到某个给定的大小。Mac中不存在该命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">truncate -s 0 access.log #使用-s 指定文件大小</span><br></pre></td></tr></table></figure>\n"},{"title":"JavaScript之表达式和运算符","date":"2016-09-03T07:33:59.000Z","_content":"\n## 表达式\n\n* 数组初始化表达式中，逗号之间的元素可以省略，空位会填充`undefined`。 \n* 在对象初始化表达式中，属性名称可以是字符串而不是标识符。  \n\n## 运算符概述\n\n&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  \n\n|运算符 |操作| A | N |类型|\n| :-- | :--|:-|:- | :--|\n| ++ | 前/后增量 | R | 1 | lval -> num|\n| -- | 前/后减量 | R | 1 | lval -> num|\n| - | 求反 | R | 1 | num->num |\n| + | 转换为数字 | R | 1 | num->num |\n| ~ | 按位求反 | R | 1 | int->int |\n| ! | 逻辑非 | R | 1 | bool->bool|\n| delete | 删除属性 | R | 1 | lval->bool |\n| typeof | 检测操作数类型 | R | 1 | any->str |\n| void | 返回undefined值 | R | 1 | any->undef |\n| * 、／、％ | 乘、除、求余 | L | 2 | num,num->num |\n| +、－| 加、减 | L | 2 | num,num->num |\n| + | 字符串连接 | L | 2 | str,str->str |\n| << | 左移位 | L | 2 | int,int->int |\n| >> | 有符号右移 | L | 2 | int,int->int |\n| >>> | 无符号右移 | L | 2 | int,int->int |\n| <、 <=、>、>= | 比较数字顺序 | L | 2 | num,num->bool |\n| <、 <=、>、>= | 比较在字母表中的顺序 | L | 2 | str,str->bool |\n| instanceof | 测试对象类 | L | 2 | obj,func->bool |\n| in | 测试属性是否存在 | L | 2 | str,obj->bool |\n| == | 判断相等 | L | 2 | any,any->bool |\n| != | 判断不等 | L | 2 | any,any->bool |\n| === | 判断恒等 | L | 2 | any,any->bool |\n| !== | 判断非恒等 | L | 2 | any,any-bool |\n| & | 按位与 | L | 2| int,int->int |\n| ^ | 按位异或 | L | 2 | int,int->int |\n| &#124; | 按位或 | L | 2 | int,int->int |\n| && | 逻辑与 | L | 2| any,any->any |\n| &#124; &#124; | 逻辑或 | L | 2 | any,any->any |\n| ? : | 条件运算符 | R | 3 | bool,any,any->any |\n| = | 变量赋值或对象属性赋值 | R | 2 | lval,any->any |\n| *= 、/=、%=、+=、-=、&= <br/> ^=、&#124;=、<<=、>>=、>>>= | 运算且赋值 | R | 2 | lval,any->any |\n| , | 忽略第一个操作数，返回第二个操作数 | L | 2 | any,any->any |\n\n* 属性访问表达式和调用表达式的优先级要比所有运算符都高。  \n\n### 左值\n\n* ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   \n\n### + 运算法\n\n* \\+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  \n* 如果操作数中没有字符串，则都转化为数字。\n* 加法操作符的行为表现为\n    - 如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  \n    - 转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串\n    - 否则，两个操作数都转换为数字进行加法操作\n\n### 位运算符\n\n* 位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。\n* 移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。\n* 位运算会将NaN、Infinity和-Infinity转换为0。\n\n### 相等和不等运算\n\n#### 严格相等运算符\n\n* \"===\"首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   \n* 如果两个值类型不相同，则它们不想等。  \n* 如果两个值都是 `null`或者都是`undefined`，则它们相等，`null`和`undefined`不相等。   \n* 如果其中一个值是`NaN`或者两个值都是`NaN`，则它们不相等。  \n* 如果两个值为数字且数值相等，则它们相等，`0===-0 = true`。\n* 如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 \n* 如果两个引用值指向同一对象、数组或函数，则它们是相等的。\n\n#### 相等运算符\n\n* 如果两个操作数类型一样，则执行严格相等一样的比较规则。   \n* 如果两个操作数的类型不一样，则遵守如下规则：\n    - `null==undefined = true`\n    - 字符串和数字比较时，将字符串转换为数字，再做比较\n    - 如果其中一个操作数为布尔类型，则将其转换为数字再做比较。\n    - 如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  \n    - 其它不同类型之间的比较均不相等。  \n\n### 关系运算符\n\n* 只有数字和字符串才能真正的执行比较操作。    \n* 如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  \n* 0等于-0，`Infinity`比任何数都大(除了本身)，`-Infinity`比任何数都小(除了本身)。\n* 其中一个操作数为`NaN`，比较操作符总是返回`false`。\n\n### 逻辑表达式\n\n* 在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  \n* 在逻辑或中，当左操作数为真值时，返回该值。 \n\n### 带操作的赋值运算\n\n* `a op= b`等价于 `a=a op b`。 `op`代表一个运算符。第一个表达式中`a`只计算了一次，第二个表达式中`a`计算了两次。  \n* 当`a`是带有副作用的表达式时，两者不等价。   \n\n### eval()\n\n* eval()是一个函数，但被当作运算符对待。   \n* eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   \n* eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回`undefined`。   \n* eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  \n* eval()的字符串必须在语法上讲的通。\n* ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  \n* 当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  \n* ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   \n\n#### 严格模式下的eval\n\n当在严格模式下，或者eval()执行的代码段以`\"use strict\"`开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。\n\n### typeof 运算符\n\n| x| typeof x |\n|:--| :----|\n|undefined | \"undefined\"|\n|null | \"object\"|\n|true或false | \"boolean\"|\n|任意数字或NaN、Infinity | \"number\" |\n|任意字符串 | \"string\" |\n| 任意函数 | \"function\" |\n| 任意内置对象 非函数 | \"object\" |\n|任意宿主对象 | 由编译器各自实现的字符串 ，但不是 \"undefined\"、\"boolean\"、\"number\"、\"string\"|\n\n* ECMAScript 3规范规定所有内置可执行对象，typeof一律返回\"function\"。\n* ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回\"function\"。\n\n### delete 运算符\n\n* delete删除属性成功将返回`true`\n* delete无法删除内置核心、客户端属性、通过`var`声明的变量、`function`定义的函数、函数参数。\n* 在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   \n\n### void 运算符\n\n* void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回`undefined`","source":"_posts/JavaScript之表达式和运算符.md","raw":"---\ntitle: JavaScript之表达式和运算符\ndate: 2016-09-03 15:33:59\ntags: [JavaScript,Web,note]\ncategories: JavaScript\n---\n\n## 表达式\n\n* 数组初始化表达式中，逗号之间的元素可以省略，空位会填充`undefined`。 \n* 在对象初始化表达式中，属性名称可以是字符串而不是标识符。  \n\n## 运算符概述\n\n&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  \n\n|运算符 |操作| A | N |类型|\n| :-- | :--|:-|:- | :--|\n| ++ | 前/后增量 | R | 1 | lval -> num|\n| -- | 前/后减量 | R | 1 | lval -> num|\n| - | 求反 | R | 1 | num->num |\n| + | 转换为数字 | R | 1 | num->num |\n| ~ | 按位求反 | R | 1 | int->int |\n| ! | 逻辑非 | R | 1 | bool->bool|\n| delete | 删除属性 | R | 1 | lval->bool |\n| typeof | 检测操作数类型 | R | 1 | any->str |\n| void | 返回undefined值 | R | 1 | any->undef |\n| * 、／、％ | 乘、除、求余 | L | 2 | num,num->num |\n| +、－| 加、减 | L | 2 | num,num->num |\n| + | 字符串连接 | L | 2 | str,str->str |\n| << | 左移位 | L | 2 | int,int->int |\n| >> | 有符号右移 | L | 2 | int,int->int |\n| >>> | 无符号右移 | L | 2 | int,int->int |\n| <、 <=、>、>= | 比较数字顺序 | L | 2 | num,num->bool |\n| <、 <=、>、>= | 比较在字母表中的顺序 | L | 2 | str,str->bool |\n| instanceof | 测试对象类 | L | 2 | obj,func->bool |\n| in | 测试属性是否存在 | L | 2 | str,obj->bool |\n| == | 判断相等 | L | 2 | any,any->bool |\n| != | 判断不等 | L | 2 | any,any->bool |\n| === | 判断恒等 | L | 2 | any,any->bool |\n| !== | 判断非恒等 | L | 2 | any,any-bool |\n| & | 按位与 | L | 2| int,int->int |\n| ^ | 按位异或 | L | 2 | int,int->int |\n| &#124; | 按位或 | L | 2 | int,int->int |\n| && | 逻辑与 | L | 2| any,any->any |\n| &#124; &#124; | 逻辑或 | L | 2 | any,any->any |\n| ? : | 条件运算符 | R | 3 | bool,any,any->any |\n| = | 变量赋值或对象属性赋值 | R | 2 | lval,any->any |\n| *= 、/=、%=、+=、-=、&= <br/> ^=、&#124;=、<<=、>>=、>>>= | 运算且赋值 | R | 2 | lval,any->any |\n| , | 忽略第一个操作数，返回第二个操作数 | L | 2 | any,any->any |\n\n* 属性访问表达式和调用表达式的优先级要比所有运算符都高。  \n\n### 左值\n\n* ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   \n\n### + 运算法\n\n* \\+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  \n* 如果操作数中没有字符串，则都转化为数字。\n* 加法操作符的行为表现为\n    - 如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  \n    - 转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串\n    - 否则，两个操作数都转换为数字进行加法操作\n\n### 位运算符\n\n* 位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。\n* 移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。\n* 位运算会将NaN、Infinity和-Infinity转换为0。\n\n### 相等和不等运算\n\n#### 严格相等运算符\n\n* \"===\"首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   \n* 如果两个值类型不相同，则它们不想等。  \n* 如果两个值都是 `null`或者都是`undefined`，则它们相等，`null`和`undefined`不相等。   \n* 如果其中一个值是`NaN`或者两个值都是`NaN`，则它们不相等。  \n* 如果两个值为数字且数值相等，则它们相等，`0===-0 = true`。\n* 如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 \n* 如果两个引用值指向同一对象、数组或函数，则它们是相等的。\n\n#### 相等运算符\n\n* 如果两个操作数类型一样，则执行严格相等一样的比较规则。   \n* 如果两个操作数的类型不一样，则遵守如下规则：\n    - `null==undefined = true`\n    - 字符串和数字比较时，将字符串转换为数字，再做比较\n    - 如果其中一个操作数为布尔类型，则将其转换为数字再做比较。\n    - 如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  \n    - 其它不同类型之间的比较均不相等。  \n\n### 关系运算符\n\n* 只有数字和字符串才能真正的执行比较操作。    \n* 如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  \n* 0等于-0，`Infinity`比任何数都大(除了本身)，`-Infinity`比任何数都小(除了本身)。\n* 其中一个操作数为`NaN`，比较操作符总是返回`false`。\n\n### 逻辑表达式\n\n* 在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  \n* 在逻辑或中，当左操作数为真值时，返回该值。 \n\n### 带操作的赋值运算\n\n* `a op= b`等价于 `a=a op b`。 `op`代表一个运算符。第一个表达式中`a`只计算了一次，第二个表达式中`a`计算了两次。  \n* 当`a`是带有副作用的表达式时，两者不等价。   \n\n### eval()\n\n* eval()是一个函数，但被当作运算符对待。   \n* eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   \n* eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回`undefined`。   \n* eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  \n* eval()的字符串必须在语法上讲的通。\n* ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  \n* 当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  \n* ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   \n\n#### 严格模式下的eval\n\n当在严格模式下，或者eval()执行的代码段以`\"use strict\"`开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。\n\n### typeof 运算符\n\n| x| typeof x |\n|:--| :----|\n|undefined | \"undefined\"|\n|null | \"object\"|\n|true或false | \"boolean\"|\n|任意数字或NaN、Infinity | \"number\" |\n|任意字符串 | \"string\" |\n| 任意函数 | \"function\" |\n| 任意内置对象 非函数 | \"object\" |\n|任意宿主对象 | 由编译器各自实现的字符串 ，但不是 \"undefined\"、\"boolean\"、\"number\"、\"string\"|\n\n* ECMAScript 3规范规定所有内置可执行对象，typeof一律返回\"function\"。\n* ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回\"function\"。\n\n### delete 运算符\n\n* delete删除属性成功将返回`true`\n* delete无法删除内置核心、客户端属性、通过`var`声明的变量、`function`定义的函数、函数参数。\n* 在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   \n\n### void 运算符\n\n* void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回`undefined`","slug":"JavaScript之表达式和运算符","published":1,"updated":"2020-02-26T14:51:35.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdo000l1ovcck4os9uc","content":"<h2 id=\"表达式\"><a href=\"#表达式\" class=\"headerlink\" title=\"表达式\"></a>表达式</h2><ul>\n<li>数组初始化表达式中，逗号之间的元素可以省略，空位会填充<code>undefined</code>。 </li>\n<li>在对象初始化表达式中，属性名称可以是字符串而不是标识符。  </li>\n</ul>\n<h2 id=\"运算符概述\"><a href=\"#运算符概述\" class=\"headerlink\" title=\"运算符概述\"></a>运算符概述</h2><p>&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">操作</th>\n<th align=\"left\">A</th>\n<th align=\"left\">N</th>\n<th align=\"left\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">++</td>\n<td align=\"left\">前/后增量</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td align=\"left\">–</td>\n<td align=\"left\">前/后减量</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td align=\"left\">-</td>\n<td align=\"left\">求反</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">转换为数字</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">~</td>\n<td align=\"left\">按位求反</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">!</td>\n<td align=\"left\">逻辑非</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">bool-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">delete</td>\n<td align=\"left\">删除属性</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">typeof</td>\n<td align=\"left\">检测操作数类型</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">any-&gt;str</td>\n</tr>\n<tr>\n<td align=\"left\">void</td>\n<td align=\"left\">返回undefined值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">any-&gt;undef</td>\n</tr>\n<tr>\n<td align=\"left\">* 、／、％</td>\n<td align=\"left\">乘、除、求余</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+、－</td>\n<td align=\"left\">加、减</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">字符串连接</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,str-&gt;str</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;&lt;</td>\n<td align=\"left\">左移位</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&gt;&gt;</td>\n<td align=\"left\">有符号右移</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&gt;&gt;&gt;</td>\n<td align=\"left\">无符号右移</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td align=\"left\">比较数字顺序</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td align=\"left\">比较在字母表中的顺序</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,str-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">instanceof</td>\n<td align=\"left\">测试对象类</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">obj,func-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">in</td>\n<td align=\"left\">测试属性是否存在</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,obj-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">==</td>\n<td align=\"left\">判断相等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">!=</td>\n<td align=\"left\">判断不等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">===</td>\n<td align=\"left\">判断恒等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">!==</td>\n<td align=\"left\">判断非恒等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-bool</td>\n</tr>\n<tr>\n<td align=\"left\">&amp;</td>\n<td align=\"left\">按位与</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">^</td>\n<td align=\"left\">按位异或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&#124;</td>\n<td align=\"left\">按位或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&amp;&amp;</td>\n<td align=\"left\">逻辑与</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">&#124; &#124;</td>\n<td align=\"left\">逻辑或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">? :</td>\n<td align=\"left\">条件运算符</td>\n<td align=\"left\">R</td>\n<td align=\"left\">3</td>\n<td align=\"left\">bool,any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">=</td>\n<td align=\"left\">变量赋值或对象属性赋值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">2</td>\n<td align=\"left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">*= 、/=、%=、+=、-=、&amp;= <br/> ^=、&#124;=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=</td>\n<td align=\"left\">运算且赋值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">2</td>\n<td align=\"left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">,</td>\n<td align=\"left\">忽略第一个操作数，返回第二个操作数</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n</tbody></table>\n<ul>\n<li>属性访问表达式和调用表达式的优先级要比所有运算符都高。  </li>\n</ul>\n<h3 id=\"左值\"><a href=\"#左值\" class=\"headerlink\" title=\"左值\"></a>左值</h3><ul>\n<li>ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   </li>\n</ul>\n<h3 id=\"运算法\"><a href=\"#运算法\" class=\"headerlink\" title=\"+ 运算法\"></a>+ 运算法</h3><ul>\n<li>+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  </li>\n<li>如果操作数中没有字符串，则都转化为数字。</li>\n<li>加法操作符的行为表现为<ul>\n<li>如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  </li>\n<li>转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串</li>\n<li>否则，两个操作数都转换为数字进行加法操作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><ul>\n<li>位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。</li>\n<li>移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。</li>\n<li>位运算会将NaN、Infinity和-Infinity转换为0。</li>\n</ul>\n<h3 id=\"相等和不等运算\"><a href=\"#相等和不等运算\" class=\"headerlink\" title=\"相等和不等运算\"></a>相等和不等运算</h3><h4 id=\"严格相等运算符\"><a href=\"#严格相等运算符\" class=\"headerlink\" title=\"严格相等运算符\"></a>严格相等运算符</h4><ul>\n<li>“===”首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   </li>\n<li>如果两个值类型不相同，则它们不想等。  </li>\n<li>如果两个值都是 <code>null</code>或者都是<code>undefined</code>，则它们相等，<code>null</code>和<code>undefined</code>不相等。   </li>\n<li>如果其中一个值是<code>NaN</code>或者两个值都是<code>NaN</code>，则它们不相等。  </li>\n<li>如果两个值为数字且数值相等，则它们相等，<code>0===-0 = true</code>。</li>\n<li>如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 </li>\n<li>如果两个引用值指向同一对象、数组或函数，则它们是相等的。</li>\n</ul>\n<h4 id=\"相等运算符\"><a href=\"#相等运算符\" class=\"headerlink\" title=\"相等运算符\"></a>相等运算符</h4><ul>\n<li>如果两个操作数类型一样，则执行严格相等一样的比较规则。   </li>\n<li>如果两个操作数的类型不一样，则遵守如下规则：<ul>\n<li><code>null==undefined = true</code></li>\n<li>字符串和数字比较时，将字符串转换为数字，再做比较</li>\n<li>如果其中一个操作数为布尔类型，则将其转换为数字再做比较。</li>\n<li>如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  </li>\n<li>其它不同类型之间的比较均不相等。  </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><ul>\n<li>只有数字和字符串才能真正的执行比较操作。    </li>\n<li>如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  </li>\n<li>0等于-0，<code>Infinity</code>比任何数都大(除了本身)，<code>-Infinity</code>比任何数都小(除了本身)。</li>\n<li>其中一个操作数为<code>NaN</code>，比较操作符总是返回<code>false</code>。</li>\n</ul>\n<h3 id=\"逻辑表达式\"><a href=\"#逻辑表达式\" class=\"headerlink\" title=\"逻辑表达式\"></a>逻辑表达式</h3><ul>\n<li>在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  </li>\n<li>在逻辑或中，当左操作数为真值时，返回该值。 </li>\n</ul>\n<h3 id=\"带操作的赋值运算\"><a href=\"#带操作的赋值运算\" class=\"headerlink\" title=\"带操作的赋值运算\"></a>带操作的赋值运算</h3><ul>\n<li><code>a op= b</code>等价于 <code>a=a op b</code>。 <code>op</code>代表一个运算符。第一个表达式中<code>a</code>只计算了一次，第二个表达式中<code>a</code>计算了两次。  </li>\n<li>当<code>a</code>是带有副作用的表达式时，两者不等价。   </li>\n</ul>\n<h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><ul>\n<li>eval()是一个函数，但被当作运算符对待。   </li>\n<li>eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   </li>\n<li>eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回<code>undefined</code>。   </li>\n<li>eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  </li>\n<li>eval()的字符串必须在语法上讲的通。</li>\n<li>ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  </li>\n<li>当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  </li>\n<li>ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   </li>\n</ul>\n<h4 id=\"严格模式下的eval\"><a href=\"#严格模式下的eval\" class=\"headerlink\" title=\"严格模式下的eval\"></a>严格模式下的eval</h4><p>当在严格模式下，或者eval()执行的代码段以<code>&quot;use strict&quot;</code>开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。</p>\n<h3 id=\"typeof-运算符\"><a href=\"#typeof-运算符\" class=\"headerlink\" title=\"typeof 运算符\"></a>typeof 运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">x</th>\n<th align=\"left\">typeof x</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">undefined</td>\n<td align=\"left\">“undefined”</td>\n</tr>\n<tr>\n<td align=\"left\">null</td>\n<td align=\"left\">“object”</td>\n</tr>\n<tr>\n<td align=\"left\">true或false</td>\n<td align=\"left\">“boolean”</td>\n</tr>\n<tr>\n<td align=\"left\">任意数字或NaN、Infinity</td>\n<td align=\"left\">“number”</td>\n</tr>\n<tr>\n<td align=\"left\">任意字符串</td>\n<td align=\"left\">“string”</td>\n</tr>\n<tr>\n<td align=\"left\">任意函数</td>\n<td align=\"left\">“function”</td>\n</tr>\n<tr>\n<td align=\"left\">任意内置对象 非函数</td>\n<td align=\"left\">“object”</td>\n</tr>\n<tr>\n<td align=\"left\">任意宿主对象</td>\n<td align=\"left\">由编译器各自实现的字符串 ，但不是 “undefined”、”boolean”、”number”、”string”</td>\n</tr>\n</tbody></table>\n<ul>\n<li>ECMAScript 3规范规定所有内置可执行对象，typeof一律返回”function”。</li>\n<li>ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回”function”。</li>\n</ul>\n<h3 id=\"delete-运算符\"><a href=\"#delete-运算符\" class=\"headerlink\" title=\"delete 运算符\"></a>delete 运算符</h3><ul>\n<li>delete删除属性成功将返回<code>true</code></li>\n<li>delete无法删除内置核心、客户端属性、通过<code>var</code>声明的变量、<code>function</code>定义的函数、函数参数。</li>\n<li>在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   </li>\n</ul>\n<h3 id=\"void-运算符\"><a href=\"#void-运算符\" class=\"headerlink\" title=\"void 运算符\"></a>void 运算符</h3><ul>\n<li>void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回<code>undefined</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"表达式\"><a href=\"#表达式\" class=\"headerlink\" title=\"表达式\"></a>表达式</h2><ul>\n<li>数组初始化表达式中，逗号之间的元素可以省略，空位会填充<code>undefined</code>。 </li>\n<li>在对象初始化表达式中，属性名称可以是字符串而不是标识符。  </li>\n</ul>\n<h2 id=\"运算符概述\"><a href=\"#运算符概述\" class=\"headerlink\" title=\"运算符概述\"></a>运算符概述</h2><p>&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">操作</th>\n<th align=\"left\">A</th>\n<th align=\"left\">N</th>\n<th align=\"left\">类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">++</td>\n<td align=\"left\">前/后增量</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td align=\"left\">–</td>\n<td align=\"left\">前/后减量</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td align=\"left\">-</td>\n<td align=\"left\">求反</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">转换为数字</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">~</td>\n<td align=\"left\">按位求反</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">!</td>\n<td align=\"left\">逻辑非</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">bool-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">delete</td>\n<td align=\"left\">删除属性</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">lval-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">typeof</td>\n<td align=\"left\">检测操作数类型</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">any-&gt;str</td>\n</tr>\n<tr>\n<td align=\"left\">void</td>\n<td align=\"left\">返回undefined值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">1</td>\n<td align=\"left\">any-&gt;undef</td>\n</tr>\n<tr>\n<td align=\"left\">* 、／、％</td>\n<td align=\"left\">乘、除、求余</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+、－</td>\n<td align=\"left\">加、减</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">字符串连接</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,str-&gt;str</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;&lt;</td>\n<td align=\"left\">左移位</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&gt;&gt;</td>\n<td align=\"left\">有符号右移</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&gt;&gt;&gt;</td>\n<td align=\"left\">无符号右移</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td align=\"left\">比较数字顺序</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">num,num-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td align=\"left\">比较在字母表中的顺序</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,str-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">instanceof</td>\n<td align=\"left\">测试对象类</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">obj,func-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">in</td>\n<td align=\"left\">测试属性是否存在</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">str,obj-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">==</td>\n<td align=\"left\">判断相等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">!=</td>\n<td align=\"left\">判断不等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">===</td>\n<td align=\"left\">判断恒等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td align=\"left\">!==</td>\n<td align=\"left\">判断非恒等</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-bool</td>\n</tr>\n<tr>\n<td align=\"left\">&amp;</td>\n<td align=\"left\">按位与</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">^</td>\n<td align=\"left\">按位异或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&#124;</td>\n<td align=\"left\">按位或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td align=\"left\">&amp;&amp;</td>\n<td align=\"left\">逻辑与</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">&#124; &#124;</td>\n<td align=\"left\">逻辑或</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">? :</td>\n<td align=\"left\">条件运算符</td>\n<td align=\"left\">R</td>\n<td align=\"left\">3</td>\n<td align=\"left\">bool,any,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">=</td>\n<td align=\"left\">变量赋值或对象属性赋值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">2</td>\n<td align=\"left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">*= 、/=、%=、+=、-=、&amp;= <br/> ^=、&#124;=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=</td>\n<td align=\"left\">运算且赋值</td>\n<td align=\"left\">R</td>\n<td align=\"left\">2</td>\n<td align=\"left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td align=\"left\">,</td>\n<td align=\"left\">忽略第一个操作数，返回第二个操作数</td>\n<td align=\"left\">L</td>\n<td align=\"left\">2</td>\n<td align=\"left\">any,any-&gt;any</td>\n</tr>\n</tbody></table>\n<ul>\n<li>属性访问表达式和调用表达式的优先级要比所有运算符都高。  </li>\n</ul>\n<h3 id=\"左值\"><a href=\"#左值\" class=\"headerlink\" title=\"左值\"></a>左值</h3><ul>\n<li>ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   </li>\n</ul>\n<h3 id=\"运算法\"><a href=\"#运算法\" class=\"headerlink\" title=\"+ 运算法\"></a>+ 运算法</h3><ul>\n<li>+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  </li>\n<li>如果操作数中没有字符串，则都转化为数字。</li>\n<li>加法操作符的行为表现为<ul>\n<li>如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  </li>\n<li>转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串</li>\n<li>否则，两个操作数都转换为数字进行加法操作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><ul>\n<li>位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。</li>\n<li>移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。</li>\n<li>位运算会将NaN、Infinity和-Infinity转换为0。</li>\n</ul>\n<h3 id=\"相等和不等运算\"><a href=\"#相等和不等运算\" class=\"headerlink\" title=\"相等和不等运算\"></a>相等和不等运算</h3><h4 id=\"严格相等运算符\"><a href=\"#严格相等运算符\" class=\"headerlink\" title=\"严格相等运算符\"></a>严格相等运算符</h4><ul>\n<li>“===”首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   </li>\n<li>如果两个值类型不相同，则它们不想等。  </li>\n<li>如果两个值都是 <code>null</code>或者都是<code>undefined</code>，则它们相等，<code>null</code>和<code>undefined</code>不相等。   </li>\n<li>如果其中一个值是<code>NaN</code>或者两个值都是<code>NaN</code>，则它们不相等。  </li>\n<li>如果两个值为数字且数值相等，则它们相等，<code>0===-0 = true</code>。</li>\n<li>如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 </li>\n<li>如果两个引用值指向同一对象、数组或函数，则它们是相等的。</li>\n</ul>\n<h4 id=\"相等运算符\"><a href=\"#相等运算符\" class=\"headerlink\" title=\"相等运算符\"></a>相等运算符</h4><ul>\n<li>如果两个操作数类型一样，则执行严格相等一样的比较规则。   </li>\n<li>如果两个操作数的类型不一样，则遵守如下规则：<ul>\n<li><code>null==undefined = true</code></li>\n<li>字符串和数字比较时，将字符串转换为数字，再做比较</li>\n<li>如果其中一个操作数为布尔类型，则将其转换为数字再做比较。</li>\n<li>如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  </li>\n<li>其它不同类型之间的比较均不相等。  </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><ul>\n<li>只有数字和字符串才能真正的执行比较操作。    </li>\n<li>如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  </li>\n<li>0等于-0，<code>Infinity</code>比任何数都大(除了本身)，<code>-Infinity</code>比任何数都小(除了本身)。</li>\n<li>其中一个操作数为<code>NaN</code>，比较操作符总是返回<code>false</code>。</li>\n</ul>\n<h3 id=\"逻辑表达式\"><a href=\"#逻辑表达式\" class=\"headerlink\" title=\"逻辑表达式\"></a>逻辑表达式</h3><ul>\n<li>在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  </li>\n<li>在逻辑或中，当左操作数为真值时，返回该值。 </li>\n</ul>\n<h3 id=\"带操作的赋值运算\"><a href=\"#带操作的赋值运算\" class=\"headerlink\" title=\"带操作的赋值运算\"></a>带操作的赋值运算</h3><ul>\n<li><code>a op= b</code>等价于 <code>a=a op b</code>。 <code>op</code>代表一个运算符。第一个表达式中<code>a</code>只计算了一次，第二个表达式中<code>a</code>计算了两次。  </li>\n<li>当<code>a</code>是带有副作用的表达式时，两者不等价。   </li>\n</ul>\n<h3 id=\"eval\"><a href=\"#eval\" class=\"headerlink\" title=\"eval()\"></a>eval()</h3><ul>\n<li>eval()是一个函数，但被当作运算符对待。   </li>\n<li>eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   </li>\n<li>eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回<code>undefined</code>。   </li>\n<li>eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  </li>\n<li>eval()的字符串必须在语法上讲的通。</li>\n<li>ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  </li>\n<li>当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  </li>\n<li>ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   </li>\n</ul>\n<h4 id=\"严格模式下的eval\"><a href=\"#严格模式下的eval\" class=\"headerlink\" title=\"严格模式下的eval\"></a>严格模式下的eval</h4><p>当在严格模式下，或者eval()执行的代码段以<code>&quot;use strict&quot;</code>开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。</p>\n<h3 id=\"typeof-运算符\"><a href=\"#typeof-运算符\" class=\"headerlink\" title=\"typeof 运算符\"></a>typeof 运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">x</th>\n<th align=\"left\">typeof x</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">undefined</td>\n<td align=\"left\">“undefined”</td>\n</tr>\n<tr>\n<td align=\"left\">null</td>\n<td align=\"left\">“object”</td>\n</tr>\n<tr>\n<td align=\"left\">true或false</td>\n<td align=\"left\">“boolean”</td>\n</tr>\n<tr>\n<td align=\"left\">任意数字或NaN、Infinity</td>\n<td align=\"left\">“number”</td>\n</tr>\n<tr>\n<td align=\"left\">任意字符串</td>\n<td align=\"left\">“string”</td>\n</tr>\n<tr>\n<td align=\"left\">任意函数</td>\n<td align=\"left\">“function”</td>\n</tr>\n<tr>\n<td align=\"left\">任意内置对象 非函数</td>\n<td align=\"left\">“object”</td>\n</tr>\n<tr>\n<td align=\"left\">任意宿主对象</td>\n<td align=\"left\">由编译器各自实现的字符串 ，但不是 “undefined”、”boolean”、”number”、”string”</td>\n</tr>\n</tbody></table>\n<ul>\n<li>ECMAScript 3规范规定所有内置可执行对象，typeof一律返回”function”。</li>\n<li>ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回”function”。</li>\n</ul>\n<h3 id=\"delete-运算符\"><a href=\"#delete-运算符\" class=\"headerlink\" title=\"delete 运算符\"></a>delete 运算符</h3><ul>\n<li>delete删除属性成功将返回<code>true</code></li>\n<li>delete无法删除内置核心、客户端属性、通过<code>var</code>声明的变量、<code>function</code>定义的函数、函数参数。</li>\n<li>在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   </li>\n</ul>\n<h3 id=\"void-运算符\"><a href=\"#void-运算符\" class=\"headerlink\" title=\"void 运算符\"></a>void 运算符</h3><ul>\n<li>void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回<code>undefined</code></li>\n</ul>\n"},{"title":"Mac-Mac下制作MacOS启动盘","date":"2017-02-10T06:37:04.000Z","_content":"1. 从App Store中下载macOS Sierra，不需要安装\n2. \n","source":"_posts/Mac-Mac下制作MacOS启动盘.md","raw":"---\ntitle: Mac-Mac下制作MacOS启动盘\ndate: 2017-02-10 14:37:04\ntags: [os,Mac,tools]\ncategories: [Mac]\n---\n1. 从App Store中下载macOS Sierra，不需要安装\n2. \n","slug":"Mac-Mac下制作MacOS启动盘","published":1,"updated":"2020-02-26T14:51:35.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdp000m1ovcz4yu2q4o","content":"<ol>\n<li>从App Store中下载macOS Sierra，不需要安装</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>从App Store中下载macOS Sierra，不需要安装</li>\n<li></li>\n</ol>\n"},{"title":"Math-DM-01-基本逻辑","date":"2016-11-26T08:33:43.000Z","updated":"2016-11-28T14:58:00.000Z","_content":"## 命题逻辑\n逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。    \n涉及命题的逻辑领域称为命题演算或命题逻辑。\n\n## 逻辑运算符\n### 非\n令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作\"非$p$\"。\n### 与(合取)\n令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。\n### 或(析取)\n令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。\n### 异或\n令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。\n### 与非\n命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。\n### 或非\n命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。\n### 条件语句\n令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。   \n在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。    \n条件语句也称蕴含。\n\n#### 逆、倒置和反\n命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。    \n命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。   \n命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  \n\n### 双条件语句\n令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。    \n双条件语句也称双蕴含。  \n\n### 真值表\n\n|p <span style=\"margin-left:20px\">q</span>| $\\lnot p$| $p\\land q$|$p\\lor q$|$p\\oplus q$|$p\\rightarrow q$|$p↔︎q$|$p \\vert q$|$p\\downarrow q$|\n|:----:|:--------:|:---------:|:-------:|:---------:|:------:|:---:|:--:|:--:|\n|T <span style=\"margin-left:20px\">T</span>| F|T|T|F|T|T|F|F|\n|T <span style=\"margin-left:20px\">F</span>| F|F|T|T|F|F|T|F|\n|F <span style=\"margin-left:20px\">T</span>| T|F|T|T|T|F|T|F|\n|F <span style=\"margin-left:20px\">F</span>| F|F|F|F|T|T|T|T|\n\n### 逻辑运算符的优先级\n* 否定运算符在其他所有逻辑运算符之前执行。\n* 合取运算优先于析取运算。\n* 条件运算和双条件运算优先级低于合取和析取运算。\n\n","source":"_posts/Math-DM-01-基本逻辑.md","raw":"---\ntitle: Math-DM-01-基本逻辑\ndate: 2016-11-26 16:33:43\nupdated: 2016-11-28 22:58:00\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 命题逻辑\n逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。    \n涉及命题的逻辑领域称为命题演算或命题逻辑。\n\n## 逻辑运算符\n### 非\n令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作\"非$p$\"。\n### 与(合取)\n令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。\n### 或(析取)\n令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。\n### 异或\n令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。\n### 与非\n命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。\n### 或非\n命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。\n### 条件语句\n令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。   \n在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。    \n条件语句也称蕴含。\n\n#### 逆、倒置和反\n命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。    \n命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。   \n命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  \n\n### 双条件语句\n令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。    \n双条件语句也称双蕴含。  \n\n### 真值表\n\n|p <span style=\"margin-left:20px\">q</span>| $\\lnot p$| $p\\land q$|$p\\lor q$|$p\\oplus q$|$p\\rightarrow q$|$p↔︎q$|$p \\vert q$|$p\\downarrow q$|\n|:----:|:--------:|:---------:|:-------:|:---------:|:------:|:---:|:--:|:--:|\n|T <span style=\"margin-left:20px\">T</span>| F|T|T|F|T|T|F|F|\n|T <span style=\"margin-left:20px\">F</span>| F|F|T|T|F|F|T|F|\n|F <span style=\"margin-left:20px\">T</span>| T|F|T|T|T|F|T|F|\n|F <span style=\"margin-left:20px\">F</span>| F|F|F|F|T|T|T|T|\n\n### 逻辑运算符的优先级\n* 否定运算符在其他所有逻辑运算符之前执行。\n* 合取运算优先于析取运算。\n* 条件运算和双条件运算优先级低于合取和析取运算。\n\n","slug":"Math-DM-01-基本逻辑","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdp000n1ovcigtnaugd","content":"<h2 id=\"命题逻辑\"><a href=\"#命题逻辑\" class=\"headerlink\" title=\"命题逻辑\"></a>命题逻辑</h2><p>逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。<br>涉及命题的逻辑领域称为命题演算或命题逻辑。</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"非\"><a href=\"#非\" class=\"headerlink\" title=\"非\"></a>非</h3><p>令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作”非$p$”。</p>\n<h3 id=\"与-合取\"><a href=\"#与-合取\" class=\"headerlink\" title=\"与(合取)\"></a>与(合取)</h3><p>令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。</p>\n<h3 id=\"或-析取\"><a href=\"#或-析取\" class=\"headerlink\" title=\"或(析取)\"></a>或(析取)</h3><p>令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。</p>\n<h3 id=\"异或\"><a href=\"#异或\" class=\"headerlink\" title=\"异或\"></a>异或</h3><p>令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。</p>\n<h3 id=\"与非\"><a href=\"#与非\" class=\"headerlink\" title=\"与非\"></a>与非</h3><p>命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。</p>\n<h3 id=\"或非\"><a href=\"#或非\" class=\"headerlink\" title=\"或非\"></a>或非</h3><p>命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。</p>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><p>令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。<br>在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。<br>条件语句也称蕴含。</p>\n<h4 id=\"逆、倒置和反\"><a href=\"#逆、倒置和反\" class=\"headerlink\" title=\"逆、倒置和反\"></a>逆、倒置和反</h4><p>命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。<br>命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。<br>命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  </p>\n<h3 id=\"双条件语句\"><a href=\"#双条件语句\" class=\"headerlink\" title=\"双条件语句\"></a>双条件语句</h3><p>令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。<br>双条件语句也称双蕴含。  </p>\n<h3 id=\"真值表\"><a href=\"#真值表\" class=\"headerlink\" title=\"真值表\"></a>真值表</h3><table>\n<thead>\n<tr>\n<th align=\"center\">p <span style=\"margin-left:20px\">q</span></th>\n<th align=\"center\">$\\lnot p$</th>\n<th align=\"center\">$p\\land q$</th>\n<th align=\"center\">$p\\lor q$</th>\n<th align=\"center\">$p\\oplus q$</th>\n<th align=\"center\">$p\\rightarrow q$</th>\n<th align=\"center\">$p↔︎q$</th>\n<th align=\"center\">$p \\vert q$</th>\n<th align=\"center\">$p\\downarrow q$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">T <span style=\"margin-left:20px\">T</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">T <span style=\"margin-left:20px\">F</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">F <span style=\"margin-left:20px\">T</span></td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">F <span style=\"margin-left:20px\">F</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n</tbody></table>\n<h3 id=\"逻辑运算符的优先级\"><a href=\"#逻辑运算符的优先级\" class=\"headerlink\" title=\"逻辑运算符的优先级\"></a>逻辑运算符的优先级</h3><ul>\n<li>否定运算符在其他所有逻辑运算符之前执行。</li>\n<li>合取运算优先于析取运算。</li>\n<li>条件运算和双条件运算优先级低于合取和析取运算。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命题逻辑\"><a href=\"#命题逻辑\" class=\"headerlink\" title=\"命题逻辑\"></a>命题逻辑</h2><p>逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。<br>涉及命题的逻辑领域称为命题演算或命题逻辑。</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"非\"><a href=\"#非\" class=\"headerlink\" title=\"非\"></a>非</h3><p>令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作”非$p$”。</p>\n<h3 id=\"与-合取\"><a href=\"#与-合取\" class=\"headerlink\" title=\"与(合取)\"></a>与(合取)</h3><p>令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。</p>\n<h3 id=\"或-析取\"><a href=\"#或-析取\" class=\"headerlink\" title=\"或(析取)\"></a>或(析取)</h3><p>令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。</p>\n<h3 id=\"异或\"><a href=\"#异或\" class=\"headerlink\" title=\"异或\"></a>异或</h3><p>令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。</p>\n<h3 id=\"与非\"><a href=\"#与非\" class=\"headerlink\" title=\"与非\"></a>与非</h3><p>命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。</p>\n<h3 id=\"或非\"><a href=\"#或非\" class=\"headerlink\" title=\"或非\"></a>或非</h3><p>命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。</p>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><p>令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。<br>在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。<br>条件语句也称蕴含。</p>\n<h4 id=\"逆、倒置和反\"><a href=\"#逆、倒置和反\" class=\"headerlink\" title=\"逆、倒置和反\"></a>逆、倒置和反</h4><p>命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。<br>命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。<br>命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  </p>\n<h3 id=\"双条件语句\"><a href=\"#双条件语句\" class=\"headerlink\" title=\"双条件语句\"></a>双条件语句</h3><p>令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。<br>双条件语句也称双蕴含。  </p>\n<h3 id=\"真值表\"><a href=\"#真值表\" class=\"headerlink\" title=\"真值表\"></a>真值表</h3><table>\n<thead>\n<tr>\n<th align=\"center\">p <span style=\"margin-left:20px\">q</span></th>\n<th align=\"center\">$\\lnot p$</th>\n<th align=\"center\">$p\\land q$</th>\n<th align=\"center\">$p\\lor q$</th>\n<th align=\"center\">$p\\oplus q$</th>\n<th align=\"center\">$p\\rightarrow q$</th>\n<th align=\"center\">$p↔︎q$</th>\n<th align=\"center\">$p \\vert q$</th>\n<th align=\"center\">$p\\downarrow q$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">T <span style=\"margin-left:20px\">T</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">T <span style=\"margin-left:20px\">F</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">F <span style=\"margin-left:20px\">T</span></td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">F <span style=\"margin-left:20px\">F</span></td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n</tbody></table>\n<h3 id=\"逻辑运算符的优先级\"><a href=\"#逻辑运算符的优先级\" class=\"headerlink\" title=\"逻辑运算符的优先级\"></a>逻辑运算符的优先级</h3><ul>\n<li>否定运算符在其他所有逻辑运算符之前执行。</li>\n<li>合取运算优先于析取运算。</li>\n<li>条件运算和双条件运算优先级低于合取和析取运算。</li>\n</ul>\n"},{"title":"幻方介绍","date":"2017-01-15T10:10:55.000Z","_content":"\n## 幻方\n幻方是一种将数字安排在正方形格子中，使每行、列和对角线上的数字和都相等的方法。       \n通常幻方由从$1$到$n^2$的连续整数组成。其中$n$为正方形的行或列的数目。因此$n$阶幻方有$n$行$n$列。 \n幻和是幻方各行、各列、各对角线上所有数的和。幻和的公式: $$s={n(n^2+1)\\over 2}$$\n\n### 幻方的数量      \n\n### 幻方生成方法\n#### 奇数阶幻方构造法\n* 把$1$放置在第一行的中间    \n* 顺序将$2、3、\\dots$等数放在右上方格子中。\n* 当右上方格出界的时候，则由另一方进入。 \n* 当右上方格中已经填有数，则把数填入正下方的方格中。\n* 按照以上步骤直到填完所有$n^2$个方格。      \n##### 示例\n以$5$阶幻方为例      \n第一行中间格填 1，从这个格子开始，向右上方按顺序填充。如果超出了第一行，则填到最底下一行；如果超出了最右边一列，则填到最左边一列\n![阶乘图](../images/magic_0.jpg)      \n如果遇到下一个格子里已经有数字的，就填到当前格子的下方      \n![阶乘图](../images/magic_1.jpg)      \n按照上面两条规则继续填充       \n![阶乘图](../images/magic_2.jpg)\n\n#### 4m阶幻方构造法\n* 将所有格子划分为$2m\\times 2m$的小幻方，给每个小幻方画上对角线。      \n* 从第一行第一列开始，从左往右，从上到下，从$1$到$(4m)^2$。依次填充。规则是只填充没对角线经过的格子。\n* 从最后一行最后一列开始，从右到左，从下到上，从$1$到$(4m)^2$依次填充。规则是只填充对角线经过的格子。 \n\n##### 示例\n以$8$阶幻方为例，将其分成$4$个$4\\times 4$个小幻方，每个小幻方画上对角线。           \n![阶乘图](../images/magic_3.jpg)      \n从第一行第一列，从左到右，从上到下，从$1$到$64$，依次填充，跳过对角线经过的格子          \n![阶乘图](../images/magic_4.jpg)      \n从最后一行最后一列，从右到左，从下到上，从$1$到$64$，依次添加，跳过对角线没有经过的格子，忽略已经填过的数字      \n![阶乘图](../images/magic_5.jpg)      \n\n#### 4m+2阶幻方构造法\n* 将格子分成$4$个等大的象限。      \n* 按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。      \n* 从$A$象限的中间行中间列开始为第一格，往右标出$m$格。然后标出$A$象限其他行的左边$m$列。把$A$象限作出标记的格子跟$C$象限对应的格子对换。     \n* 从$B$象限的中间列开始，向左标出$m-1$列，与$D$象限对换。\n\n##### 示例\n以$6$阶幻方为例。     \n把格子分成$4$个等大的象限      \n![阶乘图](../images/magic_6.jpg)      \n按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。        \n![阶乘图](../images/magic_7.jpg)      \n标出需要互换的格子，因为$m-1=0$所以$B、D$象限不需要互换      \n![阶乘图](../images/magic_8.jpg)      \n\n如果是$14$阶幻方，需要对换的格子如下图所示      \n![阶乘图](../images/magic_9.jpg)      \n","source":"_posts/Math-01-幻方.md","raw":"---\ntitle: 幻方介绍\ntags:\n  - Math\n  - note\ncategories:\n  - Math\ndate: 2017-01-15 18:10:55\n---\n\n## 幻方\n幻方是一种将数字安排在正方形格子中，使每行、列和对角线上的数字和都相等的方法。       \n通常幻方由从$1$到$n^2$的连续整数组成。其中$n$为正方形的行或列的数目。因此$n$阶幻方有$n$行$n$列。 \n幻和是幻方各行、各列、各对角线上所有数的和。幻和的公式: $$s={n(n^2+1)\\over 2}$$\n\n### 幻方的数量      \n\n### 幻方生成方法\n#### 奇数阶幻方构造法\n* 把$1$放置在第一行的中间    \n* 顺序将$2、3、\\dots$等数放在右上方格子中。\n* 当右上方格出界的时候，则由另一方进入。 \n* 当右上方格中已经填有数，则把数填入正下方的方格中。\n* 按照以上步骤直到填完所有$n^2$个方格。      \n##### 示例\n以$5$阶幻方为例      \n第一行中间格填 1，从这个格子开始，向右上方按顺序填充。如果超出了第一行，则填到最底下一行；如果超出了最右边一列，则填到最左边一列\n![阶乘图](../images/magic_0.jpg)      \n如果遇到下一个格子里已经有数字的，就填到当前格子的下方      \n![阶乘图](../images/magic_1.jpg)      \n按照上面两条规则继续填充       \n![阶乘图](../images/magic_2.jpg)\n\n#### 4m阶幻方构造法\n* 将所有格子划分为$2m\\times 2m$的小幻方，给每个小幻方画上对角线。      \n* 从第一行第一列开始，从左往右，从上到下，从$1$到$(4m)^2$。依次填充。规则是只填充没对角线经过的格子。\n* 从最后一行最后一列开始，从右到左，从下到上，从$1$到$(4m)^2$依次填充。规则是只填充对角线经过的格子。 \n\n##### 示例\n以$8$阶幻方为例，将其分成$4$个$4\\times 4$个小幻方，每个小幻方画上对角线。           \n![阶乘图](../images/magic_3.jpg)      \n从第一行第一列，从左到右，从上到下，从$1$到$64$，依次填充，跳过对角线经过的格子          \n![阶乘图](../images/magic_4.jpg)      \n从最后一行最后一列，从右到左，从下到上，从$1$到$64$，依次添加，跳过对角线没有经过的格子，忽略已经填过的数字      \n![阶乘图](../images/magic_5.jpg)      \n\n#### 4m+2阶幻方构造法\n* 将格子分成$4$个等大的象限。      \n* 按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。      \n* 从$A$象限的中间行中间列开始为第一格，往右标出$m$格。然后标出$A$象限其他行的左边$m$列。把$A$象限作出标记的格子跟$C$象限对应的格子对换。     \n* 从$B$象限的中间列开始，向左标出$m-1$列，与$D$象限对换。\n\n##### 示例\n以$6$阶幻方为例。     \n把格子分成$4$个等大的象限      \n![阶乘图](../images/magic_6.jpg)      \n按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。        \n![阶乘图](../images/magic_7.jpg)      \n标出需要互换的格子，因为$m-1=0$所以$B、D$象限不需要互换      \n![阶乘图](../images/magic_8.jpg)      \n\n如果是$14$阶幻方，需要对换的格子如下图所示      \n![阶乘图](../images/magic_9.jpg)      \n","slug":"Math-01-幻方","published":1,"updated":"2020-02-26T14:51:35.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdq000o1ovc0wwa7hur","content":"<h2 id=\"幻方\"><a href=\"#幻方\" class=\"headerlink\" title=\"幻方\"></a>幻方</h2><p>幻方是一种将数字安排在正方形格子中，使每行、列和对角线上的数字和都相等的方法。<br>通常幻方由从$1$到$n^2$的连续整数组成。其中$n$为正方形的行或列的数目。因此$n$阶幻方有$n$行$n$列。<br>幻和是幻方各行、各列、各对角线上所有数的和。幻和的公式: $$s={n(n^2+1)\\over 2}$$</p>\n<h3 id=\"幻方的数量\"><a href=\"#幻方的数量\" class=\"headerlink\" title=\"幻方的数量\"></a>幻方的数量</h3><h3 id=\"幻方生成方法\"><a href=\"#幻方生成方法\" class=\"headerlink\" title=\"幻方生成方法\"></a>幻方生成方法</h3><h4 id=\"奇数阶幻方构造法\"><a href=\"#奇数阶幻方构造法\" class=\"headerlink\" title=\"奇数阶幻方构造法\"></a>奇数阶幻方构造法</h4><ul>\n<li>把$1$放置在第一行的中间    </li>\n<li>顺序将$2、3、\\dots$等数放在右上方格子中。</li>\n<li>当右上方格出界的时候，则由另一方进入。 </li>\n<li>当右上方格中已经填有数，则把数填入正下方的方格中。</li>\n<li>按照以上步骤直到填完所有$n^2$个方格。      <h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5>以$5$阶幻方为例<br>第一行中间格填 1，从这个格子开始，向右上方按顺序填充。如果超出了第一行，则填到最底下一行；如果超出了最右边一列，则填到最左边一列<br><img src=\"../images/magic_0.jpg\" alt=\"阶乘图\"><br>如果遇到下一个格子里已经有数字的，就填到当前格子的下方<br><img src=\"../images/magic_1.jpg\" alt=\"阶乘图\"><br>按照上面两条规则继续填充<br><img src=\"../images/magic_2.jpg\" alt=\"阶乘图\"></li>\n</ul>\n<h4 id=\"4m阶幻方构造法\"><a href=\"#4m阶幻方构造法\" class=\"headerlink\" title=\"4m阶幻方构造法\"></a>4m阶幻方构造法</h4><ul>\n<li>将所有格子划分为$2m\\times 2m$的小幻方，给每个小幻方画上对角线。      </li>\n<li>从第一行第一列开始，从左往右，从上到下，从$1$到$(4m)^2$。依次填充。规则是只填充没对角线经过的格子。</li>\n<li>从最后一行最后一列开始，从右到左，从下到上，从$1$到$(4m)^2$依次填充。规则是只填充对角线经过的格子。 </li>\n</ul>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>以$8$阶幻方为例，将其分成$4$个$4\\times 4$个小幻方，每个小幻方画上对角线。<br><img src=\"../images/magic_3.jpg\" alt=\"阶乘图\"><br>从第一行第一列，从左到右，从上到下，从$1$到$64$，依次填充，跳过对角线经过的格子<br><img src=\"../images/magic_4.jpg\" alt=\"阶乘图\"><br>从最后一行最后一列，从右到左，从下到上，从$1$到$64$，依次添加，跳过对角线没有经过的格子，忽略已经填过的数字<br><img src=\"../images/magic_5.jpg\" alt=\"阶乘图\">      </p>\n<h4 id=\"4m-2阶幻方构造法\"><a href=\"#4m-2阶幻方构造法\" class=\"headerlink\" title=\"4m+2阶幻方构造法\"></a>4m+2阶幻方构造法</h4><ul>\n<li>将格子分成$4$个等大的象限。      </li>\n<li>按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。      </li>\n<li>从$A$象限的中间行中间列开始为第一格，往右标出$m$格。然后标出$A$象限其他行的左边$m$列。把$A$象限作出标记的格子跟$C$象限对应的格子对换。     </li>\n<li>从$B$象限的中间列开始，向左标出$m-1$列，与$D$象限对换。</li>\n</ul>\n<h5 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>以$6$阶幻方为例。<br>把格子分成$4$个等大的象限<br><img src=\"../images/magic_6.jpg\" alt=\"阶乘图\"><br>按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。<br><img src=\"../images/magic_7.jpg\" alt=\"阶乘图\"><br>标出需要互换的格子，因为$m-1=0$所以$B、D$象限不需要互换<br><img src=\"../images/magic_8.jpg\" alt=\"阶乘图\">      </p>\n<p>如果是$14$阶幻方，需要对换的格子如下图所示<br><img src=\"../images/magic_9.jpg\" alt=\"阶乘图\">      </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"幻方\"><a href=\"#幻方\" class=\"headerlink\" title=\"幻方\"></a>幻方</h2><p>幻方是一种将数字安排在正方形格子中，使每行、列和对角线上的数字和都相等的方法。<br>通常幻方由从$1$到$n^2$的连续整数组成。其中$n$为正方形的行或列的数目。因此$n$阶幻方有$n$行$n$列。<br>幻和是幻方各行、各列、各对角线上所有数的和。幻和的公式: $$s={n(n^2+1)\\over 2}$$</p>\n<h3 id=\"幻方的数量\"><a href=\"#幻方的数量\" class=\"headerlink\" title=\"幻方的数量\"></a>幻方的数量</h3><h3 id=\"幻方生成方法\"><a href=\"#幻方生成方法\" class=\"headerlink\" title=\"幻方生成方法\"></a>幻方生成方法</h3><h4 id=\"奇数阶幻方构造法\"><a href=\"#奇数阶幻方构造法\" class=\"headerlink\" title=\"奇数阶幻方构造法\"></a>奇数阶幻方构造法</h4><ul>\n<li>把$1$放置在第一行的中间    </li>\n<li>顺序将$2、3、\\dots$等数放在右上方格子中。</li>\n<li>当右上方格出界的时候，则由另一方进入。 </li>\n<li>当右上方格中已经填有数，则把数填入正下方的方格中。</li>\n<li>按照以上步骤直到填完所有$n^2$个方格。      <h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5>以$5$阶幻方为例<br>第一行中间格填 1，从这个格子开始，向右上方按顺序填充。如果超出了第一行，则填到最底下一行；如果超出了最右边一列，则填到最左边一列<br><img src=\"../images/magic_0.jpg\" alt=\"阶乘图\"><br>如果遇到下一个格子里已经有数字的，就填到当前格子的下方<br><img src=\"../images/magic_1.jpg\" alt=\"阶乘图\"><br>按照上面两条规则继续填充<br><img src=\"../images/magic_2.jpg\" alt=\"阶乘图\"></li>\n</ul>\n<h4 id=\"4m阶幻方构造法\"><a href=\"#4m阶幻方构造法\" class=\"headerlink\" title=\"4m阶幻方构造法\"></a>4m阶幻方构造法</h4><ul>\n<li>将所有格子划分为$2m\\times 2m$的小幻方，给每个小幻方画上对角线。      </li>\n<li>从第一行第一列开始，从左往右，从上到下，从$1$到$(4m)^2$。依次填充。规则是只填充没对角线经过的格子。</li>\n<li>从最后一行最后一列开始，从右到左，从下到上，从$1$到$(4m)^2$依次填充。规则是只填充对角线经过的格子。 </li>\n</ul>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>以$8$阶幻方为例，将其分成$4$个$4\\times 4$个小幻方，每个小幻方画上对角线。<br><img src=\"../images/magic_3.jpg\" alt=\"阶乘图\"><br>从第一行第一列，从左到右，从上到下，从$1$到$64$，依次填充，跳过对角线经过的格子<br><img src=\"../images/magic_4.jpg\" alt=\"阶乘图\"><br>从最后一行最后一列，从右到左，从下到上，从$1$到$64$，依次添加，跳过对角线没有经过的格子，忽略已经填过的数字<br><img src=\"../images/magic_5.jpg\" alt=\"阶乘图\">      </p>\n<h4 id=\"4m-2阶幻方构造法\"><a href=\"#4m-2阶幻方构造法\" class=\"headerlink\" title=\"4m+2阶幻方构造法\"></a>4m+2阶幻方构造法</h4><ul>\n<li>将格子分成$4$个等大的象限。      </li>\n<li>按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。      </li>\n<li>从$A$象限的中间行中间列开始为第一格，往右标出$m$格。然后标出$A$象限其他行的左边$m$列。把$A$象限作出标记的格子跟$C$象限对应的格子对换。     </li>\n<li>从$B$象限的中间列开始，向左标出$m-1$列，与$D$象限对换。</li>\n</ul>\n<h5 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>以$6$阶幻方为例。<br>把格子分成$4$个等大的象限<br><img src=\"../images/magic_6.jpg\" alt=\"阶乘图\"><br>按照$A\\rightarrow D\\rightarrow B\\rightarrow C$的顺序，把四个部分按照奇数阶幻方的顺序填充起来。<br><img src=\"../images/magic_7.jpg\" alt=\"阶乘图\"><br>标出需要互换的格子，因为$m-1=0$所以$B、D$象限不需要互换<br><img src=\"../images/magic_8.jpg\" alt=\"阶乘图\">      </p>\n<p>如果是$14$阶幻方，需要对换的格子如下图所示<br><img src=\"../images/magic_9.jpg\" alt=\"阶乘图\">      </p>\n"},{"title":"Math-DM-02-逻辑等价","date":"2016-11-26T08:58:58.000Z","_content":"## 引言\n复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。\n\n### 逻辑等价\n在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  \n\n* 如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。\n> 符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。\n\n## 摩根定律及应用\n$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。\n\n|名称 | 等价关系|\n|:---|:-------|\n|摩根定律|$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$ |\n|恒等律|$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$|\n|支配律|$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$|\n|幂等律|$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$|\n|双非律|$\\lnot(\\lnot p) \\equiv p$|\n|交换律|$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$|\n|结合律|$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$|\n|分配律|$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$|\n|吸收律|$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$|\n|否定律|$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$|\n\n### 涉及条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p\\rightarrow q\\equiv \\lnot p\\lor q $|\n|$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$|\n|$p\\lor q\\equiv \\lnot p\\rightarrow q$| \n|$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $|\n|$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $|\n|$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $|\n|$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $|\n|$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $|\n|$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$|\n\n\n### 涉及双条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $|\n|$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $|\n|$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $|\n|$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $|\n","source":"_posts/Math-DM-02-逻辑等价.md","raw":"---\ntitle: Math-DM-02-逻辑等价\ndate: 2016-11-26 16:58:58\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 引言\n复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。\n\n### 逻辑等价\n在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  \n\n* 如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。\n> 符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。\n\n## 摩根定律及应用\n$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。\n\n|名称 | 等价关系|\n|:---|:-------|\n|摩根定律|$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$ |\n|恒等律|$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$|\n|支配律|$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$|\n|幂等律|$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$|\n|双非律|$\\lnot(\\lnot p) \\equiv p$|\n|交换律|$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$|\n|结合律|$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$|\n|分配律|$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$|\n|吸收律|$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$|\n|否定律|$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$|\n\n### 涉及条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p\\rightarrow q\\equiv \\lnot p\\lor q $|\n|$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$|\n|$p\\lor q\\equiv \\lnot p\\rightarrow q$| \n|$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $|\n|$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $|\n|$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $|\n|$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $|\n|$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $|\n|$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$|\n\n\n### 涉及双条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $|\n|$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $|\n|$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $|\n|$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $|\n","slug":"Math-DM-02-逻辑等价","published":1,"updated":"2020-02-26T14:51:27.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdr000p1ovc9anxsj8u","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  </p>\n<ul>\n<li>如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。<blockquote>\n<p>符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"摩根定律及应用\"><a href=\"#摩根定律及应用\" class=\"headerlink\" title=\"摩根定律及应用\"></a>摩根定律及应用</h2><p>$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">摩根定律</td>\n<td align=\"left\">$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$</td>\n</tr>\n<tr>\n<td align=\"left\">恒等律</td>\n<td align=\"left\">$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">支配律</td>\n<td align=\"left\">$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$</td>\n</tr>\n<tr>\n<td align=\"left\">幂等律</td>\n<td align=\"left\">$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">双非律</td>\n<td align=\"left\">$\\lnot(\\lnot p) \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">交换律</td>\n<td align=\"left\">$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$</td>\n</tr>\n<tr>\n<td align=\"left\">结合律</td>\n<td align=\"left\">$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$</td>\n</tr>\n<tr>\n<td align=\"left\">分配律</td>\n<td align=\"left\">$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$</td>\n</tr>\n<tr>\n<td align=\"left\">吸收律</td>\n<td align=\"left\">$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">否定律</td>\n<td align=\"left\">$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$</td>\n</tr>\n</tbody></table>\n<h3 id=\"涉及条件语句的逻辑等价\"><a href=\"#涉及条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及条件语句的逻辑等价\"></a>涉及条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$p\\rightarrow q\\equiv \\lnot p\\lor q $</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\lor q\\equiv \\lnot p\\rightarrow q$</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $</td>\n</tr>\n<tr>\n<td align=\"left\">$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$</td>\n</tr>\n</tbody></table>\n<h3 id=\"涉及双条件语句的逻辑等价\"><a href=\"#涉及双条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及双条件语句的逻辑等价\"></a>涉及双条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $</td>\n</tr>\n<tr>\n<td align=\"left\">$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $</td>\n</tr>\n<tr>\n<td align=\"left\">$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $</td>\n</tr>\n<tr>\n<td align=\"left\">$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  </p>\n<ul>\n<li>如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。<blockquote>\n<p>符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"摩根定律及应用\"><a href=\"#摩根定律及应用\" class=\"headerlink\" title=\"摩根定律及应用\"></a>摩根定律及应用</h2><p>$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">摩根定律</td>\n<td align=\"left\">$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$</td>\n</tr>\n<tr>\n<td align=\"left\">恒等律</td>\n<td align=\"left\">$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">支配律</td>\n<td align=\"left\">$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$</td>\n</tr>\n<tr>\n<td align=\"left\">幂等律</td>\n<td align=\"left\">$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">双非律</td>\n<td align=\"left\">$\\lnot(\\lnot p) \\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">交换律</td>\n<td align=\"left\">$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$</td>\n</tr>\n<tr>\n<td align=\"left\">结合律</td>\n<td align=\"left\">$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$</td>\n</tr>\n<tr>\n<td align=\"left\">分配律</td>\n<td align=\"left\">$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$</td>\n</tr>\n<tr>\n<td align=\"left\">吸收律</td>\n<td align=\"left\">$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$</td>\n</tr>\n<tr>\n<td align=\"left\">否定律</td>\n<td align=\"left\">$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$</td>\n</tr>\n</tbody></table>\n<h3 id=\"涉及条件语句的逻辑等价\"><a href=\"#涉及条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及条件语句的逻辑等价\"></a>涉及条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$p\\rightarrow q\\equiv \\lnot p\\lor q $</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\lor q\\equiv \\lnot p\\rightarrow q$</td>\n</tr>\n<tr>\n<td align=\"left\">$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $</td>\n</tr>\n<tr>\n<td align=\"left\">$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $</td>\n</tr>\n<tr>\n<td align=\"left\">$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$</td>\n</tr>\n</tbody></table>\n<h3 id=\"涉及双条件语句的逻辑等价\"><a href=\"#涉及双条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及双条件语句的逻辑等价\"></a>涉及双条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th align=\"left\">等价关系</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $</td>\n</tr>\n<tr>\n<td align=\"left\">$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $</td>\n</tr>\n<tr>\n<td align=\"left\">$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $</td>\n</tr>\n<tr>\n<td align=\"left\">$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $</td>\n</tr>\n</tbody></table>\n"},{"title":"Math-DM-03-谓词逻辑","date":"2016-11-30T13:45:35.000Z","_content":"## 谓词逻辑\n若要明白什么是谓词逻辑，需要了解谓词和量词的概念。\n### 谓词\n谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。      \n形为$P(x_1,x_2,...,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,...,x_n)$的值，$P$也称为$n$元谓词。   \n\n### 量词\n当谓词表示一定范围的事物时，由命题函数产生的命题称为__量化__。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     \n#### 全称量词\n对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。\n#### 存在量词\n对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。\n#### 唯一量词\n存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。\n\n> 通常讲到量词的论域时，隐含假设它为非空集。\n\n#### 约束论域量词\n一个缩略符号通常用来约束量词的论域。 例如：      \n$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。       \n另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$      \n存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$\n\n### 量词的优先级\n量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。\n\n### 逻辑等价\n命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。\n\n#### 量词的摩根定律\n$$\n\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\\n\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)\n$$\n","source":"_posts/Math-DM-03-谓词逻辑.md","raw":"---\ntitle: Math-DM-03-谓词逻辑\ndate: 2016-11-30 21:45:35\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 谓词逻辑\n若要明白什么是谓词逻辑，需要了解谓词和量词的概念。\n### 谓词\n谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。      \n形为$P(x_1,x_2,...,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,...,x_n)$的值，$P$也称为$n$元谓词。   \n\n### 量词\n当谓词表示一定范围的事物时，由命题函数产生的命题称为__量化__。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     \n#### 全称量词\n对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。\n#### 存在量词\n对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。\n#### 唯一量词\n存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。\n\n> 通常讲到量词的论域时，隐含假设它为非空集。\n\n#### 约束论域量词\n一个缩略符号通常用来约束量词的论域。 例如：      \n$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。       \n另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$      \n存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$\n\n### 量词的优先级\n量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。\n\n### 逻辑等价\n命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。\n\n#### 量词的摩根定律\n$$\n\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\\n\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)\n$$\n","slug":"Math-DM-03-谓词逻辑","published":1,"updated":"2020-02-26T14:51:27.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdr000q1ovcih8xh9g1","content":"<h2 id=\"谓词逻辑\"><a href=\"#谓词逻辑\" class=\"headerlink\" title=\"谓词逻辑\"></a>谓词逻辑</h2><p>若要明白什么是谓词逻辑，需要了解谓词和量词的概念。</p>\n<h3 id=\"谓词\"><a href=\"#谓词\" class=\"headerlink\" title=\"谓词\"></a>谓词</h3><p>谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。<br>形为$P(x_1,x_2,…,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,…,x_n)$的值，$P$也称为$n$元谓词。   </p>\n<h3 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h3><p>当谓词表示一定范围的事物时，由命题函数产生的命题称为<strong>量化</strong>。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     </p>\n<h4 id=\"全称量词\"><a href=\"#全称量词\" class=\"headerlink\" title=\"全称量词\"></a>全称量词</h4><p>对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。</p>\n<h4 id=\"存在量词\"><a href=\"#存在量词\" class=\"headerlink\" title=\"存在量词\"></a>存在量词</h4><p>对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。</p>\n<h4 id=\"唯一量词\"><a href=\"#唯一量词\" class=\"headerlink\" title=\"唯一量词\"></a>唯一量词</h4><p>存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。</p>\n<blockquote>\n<p>通常讲到量词的论域时，隐含假设它为非空集。</p>\n</blockquote>\n<h4 id=\"约束论域量词\"><a href=\"#约束论域量词\" class=\"headerlink\" title=\"约束论域量词\"></a>约束论域量词</h4><p>一个缩略符号通常用来约束量词的论域。 例如：<br>$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。<br>另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$<br>存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$</p>\n<h3 id=\"量词的优先级\"><a href=\"#量词的优先级\" class=\"headerlink\" title=\"量词的优先级\"></a>量词的优先级</h3><p>量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。</p>\n<h4 id=\"量词的摩根定律\"><a href=\"#量词的摩根定律\" class=\"headerlink\" title=\"量词的摩根定律\"></a>量词的摩根定律</h4><p>$$<br>\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\<br>\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)<br>$$</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"谓词逻辑\"><a href=\"#谓词逻辑\" class=\"headerlink\" title=\"谓词逻辑\"></a>谓词逻辑</h2><p>若要明白什么是谓词逻辑，需要了解谓词和量词的概念。</p>\n<h3 id=\"谓词\"><a href=\"#谓词\" class=\"headerlink\" title=\"谓词\"></a>谓词</h3><p>谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。<br>形为$P(x_1,x_2,…,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,…,x_n)$的值，$P$也称为$n$元谓词。   </p>\n<h3 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h3><p>当谓词表示一定范围的事物时，由命题函数产生的命题称为<strong>量化</strong>。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     </p>\n<h4 id=\"全称量词\"><a href=\"#全称量词\" class=\"headerlink\" title=\"全称量词\"></a>全称量词</h4><p>对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。</p>\n<h4 id=\"存在量词\"><a href=\"#存在量词\" class=\"headerlink\" title=\"存在量词\"></a>存在量词</h4><p>对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。</p>\n<h4 id=\"唯一量词\"><a href=\"#唯一量词\" class=\"headerlink\" title=\"唯一量词\"></a>唯一量词</h4><p>存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。</p>\n<blockquote>\n<p>通常讲到量词的论域时，隐含假设它为非空集。</p>\n</blockquote>\n<h4 id=\"约束论域量词\"><a href=\"#约束论域量词\" class=\"headerlink\" title=\"约束论域量词\"></a>约束论域量词</h4><p>一个缩略符号通常用来约束量词的论域。 例如：<br>$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。<br>另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$<br>存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$</p>\n<h3 id=\"量词的优先级\"><a href=\"#量词的优先级\" class=\"headerlink\" title=\"量词的优先级\"></a>量词的优先级</h3><p>量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。</p>\n<h4 id=\"量词的摩根定律\"><a href=\"#量词的摩根定律\" class=\"headerlink\" title=\"量词的摩根定律\"></a>量词的摩根定律</h4><p>$$<br>\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\<br>\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)<br>$$</p>\n"},{"title":"Math-DM-04-嵌套量词","date":"2016-12-03T02:51:05.000Z","_content":"## 嵌套量词\n嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。\n\n### 嵌套量词例子\n这里假定$x$和$y$的论域是所有实数的集合。 \n$$ \\forall x\\forall y(x+y=y+x)$$\n对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。\n$$\\forall x\\exists y(x+y=0) $$\n对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。\n$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$\n\n### 嵌套顺序\n除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。\n\n|语句|何时为真 |何时为假|\n|:--|:------|:------|\n|$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$|对每一对$x、y$，$P(x,y)$均为真|有一对$x、y$使$P(x,y)$为假|\n|$\\forall x\\exists yP(x,y)$|对每个$x$，都有$y$使$P(x,y)$为真|有$x$，使$P(x,y)$对每个$y$总是假|\n|$\\exists x\\forall yP(x,y)$|有一个$x$，使所有$y$对$P(x,y)$均为真|对每个$x$都有$y$使$P(x,y)$为假|\n|$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$|有一对$x、y$，$P(x,y)$为真|对每一对$x、y$，$P(x,y)$均为假|\n\n### 将数学语句翻译成涉及嵌套量词的语句\n1、两个正整数的和是整数\n$$ \\forall x\\forall y((x>0)\\land(y>0)\\rightarrow (x+y>0))$$\n2、每个实数(除$0$外)都有乘法逆元\n$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$\n\n","source":"_posts/Math-DM-04-嵌套量词.md","raw":"---\ntitle: Math-DM-04-嵌套量词\ndate: 2016-12-03 10:51:05\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 嵌套量词\n嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。\n\n### 嵌套量词例子\n这里假定$x$和$y$的论域是所有实数的集合。 \n$$ \\forall x\\forall y(x+y=y+x)$$\n对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。\n$$\\forall x\\exists y(x+y=0) $$\n对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。\n$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$\n\n### 嵌套顺序\n除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。\n\n|语句|何时为真 |何时为假|\n|:--|:------|:------|\n|$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$|对每一对$x、y$，$P(x,y)$均为真|有一对$x、y$使$P(x,y)$为假|\n|$\\forall x\\exists yP(x,y)$|对每个$x$，都有$y$使$P(x,y)$为真|有$x$，使$P(x,y)$对每个$y$总是假|\n|$\\exists x\\forall yP(x,y)$|有一个$x$，使所有$y$对$P(x,y)$均为真|对每个$x$都有$y$使$P(x,y)$为假|\n|$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$|有一对$x、y$，$P(x,y)$为真|对每一对$x、y$，$P(x,y)$均为假|\n\n### 将数学语句翻译成涉及嵌套量词的语句\n1、两个正整数的和是整数\n$$ \\forall x\\forall y((x>0)\\land(y>0)\\rightarrow (x+y>0))$$\n2、每个实数(除$0$外)都有乘法逆元\n$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$\n\n","slug":"Math-DM-04-嵌套量词","published":1,"updated":"2020-02-26T14:51:27.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bds000r1ovc036apxeg","content":"<h2 id=\"嵌套量词\"><a href=\"#嵌套量词\" class=\"headerlink\" title=\"嵌套量词\"></a>嵌套量词</h2><p>嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。</p>\n<h3 id=\"嵌套量词例子\"><a href=\"#嵌套量词例子\" class=\"headerlink\" title=\"嵌套量词例子\"></a>嵌套量词例子</h3><p>这里假定$x$和$y$的论域是所有实数的集合。<br>$$ \\forall x\\forall y(x+y=y+x)$$<br>对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。<br>$$\\forall x\\exists y(x+y=0) $$<br>对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。<br>$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$</p>\n<h3 id=\"嵌套顺序\"><a href=\"#嵌套顺序\" class=\"headerlink\" title=\"嵌套顺序\"></a>嵌套顺序</h3><p>除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">语句</th>\n<th align=\"left\">何时为真</th>\n<th align=\"left\">何时为假</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$</td>\n<td align=\"left\">对每一对$x、y$，$P(x,y)$均为真</td>\n<td align=\"left\">有一对$x、y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\forall x\\exists yP(x,y)$</td>\n<td align=\"left\">对每个$x$，都有$y$使$P(x,y)$为真</td>\n<td align=\"left\">有$x$，使$P(x,y)$对每个$y$总是假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\exists x\\forall yP(x,y)$</td>\n<td align=\"left\">有一个$x$，使所有$y$对$P(x,y)$均为真</td>\n<td align=\"left\">对每个$x$都有$y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$</td>\n<td align=\"left\">有一对$x、y$，$P(x,y)$为真</td>\n<td align=\"left\">对每一对$x、y$，$P(x,y)$均为假</td>\n</tr>\n</tbody></table>\n<h3 id=\"将数学语句翻译成涉及嵌套量词的语句\"><a href=\"#将数学语句翻译成涉及嵌套量词的语句\" class=\"headerlink\" title=\"将数学语句翻译成涉及嵌套量词的语句\"></a>将数学语句翻译成涉及嵌套量词的语句</h3><p>1、两个正整数的和是整数<br>$$ \\forall x\\forall y((x&gt;0)\\land(y&gt;0)\\rightarrow (x+y&gt;0))$$<br>2、每个实数(除$0$外)都有乘法逆元<br>$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"嵌套量词\"><a href=\"#嵌套量词\" class=\"headerlink\" title=\"嵌套量词\"></a>嵌套量词</h2><p>嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。</p>\n<h3 id=\"嵌套量词例子\"><a href=\"#嵌套量词例子\" class=\"headerlink\" title=\"嵌套量词例子\"></a>嵌套量词例子</h3><p>这里假定$x$和$y$的论域是所有实数的集合。<br>$$ \\forall x\\forall y(x+y=y+x)$$<br>对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。<br>$$\\forall x\\exists y(x+y=0) $$<br>对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。<br>$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$</p>\n<h3 id=\"嵌套顺序\"><a href=\"#嵌套顺序\" class=\"headerlink\" title=\"嵌套顺序\"></a>嵌套顺序</h3><p>除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">语句</th>\n<th align=\"left\">何时为真</th>\n<th align=\"left\">何时为假</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$</td>\n<td align=\"left\">对每一对$x、y$，$P(x,y)$均为真</td>\n<td align=\"left\">有一对$x、y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\forall x\\exists yP(x,y)$</td>\n<td align=\"left\">对每个$x$，都有$y$使$P(x,y)$为真</td>\n<td align=\"left\">有$x$，使$P(x,y)$对每个$y$总是假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\exists x\\forall yP(x,y)$</td>\n<td align=\"left\">有一个$x$，使所有$y$对$P(x,y)$均为真</td>\n<td align=\"left\">对每个$x$都有$y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td align=\"left\">$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$</td>\n<td align=\"left\">有一对$x、y$，$P(x,y)$为真</td>\n<td align=\"left\">对每一对$x、y$，$P(x,y)$均为假</td>\n</tr>\n</tbody></table>\n<h3 id=\"将数学语句翻译成涉及嵌套量词的语句\"><a href=\"#将数学语句翻译成涉及嵌套量词的语句\" class=\"headerlink\" title=\"将数学语句翻译成涉及嵌套量词的语句\"></a>将数学语句翻译成涉及嵌套量词的语句</h3><p>1、两个正整数的和是整数<br>$$ \\forall x\\forall y((x&gt;0)\\land(y&gt;0)\\rightarrow (x+y&gt;0))$$<br>2、每个实数(除$0$外)都有乘法逆元<br>$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$</p>\n"},{"title":"Math-DM-05-推理规则","date":"2016-12-03T09:55:52.000Z","_content":"## 推理规则\n证明是建立在数学命题真实性之上的有效论证。    \n为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     \n\n### 命题逻辑的推理规则\n命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。     \n表示命题逻辑论证有效的关键是表示出它的__论证形式__有效。    \n我们可以先建立一些简单的论证形式，称为__推理规则__这些推理规则可以作为模板来构造更多复杂的有效论证形式。     \n\n|推理规则|永真式|名称|\n|:-----|:----|:---|\n|$\\begin{array}{cl} & p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & q \\\\ \\end{array}$| $[p\\land(p\\rightarrow q)]\\rightarrow q$| 假言推理|\n|$\\begin{array}{cl} &\\lnot p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & \\lnot p \\\\ \\end{array}$|$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$|取拒式|\n|$\\begin{array}{cl} & p\\rightarrow q \\\\ & \\underline {q\\rightarrow r} \\\\ \\therefore & p\\rightarrow r \\\\ \\end{array}$|$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$|假言三段论|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p} \\\\ \\therefore & q \\\\ \\end{array}$|$[(p\\lor q)\\land \\lnot p]\\rightarrow q$|析取三段论|\n|$\\begin{array}{cl} & \\underline p \\\\ \\therefore & p\\lor q \\\\ \\end{array}$|$p\\rightarrow (p\\lor q)$| 附加|\n|$\\begin{array}{cl} &\\underline {p\\land q} \\\\\\therefore & p\\\\ \\end{array}$|$(p\\land q)\\rightarrow p$|化简|\n|$\\begin{array}{cl} & p \\\\ & \\underline q \\\\ \\therefore & p\\land q \\\\ \\end{array}$|$(p\\land q)\\rightarrow (p\\land q)$|合取|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p\\lor r} \\\\ \\therefore & q\\lor r \\\\ \\end{array}$|$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$|消解|\n\n### 量词命题的推理规则\n\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\underline {\\forall xP(x)} \\\\ \\therefore & P(c) \\\\ \\end{array}$| 全称示例|\n|$\\begin{array}{cl} & \\underline {P(x),任意c} \\\\ \\therefore & \\forall xP(x)\\\\ \\end{array}$ |全称生成|\n|$\\begin{array}{cl} & \\underline {\\exists P(x)} \\\\ \\therefore & P(c),对某个元素\\\\ \\end{array}$|存在示例|\n|$\\begin{array}{cl} & \\underline {P(c),对某个元素} \\\\ \\therefore & \\exists xP(x)\\\\ \\end{array}$|存在生成|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n\n### 命题逻辑推理规则和量化语句的推理规则结合\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & \\lnot P(a) \\\\ \\end{array}$|全称取拒推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore & \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$|全称传递性|\n\n\n","source":"_posts/Math-DM-05-推理规则.md","raw":"---\ntitle: Math-DM-05-推理规则\ndate: 2016-12-03 17:55:52\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 推理规则\n证明是建立在数学命题真实性之上的有效论证。    \n为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     \n\n### 命题逻辑的推理规则\n命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。     \n表示命题逻辑论证有效的关键是表示出它的__论证形式__有效。    \n我们可以先建立一些简单的论证形式，称为__推理规则__这些推理规则可以作为模板来构造更多复杂的有效论证形式。     \n\n|推理规则|永真式|名称|\n|:-----|:----|:---|\n|$\\begin{array}{cl} & p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & q \\\\ \\end{array}$| $[p\\land(p\\rightarrow q)]\\rightarrow q$| 假言推理|\n|$\\begin{array}{cl} &\\lnot p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & \\lnot p \\\\ \\end{array}$|$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$|取拒式|\n|$\\begin{array}{cl} & p\\rightarrow q \\\\ & \\underline {q\\rightarrow r} \\\\ \\therefore & p\\rightarrow r \\\\ \\end{array}$|$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$|假言三段论|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p} \\\\ \\therefore & q \\\\ \\end{array}$|$[(p\\lor q)\\land \\lnot p]\\rightarrow q$|析取三段论|\n|$\\begin{array}{cl} & \\underline p \\\\ \\therefore & p\\lor q \\\\ \\end{array}$|$p\\rightarrow (p\\lor q)$| 附加|\n|$\\begin{array}{cl} &\\underline {p\\land q} \\\\\\therefore & p\\\\ \\end{array}$|$(p\\land q)\\rightarrow p$|化简|\n|$\\begin{array}{cl} & p \\\\ & \\underline q \\\\ \\therefore & p\\land q \\\\ \\end{array}$|$(p\\land q)\\rightarrow (p\\land q)$|合取|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p\\lor r} \\\\ \\therefore & q\\lor r \\\\ \\end{array}$|$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$|消解|\n\n### 量词命题的推理规则\n\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\underline {\\forall xP(x)} \\\\ \\therefore & P(c) \\\\ \\end{array}$| 全称示例|\n|$\\begin{array}{cl} & \\underline {P(x),任意c} \\\\ \\therefore & \\forall xP(x)\\\\ \\end{array}$ |全称生成|\n|$\\begin{array}{cl} & \\underline {\\exists P(x)} \\\\ \\therefore & P(c),对某个元素\\\\ \\end{array}$|存在示例|\n|$\\begin{array}{cl} & \\underline {P(c),对某个元素} \\\\ \\therefore & \\exists xP(x)\\\\ \\end{array}$|存在生成|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n\n### 命题逻辑推理规则和量化语句的推理规则结合\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & \\lnot P(a) \\\\ \\end{array}$|全称取拒推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore & \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$|全称传递性|\n\n\n","slug":"Math-DM-05-推理规则","published":1,"updated":"2020-02-26T14:51:27.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bds000s1ovc8dgcw4ol","content":"<h2 id=\"推理规则\"><a href=\"#推理规则\" class=\"headerlink\" title=\"推理规则\"></a>推理规则</h2><p>证明是建立在数学命题真实性之上的有效论证。<br>为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     </p>\n<h3 id=\"命题逻辑的推理规则\"><a href=\"#命题逻辑的推理规则\" class=\"headerlink\" title=\"命题逻辑的推理规则\"></a>命题逻辑的推理规则</h3><p>命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。<br>表示命题逻辑论证有效的关键是表示出它的<strong>论证形式</strong>有效。<br>我们可以先建立一些简单的论证形式，称为<strong>推理规则</strong>这些推理规则可以作为模板来构造更多复杂的有效论证形式。     </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">永真式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p \\ &amp; \\underline {p\\rightarrow q} \\ \\therefore &amp; q \\ \\end{array}$</td>\n<td align=\"left\">$[p\\land(p\\rightarrow q)]\\rightarrow q$</td>\n<td align=\"left\">假言推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp;\\lnot p \\ &amp; \\underline {p\\rightarrow q} \\ \\therefore &amp; \\lnot p \\ \\end{array}$</td>\n<td align=\"left\">$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$</td>\n<td align=\"left\">取拒式</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\rightarrow q \\ &amp; \\underline {q\\rightarrow r} \\ \\therefore &amp; p\\rightarrow r \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$</td>\n<td align=\"left\">假言三段论</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\lor q \\ &amp; \\underline {\\lnot p} \\ \\therefore &amp; q \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\lor q)\\land \\lnot p]\\rightarrow q$</td>\n<td align=\"left\">析取三段论</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline p \\ \\therefore &amp; p\\lor q \\ \\end{array}$</td>\n<td align=\"left\">$p\\rightarrow (p\\lor q)$</td>\n<td align=\"left\">附加</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp;\\underline {p\\land q} \\\\therefore &amp; p\\ \\end{array}$</td>\n<td align=\"left\">$(p\\land q)\\rightarrow p$</td>\n<td align=\"left\">化简</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p \\ &amp; \\underline q \\ \\therefore &amp; p\\land q \\ \\end{array}$</td>\n<td align=\"left\">$(p\\land q)\\rightarrow (p\\land q)$</td>\n<td align=\"left\">合取</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\lor q \\ &amp; \\underline {\\lnot p\\lor r} \\ \\therefore &amp; q\\lor r \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$</td>\n<td align=\"left\">消解</td>\n</tr>\n</tbody></table>\n<h3 id=\"量词命题的推理规则\"><a href=\"#量词命题的推理规则\" class=\"headerlink\" title=\"量词命题的推理规则\"></a>量词命题的推理规则</h3><table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {\\forall xP(x)} \\ \\therefore &amp; P(c) \\ \\end{array}$</td>\n<td align=\"left\">全称示例</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {P(x),任意c} \\ \\therefore &amp; \\forall xP(x)\\ \\end{array}$</td>\n<td align=\"left\">全称生成</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {\\exists P(x)} \\ \\therefore &amp; P(c),对某个元素\\ \\end{array}$</td>\n<td align=\"left\">存在示例</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {P(c),对某个元素} \\ \\therefore &amp; \\exists xP(x)\\ \\end{array}$</td>\n<td align=\"left\">存在生成</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; Q(a) \\ \\end{array}$</td>\n<td align=\"left\">全称假言推理</td>\n</tr>\n</tbody></table>\n<h3 id=\"命题逻辑推理规则和量化语句的推理规则结合\"><a href=\"#命题逻辑推理规则和量化语句的推理规则结合\" class=\"headerlink\" title=\"命题逻辑推理规则和量化语句的推理规则结合\"></a>命题逻辑推理规则和量化语句的推理规则结合</h3><table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; Q(a) \\ \\end{array}$</td>\n<td align=\"left\">全称假言推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; \\lnot P(a) \\ \\end{array}$</td>\n<td align=\"left\">全称取拒推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\ \\therefore &amp; \\forall x(P(x)\\rightarrow R(x)) \\ \\end{array}$</td>\n<td align=\"left\">全称传递性</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"推理规则\"><a href=\"#推理规则\" class=\"headerlink\" title=\"推理规则\"></a>推理规则</h2><p>证明是建立在数学命题真实性之上的有效论证。<br>为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     </p>\n<h3 id=\"命题逻辑的推理规则\"><a href=\"#命题逻辑的推理规则\" class=\"headerlink\" title=\"命题逻辑的推理规则\"></a>命题逻辑的推理规则</h3><p>命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。<br>表示命题逻辑论证有效的关键是表示出它的<strong>论证形式</strong>有效。<br>我们可以先建立一些简单的论证形式，称为<strong>推理规则</strong>这些推理规则可以作为模板来构造更多复杂的有效论证形式。     </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">永真式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p \\ &amp; \\underline {p\\rightarrow q} \\ \\therefore &amp; q \\ \\end{array}$</td>\n<td align=\"left\">$[p\\land(p\\rightarrow q)]\\rightarrow q$</td>\n<td align=\"left\">假言推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp;\\lnot p \\ &amp; \\underline {p\\rightarrow q} \\ \\therefore &amp; \\lnot p \\ \\end{array}$</td>\n<td align=\"left\">$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$</td>\n<td align=\"left\">取拒式</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\rightarrow q \\ &amp; \\underline {q\\rightarrow r} \\ \\therefore &amp; p\\rightarrow r \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$</td>\n<td align=\"left\">假言三段论</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\lor q \\ &amp; \\underline {\\lnot p} \\ \\therefore &amp; q \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\lor q)\\land \\lnot p]\\rightarrow q$</td>\n<td align=\"left\">析取三段论</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline p \\ \\therefore &amp; p\\lor q \\ \\end{array}$</td>\n<td align=\"left\">$p\\rightarrow (p\\lor q)$</td>\n<td align=\"left\">附加</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp;\\underline {p\\land q} \\\\therefore &amp; p\\ \\end{array}$</td>\n<td align=\"left\">$(p\\land q)\\rightarrow p$</td>\n<td align=\"left\">化简</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p \\ &amp; \\underline q \\ \\therefore &amp; p\\land q \\ \\end{array}$</td>\n<td align=\"left\">$(p\\land q)\\rightarrow (p\\land q)$</td>\n<td align=\"left\">合取</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; p\\lor q \\ &amp; \\underline {\\lnot p\\lor r} \\ \\therefore &amp; q\\lor r \\ \\end{array}$</td>\n<td align=\"left\">$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$</td>\n<td align=\"left\">消解</td>\n</tr>\n</tbody></table>\n<h3 id=\"量词命题的推理规则\"><a href=\"#量词命题的推理规则\" class=\"headerlink\" title=\"量词命题的推理规则\"></a>量词命题的推理规则</h3><table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {\\forall xP(x)} \\ \\therefore &amp; P(c) \\ \\end{array}$</td>\n<td align=\"left\">全称示例</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {P(x),任意c} \\ \\therefore &amp; \\forall xP(x)\\ \\end{array}$</td>\n<td align=\"left\">全称生成</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {\\exists P(x)} \\ \\therefore &amp; P(c),对某个元素\\ \\end{array}$</td>\n<td align=\"left\">存在示例</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\underline {P(c),对某个元素} \\ \\therefore &amp; \\exists xP(x)\\ \\end{array}$</td>\n<td align=\"left\">存在生成</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; Q(a) \\ \\end{array}$</td>\n<td align=\"left\">全称假言推理</td>\n</tr>\n</tbody></table>\n<h3 id=\"命题逻辑推理规则和量化语句的推理规则结合\"><a href=\"#命题逻辑推理规则和量化语句的推理规则结合\" class=\"headerlink\" title=\"命题逻辑推理规则和量化语句的推理规则结合\"></a>命题逻辑推理规则和量化语句的推理规则结合</h3><table>\n<thead>\n<tr>\n<th align=\"left\">推理规则</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; Q(a) \\ \\end{array}$</td>\n<td align=\"left\">全称假言推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\ \\therefore &amp; \\lnot P(a) \\ \\end{array}$</td>\n<td align=\"left\">全称取拒推理</td>\n</tr>\n<tr>\n<td align=\"left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\ &amp; \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\ \\therefore &amp; \\forall x(P(x)\\rightarrow R(x)) \\ \\end{array}$</td>\n<td align=\"left\">全称传递性</td>\n</tr>\n</tbody></table>\n"},{"title":"Math-DM-06-证明导论","date":"2016-12-04T02:44:13.000Z","_content":"## 证明\n* 定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。\n* 引理：在其他结果证明中很有帮助的不大重要的定理\n* 推论：从定理直接建立被证明的定理\n* 猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。\n\n##证明定理的方法\n### 直接证明\n直接证明用于$p\\rightarrow q$类型语句的方法。    \n第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。\n\n### 反证法\n反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。     \n在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。\n\n#### 例子\n前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。    \n证明\"若$\\3n+2$是奇数，则$n$也是奇数\"。    \n假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。\n\n### 空证明\n在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 平凡证明\n在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 归谬证明\n假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。  \n也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 \n\n#### 归谬证明实例\n前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。    \n证明：$\\sqrt 2$是无理数     \n假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。    \n将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。     \n根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。    \n等式两边除以$2$，得到$b^2=2c^2$。    \n由偶数定义，$b^2$是偶数，$b$也是偶数。     \n我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。\n\n### 等价性证明\n为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于: \n$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$\n有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,...,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎...↔︎p_n$$\n\n### 反例\n证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。\n\n### 穷举证明\n有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。\n\n### 分情形证明\n为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。\n\n### 存在性证明\n对于形如$∃P(x)$的命题的证明。\n* 构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。\n* 非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。\n\n### 唯一性证明\n断言具有特定性质的元素惟一存在。证明分为两部分：\n* 存在性：证明存在某个元素$x$具有期望的性质\n* 唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。\n\n\n\n\n\n\n\n","source":"_posts/Math-DM-06-证明导论.md","raw":"---\ntitle: Math-DM-06-证明导论\ndate: 2016-12-04 10:44:13\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 证明\n* 定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。\n* 引理：在其他结果证明中很有帮助的不大重要的定理\n* 推论：从定理直接建立被证明的定理\n* 猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。\n\n##证明定理的方法\n### 直接证明\n直接证明用于$p\\rightarrow q$类型语句的方法。    \n第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。\n\n### 反证法\n反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。     \n在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。\n\n#### 例子\n前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。    \n证明\"若$\\3n+2$是奇数，则$n$也是奇数\"。    \n假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。\n\n### 空证明\n在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 平凡证明\n在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 归谬证明\n假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。  \n也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 \n\n#### 归谬证明实例\n前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。    \n证明：$\\sqrt 2$是无理数     \n假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。    \n将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。     \n根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。    \n等式两边除以$2$，得到$b^2=2c^2$。    \n由偶数定义，$b^2$是偶数，$b$也是偶数。     \n我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。\n\n### 等价性证明\n为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于: \n$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$\n有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,...,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎...↔︎p_n$$\n\n### 反例\n证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。\n\n### 穷举证明\n有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。\n\n### 分情形证明\n为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。\n\n### 存在性证明\n对于形如$∃P(x)$的命题的证明。\n* 构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。\n* 非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。\n\n### 唯一性证明\n断言具有特定性质的元素惟一存在。证明分为两部分：\n* 存在性：证明存在某个元素$x$具有期望的性质\n* 唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。\n\n\n\n\n\n\n\n","slug":"Math-DM-06-证明导论","published":1,"updated":"2020-02-26T14:51:27.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdt000t1ovch1ckq065","content":"<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><ul>\n<li>定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。</li>\n<li>引理：在其他结果证明中很有帮助的不大重要的定理</li>\n<li>推论：从定理直接建立被证明的定理</li>\n<li>猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。</li>\n</ul>\n<p>##证明定理的方法</p>\n<h3 id=\"直接证明\"><a href=\"#直接证明\" class=\"headerlink\" title=\"直接证明\"></a>直接证明</h3><p>直接证明用于$p\\rightarrow q$类型语句的方法。<br>第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。</p>\n<h3 id=\"反证法\"><a href=\"#反证法\" class=\"headerlink\" title=\"反证法\"></a>反证法</h3><p>反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。<br>在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。<br>证明”若$\\3n+2$是奇数，则$n$也是奇数”。<br>假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。</p>\n<h3 id=\"空证明\"><a href=\"#空证明\" class=\"headerlink\" title=\"空证明\"></a>空证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"平凡证明\"><a href=\"#平凡证明\" class=\"headerlink\" title=\"平凡证明\"></a>平凡证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"归谬证明\"><a href=\"#归谬证明\" class=\"headerlink\" title=\"归谬证明\"></a>归谬证明</h3><p>假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。<br>也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 </p>\n<h4 id=\"归谬证明实例\"><a href=\"#归谬证明实例\" class=\"headerlink\" title=\"归谬证明实例\"></a>归谬证明实例</h4><p>前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。<br>证明：$\\sqrt 2$是无理数<br>假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。<br>将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。<br>根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。<br>等式两边除以$2$，得到$b^2=2c^2$。<br>由偶数定义，$b^2$是偶数，$b$也是偶数。<br>我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。</p>\n<h3 id=\"等价性证明\"><a href=\"#等价性证明\" class=\"headerlink\" title=\"等价性证明\"></a>等价性证明</h3><p>为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于:<br>$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$<br>有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,…,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎…↔︎p_n$$</p>\n<h3 id=\"反例\"><a href=\"#反例\" class=\"headerlink\" title=\"反例\"></a>反例</h3><p>证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。</p>\n<h3 id=\"穷举证明\"><a href=\"#穷举证明\" class=\"headerlink\" title=\"穷举证明\"></a>穷举证明</h3><p>有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。</p>\n<h3 id=\"分情形证明\"><a href=\"#分情形证明\" class=\"headerlink\" title=\"分情形证明\"></a>分情形证明</h3><p>为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。</p>\n<h3 id=\"存在性证明\"><a href=\"#存在性证明\" class=\"headerlink\" title=\"存在性证明\"></a>存在性证明</h3><p>对于形如$∃P(x)$的命题的证明。</p>\n<ul>\n<li>构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。</li>\n<li>非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。</li>\n</ul>\n<h3 id=\"唯一性证明\"><a href=\"#唯一性证明\" class=\"headerlink\" title=\"唯一性证明\"></a>唯一性证明</h3><p>断言具有特定性质的元素惟一存在。证明分为两部分：</p>\n<ul>\n<li>存在性：证明存在某个元素$x$具有期望的性质</li>\n<li>唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><ul>\n<li>定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。</li>\n<li>引理：在其他结果证明中很有帮助的不大重要的定理</li>\n<li>推论：从定理直接建立被证明的定理</li>\n<li>猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。</li>\n</ul>\n<p>##证明定理的方法</p>\n<h3 id=\"直接证明\"><a href=\"#直接证明\" class=\"headerlink\" title=\"直接证明\"></a>直接证明</h3><p>直接证明用于$p\\rightarrow q$类型语句的方法。<br>第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。</p>\n<h3 id=\"反证法\"><a href=\"#反证法\" class=\"headerlink\" title=\"反证法\"></a>反证法</h3><p>反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。<br>在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。<br>证明”若$\\3n+2$是奇数，则$n$也是奇数”。<br>假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。</p>\n<h3 id=\"空证明\"><a href=\"#空证明\" class=\"headerlink\" title=\"空证明\"></a>空证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"平凡证明\"><a href=\"#平凡证明\" class=\"headerlink\" title=\"平凡证明\"></a>平凡证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"归谬证明\"><a href=\"#归谬证明\" class=\"headerlink\" title=\"归谬证明\"></a>归谬证明</h3><p>假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。<br>也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 </p>\n<h4 id=\"归谬证明实例\"><a href=\"#归谬证明实例\" class=\"headerlink\" title=\"归谬证明实例\"></a>归谬证明实例</h4><p>前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。<br>证明：$\\sqrt 2$是无理数<br>假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。<br>将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。<br>根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。<br>等式两边除以$2$，得到$b^2=2c^2$。<br>由偶数定义，$b^2$是偶数，$b$也是偶数。<br>我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。</p>\n<h3 id=\"等价性证明\"><a href=\"#等价性证明\" class=\"headerlink\" title=\"等价性证明\"></a>等价性证明</h3><p>为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于:<br>$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$<br>有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,…,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎…↔︎p_n$$</p>\n<h3 id=\"反例\"><a href=\"#反例\" class=\"headerlink\" title=\"反例\"></a>反例</h3><p>证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。</p>\n<h3 id=\"穷举证明\"><a href=\"#穷举证明\" class=\"headerlink\" title=\"穷举证明\"></a>穷举证明</h3><p>有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。</p>\n<h3 id=\"分情形证明\"><a href=\"#分情形证明\" class=\"headerlink\" title=\"分情形证明\"></a>分情形证明</h3><p>为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。</p>\n<h3 id=\"存在性证明\"><a href=\"#存在性证明\" class=\"headerlink\" title=\"存在性证明\"></a>存在性证明</h3><p>对于形如$∃P(x)$的命题的证明。</p>\n<ul>\n<li>构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。</li>\n<li>非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。</li>\n</ul>\n<h3 id=\"唯一性证明\"><a href=\"#唯一性证明\" class=\"headerlink\" title=\"唯一性证明\"></a>唯一性证明</h3><p>断言具有特定性质的元素惟一存在。证明分为两部分：</p>\n<ul>\n<li>存在性：证明存在某个元素$x$具有期望的性质</li>\n<li>唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。</li>\n</ul>\n"},{"title":"Math-DM-07-集合","date":"2016-12-08T04:37:07.000Z","_content":"## 集合\n集合是一组无序的对象。\n> 该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。\n    \n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n\n#### 笛卡儿积\n##### 元组\n\n有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,...,a_n)$。      \n只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。    \n令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合： \n$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$\n\n集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}\n$$\n#### 带量词的集合符合\n* $∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。\n* $∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。\n\n##### 实例\n$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。      \n$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。\n\n#### 量词的真值集合\n我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:    \n$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 \n> 在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。\n\n\n#### 常用集合表示\n|符号|描述|\n|:--|:---|\n|$\\mathbf Q$|有理数集|\n|$\\mathbf Q^+$| 正有理数集|\n|$\\mathbf N$|自然数集|\n|$\\mathbf Z$|整数集|\n|$\\mathbf Z^+$|正整数集|\n|$\\mathbf R$|实数集|\n|$\\varnothing$|空集|\n\n> 注意，$\\varnothing$不等于$\\{\\varnothing\\}$\n\n### 集合运算\n|运算|描述|\n|:--|:---|\n|并集|$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$|\n|交集|$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$|\n|差集|$A-B=\\{x\\in A\\land x\\notin B\\}$|\n|补集|$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$|\n\n> $U$为全集\n\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n##### 证明集合相等的方法\n证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。    \n另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 \n\n##### 证明实例\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n","source":"_posts/Math-DM-07-集合.md","raw":"---\ntitle: Math-DM-07-集合\ndate: 2016-12-08 12:37:07\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 集合\n集合是一组无序的对象。\n> 该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。\n    \n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n\n#### 笛卡儿积\n##### 元组\n\n有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,...,a_n)$。      \n只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。    \n令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合： \n$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$\n\n集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}\n$$\n#### 带量词的集合符合\n* $∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。\n* $∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。\n\n##### 实例\n$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。      \n$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。\n\n#### 量词的真值集合\n我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:    \n$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 \n> 在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。\n\n\n#### 常用集合表示\n|符号|描述|\n|:--|:---|\n|$\\mathbf Q$|有理数集|\n|$\\mathbf Q^+$| 正有理数集|\n|$\\mathbf N$|自然数集|\n|$\\mathbf Z$|整数集|\n|$\\mathbf Z^+$|正整数集|\n|$\\mathbf R$|实数集|\n|$\\varnothing$|空集|\n\n> 注意，$\\varnothing$不等于$\\{\\varnothing\\}$\n\n### 集合运算\n|运算|描述|\n|:--|:---|\n|并集|$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$|\n|交集|$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$|\n|差集|$A-B=\\{x\\in A\\land x\\notin B\\}$|\n|补集|$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$|\n\n> $U$为全集\n\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n##### 证明集合相等的方法\n证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。    \n另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 \n\n##### 证明实例\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n","slug":"Math-DM-07-集合","published":1,"updated":"2020-02-26T14:51:27.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdt000u1ovcp2rt4mxo","content":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><p>集合是一组无序的对象。</p>\n<blockquote>\n<p>该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。</p>\n</blockquote>\n<h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"笛卡儿积\"><a href=\"#笛卡儿积\" class=\"headerlink\" title=\"笛卡儿积\"></a>笛卡儿积</h4><h5 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h5><p>有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,…,a_n)$。<br>只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。<br>令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合：<br>$$ \\mathbf A\\times\\mathbf B={(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B}$$</p>\n<p>集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n}<br>$$</p>\n<h4 id=\"带量词的集合符合\"><a href=\"#带量词的集合符合\" class=\"headerlink\" title=\"带量词的集合符合\"></a>带量词的集合符合</h4><ul>\n<li>$∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。</li>\n<li>$∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。</li>\n</ul>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><p>$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。<br>$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。</p>\n<h4 id=\"量词的真值集合\"><a href=\"#量词的真值集合\" class=\"headerlink\" title=\"量词的真值集合\"></a>量词的真值集合</h4><p>我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:<br>$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为${x\\in D\\mid P(x)}$。 </p>\n<blockquote>\n<p>在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。</p>\n</blockquote>\n<h4 id=\"常用集合表示\"><a href=\"#常用集合表示\" class=\"headerlink\" title=\"常用集合表示\"></a>常用集合表示</h4><table>\n<thead>\n<tr>\n<th align=\"left\">符号</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\mathbf Q$</td>\n<td align=\"left\">有理数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Q^+$</td>\n<td align=\"left\">正有理数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf N$</td>\n<td align=\"left\">自然数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Z$</td>\n<td align=\"left\">整数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Z^+$</td>\n<td align=\"left\">正整数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf R$</td>\n<td align=\"left\">实数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\varnothing$</td>\n<td align=\"left\">空集</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>注意，$\\varnothing$不等于${\\varnothing}$</p>\n</blockquote>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">并集</td>\n<td align=\"left\">$A\\cup B={x\\mid x\\in A\\lor x\\in B}$</td>\n</tr>\n<tr>\n<td align=\"left\">交集</td>\n<td align=\"left\">$A\\cap B={x\\mid x\\in A\\land x\\in B}$</td>\n</tr>\n<tr>\n<td align=\"left\">差集</td>\n<td align=\"left\">$A-B={x\\in A\\land x\\notin B}$</td>\n</tr>\n<tr>\n<td align=\"left\">补集</td>\n<td align=\"left\">$\\overline A={x\\mid x\\in U\\land x\\notin A}$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>$U$为全集</p>\n</blockquote>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">等式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td align=\"left\">恒等律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td align=\"left\">支配律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td align=\"left\">幂等律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline {(\\bar A)}=A$</td>\n<td align=\"left\">补集律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td align=\"left\">交换律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td align=\"left\">结合律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td align=\"left\">分配律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td align=\"left\">德摩根定律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td align=\"left\">吸收律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td align=\"left\">补集</td>\n</tr>\n</tbody></table>\n<h5 id=\"证明集合相等的方法\"><a href=\"#证明集合相等的方法\" class=\"headerlink\" title=\"证明集合相等的方法\"></a>证明集合相等的方法</h5><p>证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。<br>另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 </p>\n<h5 id=\"证明实例\"><a href=\"#证明实例\" class=\"headerlink\" title=\"证明实例\"></a>证明实例</h5><p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= {x\\mid x\\notin A\\cap B} \\<br>&amp;   ={x\\mid \\lnot(x\\in(A\\cap B))} \\<br>&amp;   ={x\\mid \\lnot(x\\in A\\land x\\in B)} \\<br>&amp;   ={x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)}\\<br>&amp;   ={x\\mid x\\notin A\\lor x\\notin B}\\<br>&amp;   ={x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}} \\<br>&amp;   ={x\\mid x\\in \\overline{A}\\cup\\overline{B}} \\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><p>集合是一组无序的对象。</p>\n<blockquote>\n<p>该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。</p>\n</blockquote>\n<h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"笛卡儿积\"><a href=\"#笛卡儿积\" class=\"headerlink\" title=\"笛卡儿积\"></a>笛卡儿积</h4><h5 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h5><p>有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,…,a_n)$。<br>只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。<br>令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合：<br>$$ \\mathbf A\\times\\mathbf B={(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B}$$</p>\n<p>集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n}<br>$$</p>\n<h4 id=\"带量词的集合符合\"><a href=\"#带量词的集合符合\" class=\"headerlink\" title=\"带量词的集合符合\"></a>带量词的集合符合</h4><ul>\n<li>$∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。</li>\n<li>$∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。</li>\n</ul>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><p>$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。<br>$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。</p>\n<h4 id=\"量词的真值集合\"><a href=\"#量词的真值集合\" class=\"headerlink\" title=\"量词的真值集合\"></a>量词的真值集合</h4><p>我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:<br>$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为${x\\in D\\mid P(x)}$。 </p>\n<blockquote>\n<p>在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。</p>\n</blockquote>\n<h4 id=\"常用集合表示\"><a href=\"#常用集合表示\" class=\"headerlink\" title=\"常用集合表示\"></a>常用集合表示</h4><table>\n<thead>\n<tr>\n<th align=\"left\">符号</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\mathbf Q$</td>\n<td align=\"left\">有理数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Q^+$</td>\n<td align=\"left\">正有理数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf N$</td>\n<td align=\"left\">自然数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Z$</td>\n<td align=\"left\">整数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf Z^+$</td>\n<td align=\"left\">正整数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\mathbf R$</td>\n<td align=\"left\">实数集</td>\n</tr>\n<tr>\n<td align=\"left\">$\\varnothing$</td>\n<td align=\"left\">空集</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>注意，$\\varnothing$不等于${\\varnothing}$</p>\n</blockquote>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">并集</td>\n<td align=\"left\">$A\\cup B={x\\mid x\\in A\\lor x\\in B}$</td>\n</tr>\n<tr>\n<td align=\"left\">交集</td>\n<td align=\"left\">$A\\cap B={x\\mid x\\in A\\land x\\in B}$</td>\n</tr>\n<tr>\n<td align=\"left\">差集</td>\n<td align=\"left\">$A-B={x\\in A\\land x\\notin B}$</td>\n</tr>\n<tr>\n<td align=\"left\">补集</td>\n<td align=\"left\">$\\overline A={x\\mid x\\in U\\land x\\notin A}$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>$U$为全集</p>\n</blockquote>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">等式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td align=\"left\">恒等律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td align=\"left\">支配律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td align=\"left\">幂等律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline {(\\bar A)}=A$</td>\n<td align=\"left\">补集律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td align=\"left\">交换律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td align=\"left\">结合律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td align=\"left\">分配律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td align=\"left\">德摩根定律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td align=\"left\">吸收律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td align=\"left\">补集</td>\n</tr>\n</tbody></table>\n<h5 id=\"证明集合相等的方法\"><a href=\"#证明集合相等的方法\" class=\"headerlink\" title=\"证明集合相等的方法\"></a>证明集合相等的方法</h5><p>证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。<br>另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 </p>\n<h5 id=\"证明实例\"><a href=\"#证明实例\" class=\"headerlink\" title=\"证明实例\"></a>证明实例</h5><p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= {x\\mid x\\notin A\\cap B} \\<br>&amp;   ={x\\mid \\lnot(x\\in(A\\cap B))} \\<br>&amp;   ={x\\mid \\lnot(x\\in A\\land x\\in B)} \\<br>&amp;   ={x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)}\\<br>&amp;   ={x\\mid x\\notin A\\lor x\\notin B}\\<br>&amp;   ={x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}} \\<br>&amp;   ={x\\mid x\\in \\overline{A}\\cup\\overline{B}} \\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n"},{"title":"算法-整数－矩阵","date":"2016-10-05T02:36:08.000Z","_content":"\n## 算法\n### 常用算法\n#### 搜索算法\n* 线性搜索或顺序搜索\n* 二分搜索：用于搜索排序后的集合\n\n#### 排序\n* 冒泡排序\n* 插入排序\n\n#### 贪心算法\n每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列\n\n### 函数的增长\n$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。\n\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid \\le C\\mid g(x)\\mid\n$$我们就说$f(x)$是$\\mathrm O(g(x))$    \n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid\\ge C\\mid g(x)\\mid\n$$\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。\n\n#### 函数的组合增长\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是\n$$\n    \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))\n$$\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$\n\n### 算法复杂度\n|复杂度|术语|复杂度|术语|\n|:----|:--|:----|:--|\n|$\\Theta (1)$|常数复杂度|$\\Theta (n^b)$|多项式复杂度|\n|$\\Theta (logn)$|对数复杂度|$\\Theta (b^n),b>1$|指数复杂度|\n|$\\Theta (n)$|线性复杂度|$\\Theta (n!)$|阶乘复杂度|\n|$\\Theta (nlogn)$|$nlogn$复杂度|||\n\n* 一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   \n* 能用多项式时间验证解的问题属于NP类，易解的问题属于P类。\n* NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。\n\n## 整数\n* 如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$\n* $a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。\n* 令$a$，$b$，$c$为整数。则\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；\n    - 若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；\n    - 若$a\\mid b$，$b\\mid c$，则$a\\mid c$；\n\n### 同余\n* 带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。\n* 若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$\n* 令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$\n* 整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类\n* 令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么\n$$\n    a+c\\equiv b+d\\pmod m\\\\\n    ac\\equiv bd\\pmod m\n$$\n* 令$m$是正整数，$a$和$b$是整数，则有\n$$\n    (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\\n    ab\\mod m = ((a\\mod m)(b\\mod m))mod m\n$$\n* 根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此\n$$\n    a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\\n    ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)\n$$\n\n### 同余应用\n* 散列函数\n* 伪随机数\n\n> 最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：\n> $$\n> x_{n+1} = (ax_n +c)\\mod m\n> $$\n\n* 密码学\n\n> 凯撒密码：\n> $$\n>   f(p)=(p+k)\\mod 26\\\\\n>   f(p)=(ap+b)\\mod 26\n> $$\n\n### 素数和最大公约数\n* 每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。\n* 如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。\n* 梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。\n* 素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。\n* 令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。\n* 如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。\n* 整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$\n* 正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。\n* 令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$\n\n#### 求最大公约数算法\n* 假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n* 另一个求最大公约数的算法就是欧几里得算法。\n* 令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。\n\n#### 求最小公倍数算法\n同最大公约数算法类似，最小公倍数的由以下公式给出：\n$$\nlcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}\n$$\n\n### 整数和进制\n令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：\n$$\n    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0\n$$\n其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。\n\n### 数论应用\n*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。\n* 如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。\n* 如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$\n* 令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$\n* \n","source":"_posts/Math-算法-整数－矩阵.md","raw":"---\ntitle: 算法-整数－矩阵\ndate: 2016-10-05 10:36:08\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n\n## 算法\n### 常用算法\n#### 搜索算法\n* 线性搜索或顺序搜索\n* 二分搜索：用于搜索排序后的集合\n\n#### 排序\n* 冒泡排序\n* 插入排序\n\n#### 贪心算法\n每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列\n\n### 函数的增长\n$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。\n\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid \\le C\\mid g(x)\\mid\n$$我们就说$f(x)$是$\\mathrm O(g(x))$    \n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid\\ge C\\mid g(x)\\mid\n$$\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。\n\n#### 函数的组合增长\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是\n$$\n    \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))\n$$\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$\n\n### 算法复杂度\n|复杂度|术语|复杂度|术语|\n|:----|:--|:----|:--|\n|$\\Theta (1)$|常数复杂度|$\\Theta (n^b)$|多项式复杂度|\n|$\\Theta (logn)$|对数复杂度|$\\Theta (b^n),b>1$|指数复杂度|\n|$\\Theta (n)$|线性复杂度|$\\Theta (n!)$|阶乘复杂度|\n|$\\Theta (nlogn)$|$nlogn$复杂度|||\n\n* 一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   \n* 能用多项式时间验证解的问题属于NP类，易解的问题属于P类。\n* NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。\n\n## 整数\n* 如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$\n* $a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。\n* 令$a$，$b$，$c$为整数。则\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；\n    - 若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；\n    - 若$a\\mid b$，$b\\mid c$，则$a\\mid c$；\n\n### 同余\n* 带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。\n* 若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$\n* 令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$\n* 整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类\n* 令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么\n$$\n    a+c\\equiv b+d\\pmod m\\\\\n    ac\\equiv bd\\pmod m\n$$\n* 令$m$是正整数，$a$和$b$是整数，则有\n$$\n    (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\\n    ab\\mod m = ((a\\mod m)(b\\mod m))mod m\n$$\n* 根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此\n$$\n    a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\\n    ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)\n$$\n\n### 同余应用\n* 散列函数\n* 伪随机数\n\n> 最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：\n> $$\n> x_{n+1} = (ax_n +c)\\mod m\n> $$\n\n* 密码学\n\n> 凯撒密码：\n> $$\n>   f(p)=(p+k)\\mod 26\\\\\n>   f(p)=(ap+b)\\mod 26\n> $$\n\n### 素数和最大公约数\n* 每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。\n* 如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。\n* 梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。\n* 素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。\n* 令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。\n* 如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。\n* 整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$\n* 正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。\n* 令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$\n\n#### 求最大公约数算法\n* 假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n* 另一个求最大公约数的算法就是欧几里得算法。\n* 令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。\n\n#### 求最小公倍数算法\n同最大公约数算法类似，最小公倍数的由以下公式给出：\n$$\nlcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}\n$$\n\n### 整数和进制\n令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：\n$$\n    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0\n$$\n其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。\n\n### 数论应用\n*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。\n* 如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。\n* 如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$\n* 令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$\n* \n","slug":"Math-算法-整数－矩阵","published":1,"updated":"2020-02-26T14:51:27.220Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdv000v1ovc1pw97rrt","content":"<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"搜索算法\"><a href=\"#搜索算法\" class=\"headerlink\" title=\"搜索算法\"></a>搜索算法</h4><ul>\n<li>线性搜索或顺序搜索</li>\n<li>二分搜索：用于搜索排序后的集合</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>冒泡排序</li>\n<li>插入排序</li>\n</ul>\n<h4 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h4><p>每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列</p>\n<h3 id=\"函数的增长\"><a href=\"#函数的增长\" class=\"headerlink\" title=\"函数的增长\"></a>函数的增长</h3><p>$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。</p>\n<ul>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid \\le C\\mid g(x)\\mid<br>$$我们就说$f(x)$是$\\mathrm O(g(x))$    </li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid\\ge C\\mid g(x)\\mid<br>$$</li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。</li>\n</ul>\n<h4 id=\"函数的组合增长\"><a href=\"#函数的组合增长\" class=\"headerlink\" title=\"函数的组合增长\"></a>函数的组合增长</h4><ul>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是<br>$$<br>  \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))<br>$$</li>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$</li>\n</ul>\n<h3 id=\"算法复杂度\"><a href=\"#算法复杂度\" class=\"headerlink\" title=\"算法复杂度\"></a>算法复杂度</h3><table>\n<thead>\n<tr>\n<th align=\"left\">复杂度</th>\n<th align=\"left\">术语</th>\n<th align=\"left\">复杂度</th>\n<th align=\"left\">术语</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\Theta (1)$</td>\n<td align=\"left\">常数复杂度</td>\n<td align=\"left\">$\\Theta (n^b)$</td>\n<td align=\"left\">多项式复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (logn)$</td>\n<td align=\"left\">对数复杂度</td>\n<td align=\"left\">$\\Theta (b^n),b&gt;1$</td>\n<td align=\"left\">指数复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (n)$</td>\n<td align=\"left\">线性复杂度</td>\n<td align=\"left\">$\\Theta (n!)$</td>\n<td align=\"left\">阶乘复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (nlogn)$</td>\n<td align=\"left\">$nlogn$复杂度</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<ul>\n<li>一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   </li>\n<li>能用多项式时间验证解的问题属于NP类，易解的问题属于P类。</li>\n<li>NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。</li>\n</ul>\n<h2 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h2><ul>\n<li>如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$</li>\n<li>$a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。</li>\n<li>令$a$，$b$，$c$为整数。则<ul>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；</li>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；</li>\n<li>若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；</li>\n<li>若$a\\mid b$，$b\\mid c$，则$a\\mid c$；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"同余\"><a href=\"#同余\" class=\"headerlink\" title=\"同余\"></a>同余</h3><ul>\n<li>带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。</li>\n<li>若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$</li>\n<li>令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$</li>\n<li>整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类</li>\n<li>令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么<br>$$<br>  a+c\\equiv b+d\\pmod m\\<br>  ac\\equiv bd\\pmod m<br>$$</li>\n<li>令$m$是正整数，$a$和$b$是整数，则有<br>$$<br>  (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\<br>  ab\\mod m = ((a\\mod m)(b\\mod m))mod m<br>$$</li>\n<li>根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此<br>$$<br>  a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\<br>  ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)<br>$$</li>\n</ul>\n<h3 id=\"同余应用\"><a href=\"#同余应用\" class=\"headerlink\" title=\"同余应用\"></a>同余应用</h3><ul>\n<li>散列函数</li>\n<li>伪随机数</li>\n</ul>\n<blockquote>\n<p>最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列${x_n}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：<br>$$<br>x_{n+1} = (ax_n +c)\\mod m<br>$$</p>\n</blockquote>\n<ul>\n<li>密码学</li>\n</ul>\n<blockquote>\n<p>凯撒密码：<br>$$<br>  f(p)=(p+k)\\mod 26\\<br>  f(p)=(ap+b)\\mod 26<br>$$</p>\n</blockquote>\n<h3 id=\"素数和最大公约数\"><a href=\"#素数和最大公约数\" class=\"headerlink\" title=\"素数和最大公约数\"></a>素数和最大公约数</h3><ul>\n<li>每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。</li>\n<li>如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。</li>\n<li>梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。</li>\n<li>素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。</li>\n<li>令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。</li>\n<li>如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。</li>\n<li>整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$</li>\n<li>正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。</li>\n<li>令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$</li>\n</ul>\n<h4 id=\"求最大公约数算法\"><a href=\"#求最大公约数算法\" class=\"headerlink\" title=\"求最大公约数算法\"></a>求最大公约数算法</h4><ul>\n<li>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>  120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\<br>  gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\<br>  = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</li>\n<li>另一个求最大公约数的算法就是欧几里得算法。</li>\n<li>令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。</li>\n</ul>\n<h4 id=\"求最小公倍数算法\"><a href=\"#求最小公倍数算法\" class=\"headerlink\" title=\"求最小公倍数算法\"></a>求最小公倍数算法</h4><p>同最大公约数算法类似，最小公倍数的由以下公式给出：<br>$$<br>lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}<br>$$</p>\n<h3 id=\"整数和进制\"><a href=\"#整数和进制\" class=\"headerlink\" title=\"整数和进制\"></a>整数和进制</h3><p>令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：<br>$$<br>    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0<br>$$<br>其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。</p>\n<h3 id=\"数论应用\"><a href=\"#数论应用\" class=\"headerlink\" title=\"数论应用\"></a>数论应用</h3><p>*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。</p>\n<ul>\n<li>如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。</li>\n<li>如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$</li>\n<li>令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$</li>\n<li></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"搜索算法\"><a href=\"#搜索算法\" class=\"headerlink\" title=\"搜索算法\"></a>搜索算法</h4><ul>\n<li>线性搜索或顺序搜索</li>\n<li>二分搜索：用于搜索排序后的集合</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>冒泡排序</li>\n<li>插入排序</li>\n</ul>\n<h4 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h4><p>每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列</p>\n<h3 id=\"函数的增长\"><a href=\"#函数的增长\" class=\"headerlink\" title=\"函数的增长\"></a>函数的增长</h3><p>$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。</p>\n<ul>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid \\le C\\mid g(x)\\mid<br>$$我们就说$f(x)$是$\\mathrm O(g(x))$    </li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid\\ge C\\mid g(x)\\mid<br>$$</li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。</li>\n</ul>\n<h4 id=\"函数的组合增长\"><a href=\"#函数的组合增长\" class=\"headerlink\" title=\"函数的组合增长\"></a>函数的组合增长</h4><ul>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是<br>$$<br>  \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))<br>$$</li>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$</li>\n</ul>\n<h3 id=\"算法复杂度\"><a href=\"#算法复杂度\" class=\"headerlink\" title=\"算法复杂度\"></a>算法复杂度</h3><table>\n<thead>\n<tr>\n<th align=\"left\">复杂度</th>\n<th align=\"left\">术语</th>\n<th align=\"left\">复杂度</th>\n<th align=\"left\">术语</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$\\Theta (1)$</td>\n<td align=\"left\">常数复杂度</td>\n<td align=\"left\">$\\Theta (n^b)$</td>\n<td align=\"left\">多项式复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (logn)$</td>\n<td align=\"left\">对数复杂度</td>\n<td align=\"left\">$\\Theta (b^n),b&gt;1$</td>\n<td align=\"left\">指数复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (n)$</td>\n<td align=\"left\">线性复杂度</td>\n<td align=\"left\">$\\Theta (n!)$</td>\n<td align=\"left\">阶乘复杂度</td>\n</tr>\n<tr>\n<td align=\"left\">$\\Theta (nlogn)$</td>\n<td align=\"left\">$nlogn$复杂度</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<ul>\n<li>一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   </li>\n<li>能用多项式时间验证解的问题属于NP类，易解的问题属于P类。</li>\n<li>NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。</li>\n</ul>\n<h2 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h2><ul>\n<li>如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$</li>\n<li>$a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。</li>\n<li>令$a$，$b$，$c$为整数。则<ul>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；</li>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；</li>\n<li>若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；</li>\n<li>若$a\\mid b$，$b\\mid c$，则$a\\mid c$；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"同余\"><a href=\"#同余\" class=\"headerlink\" title=\"同余\"></a>同余</h3><ul>\n<li>带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。</li>\n<li>若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$</li>\n<li>令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$</li>\n<li>整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类</li>\n<li>令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么<br>$$<br>  a+c\\equiv b+d\\pmod m\\<br>  ac\\equiv bd\\pmod m<br>$$</li>\n<li>令$m$是正整数，$a$和$b$是整数，则有<br>$$<br>  (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\<br>  ab\\mod m = ((a\\mod m)(b\\mod m))mod m<br>$$</li>\n<li>根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此<br>$$<br>  a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\<br>  ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)<br>$$</li>\n</ul>\n<h3 id=\"同余应用\"><a href=\"#同余应用\" class=\"headerlink\" title=\"同余应用\"></a>同余应用</h3><ul>\n<li>散列函数</li>\n<li>伪随机数</li>\n</ul>\n<blockquote>\n<p>最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列${x_n}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：<br>$$<br>x_{n+1} = (ax_n +c)\\mod m<br>$$</p>\n</blockquote>\n<ul>\n<li>密码学</li>\n</ul>\n<blockquote>\n<p>凯撒密码：<br>$$<br>  f(p)=(p+k)\\mod 26\\<br>  f(p)=(ap+b)\\mod 26<br>$$</p>\n</blockquote>\n<h3 id=\"素数和最大公约数\"><a href=\"#素数和最大公约数\" class=\"headerlink\" title=\"素数和最大公约数\"></a>素数和最大公约数</h3><ul>\n<li>每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。</li>\n<li>如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。</li>\n<li>梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。</li>\n<li>素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。</li>\n<li>令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。</li>\n<li>如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。</li>\n<li>整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$</li>\n<li>正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。</li>\n<li>令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$</li>\n</ul>\n<h4 id=\"求最大公约数算法\"><a href=\"#求最大公约数算法\" class=\"headerlink\" title=\"求最大公约数算法\"></a>求最大公约数算法</h4><ul>\n<li>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>  120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\<br>  gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\<br>  = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</li>\n<li>另一个求最大公约数的算法就是欧几里得算法。</li>\n<li>令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。</li>\n</ul>\n<h4 id=\"求最小公倍数算法\"><a href=\"#求最小公倍数算法\" class=\"headerlink\" title=\"求最小公倍数算法\"></a>求最小公倍数算法</h4><p>同最大公约数算法类似，最小公倍数的由以下公式给出：<br>$$<br>lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}<br>$$</p>\n<h3 id=\"整数和进制\"><a href=\"#整数和进制\" class=\"headerlink\" title=\"整数和进制\"></a>整数和进制</h3><p>令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：<br>$$<br>    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0<br>$$<br>其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。</p>\n<h3 id=\"数论应用\"><a href=\"#数论应用\" class=\"headerlink\" title=\"数论应用\"></a>数论应用</h3><p>*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。</p>\n<ul>\n<li>如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。</li>\n<li>如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$</li>\n<li>令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$</li>\n<li></li>\n</ul>\n"},{"title":"集合-函数-数列","date":"2016-10-02T14:32:10.000Z","updated":"2016-10-05T01:10:00.000Z","_content":"## 集合\n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n* 有序$n$元祖，是由$n$个元素构成的有序组。\n* 笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}\n$$\n* $∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写\n* $∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写\n\n### 集合运算\n* 并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$\n* 交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$\n* 如果两集合的交集为空集，就说它们不相交\n* 差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$\n* 令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n\n## 函数\n### 几个重要的函数\n* 下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示\n* 上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示\n* 下取整函数又称最大整数函数，又用$［x］$表示\n\n#### 下取整函数和上取整函数性质\n> n 表示整数\n\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n## 序列\n* 序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。\n* 有穷序列也被称作串，空串用$\\lambda$表示。\n* 几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。\n$$\na, ar, ar^2, \\cdots ,ar^n, \\cdots\n$$\n* 等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。\n$$\n    a, a+d, a+2d, \\cdots , a+nd, \\cdots\n$$\n\n### 找出序列规则的技巧\n* 是否有相同的值连续出现\n* 是否给前项加上常量或者与序列中位置相关的量就得到后项\n* 是否给前项乘以特定的量就能得到后项\n* 是否按照某种方式组合前项就能得到后项\n* 是否各项之间存在某种循环\n\n### 序列求和公式\n#### 几何序列求和\n$$\\sum_{j=0}^n ar^j = \\begin{cases}\n{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\\\[2ex]\n(n+1)a 若 r=1\n\\end{cases}\n$$\n\n#### 其他求和公式\n|和|闭形式|和|闭形式|\n|:-|:---|:-|:----|\n|$$\\sum_{k=0}^n ar^k(r\\neq 0)$$|$${ar^{n+1}-a\\over r-1},r\\neq 1$$|$$\\sum_{k=1}^n k^3$$|$$n^2(n+1)^2\\over 4$$|\n|$$\\sum_{k=1}^n k$$|$$n(n+1)\\over 2$$|$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$|$$1\\over 1-x$$|\n|$$\\sum_{k=1}^n k^2$$|$$n(n+1)(2n+1)\\over 6$$|$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$|$$1\\over (1-x)^2$$|\n\n### 基数\n* 集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应\n* 有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。\n* 如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。\n\n\n\n\n\n","source":"_posts/Math-集合-函数-数列.md","raw":"---\ntitle: 集合-函数-数列\ndate: 2016-10-02 22:32:10\nupdated: 2016-10-05 9:10:00\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 集合\n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n* 有序$n$元祖，是由$n$个元素构成的有序组。\n* 笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}\n$$\n* $∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写\n* $∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写\n\n### 集合运算\n* 并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$\n* 交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$\n* 如果两集合的交集为空集，就说它们不相交\n* 差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$\n* 令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n\n## 函数\n### 几个重要的函数\n* 下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示\n* 上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示\n* 下取整函数又称最大整数函数，又用$［x］$表示\n\n#### 下取整函数和上取整函数性质\n> n 表示整数\n\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n## 序列\n* 序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。\n* 有穷序列也被称作串，空串用$\\lambda$表示。\n* 几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。\n$$\na, ar, ar^2, \\cdots ,ar^n, \\cdots\n$$\n* 等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。\n$$\n    a, a+d, a+2d, \\cdots , a+nd, \\cdots\n$$\n\n### 找出序列规则的技巧\n* 是否有相同的值连续出现\n* 是否给前项加上常量或者与序列中位置相关的量就得到后项\n* 是否给前项乘以特定的量就能得到后项\n* 是否按照某种方式组合前项就能得到后项\n* 是否各项之间存在某种循环\n\n### 序列求和公式\n#### 几何序列求和\n$$\\sum_{j=0}^n ar^j = \\begin{cases}\n{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\\\[2ex]\n(n+1)a 若 r=1\n\\end{cases}\n$$\n\n#### 其他求和公式\n|和|闭形式|和|闭形式|\n|:-|:---|:-|:----|\n|$$\\sum_{k=0}^n ar^k(r\\neq 0)$$|$${ar^{n+1}-a\\over r-1},r\\neq 1$$|$$\\sum_{k=1}^n k^3$$|$$n^2(n+1)^2\\over 4$$|\n|$$\\sum_{k=1}^n k$$|$$n(n+1)\\over 2$$|$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$|$$1\\over 1-x$$|\n|$$\\sum_{k=1}^n k^2$$|$$n(n+1)(2n+1)\\over 6$$|$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$|$$1\\over (1-x)^2$$|\n\n### 基数\n* 集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应\n* 有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。\n* 如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。\n\n\n\n\n\n","slug":"Math-集合-函数-数列","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdv000w1ovcr1dgb9ec","content":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n<li>有序$n$元祖，是由$n$个元素构成的有序组。</li>\n<li>笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>  A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}<br>$$</li>\n<li>$∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写</li>\n<li>$∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写</li>\n</ul>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><ul>\n<li>并集：$A\\cup B={x\\mid x\\in A∨x\\in B}$</li>\n<li>交集：$A\\cap B={x\\mid x\\in A∧x\\in B}$</li>\n<li>如果两集合的交集为空集，就说它们不相交</li>\n<li>差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B={x\\mid x\\in A∧x\\notin B}$</li>\n<li>令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A={x\\mid x\\notin A}$</li>\n</ul>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">等式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td align=\"left\">恒等律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td align=\"left\">支配律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td align=\"left\">幂等律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline {(\\bar A)}=A$</td>\n<td align=\"left\">补集律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td align=\"left\">交换律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td align=\"left\">结合律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td align=\"left\">分配律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td align=\"left\">德摩根定律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td align=\"left\">吸收律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td align=\"left\">补集</td>\n</tr>\n</tbody></table>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"几个重要的函数\"><a href=\"#几个重要的函数\" class=\"headerlink\" title=\"几个重要的函数\"></a>几个重要的函数</h3><ul>\n<li>下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示</li>\n<li>上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示</li>\n<li>下取整函数又称最大整数函数，又用$［x］$表示</li>\n</ul>\n<h4 id=\"下取整函数和上取整函数性质\"><a href=\"#下取整函数和上取整函数性质\" class=\"headerlink\" title=\"下取整函数和上取整函数性质\"></a>下取整函数和上取整函数性质</h4><blockquote>\n<p>n 表示整数</p>\n</blockquote>\n<ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<h2 id=\"序列\"><a href=\"#序列\" class=\"headerlink\" title=\"序列\"></a>序列</h2><ul>\n<li>序列：序列是从整数集合的子集(通常是${0,1,2,\\dots }$或${1,2,3,\\dots }$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。</li>\n<li>有穷序列也被称作串，空串用$\\lambda$表示。</li>\n<li>几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。<br>$$<br>a, ar, ar^2, \\cdots ,ar^n, \\cdots<br>$$</li>\n<li>等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。<br>$$<br>  a, a+d, a+2d, \\cdots , a+nd, \\cdots<br>$$</li>\n</ul>\n<h3 id=\"找出序列规则的技巧\"><a href=\"#找出序列规则的技巧\" class=\"headerlink\" title=\"找出序列规则的技巧\"></a>找出序列规则的技巧</h3><ul>\n<li>是否有相同的值连续出现</li>\n<li>是否给前项加上常量或者与序列中位置相关的量就得到后项</li>\n<li>是否给前项乘以特定的量就能得到后项</li>\n<li>是否按照某种方式组合前项就能得到后项</li>\n<li>是否各项之间存在某种循环</li>\n</ul>\n<h3 id=\"序列求和公式\"><a href=\"#序列求和公式\" class=\"headerlink\" title=\"序列求和公式\"></a>序列求和公式</h3><h4 id=\"几何序列求和\"><a href=\"#几何序列求和\" class=\"headerlink\" title=\"几何序列求和\"></a>几何序列求和</h4><p>$$\\sum_{j=0}^n ar^j = \\begin{cases}<br>{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\[2ex]<br>(n+1)a 若 r=1<br>\\end{cases}<br>$$</p>\n<h4 id=\"其他求和公式\"><a href=\"#其他求和公式\" class=\"headerlink\" title=\"其他求和公式\"></a>其他求和公式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">和</th>\n<th align=\"left\">闭形式</th>\n<th align=\"left\">和</th>\n<th align=\"left\">闭形式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$$\\sum_{k=0}^n ar^k(r\\neq 0)$$</td>\n<td align=\"left\">$${ar^{n+1}-a\\over r-1},r\\neq 1$$</td>\n<td align=\"left\">$$\\sum_{k=1}^n k^3$$</td>\n<td align=\"left\">$$n^2(n+1)^2\\over 4$$</td>\n</tr>\n<tr>\n<td align=\"left\">$$\\sum_{k=1}^n k$$</td>\n<td align=\"left\">$$n(n+1)\\over 2$$</td>\n<td align=\"left\">$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$</td>\n<td align=\"left\">$$1\\over 1-x$$</td>\n</tr>\n<tr>\n<td align=\"left\">$$\\sum_{k=1}^n k^2$$</td>\n<td align=\"left\">$$n(n+1)(2n+1)\\over 6$$</td>\n<td align=\"left\">$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$</td>\n<td align=\"left\">$$1\\over (1-x)^2$$</td>\n</tr>\n</tbody></table>\n<h3 id=\"基数\"><a href=\"#基数\" class=\"headerlink\" title=\"基数\"></a>基数</h3><ul>\n<li>集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应</li>\n<li>有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。</li>\n<li>如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n<li>有序$n$元祖，是由$n$个元素构成的有序组。</li>\n<li>笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>  A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}<br>$$</li>\n<li>$∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写</li>\n<li>$∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写</li>\n</ul>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><ul>\n<li>并集：$A\\cup B={x\\mid x\\in A∨x\\in B}$</li>\n<li>交集：$A\\cap B={x\\mid x\\in A∧x\\in B}$</li>\n<li>如果两集合的交集为空集，就说它们不相交</li>\n<li>差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B={x\\mid x\\in A∧x\\notin B}$</li>\n<li>令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A={x\\mid x\\notin A}$</li>\n</ul>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">等式</th>\n<th align=\"left\">名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td align=\"left\">恒等律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td align=\"left\">支配律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td align=\"left\">幂等律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline {(\\bar A)}=A$</td>\n<td align=\"left\">补集律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td align=\"left\">交换律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td align=\"left\">结合律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td align=\"left\">分配律</td>\n</tr>\n<tr>\n<td align=\"left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td align=\"left\">德摩根定律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td align=\"left\">吸收律</td>\n</tr>\n<tr>\n<td align=\"left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td align=\"left\">补集</td>\n</tr>\n</tbody></table>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"几个重要的函数\"><a href=\"#几个重要的函数\" class=\"headerlink\" title=\"几个重要的函数\"></a>几个重要的函数</h3><ul>\n<li>下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示</li>\n<li>上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示</li>\n<li>下取整函数又称最大整数函数，又用$［x］$表示</li>\n</ul>\n<h4 id=\"下取整函数和上取整函数性质\"><a href=\"#下取整函数和上取整函数性质\" class=\"headerlink\" title=\"下取整函数和上取整函数性质\"></a>下取整函数和上取整函数性质</h4><blockquote>\n<p>n 表示整数</p>\n</blockquote>\n<ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<h2 id=\"序列\"><a href=\"#序列\" class=\"headerlink\" title=\"序列\"></a>序列</h2><ul>\n<li>序列：序列是从整数集合的子集(通常是${0,1,2,\\dots }$或${1,2,3,\\dots }$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。</li>\n<li>有穷序列也被称作串，空串用$\\lambda$表示。</li>\n<li>几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。<br>$$<br>a, ar, ar^2, \\cdots ,ar^n, \\cdots<br>$$</li>\n<li>等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。<br>$$<br>  a, a+d, a+2d, \\cdots , a+nd, \\cdots<br>$$</li>\n</ul>\n<h3 id=\"找出序列规则的技巧\"><a href=\"#找出序列规则的技巧\" class=\"headerlink\" title=\"找出序列规则的技巧\"></a>找出序列规则的技巧</h3><ul>\n<li>是否有相同的值连续出现</li>\n<li>是否给前项加上常量或者与序列中位置相关的量就得到后项</li>\n<li>是否给前项乘以特定的量就能得到后项</li>\n<li>是否按照某种方式组合前项就能得到后项</li>\n<li>是否各项之间存在某种循环</li>\n</ul>\n<h3 id=\"序列求和公式\"><a href=\"#序列求和公式\" class=\"headerlink\" title=\"序列求和公式\"></a>序列求和公式</h3><h4 id=\"几何序列求和\"><a href=\"#几何序列求和\" class=\"headerlink\" title=\"几何序列求和\"></a>几何序列求和</h4><p>$$\\sum_{j=0}^n ar^j = \\begin{cases}<br>{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\[2ex]<br>(n+1)a 若 r=1<br>\\end{cases}<br>$$</p>\n<h4 id=\"其他求和公式\"><a href=\"#其他求和公式\" class=\"headerlink\" title=\"其他求和公式\"></a>其他求和公式</h4><table>\n<thead>\n<tr>\n<th align=\"left\">和</th>\n<th align=\"left\">闭形式</th>\n<th align=\"left\">和</th>\n<th align=\"left\">闭形式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">$$\\sum_{k=0}^n ar^k(r\\neq 0)$$</td>\n<td align=\"left\">$${ar^{n+1}-a\\over r-1},r\\neq 1$$</td>\n<td align=\"left\">$$\\sum_{k=1}^n k^3$$</td>\n<td align=\"left\">$$n^2(n+1)^2\\over 4$$</td>\n</tr>\n<tr>\n<td align=\"left\">$$\\sum_{k=1}^n k$$</td>\n<td align=\"left\">$$n(n+1)\\over 2$$</td>\n<td align=\"left\">$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$</td>\n<td align=\"left\">$$1\\over 1-x$$</td>\n</tr>\n<tr>\n<td align=\"left\">$$\\sum_{k=1}^n k^2$$</td>\n<td align=\"left\">$$n(n+1)(2n+1)\\over 6$$</td>\n<td align=\"left\">$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$</td>\n<td align=\"left\">$$1\\over (1-x)^2$$</td>\n</tr>\n</tbody></table>\n<h3 id=\"基数\"><a href=\"#基数\" class=\"headerlink\" title=\"基数\"></a>基数</h3><ul>\n<li>集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应</li>\n<li>有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。</li>\n<li>如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。</li>\n</ul>\n"},{"title":"MathJax tutorial","date":"2016-09-11T12:04:07.000Z","_content":"## 字符\n### 希腊字母\n|$\\alpha$|$\\beta$|$\\gamma$|$\\delta$|$\\epsilon$|$\\zeta$|$\\eta$|$\\theta$|\n|:------:|:-----:|:------:|:------:|:--------:|:-----:|:----:|:------:|\n|\\alpha|\\beta|\\gamma|\\delta|\\epsilon|\\zeta|\\eta|\\theta|\n|$\\iota$|$\\kappa$|$\\lambda$|$\\mu$|$\\nu$|$\\xi$|$\\omicron$|$\\pi$|\n|\\iota|\\kappa|\\lambda|\\mu|\\nu|\\xi|\\omicron|\\pi|\n|$\\rho$|$\\sigma$|$\\tau$|$\\upsilon$|$\\phi$|$\\chi$|$\\psi$|$\\omega$|\n|\\rho|\\sigma|\\tau|\\upsilon|\\phi|\\chi|\\psi|\\omega|\n\n|$\\Gamma$|$\\Delta$|$\\Theta$|$\\Lambda$|$\\Xi$|$\\Pi$|$\\Phi$|$\\Psi$|\n|:------:|:------:|:------:|:-------:|:---:|:---:|:----:|:----:|\n|\\Gamma|\\Delta|\\Theta|\\Lambda|\\Xi|\\Pi|\\Phi|\\Psi|\n|$\\Sigma$|$\\Upsilon$|$\\Omega$|\n|\\Sigma|\\Upsilon|\\Omega|\n\n### 运算符号\n\n|$\\lt$|$\\gt$|$\\le$|$\\ge$|$\\neq$|\n|:---:|:---:|:---:|:---:|:----:|\n|\\lt|\\gt|\\le|\\ge|\\neq|\n\n|$\\times$|$\\div$|$\\pm$|$\\mp$|$\\cdot$|\n|:---:|:---:|:---:|:---:|:---:|\n|\\times|\\div|\\pm|\\mp|\\cdot|\n\n|$\\cup$|$\\cap$|$\\setminus$|$\\subset$|$\\subseteq$|$\\subsetneq$|\n|:----:|:----:|:---------:|:-------:|:---------:|:----------:|\n|\\cup|\\cap|\\setminus|\\subset|\\subseteq|\\subsetneq|\n|$\\supset$|$\\in$|$\\notin$|$\\emptyset$|$\\varnothing$|$\\mid$|\n|\\supset|\\in|\\notin|\\emptyset|\\varnothing|\\mid|\n\n|$\\to$|$\\rightarrow$|$\\leftarrow$|$\\Rightarrow$|$\\Leftarrow$|$\\mapsto$|\n|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\to|\\rightarrow|\\leftarrow|\\Rightarrow|\\Leftarrow|\\mapsto|\n\n|$\\land$|$\\lor$|$\\lnot$|$\\forall$|$\\exists$|$\\top$|$\\bot$|$\\vdash$|$\\vDash$|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\land|\\lor|\\lnot|\\forall|\\exists|\\top|\\bot|\\vdash|\\vDash|\n\n|$\\star$|$\\ast$|$\\oplus$|$\\circ$|$\\bullet$|$\\odot$|\n|:-----:|:----:|:------:|:-----:|:-------:|:---:|\n|\\star|\\ast|\\oplus|\\circ|\\bullet|\\odot|\n\n|$\\approx$|$\\sim$|$\\simeq$|$\\cong$|$\\equiv$|$\\prec$|$\\lhd$|\n|:-------:|:----:|:------:|:-----:|:------:|:-----:|:----:|\n|\\approx|\\sim|\\simeq|\\cong|\\equiv|\\prec|\\lhd|\n\n|$\\infty$|$\\aleph_0$|$\\nabla$|$\\partial$|$\\Im$|$\\Re$|\n|:------:|:--------:|:------:|:--------:|:---:|:---:|\n|\\infty|\\aleph_0|\\nabla|\\partial|\\Im|\\Re|\n\n<<<<<<< HEAD\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|\n|:------:|:----:|:--------:|:-----------:|:-------:|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\n=======\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|$\\lceil x \\rceil$|$\\lfloor x \\rfloor$|\n|:------:|:----:|:--------:|:-----------:|:-------:|:----------------|:--|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\\lceil x \\rceil|\\lfloor x \\rfloor|\n>>>>>>> master\n\n\n### 字体\n* blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n\n### 实例\n`A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i`\n$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$\n`A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i`\n$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$\n<<<<<<< HEAD\n```shell\n=======\n\n```math\n>>>>>>> master\n\\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n```\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n<<<<<<< HEAD\n=======\n```math\nf(n) =\n\\begin{cases}\n\\frac{n}{2},  & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n```\n$$\nf(n) =\n\\begin{cases}\n\\frac{n}{2},  & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n$$\n\n```math\n(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)x^{n-1}y^i\n```\n$$(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)x^{n-1}y^i$$\n\n```math\n\\left(\n    \\begin{array}{c}\n    n \\\\\n    r\n    \\end{array}\n\\right)\n```\n$$\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)$$\n\n```math\nf(x)=\\begin{cases}x^2+5\\qquad x<0\\\\\nx^3+5x+6\\qquad x>0 \\end{cases}\n```\n$$f(x)=\\begin{cases}x^2+5\\qquad x<0\\\\\nx^3+5x+6\\qquad x>0 \\end{cases}$$\n>>>>>>> master\n[更多](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n","source":"_posts/MathJax-tutorial.md","raw":"---\ntitle: MathJax tutorial\ndate: 2016-09-11 20:04:07\ntags: [MathJax, markdown]\ncategories: MathJax\n---\n## 字符\n### 希腊字母\n|$\\alpha$|$\\beta$|$\\gamma$|$\\delta$|$\\epsilon$|$\\zeta$|$\\eta$|$\\theta$|\n|:------:|:-----:|:------:|:------:|:--------:|:-----:|:----:|:------:|\n|\\alpha|\\beta|\\gamma|\\delta|\\epsilon|\\zeta|\\eta|\\theta|\n|$\\iota$|$\\kappa$|$\\lambda$|$\\mu$|$\\nu$|$\\xi$|$\\omicron$|$\\pi$|\n|\\iota|\\kappa|\\lambda|\\mu|\\nu|\\xi|\\omicron|\\pi|\n|$\\rho$|$\\sigma$|$\\tau$|$\\upsilon$|$\\phi$|$\\chi$|$\\psi$|$\\omega$|\n|\\rho|\\sigma|\\tau|\\upsilon|\\phi|\\chi|\\psi|\\omega|\n\n|$\\Gamma$|$\\Delta$|$\\Theta$|$\\Lambda$|$\\Xi$|$\\Pi$|$\\Phi$|$\\Psi$|\n|:------:|:------:|:------:|:-------:|:---:|:---:|:----:|:----:|\n|\\Gamma|\\Delta|\\Theta|\\Lambda|\\Xi|\\Pi|\\Phi|\\Psi|\n|$\\Sigma$|$\\Upsilon$|$\\Omega$|\n|\\Sigma|\\Upsilon|\\Omega|\n\n### 运算符号\n\n|$\\lt$|$\\gt$|$\\le$|$\\ge$|$\\neq$|\n|:---:|:---:|:---:|:---:|:----:|\n|\\lt|\\gt|\\le|\\ge|\\neq|\n\n|$\\times$|$\\div$|$\\pm$|$\\mp$|$\\cdot$|\n|:---:|:---:|:---:|:---:|:---:|\n|\\times|\\div|\\pm|\\mp|\\cdot|\n\n|$\\cup$|$\\cap$|$\\setminus$|$\\subset$|$\\subseteq$|$\\subsetneq$|\n|:----:|:----:|:---------:|:-------:|:---------:|:----------:|\n|\\cup|\\cap|\\setminus|\\subset|\\subseteq|\\subsetneq|\n|$\\supset$|$\\in$|$\\notin$|$\\emptyset$|$\\varnothing$|$\\mid$|\n|\\supset|\\in|\\notin|\\emptyset|\\varnothing|\\mid|\n\n|$\\to$|$\\rightarrow$|$\\leftarrow$|$\\Rightarrow$|$\\Leftarrow$|$\\mapsto$|\n|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\to|\\rightarrow|\\leftarrow|\\Rightarrow|\\Leftarrow|\\mapsto|\n\n|$\\land$|$\\lor$|$\\lnot$|$\\forall$|$\\exists$|$\\top$|$\\bot$|$\\vdash$|$\\vDash$|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\land|\\lor|\\lnot|\\forall|\\exists|\\top|\\bot|\\vdash|\\vDash|\n\n|$\\star$|$\\ast$|$\\oplus$|$\\circ$|$\\bullet$|$\\odot$|\n|:-----:|:----:|:------:|:-----:|:-------:|:---:|\n|\\star|\\ast|\\oplus|\\circ|\\bullet|\\odot|\n\n|$\\approx$|$\\sim$|$\\simeq$|$\\cong$|$\\equiv$|$\\prec$|$\\lhd$|\n|:-------:|:----:|:------:|:-----:|:------:|:-----:|:----:|\n|\\approx|\\sim|\\simeq|\\cong|\\equiv|\\prec|\\lhd|\n\n|$\\infty$|$\\aleph_0$|$\\nabla$|$\\partial$|$\\Im$|$\\Re$|\n|:------:|:--------:|:------:|:--------:|:---:|:---:|\n|\\infty|\\aleph_0|\\nabla|\\partial|\\Im|\\Re|\n\n<<<<<<< HEAD\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|\n|:------:|:----:|:--------:|:-----------:|:-------:|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\n=======\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|$\\lceil x \\rceil$|$\\lfloor x \\rfloor$|\n|:------:|:----:|:--------:|:-----------:|:-------:|:----------------|:--|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\\lceil x \\rceil|\\lfloor x \\rfloor|\n>>>>>>> master\n\n\n### 字体\n* blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n\n### 实例\n`A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i`\n$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$\n`A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i`\n$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$\n<<<<<<< HEAD\n```shell\n=======\n\n```math\n>>>>>>> master\n\\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n```\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n<<<<<<< HEAD\n=======\n```math\nf(n) =\n\\begin{cases}\n\\frac{n}{2},  & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n```\n$$\nf(n) =\n\\begin{cases}\n\\frac{n}{2},  & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n$$\n\n```math\n(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)x^{n-1}y^i\n```\n$$(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)x^{n-1}y^i$$\n\n```math\n\\left(\n    \\begin{array}{c}\n    n \\\\\n    r\n    \\end{array}\n\\right)\n```\n$$\\left(\\begin{array}{c}n \\\\r\\end{array}\\right)$$\n\n```math\nf(x)=\\begin{cases}x^2+5\\qquad x<0\\\\\nx^3+5x+6\\qquad x>0 \\end{cases}\n```\n$$f(x)=\\begin{cases}x^2+5\\qquad x<0\\\\\nx^3+5x+6\\qquad x>0 \\end{cases}$$\n>>>>>>> master\n[更多](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n","slug":"MathJax-tutorial","published":1,"updated":"2020-02-26T14:51:35.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdw000x1ovc42abnieq","content":"<h2 id=\"字符\"><a href=\"#字符\" class=\"headerlink\" title=\"字符\"></a>字符</h2><h3 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h3><table>\n<thead>\n<tr>\n<th align=\"center\">$\\alpha$</th>\n<th align=\"center\">$\\beta$</th>\n<th align=\"center\">$\\gamma$</th>\n<th align=\"center\">$\\delta$</th>\n<th align=\"center\">$\\epsilon$</th>\n<th align=\"center\">$\\zeta$</th>\n<th align=\"center\">$\\eta$</th>\n<th align=\"center\">$\\theta$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\alpha</td>\n<td align=\"center\">\\beta</td>\n<td align=\"center\">\\gamma</td>\n<td align=\"center\">\\delta</td>\n<td align=\"center\">\\epsilon</td>\n<td align=\"center\">\\zeta</td>\n<td align=\"center\">\\eta</td>\n<td align=\"center\">\\theta</td>\n</tr>\n<tr>\n<td align=\"center\">$\\iota$</td>\n<td align=\"center\">$\\kappa$</td>\n<td align=\"center\">$\\lambda$</td>\n<td align=\"center\">$\\mu$</td>\n<td align=\"center\">$\\nu$</td>\n<td align=\"center\">$\\xi$</td>\n<td align=\"center\">$\\omicron$</td>\n<td align=\"center\">$\\pi$</td>\n</tr>\n<tr>\n<td align=\"center\">\\iota</td>\n<td align=\"center\">\\kappa</td>\n<td align=\"center\">\\lambda</td>\n<td align=\"center\">\\mu</td>\n<td align=\"center\">\\nu</td>\n<td align=\"center\">\\xi</td>\n<td align=\"center\">\\omicron</td>\n<td align=\"center\">\\pi</td>\n</tr>\n<tr>\n<td align=\"center\">$\\rho$</td>\n<td align=\"center\">$\\sigma$</td>\n<td align=\"center\">$\\tau$</td>\n<td align=\"center\">$\\upsilon$</td>\n<td align=\"center\">$\\phi$</td>\n<td align=\"center\">$\\chi$</td>\n<td align=\"center\">$\\psi$</td>\n<td align=\"center\">$\\omega$</td>\n</tr>\n<tr>\n<td align=\"center\">\\rho</td>\n<td align=\"center\">\\sigma</td>\n<td align=\"center\">\\tau</td>\n<td align=\"center\">\\upsilon</td>\n<td align=\"center\">\\phi</td>\n<td align=\"center\">\\chi</td>\n<td align=\"center\">\\psi</td>\n<td align=\"center\">\\omega</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\Gamma$</th>\n<th align=\"center\">$\\Delta$</th>\n<th align=\"center\">$\\Theta$</th>\n<th align=\"center\">$\\Lambda$</th>\n<th align=\"center\">$\\Xi$</th>\n<th align=\"center\">$\\Pi$</th>\n<th align=\"center\">$\\Phi$</th>\n<th align=\"center\">$\\Psi$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\Gamma</td>\n<td align=\"center\">\\Delta</td>\n<td align=\"center\">\\Theta</td>\n<td align=\"center\">\\Lambda</td>\n<td align=\"center\">\\Xi</td>\n<td align=\"center\">\\Pi</td>\n<td align=\"center\">\\Phi</td>\n<td align=\"center\">\\Psi</td>\n</tr>\n<tr>\n<td align=\"center\">$\\Sigma$</td>\n<td align=\"center\">$\\Upsilon$</td>\n<td align=\"center\">$\\Omega$</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">\\Sigma</td>\n<td align=\"center\">\\Upsilon</td>\n<td align=\"center\">\\Omega</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"运算符号\"><a href=\"#运算符号\" class=\"headerlink\" title=\"运算符号\"></a>运算符号</h3><table>\n<thead>\n<tr>\n<th align=\"center\">$\\lt$</th>\n<th align=\"center\">$\\gt$</th>\n<th align=\"center\">$\\le$</th>\n<th align=\"center\">$\\ge$</th>\n<th align=\"center\">$\\neq$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\lt</td>\n<td align=\"center\">\\gt</td>\n<td align=\"center\">\\le</td>\n<td align=\"center\">\\ge</td>\n<td align=\"center\">\\neq</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\times$</th>\n<th align=\"center\">$\\div$</th>\n<th align=\"center\">$\\pm$</th>\n<th align=\"center\">$\\mp$</th>\n<th align=\"center\">$\\cdot$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\times</td>\n<td align=\"center\">\\div</td>\n<td align=\"center\">\\pm</td>\n<td align=\"center\">\\mp</td>\n<td align=\"center\">\\cdot</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\cup$</th>\n<th align=\"center\">$\\cap$</th>\n<th align=\"center\">$\\setminus$</th>\n<th align=\"center\">$\\subset$</th>\n<th align=\"center\">$\\subseteq$</th>\n<th align=\"center\">$\\subsetneq$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\cup</td>\n<td align=\"center\">\\cap</td>\n<td align=\"center\">\\setminus</td>\n<td align=\"center\">\\subset</td>\n<td align=\"center\">\\subseteq</td>\n<td align=\"center\">\\subsetneq</td>\n</tr>\n<tr>\n<td align=\"center\">$\\supset$</td>\n<td align=\"center\">$\\in$</td>\n<td align=\"center\">$\\notin$</td>\n<td align=\"center\">$\\emptyset$</td>\n<td align=\"center\">$\\varnothing$</td>\n<td align=\"center\">$\\mid$</td>\n</tr>\n<tr>\n<td align=\"center\">\\supset</td>\n<td align=\"center\">\\in</td>\n<td align=\"center\">\\notin</td>\n<td align=\"center\">\\emptyset</td>\n<td align=\"center\">\\varnothing</td>\n<td align=\"center\">\\mid</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\to$</th>\n<th align=\"center\">$\\rightarrow$</th>\n<th align=\"center\">$\\leftarrow$</th>\n<th align=\"center\">$\\Rightarrow$</th>\n<th align=\"center\">$\\Leftarrow$</th>\n<th align=\"center\">$\\mapsto$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\to</td>\n<td align=\"center\">\\rightarrow</td>\n<td align=\"center\">\\leftarrow</td>\n<td align=\"center\">\\Rightarrow</td>\n<td align=\"center\">\\Leftarrow</td>\n<td align=\"center\">\\mapsto</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\land$</th>\n<th align=\"center\">$\\lor$</th>\n<th align=\"center\">$\\lnot$</th>\n<th align=\"center\">$\\forall$</th>\n<th align=\"center\">$\\exists$</th>\n<th align=\"center\">$\\top$</th>\n<th align=\"center\">$\\bot$</th>\n<th align=\"center\">$\\vdash$</th>\n<th align=\"center\">$\\vDash$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\land</td>\n<td align=\"center\">\\lor</td>\n<td align=\"center\">\\lnot</td>\n<td align=\"center\">\\forall</td>\n<td align=\"center\">\\exists</td>\n<td align=\"center\">\\top</td>\n<td align=\"center\">\\bot</td>\n<td align=\"center\">\\vdash</td>\n<td align=\"center\">\\vDash</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\star$</th>\n<th align=\"center\">$\\ast$</th>\n<th align=\"center\">$\\oplus$</th>\n<th align=\"center\">$\\circ$</th>\n<th align=\"center\">$\\bullet$</th>\n<th align=\"center\">$\\odot$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\star</td>\n<td align=\"center\">\\ast</td>\n<td align=\"center\">\\oplus</td>\n<td align=\"center\">\\circ</td>\n<td align=\"center\">\\bullet</td>\n<td align=\"center\">\\odot</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\approx$</th>\n<th align=\"center\">$\\sim$</th>\n<th align=\"center\">$\\simeq$</th>\n<th align=\"center\">$\\cong$</th>\n<th align=\"center\">$\\equiv$</th>\n<th align=\"center\">$\\prec$</th>\n<th align=\"center\">$\\lhd$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\approx</td>\n<td align=\"center\">\\sim</td>\n<td align=\"center\">\\simeq</td>\n<td align=\"center\">\\cong</td>\n<td align=\"center\">\\equiv</td>\n<td align=\"center\">\\prec</td>\n<td align=\"center\">\\lhd</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\infty$</th>\n<th align=\"center\">$\\aleph_0$</th>\n<th align=\"center\">$\\nabla$</th>\n<th align=\"center\">$\\partial$</th>\n<th align=\"center\">$\\Im$</th>\n<th align=\"center\">$\\Re$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\infty</td>\n<td align=\"center\">\\aleph_0</td>\n<td align=\"center\">\\nabla</td>\n<td align=\"center\">\\partial</td>\n<td align=\"center\">\\Im</td>\n<td align=\"center\">\\Re</td>\n</tr>\n</tbody></table>\n<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD<br>|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|<br>|:——:|:—-:|:——–:|:———–:|:——-:|<br>|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|<br>=======<br>|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|$\\lceil x \\rceil$|$\\lfloor x \\rfloor$|<br>|:——:|:—-:|:——–:|:———–:|:——-:|:—————-|:–|<br>|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\\lceil x \\rceil|\\lfloor x \\rfloor|</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li>blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n</ul>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p><code>A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i</code><br>$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$<br><code>A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i</code><br>$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$<br>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=======</span><br><span class=\"line\"></span><br><span class=\"line\">```math</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;&gt;&gt;&gt;&gt; master</span></span><br><span class=\"line\">\\begin&#123;align&#125;</span><br><span class=\"line\">\\overline &#123;A\\cap B&#125; &amp;= \\&#123;x\\mid x\\notin A\\cap B\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in(A\\cap B))\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in A\\land x\\in B)\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\&#125;\\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\notin A\\lor x\\notin B\\&#125;\\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\lor x\\in \\overline&#123;B&#125;\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\cup\\overline&#123;B&#125;\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\overline&#123;A&#125;\\cup\\overline&#123;B&#125;</span><br><span class=\"line\">\\end&#123;align&#125;</span><br></pre></td></tr></table></figure>\n<p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= {x\\mid x\\notin A\\cap B} \\<br>&amp;   ={x\\mid \\lnot(x\\in(A\\cap B))} \\<br>&amp;   ={x\\mid \\lnot(x\\in A\\land x\\in B)} \\<br>&amp;   ={x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)}\\<br>&amp;   ={x\\mid x\\notin A\\lor x\\notin B}\\<br>&amp;   ={x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}} \\<br>&amp;   ={x\\mid x\\in \\overline{A}\\cup\\overline{B}} \\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h1 id=\"lt-lt-lt-lt-lt-lt-lt-HEAD\"><a href=\"#lt-lt-lt-lt-lt-lt-lt-HEAD\" class=\"headerlink\" title=\"&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n) &#x3D;</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">\\frac&#123;n&#125;&#123;2&#125;,  &amp; \\text&#123;if $n$ is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if $n$ is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<p>$$<br>f(n) =<br>\\begin{cases}<br>\\frac{n}{2},  &amp; \\text{if $n$ is even} \\<br>3n+1, &amp; \\text{if $n$ is odd}<br>\\end{cases}<br>$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(x+y)^n&#x3D;\\sum_&#123;j&#x3D;0&#125;^n\\left(\\begin&#123;array&#125;&#123;c&#125;n \\\\r\\end&#123;array&#125;\\right)x^&#123;n-1&#125;y^i</span><br></pre></td></tr></table></figure>\n<p>$$(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\r\\end{array}\\right)x^{n-1}y^i$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left(</span><br><span class=\"line\">    \\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">    n \\\\</span><br><span class=\"line\">    r</span><br><span class=\"line\">    \\end&#123;array&#125;</span><br><span class=\"line\">\\right)</span><br></pre></td></tr></table></figure>\n<p>$$\\left(\\begin{array}{c}n \\r\\end{array}\\right)$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(x)&#x3D;\\begin&#123;cases&#125;x^2+5\\qquad x&lt;0\\\\</span><br><span class=\"line\">x^3+5x+6\\qquad x&gt;0 \\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<p>$$f(x)=\\begin{cases}x^2+5\\qquad x&lt;0\\<br>x^3+5x+6\\qquad x&gt;0 \\end{cases}$$</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master<br><a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">更多</a></p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"字符\"><a href=\"#字符\" class=\"headerlink\" title=\"字符\"></a>字符</h2><h3 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h3><table>\n<thead>\n<tr>\n<th align=\"center\">$\\alpha$</th>\n<th align=\"center\">$\\beta$</th>\n<th align=\"center\">$\\gamma$</th>\n<th align=\"center\">$\\delta$</th>\n<th align=\"center\">$\\epsilon$</th>\n<th align=\"center\">$\\zeta$</th>\n<th align=\"center\">$\\eta$</th>\n<th align=\"center\">$\\theta$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\alpha</td>\n<td align=\"center\">\\beta</td>\n<td align=\"center\">\\gamma</td>\n<td align=\"center\">\\delta</td>\n<td align=\"center\">\\epsilon</td>\n<td align=\"center\">\\zeta</td>\n<td align=\"center\">\\eta</td>\n<td align=\"center\">\\theta</td>\n</tr>\n<tr>\n<td align=\"center\">$\\iota$</td>\n<td align=\"center\">$\\kappa$</td>\n<td align=\"center\">$\\lambda$</td>\n<td align=\"center\">$\\mu$</td>\n<td align=\"center\">$\\nu$</td>\n<td align=\"center\">$\\xi$</td>\n<td align=\"center\">$\\omicron$</td>\n<td align=\"center\">$\\pi$</td>\n</tr>\n<tr>\n<td align=\"center\">\\iota</td>\n<td align=\"center\">\\kappa</td>\n<td align=\"center\">\\lambda</td>\n<td align=\"center\">\\mu</td>\n<td align=\"center\">\\nu</td>\n<td align=\"center\">\\xi</td>\n<td align=\"center\">\\omicron</td>\n<td align=\"center\">\\pi</td>\n</tr>\n<tr>\n<td align=\"center\">$\\rho$</td>\n<td align=\"center\">$\\sigma$</td>\n<td align=\"center\">$\\tau$</td>\n<td align=\"center\">$\\upsilon$</td>\n<td align=\"center\">$\\phi$</td>\n<td align=\"center\">$\\chi$</td>\n<td align=\"center\">$\\psi$</td>\n<td align=\"center\">$\\omega$</td>\n</tr>\n<tr>\n<td align=\"center\">\\rho</td>\n<td align=\"center\">\\sigma</td>\n<td align=\"center\">\\tau</td>\n<td align=\"center\">\\upsilon</td>\n<td align=\"center\">\\phi</td>\n<td align=\"center\">\\chi</td>\n<td align=\"center\">\\psi</td>\n<td align=\"center\">\\omega</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\Gamma$</th>\n<th align=\"center\">$\\Delta$</th>\n<th align=\"center\">$\\Theta$</th>\n<th align=\"center\">$\\Lambda$</th>\n<th align=\"center\">$\\Xi$</th>\n<th align=\"center\">$\\Pi$</th>\n<th align=\"center\">$\\Phi$</th>\n<th align=\"center\">$\\Psi$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\Gamma</td>\n<td align=\"center\">\\Delta</td>\n<td align=\"center\">\\Theta</td>\n<td align=\"center\">\\Lambda</td>\n<td align=\"center\">\\Xi</td>\n<td align=\"center\">\\Pi</td>\n<td align=\"center\">\\Phi</td>\n<td align=\"center\">\\Psi</td>\n</tr>\n<tr>\n<td align=\"center\">$\\Sigma$</td>\n<td align=\"center\">$\\Upsilon$</td>\n<td align=\"center\">$\\Omega$</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">\\Sigma</td>\n<td align=\"center\">\\Upsilon</td>\n<td align=\"center\">\\Omega</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"运算符号\"><a href=\"#运算符号\" class=\"headerlink\" title=\"运算符号\"></a>运算符号</h3><table>\n<thead>\n<tr>\n<th align=\"center\">$\\lt$</th>\n<th align=\"center\">$\\gt$</th>\n<th align=\"center\">$\\le$</th>\n<th align=\"center\">$\\ge$</th>\n<th align=\"center\">$\\neq$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\lt</td>\n<td align=\"center\">\\gt</td>\n<td align=\"center\">\\le</td>\n<td align=\"center\">\\ge</td>\n<td align=\"center\">\\neq</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\times$</th>\n<th align=\"center\">$\\div$</th>\n<th align=\"center\">$\\pm$</th>\n<th align=\"center\">$\\mp$</th>\n<th align=\"center\">$\\cdot$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\times</td>\n<td align=\"center\">\\div</td>\n<td align=\"center\">\\pm</td>\n<td align=\"center\">\\mp</td>\n<td align=\"center\">\\cdot</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\cup$</th>\n<th align=\"center\">$\\cap$</th>\n<th align=\"center\">$\\setminus$</th>\n<th align=\"center\">$\\subset$</th>\n<th align=\"center\">$\\subseteq$</th>\n<th align=\"center\">$\\subsetneq$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\cup</td>\n<td align=\"center\">\\cap</td>\n<td align=\"center\">\\setminus</td>\n<td align=\"center\">\\subset</td>\n<td align=\"center\">\\subseteq</td>\n<td align=\"center\">\\subsetneq</td>\n</tr>\n<tr>\n<td align=\"center\">$\\supset$</td>\n<td align=\"center\">$\\in$</td>\n<td align=\"center\">$\\notin$</td>\n<td align=\"center\">$\\emptyset$</td>\n<td align=\"center\">$\\varnothing$</td>\n<td align=\"center\">$\\mid$</td>\n</tr>\n<tr>\n<td align=\"center\">\\supset</td>\n<td align=\"center\">\\in</td>\n<td align=\"center\">\\notin</td>\n<td align=\"center\">\\emptyset</td>\n<td align=\"center\">\\varnothing</td>\n<td align=\"center\">\\mid</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\to$</th>\n<th align=\"center\">$\\rightarrow$</th>\n<th align=\"center\">$\\leftarrow$</th>\n<th align=\"center\">$\\Rightarrow$</th>\n<th align=\"center\">$\\Leftarrow$</th>\n<th align=\"center\">$\\mapsto$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\to</td>\n<td align=\"center\">\\rightarrow</td>\n<td align=\"center\">\\leftarrow</td>\n<td align=\"center\">\\Rightarrow</td>\n<td align=\"center\">\\Leftarrow</td>\n<td align=\"center\">\\mapsto</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\land$</th>\n<th align=\"center\">$\\lor$</th>\n<th align=\"center\">$\\lnot$</th>\n<th align=\"center\">$\\forall$</th>\n<th align=\"center\">$\\exists$</th>\n<th align=\"center\">$\\top$</th>\n<th align=\"center\">$\\bot$</th>\n<th align=\"center\">$\\vdash$</th>\n<th align=\"center\">$\\vDash$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\land</td>\n<td align=\"center\">\\lor</td>\n<td align=\"center\">\\lnot</td>\n<td align=\"center\">\\forall</td>\n<td align=\"center\">\\exists</td>\n<td align=\"center\">\\top</td>\n<td align=\"center\">\\bot</td>\n<td align=\"center\">\\vdash</td>\n<td align=\"center\">\\vDash</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\star$</th>\n<th align=\"center\">$\\ast$</th>\n<th align=\"center\">$\\oplus$</th>\n<th align=\"center\">$\\circ$</th>\n<th align=\"center\">$\\bullet$</th>\n<th align=\"center\">$\\odot$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\star</td>\n<td align=\"center\">\\ast</td>\n<td align=\"center\">\\oplus</td>\n<td align=\"center\">\\circ</td>\n<td align=\"center\">\\bullet</td>\n<td align=\"center\">\\odot</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\approx$</th>\n<th align=\"center\">$\\sim$</th>\n<th align=\"center\">$\\simeq$</th>\n<th align=\"center\">$\\cong$</th>\n<th align=\"center\">$\\equiv$</th>\n<th align=\"center\">$\\prec$</th>\n<th align=\"center\">$\\lhd$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\approx</td>\n<td align=\"center\">\\sim</td>\n<td align=\"center\">\\simeq</td>\n<td align=\"center\">\\cong</td>\n<td align=\"center\">\\equiv</td>\n<td align=\"center\">\\prec</td>\n<td align=\"center\">\\lhd</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">$\\infty$</th>\n<th align=\"center\">$\\aleph_0$</th>\n<th align=\"center\">$\\nabla$</th>\n<th align=\"center\">$\\partial$</th>\n<th align=\"center\">$\\Im$</th>\n<th align=\"center\">$\\Re$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">\\infty</td>\n<td align=\"center\">\\aleph_0</td>\n<td align=\"center\">\\nabla</td>\n<td align=\"center\">\\partial</td>\n<td align=\"center\">\\Im</td>\n<td align=\"center\">\\Re</td>\n</tr>\n</tbody></table>\n<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD<br>|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|<br>|:——:|:—-:|:——–:|:———–:|:——-:|<br>|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|<br>=======<br>|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|$\\lceil x \\rceil$|$\\lfloor x \\rfloor$|<br>|:——:|:—-:|:——–:|:———–:|:——-:|:—————-|:–|<br>|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\\lceil x \\rceil|\\lfloor x \\rfloor|</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li>blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n</ul>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p><code>A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i</code><br>$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$<br><code>A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i</code><br>$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$<br>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=======</span><br><span class=\"line\"></span><br><span class=\"line\">```math</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;&gt;&gt;&gt;&gt; master</span></span><br><span class=\"line\">\\begin&#123;align&#125;</span><br><span class=\"line\">\\overline &#123;A\\cap B&#125; &amp;= \\&#123;x\\mid x\\notin A\\cap B\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in(A\\cap B))\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in A\\land x\\in B)\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\&#125;\\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\notin A\\lor x\\notin B\\&#125;\\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\lor x\\in \\overline&#123;B&#125;\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\cup\\overline&#123;B&#125;\\&#125; \\\\</span><br><span class=\"line\">&amp;   =\\overline&#123;A&#125;\\cup\\overline&#123;B&#125;</span><br><span class=\"line\">\\end&#123;align&#125;</span><br></pre></td></tr></table></figure>\n<p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= {x\\mid x\\notin A\\cap B} \\<br>&amp;   ={x\\mid \\lnot(x\\in(A\\cap B))} \\<br>&amp;   ={x\\mid \\lnot(x\\in A\\land x\\in B)} \\<br>&amp;   ={x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)}\\<br>&amp;   ={x\\mid x\\notin A\\lor x\\notin B}\\<br>&amp;   ={x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}} \\<br>&amp;   ={x\\mid x\\in \\overline{A}\\cup\\overline{B}} \\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h1 id=\"lt-lt-lt-lt-lt-lt-lt-HEAD\"><a href=\"#lt-lt-lt-lt-lt-lt-lt-HEAD\" class=\"headerlink\" title=\"&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n) &#x3D;</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">\\frac&#123;n&#125;&#123;2&#125;,  &amp; \\text&#123;if $n$ is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if $n$ is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<p>$$<br>f(n) =<br>\\begin{cases}<br>\\frac{n}{2},  &amp; \\text{if $n$ is even} \\<br>3n+1, &amp; \\text{if $n$ is odd}<br>\\end{cases}<br>$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(x+y)^n&#x3D;\\sum_&#123;j&#x3D;0&#125;^n\\left(\\begin&#123;array&#125;&#123;c&#125;n \\\\r\\end&#123;array&#125;\\right)x^&#123;n-1&#125;y^i</span><br></pre></td></tr></table></figure>\n<p>$$(x+y)^n=\\sum_{j=0}^n\\left(\\begin{array}{c}n \\r\\end{array}\\right)x^{n-1}y^i$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left(</span><br><span class=\"line\">    \\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">    n \\\\</span><br><span class=\"line\">    r</span><br><span class=\"line\">    \\end&#123;array&#125;</span><br><span class=\"line\">\\right)</span><br></pre></td></tr></table></figure>\n<p>$$\\left(\\begin{array}{c}n \\r\\end{array}\\right)$$</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(x)&#x3D;\\begin&#123;cases&#125;x^2+5\\qquad x&lt;0\\\\</span><br><span class=\"line\">x^3+5x+6\\qquad x&gt;0 \\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<p>$$f(x)=\\begin{cases}x^2+5\\qquad x&lt;0\\<br>x^3+5x+6\\qquad x&gt;0 \\end{cases}$$</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>master<br><a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">更多</a></p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"title":"My Sublime Text Setting","date":"2016-09-13T13:30:25.000Z","_content":"\n# My Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|[OmniMarkdownPerviwer](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/)|预览、导出Markdown|\n|[Evernote](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/)|实现用Markdown 编写印象笔记|\n\n\n# Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|advenceNewfile|  快速新建文件，文件夹|\n|httpRequest|测试HTTP请求。[说明文档](https://github.com/braindamageinc/SublimeHttpRequester)|\n|fetch|管理和下载类库|\n|sidebarEnhancement| 增强side bar的功能|\n|docblockr|js注释|\n|sublimeLinter|ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。   |\n|SublimeLinter-jshint|针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。|\n|SublimeREPL|支持在 Sublime 中运行交互式开发环境｜\n|Anaconda| python扩展包|\n|htmlpretty| 格式化html、js、json插件|\n","source":"_posts/My-Sublime-Text-Setting.md","raw":"---\ntitle: My Sublime Text Setting\ndate: 2016-09-13 21:30:25\ntags: [sublime]\ncategories: [sublime]\n---\n\n# My Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|[OmniMarkdownPerviwer](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/)|预览、导出Markdown|\n|[Evernote](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/)|实现用Markdown 编写印象笔记|\n\n\n# Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|advenceNewfile|  快速新建文件，文件夹|\n|httpRequest|测试HTTP请求。[说明文档](https://github.com/braindamageinc/SublimeHttpRequester)|\n|fetch|管理和下载类库|\n|sidebarEnhancement| 增强side bar的功能|\n|docblockr|js注释|\n|sublimeLinter|ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。   |\n|SublimeLinter-jshint|针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。|\n|SublimeREPL|支持在 Sublime 中运行交互式开发环境｜\n|Anaconda| python扩展包|\n|htmlpretty| 格式化html、js、json插件|\n","slug":"My-Sublime-Text-Setting","published":1,"updated":"2016-09-13T13:39:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdx000y1ovcc26clrd5","content":"<h1 id=\"My-Sublime-Text-Package\"><a href=\"#My-Sublime-Text-Package\" class=\"headerlink\" title=\"My Sublime Text Package\"></a>My Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th align=\"left\">插件</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/\">OmniMarkdownPerviwer</a></td>\n<td align=\"left\">预览、导出Markdown</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/\">Evernote</a></td>\n<td align=\"left\">实现用Markdown 编写印象笔记</td>\n</tr>\n</tbody></table>\n<h1 id=\"Sublime-Text-Package\"><a href=\"#Sublime-Text-Package\" class=\"headerlink\" title=\"Sublime Text Package\"></a>Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th align=\"left\">插件</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">advenceNewfile</td>\n<td align=\"left\">快速新建文件，文件夹</td>\n</tr>\n<tr>\n<td align=\"left\">httpRequest</td>\n<td align=\"left\">测试HTTP请求。<a href=\"https://github.com/braindamageinc/SublimeHttpRequester\" target=\"_blank\" rel=\"noopener\">说明文档</a></td>\n</tr>\n<tr>\n<td align=\"left\">fetch</td>\n<td align=\"left\">管理和下载类库</td>\n</tr>\n<tr>\n<td align=\"left\">sidebarEnhancement</td>\n<td align=\"left\">增强side bar的功能</td>\n</tr>\n<tr>\n<td align=\"left\">docblockr</td>\n<td align=\"left\">js注释</td>\n</tr>\n<tr>\n<td align=\"left\">sublimeLinter</td>\n<td align=\"left\">ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。</td>\n</tr>\n<tr>\n<td align=\"left\">SublimeLinter-jshint</td>\n<td align=\"left\">针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。</td>\n</tr>\n<tr>\n<td align=\"left\">SublimeREPL</td>\n<td align=\"left\">支持在 Sublime 中运行交互式开发环境｜</td>\n</tr>\n<tr>\n<td align=\"left\">Anaconda</td>\n<td align=\"left\">python扩展包</td>\n</tr>\n<tr>\n<td align=\"left\">htmlpretty</td>\n<td align=\"left\">格式化html、js、json插件</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"My-Sublime-Text-Package\"><a href=\"#My-Sublime-Text-Package\" class=\"headerlink\" title=\"My Sublime Text Package\"></a>My Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th align=\"left\">插件</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/\">OmniMarkdownPerviwer</a></td>\n<td align=\"left\">预览、导出Markdown</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/\">Evernote</a></td>\n<td align=\"left\">实现用Markdown 编写印象笔记</td>\n</tr>\n</tbody></table>\n<h1 id=\"Sublime-Text-Package\"><a href=\"#Sublime-Text-Package\" class=\"headerlink\" title=\"Sublime Text Package\"></a>Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th align=\"left\">插件</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">advenceNewfile</td>\n<td align=\"left\">快速新建文件，文件夹</td>\n</tr>\n<tr>\n<td align=\"left\">httpRequest</td>\n<td align=\"left\">测试HTTP请求。<a href=\"https://github.com/braindamageinc/SublimeHttpRequester\" target=\"_blank\" rel=\"noopener\">说明文档</a></td>\n</tr>\n<tr>\n<td align=\"left\">fetch</td>\n<td align=\"left\">管理和下载类库</td>\n</tr>\n<tr>\n<td align=\"left\">sidebarEnhancement</td>\n<td align=\"left\">增强side bar的功能</td>\n</tr>\n<tr>\n<td align=\"left\">docblockr</td>\n<td align=\"left\">js注释</td>\n</tr>\n<tr>\n<td align=\"left\">sublimeLinter</td>\n<td align=\"left\">ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。</td>\n</tr>\n<tr>\n<td align=\"left\">SublimeLinter-jshint</td>\n<td align=\"left\">针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。</td>\n</tr>\n<tr>\n<td align=\"left\">SublimeREPL</td>\n<td align=\"left\">支持在 Sublime 中运行交互式开发环境｜</td>\n</tr>\n<tr>\n<td align=\"left\">Anaconda</td>\n<td align=\"left\">python扩展包</td>\n</tr>\n<tr>\n<td align=\"left\">htmlpretty</td>\n<td align=\"left\">格式化html、js、json插件</td>\n</tr>\n</tbody></table>\n"},{"title":"The server time zone value 'CST' is unrecognized or represents more than one time zone.","date":"2017-02-26T09:03:15.000Z","_content":"## 错误代码\n```shell\nThe server time zone value 'CST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.\n```\n\n## 解决方案\n连接时，指定时区    \n\n```shell\njdbc:mysql://localhost:3306/blog?serverTimezone=UTC\n```\n\n## 环境 \n\n* jdk.18\n* mysql-connector-java 6.0.2\n* jetty\n* idea 15\n* mysql 5.7.11\n","source":"_posts/MySQL-ERROR-01.md","raw":"---\ntitle: The server time zone value 'CST' is unrecognized or represents more than one time zone.\ndate: 2017-02-26 17:03:15\ntags: [MySQL,error]\ncategories: [MySQL]\n---\n## 错误代码\n```shell\nThe server time zone value 'CST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.\n```\n\n## 解决方案\n连接时，指定时区    \n\n```shell\njdbc:mysql://localhost:3306/blog?serverTimezone=UTC\n```\n\n## 环境 \n\n* jdk.18\n* mysql-connector-java 6.0.2\n* jetty\n* idea 15\n* mysql 5.7.11\n","slug":"MySQL-ERROR-01","published":1,"updated":"2020-02-26T14:51:35.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdx000z1ovcanu0yot4","content":"<h2 id=\"错误代码\"><a href=\"#错误代码\" class=\"headerlink\" title=\"错误代码\"></a>错误代码</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The server time zone value 'CST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>连接时，指定时区    </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc:mysql://localhost:3306/blog?serverTimezone=UTC</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>jdk.18</li>\n<li>mysql-connector-java 6.0.2</li>\n<li>jetty</li>\n<li>idea 15</li>\n<li>mysql 5.7.11</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"错误代码\"><a href=\"#错误代码\" class=\"headerlink\" title=\"错误代码\"></a>错误代码</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The server time zone value 'CST' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>连接时，指定时区    </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc:mysql://localhost:3306/blog?serverTimezone=UTC</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>jdk.18</li>\n<li>mysql-connector-java 6.0.2</li>\n<li>jetty</li>\n<li>idea 15</li>\n<li>mysql 5.7.11</li>\n</ul>\n"},{"title":"Python快速预览","date":"2015-08-22T15:18:04.000Z","_content":"## 数据类型和变量\npython语言是动态语言\n\n## 字符串和编码\n* UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。\n* 在python中，Unicode表示的字符串用u'...'表示.\n* 将Unicode字符转化为UTF-8字符用`encode('utf-8')`:\n\n```python\nu'ABC'.encode('utf-8')\n```\n* 将UTF-8字符转化为Unicode字符用`decode('utf')`:\n\n```python\n'abc'.decode('utf-8')\n```\n* 让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:\n `#-*- coding:utf-8 -*-`\n* python的格式化方法与C 语言一致,用%实现,如:\n\n```python\n'hello, %s' %'world'\nhello, world\n'Hi, %s, you have $%d.' %('Michael', 10000)\nHi, Michael, you have $1000.\n```\n* 有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.\n    - 常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.\n    - 格式化整数和浮点数还可以指定是否补0和整数与小数的位数.\n    - 在格式化字符串中,需要转义%时,可用%%表示.\n* 在python 3.x中,'xxxx'和u'xxxx' 统一成Unicode编码.\n\n## 使用list和tuple\n### list的使用\nlist里面的元素类型可以不同，也可以添加另外一个list   \n\n```python\nclassmates = ['Box', 'Ads'] #创建list变量\nclassmates[0] #访问list中的元素\noutput:'Box'\n#访问list最后一个元素\nclassmates[-1] \noutput: 'Ads'\n#添加元素到末尾\nclassmates.append('and')\n#插入元素到指定位置\nclassmates.insert(1, 'sdd')\n#删除末尾的元素\nclassmates.pop()\n#删除指定位置的元素\nclassmates.pop(i)\n#获得list的长度\nlen(classmates)\n```\n### tuple\ntuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。\n\n```python\n#创建一个tuple\nclassmates= (1,2,3)\n#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：\nclassmates = (1,)\n```\ntuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。\n\n### dict\ndict类似与其他编程语言中的map\n\n```python\n#创建一个dict\nd={'misc':93,'sds':82}\n#还可以通过key来放入value：\nd['misc'] = 23\n#判断key是否存在\n'sidh' in d\n#当key不存在时，用get方法返回的是None，或者自己指定的返回值\nd.get('sd', -1)\n```\n\n### set  \nset类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list\n\n```python\ns= set([1,23,4,5])\n#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。\n#可以通过remove(key)来移除元素。\n# set可以作数学意义上的交集、并集等操作\ns1 = set([1,2,3])\ns2 = set([3,4,5])\ns1 & s2\ns1 | s2\n```      \nset和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  \n\n## 条件判断和循环\n### if表达式格式\n\n```python\nif <条件判断1>:\n    <执行1>\nelif <条件判断2>:\n    <执行2>\nelse:\n    <执行3>\n```\n### for循环格式  \n```python            \nfor x in range(4):  #range()可以生成整数序列\n       \n```\n### while 循环格式\n```python\nwhile <条件判断> :\n```\n\n\n## 函数\npython的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  \n\n```python\n#函数定义\ndef function_name(parameter1, parameter2...) :\n    <函数体>\n```\n\n没有写return的函数会返回None。定义一个空函数可以用pass语句\n\n```python\ndef nothing():\n    pass\n```\npass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用`isinstance`函数实现\n\n```python\ndef my_abs(x):\n    if not isintance(x,(int,float)):\n        raise TypeError('bad operand type')\n    if x >=0:\n        return x\n    else :\n        return -x\n```\npython函数可以返回多个返回值：\n\n```python\nx,y = move(x,y)\n```\n实际上，返回的只是一个tuple，只是写法上简化了。\n\n### 默认参数\n\n```python\ndef call_city(x,y, city='beijing',age=12):\n    pass\n```\n默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：\n\n```python\ncall_city(x,y, age=12)\n```\n默认参数，最好指向不变对象。\n\n### 可变参数\n可变参数与定义list参数的区别就是在参数前面加个*，例如：\n\n```python\ndef calc_sum(*numbers):\n    sum =0\n    for n in numbers:\n           sum += n\n    return sum\n```\n对于函数体内部来说，`numbers`接受的是一个`tuple`。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数\n\n### 关键字参数\n关键字参数会在函数内部自动组装成一个dict。示例\n\n```python\n\ndef person(name, age, **kw)\n    print 'name:',name, 'age:',age,'other:', kw\nperson('Michael', 30,city='beijing')\n```\n在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。\n\n## 高级特性\n### 切片\n切片操作可以轻松的切成一段数列,例如`L`是一个`list`\n\n```python\n# 取前3个元素\nL[0:3]\n#或\nL[:3]\n#取后10个元素\nL[-10:]\n#前十个数,每个2个取一个\nL[:10:2]\n#所有数,每隔5个取一个\nL[::5]\n#字符串同样支持切片操作.\n```\n### 迭代\ndict可以同时迭代key和value:\n\n```python\nfor k, v in d.iteritems()\n```\n判断一个对象是否可以迭代,可以用collections模块里的iterable类型:\n\n```python\nisinstance('abd', Iterable)\noutput: True\n```\n同时迭代索引和元素\n```python\nfor i, value in enumerate(list):  \n```           \n### 列表生成式\n列表生成式可以看成对for循环语句的简化.例如\n\n```python\n[x*x for x in range(1,11)]\noutput:   [1,4,9,16,25,36,4964,81,100]\n#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断\n[x*x for x in range(1,11) if x%2==0]\noutput:[4,16,36,64,100]\n#还可以使用两层循环          \n[m+n for m in 'ABC' for n in 'XYZ']\noutput:['AX','AY','AZ','BX','BY','BZ','CX','CY','CZ']\n```\n### 生成器\n生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个`generator`.\n\n```python\ng = (x*x for x in range(1,11))\n```\n创建一个`generator`后,可以通过`next()`来打印里面的元素,或者使用`for`循环迭代.还可以使用`yield`关键字,将函数定义成`generator`,例如:    \n\n```python\n>>> def odd():\n...    print 'step1'\n...    yield 1\n...    print 'step2'\n...    yield 2\n...    print 'step3'\n...    yield 3\n...\n>>> o = odd()\n>>> o.next()\nstep1\n1\n>>> o.next()\nstep2\n2\n>>> o.next()\nstep3\n3\n```\n每当调用`next()`的时候,遇到`yield`语句返回,再次执行时,会从上次返回的`yield`语句处继续执行.\n\n## 函数式编程\n所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.\n### 匿名函数\n\n```python\nlambda x: x*x\n```\nlambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.\n### 装饰器\n函数也是个对象,赋给变量,函数还有个__name__属性,可以获得函数名称.","source":"_posts/Python语法预览.md","raw":"---\ntitle: Python快速预览\ndate: 2015-08-22 23:18:04\ntags: [Python, note]\ncategories: Python\n---\n## 数据类型和变量\npython语言是动态语言\n\n## 字符串和编码\n* UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。\n* 在python中，Unicode表示的字符串用u'...'表示.\n* 将Unicode字符转化为UTF-8字符用`encode('utf-8')`:\n\n```python\nu'ABC'.encode('utf-8')\n```\n* 将UTF-8字符转化为Unicode字符用`decode('utf')`:\n\n```python\n'abc'.decode('utf-8')\n```\n* 让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:\n `#-*- coding:utf-8 -*-`\n* python的格式化方法与C 语言一致,用%实现,如:\n\n```python\n'hello, %s' %'world'\nhello, world\n'Hi, %s, you have $%d.' %('Michael', 10000)\nHi, Michael, you have $1000.\n```\n* 有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.\n    - 常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.\n    - 格式化整数和浮点数还可以指定是否补0和整数与小数的位数.\n    - 在格式化字符串中,需要转义%时,可用%%表示.\n* 在python 3.x中,'xxxx'和u'xxxx' 统一成Unicode编码.\n\n## 使用list和tuple\n### list的使用\nlist里面的元素类型可以不同，也可以添加另外一个list   \n\n```python\nclassmates = ['Box', 'Ads'] #创建list变量\nclassmates[0] #访问list中的元素\noutput:'Box'\n#访问list最后一个元素\nclassmates[-1] \noutput: 'Ads'\n#添加元素到末尾\nclassmates.append('and')\n#插入元素到指定位置\nclassmates.insert(1, 'sdd')\n#删除末尾的元素\nclassmates.pop()\n#删除指定位置的元素\nclassmates.pop(i)\n#获得list的长度\nlen(classmates)\n```\n### tuple\ntuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。\n\n```python\n#创建一个tuple\nclassmates= (1,2,3)\n#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：\nclassmates = (1,)\n```\ntuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。\n\n### dict\ndict类似与其他编程语言中的map\n\n```python\n#创建一个dict\nd={'misc':93,'sds':82}\n#还可以通过key来放入value：\nd['misc'] = 23\n#判断key是否存在\n'sidh' in d\n#当key不存在时，用get方法返回的是None，或者自己指定的返回值\nd.get('sd', -1)\n```\n\n### set  \nset类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list\n\n```python\ns= set([1,23,4,5])\n#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。\n#可以通过remove(key)来移除元素。\n# set可以作数学意义上的交集、并集等操作\ns1 = set([1,2,3])\ns2 = set([3,4,5])\ns1 & s2\ns1 | s2\n```      \nset和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  \n\n## 条件判断和循环\n### if表达式格式\n\n```python\nif <条件判断1>:\n    <执行1>\nelif <条件判断2>:\n    <执行2>\nelse:\n    <执行3>\n```\n### for循环格式  \n```python            \nfor x in range(4):  #range()可以生成整数序列\n       \n```\n### while 循环格式\n```python\nwhile <条件判断> :\n```\n\n\n## 函数\npython的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  \n\n```python\n#函数定义\ndef function_name(parameter1, parameter2...) :\n    <函数体>\n```\n\n没有写return的函数会返回None。定义一个空函数可以用pass语句\n\n```python\ndef nothing():\n    pass\n```\npass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用`isinstance`函数实现\n\n```python\ndef my_abs(x):\n    if not isintance(x,(int,float)):\n        raise TypeError('bad operand type')\n    if x >=0:\n        return x\n    else :\n        return -x\n```\npython函数可以返回多个返回值：\n\n```python\nx,y = move(x,y)\n```\n实际上，返回的只是一个tuple，只是写法上简化了。\n\n### 默认参数\n\n```python\ndef call_city(x,y, city='beijing',age=12):\n    pass\n```\n默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：\n\n```python\ncall_city(x,y, age=12)\n```\n默认参数，最好指向不变对象。\n\n### 可变参数\n可变参数与定义list参数的区别就是在参数前面加个*，例如：\n\n```python\ndef calc_sum(*numbers):\n    sum =0\n    for n in numbers:\n           sum += n\n    return sum\n```\n对于函数体内部来说，`numbers`接受的是一个`tuple`。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数\n\n### 关键字参数\n关键字参数会在函数内部自动组装成一个dict。示例\n\n```python\n\ndef person(name, age, **kw)\n    print 'name:',name, 'age:',age,'other:', kw\nperson('Michael', 30,city='beijing')\n```\n在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。\n\n## 高级特性\n### 切片\n切片操作可以轻松的切成一段数列,例如`L`是一个`list`\n\n```python\n# 取前3个元素\nL[0:3]\n#或\nL[:3]\n#取后10个元素\nL[-10:]\n#前十个数,每个2个取一个\nL[:10:2]\n#所有数,每隔5个取一个\nL[::5]\n#字符串同样支持切片操作.\n```\n### 迭代\ndict可以同时迭代key和value:\n\n```python\nfor k, v in d.iteritems()\n```\n判断一个对象是否可以迭代,可以用collections模块里的iterable类型:\n\n```python\nisinstance('abd', Iterable)\noutput: True\n```\n同时迭代索引和元素\n```python\nfor i, value in enumerate(list):  \n```           \n### 列表生成式\n列表生成式可以看成对for循环语句的简化.例如\n\n```python\n[x*x for x in range(1,11)]\noutput:   [1,4,9,16,25,36,4964,81,100]\n#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断\n[x*x for x in range(1,11) if x%2==0]\noutput:[4,16,36,64,100]\n#还可以使用两层循环          \n[m+n for m in 'ABC' for n in 'XYZ']\noutput:['AX','AY','AZ','BX','BY','BZ','CX','CY','CZ']\n```\n### 生成器\n生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个`generator`.\n\n```python\ng = (x*x for x in range(1,11))\n```\n创建一个`generator`后,可以通过`next()`来打印里面的元素,或者使用`for`循环迭代.还可以使用`yield`关键字,将函数定义成`generator`,例如:    \n\n```python\n>>> def odd():\n...    print 'step1'\n...    yield 1\n...    print 'step2'\n...    yield 2\n...    print 'step3'\n...    yield 3\n...\n>>> o = odd()\n>>> o.next()\nstep1\n1\n>>> o.next()\nstep2\n2\n>>> o.next()\nstep3\n3\n```\n每当调用`next()`的时候,遇到`yield`语句返回,再次执行时,会从上次返回的`yield`语句处继续执行.\n\n## 函数式编程\n所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.\n### 匿名函数\n\n```python\nlambda x: x*x\n```\nlambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.\n### 装饰器\n函数也是个对象,赋给变量,函数还有个__name__属性,可以获得函数名称.","slug":"Python语法预览","published":1,"updated":"2016-09-03T15:46:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdy00101ovcwgb43wh5","content":"<h2 id=\"数据类型和变量\"><a href=\"#数据类型和变量\" class=\"headerlink\" title=\"数据类型和变量\"></a>数据类型和变量</h2><p>python语言是动态语言</p>\n<h2 id=\"字符串和编码\"><a href=\"#字符串和编码\" class=\"headerlink\" title=\"字符串和编码\"></a>字符串和编码</h2><ul>\n<li>UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。</li>\n<li>在python中，Unicode表示的字符串用u’…’表示.</li>\n<li>将Unicode字符转化为UTF-8字符用<code>encode(&#39;utf-8&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">u'ABC'</span>.encode(<span class=\"string\">'utf-8'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将UTF-8字符转化为Unicode字符用<code>decode(&#39;utf&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'abc'</span>.decode(<span class=\"string\">'utf-8'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:<br><code>#-*- coding:utf-8 -*-</code></li>\n<li>python的格式化方法与C 语言一致,用%实现,如:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'hello, %s'</span> %<span class=\"string\">'world'</span></span><br><span class=\"line\">hello, world</span><br><span class=\"line\"><span class=\"string\">'Hi, %s, you have $%d.'</span> %(<span class=\"string\">'Michael'</span>, <span class=\"number\">10000</span>)</span><br><span class=\"line\">Hi, Michael, you have $<span class=\"number\">1000.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.<ul>\n<li>常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.</li>\n<li>格式化整数和浮点数还可以指定是否补0和整数与小数的位数.</li>\n<li>在格式化字符串中,需要转义%时,可用%%表示.</li>\n</ul>\n</li>\n<li>在python 3.x中,’xxxx’和u’xxxx’ 统一成Unicode编码.</li>\n</ul>\n<h2 id=\"使用list和tuple\"><a href=\"#使用list和tuple\" class=\"headerlink\" title=\"使用list和tuple\"></a>使用list和tuple</h2><h3 id=\"list的使用\"><a href=\"#list的使用\" class=\"headerlink\" title=\"list的使用\"></a>list的使用</h3><p>list里面的元素类型可以不同，也可以添加另外一个list   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classmates = [<span class=\"string\">'Box'</span>, <span class=\"string\">'Ads'</span>] <span class=\"comment\">#创建list变量</span></span><br><span class=\"line\">classmates[<span class=\"number\">0</span>] <span class=\"comment\">#访问list中的元素</span></span><br><span class=\"line\">output:<span class=\"string\">'Box'</span></span><br><span class=\"line\"><span class=\"comment\">#访问list最后一个元素</span></span><br><span class=\"line\">classmates[<span class=\"number\">-1</span>] </span><br><span class=\"line\">output: <span class=\"string\">'Ads'</span></span><br><span class=\"line\"><span class=\"comment\">#添加元素到末尾</span></span><br><span class=\"line\">classmates.append(<span class=\"string\">'and'</span>)</span><br><span class=\"line\"><span class=\"comment\">#插入元素到指定位置</span></span><br><span class=\"line\">classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">'sdd'</span>)</span><br><span class=\"line\"><span class=\"comment\">#删除末尾的元素</span></span><br><span class=\"line\">classmates.pop()</span><br><span class=\"line\"><span class=\"comment\">#删除指定位置的元素</span></span><br><span class=\"line\">classmates.pop(i)</span><br><span class=\"line\"><span class=\"comment\">#获得list的长度</span></span><br><span class=\"line\">len(classmates)</span><br></pre></td></tr></table></figure>\n<h3 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h3><p>tuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建一个tuple</span></span><br><span class=\"line\">classmates= (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"comment\">#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：</span></span><br><span class=\"line\">classmates = (<span class=\"number\">1</span>,)</span><br></pre></td></tr></table></figure>\n<p>tuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。</p>\n<h3 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h3><p>dict类似与其他编程语言中的map</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建一个dict</span></span><br><span class=\"line\">d=&#123;<span class=\"string\">'misc'</span>:<span class=\"number\">93</span>,<span class=\"string\">'sds'</span>:<span class=\"number\">82</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#还可以通过key来放入value：</span></span><br><span class=\"line\">d[<span class=\"string\">'misc'</span>] = <span class=\"number\">23</span></span><br><span class=\"line\"><span class=\"comment\">#判断key是否存在</span></span><br><span class=\"line\"><span class=\"string\">'sidh'</span> <span class=\"keyword\">in</span> d</span><br><span class=\"line\"><span class=\"comment\">#当key不存在时，用get方法返回的是None，或者自己指定的返回值</span></span><br><span class=\"line\">d.get(<span class=\"string\">'sd'</span>, <span class=\"number\">-1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>set类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s= set([<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"comment\">#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。</span></span><br><span class=\"line\"><span class=\"comment\">#可以通过remove(key)来移除元素。</span></span><br><span class=\"line\"><span class=\"comment\"># set可以作数学意义上的交集、并集等操作</span></span><br><span class=\"line\">s1 = set([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\">s2 = set([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">s1 &amp; s2</span><br><span class=\"line\">s1 | s2</span><br><span class=\"line\">```      </span><br><span class=\"line\">set和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 条件判断和循环</span></span><br><span class=\"line\"><span class=\"comment\">### if表达式格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"keyword\">if</span> &lt;条件判断<span class=\"number\">1</span>&gt;:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">1</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">elif</span> &lt;条件判断<span class=\"number\">2</span>&gt;:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">2</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">3</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for循环格式\"><a href=\"#for循环格式\" class=\"headerlink\" title=\"for循环格式\"></a>for循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):  <span class=\"comment\">#range()可以生成整数序列</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"while-循环格式\"><a href=\"#while-循环格式\" class=\"headerlink\" title=\"while 循环格式\"></a>while 循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> &lt;条件判断&gt; :</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>python的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#函数定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1, parameter2...)</span> :</span></span><br><span class=\"line\">    &lt;函数体&gt;</span><br></pre></td></tr></table></figure>\n\n<p>没有写return的函数会返回None。定义一个空函数可以用pass语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nothing</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>pass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用<code>isinstance</code>函数实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isintance(x,(int,float)):</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">'bad operand type'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;=<span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span> :</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br></pre></td></tr></table></figure>\n<p>python函数可以返回多个返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x,y = move(x,y)</span><br></pre></td></tr></table></figure>\n<p>实际上，返回的只是一个tuple，只是写法上简化了。</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">call_city</span><span class=\"params\">(x,y, city=<span class=\"string\">'beijing'</span>,age=<span class=\"number\">12</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call_city(x,y, age=<span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n<p>默认参数，最好指向不变对象。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数与定义list参数的区别就是在参数前面加个*，例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_sum</span><span class=\"params\">(*numbers)</span>:</span></span><br><span class=\"line\">    sum =<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">           sum += n</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum</span><br></pre></td></tr></table></figure>\n<p>对于函数体内部来说，<code>numbers</code>接受的是一个<code>tuple</code>。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数</p>\n<h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><p>关键字参数会在函数内部自动组装成一个dict。示例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span><span class=\"params\">(name, age, **kw)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">print</span> '<span class=\"title\">name</span>:</span><span class=\"string\">',name, '</span>age:<span class=\"string\">',age,'</span>other:<span class=\"string\">', kw</span></span><br><span class=\"line\"><span class=\"string\">person('</span>Michael<span class=\"string\">', 30,city='</span>beijing<span class=\"string\">')</span></span><br></pre></td></tr></table></figure>\n<p>在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。</p>\n<h2 id=\"高级特性\"><a href=\"#高级特性\" class=\"headerlink\" title=\"高级特性\"></a>高级特性</h2><h3 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h3><p>切片操作可以轻松的切成一段数列,例如<code>L</code>是一个<code>list</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取前3个元素</span></span><br><span class=\"line\">L[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\">L[:<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">#取后10个元素</span></span><br><span class=\"line\">L[<span class=\"number\">-10</span>:]</span><br><span class=\"line\"><span class=\"comment\">#前十个数,每个2个取一个</span></span><br><span class=\"line\">L[:<span class=\"number\">10</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#所有数,每隔5个取一个</span></span><br><span class=\"line\">L[::<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"comment\">#字符串同样支持切片操作.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"迭代\"><a href=\"#迭代\" class=\"headerlink\" title=\"迭代\"></a>迭代</h3><p>dict可以同时迭代key和value:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.iteritems()</span><br></pre></td></tr></table></figure>\n<p>判断一个对象是否可以迭代,可以用collections模块里的iterable类型:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isinstance(<span class=\"string\">'abd'</span>, Iterable)</span><br><span class=\"line\">output: <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<p>同时迭代索引和元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i, value <span class=\"keyword\">in</span> enumerate(list):  </span><br><span class=\"line\">```           </span><br><span class=\"line\"><span class=\"comment\">### 列表生成式</span></span><br><span class=\"line\">列表生成式可以看成对<span class=\"keyword\">for</span>循环语句的简化.例如</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</span><br><span class=\"line\">output:   [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">16</span>,<span class=\"number\">25</span>,<span class=\"number\">36</span>,<span class=\"number\">4964</span>,<span class=\"number\">81</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"comment\">#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断</span></span><br><span class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>) <span class=\"keyword\">if</span> x%<span class=\"number\">2</span>==<span class=\"number\">0</span>]</span><br><span class=\"line\">output:[<span class=\"number\">4</span>,<span class=\"number\">16</span>,<span class=\"number\">36</span>,<span class=\"number\">64</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"comment\">#还可以使用两层循环          </span></span><br><span class=\"line\">[m+n <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"string\">'ABC'</span> <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"string\">'XYZ'</span>]</span><br><span class=\"line\">output:[<span class=\"string\">'AX'</span>,<span class=\"string\">'AY'</span>,<span class=\"string\">'AZ'</span>,<span class=\"string\">'BX'</span>,<span class=\"string\">'BY'</span>,<span class=\"string\">'BZ'</span>,<span class=\"string\">'CX'</span>,<span class=\"string\">'CY'</span>,<span class=\"string\">'CZ'</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h3><p>生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个<code>generator</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g = (x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>))</span><br></pre></td></tr></table></figure>\n<p>创建一个<code>generator</code>后,可以通过<code>next()</code>来打印里面的元素,或者使用<code>for</code>循环迭代.还可以使用<code>yield</code>关键字,将函数定义成<code>generator</code>,例如:    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">odd</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step1'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step2'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step3'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o = odd()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step1</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step2</span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step3</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>每当调用<code>next()</code>的时候,遇到<code>yield</code>语句返回,再次执行时,会从上次返回的<code>yield</code>语句处继续执行.</p>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.</p>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">lambda</span> x: x*x</span><br></pre></td></tr></table></figure>\n<p>lambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>函数也是个对象,赋给变量,函数还有个<strong>name</strong>属性,可以获得函数名称.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据类型和变量\"><a href=\"#数据类型和变量\" class=\"headerlink\" title=\"数据类型和变量\"></a>数据类型和变量</h2><p>python语言是动态语言</p>\n<h2 id=\"字符串和编码\"><a href=\"#字符串和编码\" class=\"headerlink\" title=\"字符串和编码\"></a>字符串和编码</h2><ul>\n<li>UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。</li>\n<li>在python中，Unicode表示的字符串用u’…’表示.</li>\n<li>将Unicode字符转化为UTF-8字符用<code>encode(&#39;utf-8&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">u'ABC'</span>.encode(<span class=\"string\">'utf-8'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将UTF-8字符转化为Unicode字符用<code>decode(&#39;utf&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'abc'</span>.decode(<span class=\"string\">'utf-8'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:<br><code>#-*- coding:utf-8 -*-</code></li>\n<li>python的格式化方法与C 语言一致,用%实现,如:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'hello, %s'</span> %<span class=\"string\">'world'</span></span><br><span class=\"line\">hello, world</span><br><span class=\"line\"><span class=\"string\">'Hi, %s, you have $%d.'</span> %(<span class=\"string\">'Michael'</span>, <span class=\"number\">10000</span>)</span><br><span class=\"line\">Hi, Michael, you have $<span class=\"number\">1000.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.<ul>\n<li>常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.</li>\n<li>格式化整数和浮点数还可以指定是否补0和整数与小数的位数.</li>\n<li>在格式化字符串中,需要转义%时,可用%%表示.</li>\n</ul>\n</li>\n<li>在python 3.x中,’xxxx’和u’xxxx’ 统一成Unicode编码.</li>\n</ul>\n<h2 id=\"使用list和tuple\"><a href=\"#使用list和tuple\" class=\"headerlink\" title=\"使用list和tuple\"></a>使用list和tuple</h2><h3 id=\"list的使用\"><a href=\"#list的使用\" class=\"headerlink\" title=\"list的使用\"></a>list的使用</h3><p>list里面的元素类型可以不同，也可以添加另外一个list   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classmates = [<span class=\"string\">'Box'</span>, <span class=\"string\">'Ads'</span>] <span class=\"comment\">#创建list变量</span></span><br><span class=\"line\">classmates[<span class=\"number\">0</span>] <span class=\"comment\">#访问list中的元素</span></span><br><span class=\"line\">output:<span class=\"string\">'Box'</span></span><br><span class=\"line\"><span class=\"comment\">#访问list最后一个元素</span></span><br><span class=\"line\">classmates[<span class=\"number\">-1</span>] </span><br><span class=\"line\">output: <span class=\"string\">'Ads'</span></span><br><span class=\"line\"><span class=\"comment\">#添加元素到末尾</span></span><br><span class=\"line\">classmates.append(<span class=\"string\">'and'</span>)</span><br><span class=\"line\"><span class=\"comment\">#插入元素到指定位置</span></span><br><span class=\"line\">classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">'sdd'</span>)</span><br><span class=\"line\"><span class=\"comment\">#删除末尾的元素</span></span><br><span class=\"line\">classmates.pop()</span><br><span class=\"line\"><span class=\"comment\">#删除指定位置的元素</span></span><br><span class=\"line\">classmates.pop(i)</span><br><span class=\"line\"><span class=\"comment\">#获得list的长度</span></span><br><span class=\"line\">len(classmates)</span><br></pre></td></tr></table></figure>\n<h3 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h3><p>tuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建一个tuple</span></span><br><span class=\"line\">classmates= (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"comment\">#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：</span></span><br><span class=\"line\">classmates = (<span class=\"number\">1</span>,)</span><br></pre></td></tr></table></figure>\n<p>tuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。</p>\n<h3 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h3><p>dict类似与其他编程语言中的map</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建一个dict</span></span><br><span class=\"line\">d=&#123;<span class=\"string\">'misc'</span>:<span class=\"number\">93</span>,<span class=\"string\">'sds'</span>:<span class=\"number\">82</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#还可以通过key来放入value：</span></span><br><span class=\"line\">d[<span class=\"string\">'misc'</span>] = <span class=\"number\">23</span></span><br><span class=\"line\"><span class=\"comment\">#判断key是否存在</span></span><br><span class=\"line\"><span class=\"string\">'sidh'</span> <span class=\"keyword\">in</span> d</span><br><span class=\"line\"><span class=\"comment\">#当key不存在时，用get方法返回的是None，或者自己指定的返回值</span></span><br><span class=\"line\">d.get(<span class=\"string\">'sd'</span>, <span class=\"number\">-1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>set类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s= set([<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"comment\">#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。</span></span><br><span class=\"line\"><span class=\"comment\">#可以通过remove(key)来移除元素。</span></span><br><span class=\"line\"><span class=\"comment\"># set可以作数学意义上的交集、并集等操作</span></span><br><span class=\"line\">s1 = set([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\">s2 = set([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">s1 &amp; s2</span><br><span class=\"line\">s1 | s2</span><br><span class=\"line\">```      </span><br><span class=\"line\">set和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 条件判断和循环</span></span><br><span class=\"line\"><span class=\"comment\">### if表达式格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"keyword\">if</span> &lt;条件判断<span class=\"number\">1</span>&gt;:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">1</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">elif</span> &lt;条件判断<span class=\"number\">2</span>&gt;:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">2</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    &lt;执行<span class=\"number\">3</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for循环格式\"><a href=\"#for循环格式\" class=\"headerlink\" title=\"for循环格式\"></a>for循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):  <span class=\"comment\">#range()可以生成整数序列</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"while-循环格式\"><a href=\"#while-循环格式\" class=\"headerlink\" title=\"while 循环格式\"></a>while 循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> &lt;条件判断&gt; :</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>python的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#函数定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1, parameter2...)</span> :</span></span><br><span class=\"line\">    &lt;函数体&gt;</span><br></pre></td></tr></table></figure>\n\n<p>没有写return的函数会返回None。定义一个空函数可以用pass语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nothing</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>pass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用<code>isinstance</code>函数实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isintance(x,(int,float)):</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">'bad operand type'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;=<span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span> :</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br></pre></td></tr></table></figure>\n<p>python函数可以返回多个返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x,y = move(x,y)</span><br></pre></td></tr></table></figure>\n<p>实际上，返回的只是一个tuple，只是写法上简化了。</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">call_city</span><span class=\"params\">(x,y, city=<span class=\"string\">'beijing'</span>,age=<span class=\"number\">12</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call_city(x,y, age=<span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n<p>默认参数，最好指向不变对象。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数与定义list参数的区别就是在参数前面加个*，例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_sum</span><span class=\"params\">(*numbers)</span>:</span></span><br><span class=\"line\">    sum =<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">           sum += n</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum</span><br></pre></td></tr></table></figure>\n<p>对于函数体内部来说，<code>numbers</code>接受的是一个<code>tuple</code>。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数</p>\n<h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><p>关键字参数会在函数内部自动组装成一个dict。示例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span><span class=\"params\">(name, age, **kw)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">print</span> '<span class=\"title\">name</span>:</span><span class=\"string\">',name, '</span>age:<span class=\"string\">',age,'</span>other:<span class=\"string\">', kw</span></span><br><span class=\"line\"><span class=\"string\">person('</span>Michael<span class=\"string\">', 30,city='</span>beijing<span class=\"string\">')</span></span><br></pre></td></tr></table></figure>\n<p>在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。</p>\n<h2 id=\"高级特性\"><a href=\"#高级特性\" class=\"headerlink\" title=\"高级特性\"></a>高级特性</h2><h3 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h3><p>切片操作可以轻松的切成一段数列,例如<code>L</code>是一个<code>list</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取前3个元素</span></span><br><span class=\"line\">L[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\">L[:<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">#取后10个元素</span></span><br><span class=\"line\">L[<span class=\"number\">-10</span>:]</span><br><span class=\"line\"><span class=\"comment\">#前十个数,每个2个取一个</span></span><br><span class=\"line\">L[:<span class=\"number\">10</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#所有数,每隔5个取一个</span></span><br><span class=\"line\">L[::<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"comment\">#字符串同样支持切片操作.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"迭代\"><a href=\"#迭代\" class=\"headerlink\" title=\"迭代\"></a>迭代</h3><p>dict可以同时迭代key和value:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.iteritems()</span><br></pre></td></tr></table></figure>\n<p>判断一个对象是否可以迭代,可以用collections模块里的iterable类型:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isinstance(<span class=\"string\">'abd'</span>, Iterable)</span><br><span class=\"line\">output: <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<p>同时迭代索引和元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i, value <span class=\"keyword\">in</span> enumerate(list):  </span><br><span class=\"line\">```           </span><br><span class=\"line\"><span class=\"comment\">### 列表生成式</span></span><br><span class=\"line\">列表生成式可以看成对<span class=\"keyword\">for</span>循环语句的简化.例如</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</span><br><span class=\"line\">output:   [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">16</span>,<span class=\"number\">25</span>,<span class=\"number\">36</span>,<span class=\"number\">4964</span>,<span class=\"number\">81</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"comment\">#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断</span></span><br><span class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>) <span class=\"keyword\">if</span> x%<span class=\"number\">2</span>==<span class=\"number\">0</span>]</span><br><span class=\"line\">output:[<span class=\"number\">4</span>,<span class=\"number\">16</span>,<span class=\"number\">36</span>,<span class=\"number\">64</span>,<span class=\"number\">100</span>]</span><br><span class=\"line\"><span class=\"comment\">#还可以使用两层循环          </span></span><br><span class=\"line\">[m+n <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"string\">'ABC'</span> <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"string\">'XYZ'</span>]</span><br><span class=\"line\">output:[<span class=\"string\">'AX'</span>,<span class=\"string\">'AY'</span>,<span class=\"string\">'AZ'</span>,<span class=\"string\">'BX'</span>,<span class=\"string\">'BY'</span>,<span class=\"string\">'BZ'</span>,<span class=\"string\">'CX'</span>,<span class=\"string\">'CY'</span>,<span class=\"string\">'CZ'</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h3><p>生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个<code>generator</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g = (x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>))</span><br></pre></td></tr></table></figure>\n<p>创建一个<code>generator</code>后,可以通过<code>next()</code>来打印里面的元素,或者使用<code>for</code>循环迭代.还可以使用<code>yield</code>关键字,将函数定义成<code>generator</code>,例如:    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">odd</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step1'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step2'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step3'</span></span><br><span class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o = odd()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step1</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step2</span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</span><br><span class=\"line\">step3</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>每当调用<code>next()</code>的时候,遇到<code>yield</code>语句返回,再次执行时,会从上次返回的<code>yield</code>语句处继续执行.</p>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.</p>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">lambda</span> x: x*x</span><br></pre></td></tr></table></figure>\n<p>lambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>函数也是个对象,赋给变量,函数还有个<strong>name</strong>属性,可以获得函数名称.</p>\n"},{"title":"Python资料收集","date":"2016-09-13T13:18:05.000Z","_content":"## 常用网站\n|网站|备注|\n|:--:|:---|\n|[Python 官方网站](https://www.python.org/)|Python 官方网站|\n|[pip主页](https://pypi.python.org/pypi/pip)|pip主页|\n|[pip文档](http://pip.readthedocs.io/en/stable/)|pip文档|\n|[Pycharm](https://www.jetbrains.com/pycharm/)|最流行的Python IDE|\n|[ANACONDA](https://www.continuum.io/downloads)|最适合做科学计算的IDE|\n|[python-virtualenv](https://groups.google.com/forum/#!forum/python-virtualenv)|Google python社区|\n|[awesome python](http://awesome-python.com/)|Python 资料大全|\n|[numpy exercises](https://github.com/rougier/numpy-100)|numpy 练习|\n|[Python中文官方文档](http://python.usyiyi.cn/)|中文官方文档|\n\n## 常用包\n|网站|备注|\n|:--:|:---|\n|[scrapy](https://scrapy.org/)|最出名的网络爬虫|\n|[PyQuery](https://github.com/gawel/pyquery)|仿照jQuery的实现，语法与jQuery相同|\n\n## 书籍推荐\n* 《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看\n* 《Python 语言及其应用》：适合初学者入门\n* 《Python 高级编程》：进阶书籍\n* 《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。\n* 《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》\n* 《Effective Python: 编写高质量 Python 代码的 59 个有效方法》\n* 《Python Web 开发实战》\n* 《Python 网络数据采集》\n\n## 技术文章\n* [量化编程、Python 入门及量化策略、量化知识总结贴](https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务](http://python.jobbole.com/86296/)\n* [Python 不能不知的模块](http://python.jobbole.com/86332/)\n* [Python 中的关键字 with 详解](https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [A Python Interpreter Written in Python](http://qingyunha.github.io/taotao/)\n* [Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)\n* [Python 高效编程技巧](http://blogread.cn/it/article/6159?f=wb)\n* [2015 年十大流行 Python 库](http://www.imooc.com/article/3831)\n* [我理解的 Python 最佳实践](http://www.imooc.com/article/2994)\n* [从零构建一个简单的 Python 框架](https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo)\n* [NumPy 的详细教程](http://www.tuicool.com/articles/r2yyei)","source":"_posts/Python资料收集.md","raw":"---\ntitle: Python资料收集\ndate: 2016-09-13 21:18:05\ntags: [Python]\ncategories: Python\n---\n## 常用网站\n|网站|备注|\n|:--:|:---|\n|[Python 官方网站](https://www.python.org/)|Python 官方网站|\n|[pip主页](https://pypi.python.org/pypi/pip)|pip主页|\n|[pip文档](http://pip.readthedocs.io/en/stable/)|pip文档|\n|[Pycharm](https://www.jetbrains.com/pycharm/)|最流行的Python IDE|\n|[ANACONDA](https://www.continuum.io/downloads)|最适合做科学计算的IDE|\n|[python-virtualenv](https://groups.google.com/forum/#!forum/python-virtualenv)|Google python社区|\n|[awesome python](http://awesome-python.com/)|Python 资料大全|\n|[numpy exercises](https://github.com/rougier/numpy-100)|numpy 练习|\n|[Python中文官方文档](http://python.usyiyi.cn/)|中文官方文档|\n\n## 常用包\n|网站|备注|\n|:--:|:---|\n|[scrapy](https://scrapy.org/)|最出名的网络爬虫|\n|[PyQuery](https://github.com/gawel/pyquery)|仿照jQuery的实现，语法与jQuery相同|\n\n## 书籍推荐\n* 《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看\n* 《Python 语言及其应用》：适合初学者入门\n* 《Python 高级编程》：进阶书籍\n* 《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。\n* 《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》\n* 《Effective Python: 编写高质量 Python 代码的 59 个有效方法》\n* 《Python Web 开发实战》\n* 《Python 网络数据采集》\n\n## 技术文章\n* [量化编程、Python 入门及量化策略、量化知识总结贴](https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务](http://python.jobbole.com/86296/)\n* [Python 不能不知的模块](http://python.jobbole.com/86332/)\n* [Python 中的关键字 with 详解](https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [A Python Interpreter Written in Python](http://qingyunha.github.io/taotao/)\n* [Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)\n* [Python 高效编程技巧](http://blogread.cn/it/article/6159?f=wb)\n* [2015 年十大流行 Python 库](http://www.imooc.com/article/3831)\n* [我理解的 Python 最佳实践](http://www.imooc.com/article/2994)\n* [从零构建一个简单的 Python 框架](https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo)\n* [NumPy 的详细教程](http://www.tuicool.com/articles/r2yyei)","slug":"Python资料收集","published":1,"updated":"2016-09-25T04:47:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdy00111ovcnsiewrqd","content":"<h2 id=\"常用网站\"><a href=\"#常用网站\" class=\"headerlink\" title=\"常用网站\"></a>常用网站</h2><table>\n<thead>\n<tr>\n<th align=\"center\">网站</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">Python 官方网站</a></td>\n<td align=\"left\">Python 官方网站</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://pypi.python.org/pypi/pip\" target=\"_blank\" rel=\"noopener\">pip主页</a></td>\n<td align=\"left\">pip主页</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://pip.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"noopener\">pip文档</a></td>\n<td align=\"left\">pip文档</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\" rel=\"noopener\">Pycharm</a></td>\n<td align=\"left\">最流行的Python IDE</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://www.continuum.io/downloads\" target=\"_blank\" rel=\"noopener\">ANACONDA</a></td>\n<td align=\"left\">最适合做科学计算的IDE</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://groups.google.com/forum/#!forum/python-virtualenv\" target=\"_blank\" rel=\"noopener\">python-virtualenv</a></td>\n<td align=\"left\">Google python社区</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://awesome-python.com/\" target=\"_blank\" rel=\"noopener\">awesome python</a></td>\n<td align=\"left\">Python 资料大全</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/rougier/numpy-100\" target=\"_blank\" rel=\"noopener\">numpy exercises</a></td>\n<td align=\"left\">numpy 练习</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://python.usyiyi.cn/\" target=\"_blank\" rel=\"noopener\">Python中文官方文档</a></td>\n<td align=\"left\">中文官方文档</td>\n</tr>\n</tbody></table>\n<h2 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h2><table>\n<thead>\n<tr>\n<th align=\"center\">网站</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://scrapy.org/\" target=\"_blank\" rel=\"noopener\">scrapy</a></td>\n<td align=\"left\">最出名的网络爬虫</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/gawel/pyquery\" target=\"_blank\" rel=\"noopener\">PyQuery</a></td>\n<td align=\"left\">仿照jQuery的实现，语法与jQuery相同</td>\n</tr>\n</tbody></table>\n<h2 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h2><ul>\n<li>《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看</li>\n<li>《Python 语言及其应用》：适合初学者入门</li>\n<li>《Python 高级编程》：进阶书籍</li>\n<li>《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。</li>\n<li>《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》</li>\n<li>《Effective Python: 编写高质量 Python 代码的 59 个有效方法》</li>\n<li>《Python Web 开发实战》</li>\n<li>《Python 网络数据采集》</li>\n</ul>\n<h2 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h2><ul>\n<li><a href=\"https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">量化编程、Python 入门及量化策略、量化知识总结贴</a></li>\n<li><a href=\"http://python.jobbole.com/86296/\" target=\"_blank\" rel=\"noopener\">网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务</a></li>\n<li><a href=\"http://python.jobbole.com/86332/\" target=\"_blank\" rel=\"noopener\">Python 不能不知的模块</a></li>\n<li><a href=\"https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">Python 中的关键字 with 详解</a></li>\n<li><a href=\"http://qingyunha.github.io/taotao/\" target=\"_blank\" rel=\"noopener\">A Python Interpreter Written in Python</a></li>\n<li>[Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)</li>\n<li><a href=\"http://blogread.cn/it/article/6159?f=wb\" target=\"_blank\" rel=\"noopener\">Python 高效编程技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/3831\" target=\"_blank\" rel=\"noopener\">2015 年十大流行 Python 库</a></li>\n<li><a href=\"http://www.imooc.com/article/2994\" target=\"_blank\" rel=\"noopener\">我理解的 Python 最佳实践</a></li>\n<li><a href=\"https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo\" target=\"_blank\" rel=\"noopener\">从零构建一个简单的 Python 框架</a></li>\n<li><a href=\"http://www.tuicool.com/articles/r2yyei\" target=\"_blank\" rel=\"noopener\">NumPy 的详细教程</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常用网站\"><a href=\"#常用网站\" class=\"headerlink\" title=\"常用网站\"></a>常用网站</h2><table>\n<thead>\n<tr>\n<th align=\"center\">网站</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">Python 官方网站</a></td>\n<td align=\"left\">Python 官方网站</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://pypi.python.org/pypi/pip\" target=\"_blank\" rel=\"noopener\">pip主页</a></td>\n<td align=\"left\">pip主页</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://pip.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"noopener\">pip文档</a></td>\n<td align=\"left\">pip文档</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\" rel=\"noopener\">Pycharm</a></td>\n<td align=\"left\">最流行的Python IDE</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://www.continuum.io/downloads\" target=\"_blank\" rel=\"noopener\">ANACONDA</a></td>\n<td align=\"left\">最适合做科学计算的IDE</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://groups.google.com/forum/#!forum/python-virtualenv\" target=\"_blank\" rel=\"noopener\">python-virtualenv</a></td>\n<td align=\"left\">Google python社区</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://awesome-python.com/\" target=\"_blank\" rel=\"noopener\">awesome python</a></td>\n<td align=\"left\">Python 资料大全</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/rougier/numpy-100\" target=\"_blank\" rel=\"noopener\">numpy exercises</a></td>\n<td align=\"left\">numpy 练习</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://python.usyiyi.cn/\" target=\"_blank\" rel=\"noopener\">Python中文官方文档</a></td>\n<td align=\"left\">中文官方文档</td>\n</tr>\n</tbody></table>\n<h2 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h2><table>\n<thead>\n<tr>\n<th align=\"center\">网站</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://scrapy.org/\" target=\"_blank\" rel=\"noopener\">scrapy</a></td>\n<td align=\"left\">最出名的网络爬虫</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/gawel/pyquery\" target=\"_blank\" rel=\"noopener\">PyQuery</a></td>\n<td align=\"left\">仿照jQuery的实现，语法与jQuery相同</td>\n</tr>\n</tbody></table>\n<h2 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h2><ul>\n<li>《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看</li>\n<li>《Python 语言及其应用》：适合初学者入门</li>\n<li>《Python 高级编程》：进阶书籍</li>\n<li>《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。</li>\n<li>《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》</li>\n<li>《Effective Python: 编写高质量 Python 代码的 59 个有效方法》</li>\n<li>《Python Web 开发实战》</li>\n<li>《Python 网络数据采集》</li>\n</ul>\n<h2 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h2><ul>\n<li><a href=\"https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">量化编程、Python 入门及量化策略、量化知识总结贴</a></li>\n<li><a href=\"http://python.jobbole.com/86296/\" target=\"_blank\" rel=\"noopener\">网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务</a></li>\n<li><a href=\"http://python.jobbole.com/86332/\" target=\"_blank\" rel=\"noopener\">Python 不能不知的模块</a></li>\n<li><a href=\"https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">Python 中的关键字 with 详解</a></li>\n<li><a href=\"http://qingyunha.github.io/taotao/\" target=\"_blank\" rel=\"noopener\">A Python Interpreter Written in Python</a></li>\n<li>[Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)</li>\n<li><a href=\"http://blogread.cn/it/article/6159?f=wb\" target=\"_blank\" rel=\"noopener\">Python 高效编程技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/3831\" target=\"_blank\" rel=\"noopener\">2015 年十大流行 Python 库</a></li>\n<li><a href=\"http://www.imooc.com/article/2994\" target=\"_blank\" rel=\"noopener\">我理解的 Python 最佳实践</a></li>\n<li><a href=\"https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo\" target=\"_blank\" rel=\"noopener\">从零构建一个简单的 Python 框架</a></li>\n<li><a href=\"http://www.tuicool.com/articles/r2yyei\" target=\"_blank\" rel=\"noopener\">NumPy 的详细教程</a></li>\n</ul>\n"},{"title":"QuartZ Cron表达式详解","date":"2016-05-28T16:29:57.000Z","_content":"\n## Cron表达式\n> 格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]  \n> year是可选的\n\n| 字段名| 允许的值| 允许的字符| \n| :--: | :----:| :------| \n| 秒| 0-59 |  , - * / |\n| 分| 0-59  | , - * / |\n| 小时| 0-23 | , - * / |\n| 日| 1-32 | , - * / ? L W C |\n| 月| 1-12 or JAN-DEC |, - * / |\n| 周| 1-7 or SUN-SAT | , - * / ? L #|\n| 年| empty,1970-2099 | , - * / |\n\n> day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。   \n> day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。  \n> month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 \n\n## 字符解释\n> \\* :匹配该域的任意值，如\\* 用在分所在的域，表示每分钟都会触发事件。     \n> ?  :该字符仅用在`day of month`与`day of week`两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。  \n> \\- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。  \n> ,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。    \n> /  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如`senconds`的值为'5/15' 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。   \n> L  :表示最后的意思。   \n>   \n> * 在`day of month`表示每月最后一天；\n> * 在`day of week`表示周日；\n> * 如果前面加上数字，表示本月最后一天，例如'6L'表示每月最后一个周五；\n> * 还可以指定从最后一天到开始时间，例如，'L-2'表示每月的第2天到最后一天。\n> \n> W  :表示工作日，例如，值为'15W'，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。 \n>    ** *'L'可以与'W'结合使用，'LW'表示当月最后一个工作日* **    \n> \\#  :用来表示每个月的第几个星期几，例如，'6#3'表示某个月的第3个星期五。  \n\n## 示例\n| 表达式| 意思|\n|:--- | :----|\n| 0 0 12 * * ?  | Fire at 12pm (noon) every day |\n| 0 15 10 ? * * | Fire at 10:15am every day |\n| 0 15 10 * * ? | Fire at 10:15am every day |\n| 0 15 10 * * ? *   | Fire at 10:15am every day |\n| 0 15 10 * * ? 2005    | Fire at 10:15am every day during the year 2005 |\n| 0 * 14 * * ?  | Fire every minute starting at 2pm and ending at 2:59pm, every day |\n| 0 0/5 14 * * ?    | Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day |\n| 0 0/5 14,18 * * ? | Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day  |\n| 0 0-5 14 * * ?    | Fire every minute starting at 2pm and ending at 2:05pm, every day |\n| 0 10,44 14 ? 3 WED    | Fire at 2:10pm and at 2:44pm every Wednesday in the month of March. |\n| 0 15 10 ? * MON-FRI   | Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday  |\n| 0 15 10 15 * ?    | Fire at 10:15am on the 15th day of every month |\n| 0 15 10 L * ? | Fire at 10:15am on the last day of every month |\n| 0 15 10 L-2 * ?   | Fire at 10:15am on the 2nd-to-last last day of every month |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L 2002-2005  | Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005 |\n| 0 15 10 ? * 6#3   | Fire at 10:15am on the third Friday of every month |\n| 0 0 12 1/5 * ?    | Fire at 12pm (noon) every 5 days every month, starting on the first day of the month. |\n| 0 11 11 11 11 ?   | Fire every November 11th at 11:11am. |\n\n## 参考资料\n> [官方说明](http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger)\n","source":"_posts/Quart表达式详解.md","raw":"---\ntitle: QuartZ Cron表达式详解\ndate: 2016-05-29 00:29:57\ntags: [Java, QuartZ, Cron, note]\ncategories: Java\n---\n\n## Cron表达式\n> 格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]  \n> year是可选的\n\n| 字段名| 允许的值| 允许的字符| \n| :--: | :----:| :------| \n| 秒| 0-59 |  , - * / |\n| 分| 0-59  | , - * / |\n| 小时| 0-23 | , - * / |\n| 日| 1-32 | , - * / ? L W C |\n| 月| 1-12 or JAN-DEC |, - * / |\n| 周| 1-7 or SUN-SAT | , - * / ? L #|\n| 年| empty,1970-2099 | , - * / |\n\n> day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。   \n> day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。  \n> month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 \n\n## 字符解释\n> \\* :匹配该域的任意值，如\\* 用在分所在的域，表示每分钟都会触发事件。     \n> ?  :该字符仅用在`day of month`与`day of week`两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。  \n> \\- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。  \n> ,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。    \n> /  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如`senconds`的值为'5/15' 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。   \n> L  :表示最后的意思。   \n>   \n> * 在`day of month`表示每月最后一天；\n> * 在`day of week`表示周日；\n> * 如果前面加上数字，表示本月最后一天，例如'6L'表示每月最后一个周五；\n> * 还可以指定从最后一天到开始时间，例如，'L-2'表示每月的第2天到最后一天。\n> \n> W  :表示工作日，例如，值为'15W'，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。 \n>    ** *'L'可以与'W'结合使用，'LW'表示当月最后一个工作日* **    \n> \\#  :用来表示每个月的第几个星期几，例如，'6#3'表示某个月的第3个星期五。  \n\n## 示例\n| 表达式| 意思|\n|:--- | :----|\n| 0 0 12 * * ?  | Fire at 12pm (noon) every day |\n| 0 15 10 ? * * | Fire at 10:15am every day |\n| 0 15 10 * * ? | Fire at 10:15am every day |\n| 0 15 10 * * ? *   | Fire at 10:15am every day |\n| 0 15 10 * * ? 2005    | Fire at 10:15am every day during the year 2005 |\n| 0 * 14 * * ?  | Fire every minute starting at 2pm and ending at 2:59pm, every day |\n| 0 0/5 14 * * ?    | Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day |\n| 0 0/5 14,18 * * ? | Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day  |\n| 0 0-5 14 * * ?    | Fire every minute starting at 2pm and ending at 2:05pm, every day |\n| 0 10,44 14 ? 3 WED    | Fire at 2:10pm and at 2:44pm every Wednesday in the month of March. |\n| 0 15 10 ? * MON-FRI   | Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday  |\n| 0 15 10 15 * ?    | Fire at 10:15am on the 15th day of every month |\n| 0 15 10 L * ? | Fire at 10:15am on the last day of every month |\n| 0 15 10 L-2 * ?   | Fire at 10:15am on the 2nd-to-last last day of every month |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L 2002-2005  | Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005 |\n| 0 15 10 ? * 6#3   | Fire at 10:15am on the third Friday of every month |\n| 0 0 12 1/5 * ?    | Fire at 12pm (noon) every 5 days every month, starting on the first day of the month. |\n| 0 11 11 11 11 ?   | Fire every November 11th at 11:11am. |\n\n## 参考资料\n> [官方说明](http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger)\n","slug":"Quart表达式详解","published":1,"updated":"2016-09-03T16:33:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdz00121ovcd5pfcfza","content":"<h2 id=\"Cron表达式\"><a href=\"#Cron表达式\" class=\"headerlink\" title=\"Cron表达式\"></a>Cron表达式</h2><blockquote>\n<p>格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]<br>year是可选的</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">字段名</th>\n<th align=\"center\">允许的值</th>\n<th align=\"left\">允许的字符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">秒</td>\n<td align=\"center\">0-59</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">分</td>\n<td align=\"center\">0-59</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">小时</td>\n<td align=\"center\">0-23</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">日</td>\n<td align=\"center\">1-32</td>\n<td align=\"left\">, - * / ? L W C</td>\n</tr>\n<tr>\n<td align=\"center\">月</td>\n<td align=\"center\">1-12 or JAN-DEC</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">周</td>\n<td align=\"center\">1-7 or SUN-SAT</td>\n<td align=\"left\">, - * / ? L #</td>\n</tr>\n<tr>\n<td align=\"center\">年</td>\n<td align=\"center\">empty,1970-2099</td>\n<td align=\"left\">, - * /</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。<br>day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。<br>month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 </p>\n</blockquote>\n<h2 id=\"字符解释\"><a href=\"#字符解释\" class=\"headerlink\" title=\"字符解释\"></a>字符解释</h2><blockquote>\n<p>* :匹配该域的任意值，如* 用在分所在的域，表示每分钟都会触发事件。<br>?  :该字符仅用在<code>day of month</code>与<code>day of week</code>两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。<br>- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。<br>,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。<br>/  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如<code>senconds</code>的值为’5/15’ 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。<br>L  :表示最后的意思。   </p>\n<ul>\n<li>在<code>day of month</code>表示每月最后一天；</li>\n<li>在<code>day of week</code>表示周日；</li>\n<li>如果前面加上数字，表示本月最后一天，例如’6L’表示每月最后一个周五；</li>\n<li>还可以指定从最后一天到开始时间，例如，’L-2’表示每月的第2天到最后一天。</li>\n</ul>\n<p>W  :表示工作日，例如，值为’15W’，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。<br>   <em>* *’L’可以与’W’结合使用，’LW’表示当月最后一个工作日</em> **<br>#  :用来表示每个月的第几个星期几，例如，’6#3’表示某个月的第3个星期五。  </p>\n</blockquote>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th align=\"left\">表达式</th>\n<th align=\"left\">意思</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">0 0 12 * * ?</td>\n<td align=\"left\">Fire at 12pm (noon) every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * *</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ?</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ? *</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ? 2005</td>\n<td align=\"left\">Fire at 10:15am every day during the year 2005</td>\n</tr>\n<tr>\n<td align=\"left\">0 * 14 * * ?</td>\n<td align=\"left\">Fire every minute starting at 2pm and ending at 2:59pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0/5 14 * * ?</td>\n<td align=\"left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0/5 14,18 * * ?</td>\n<td align=\"left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0-5 14 * * ?</td>\n<td align=\"left\">Fire every minute starting at 2pm and ending at 2:05pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 10,44 14 ? 3 WED</td>\n<td align=\"left\">Fire at 2:10pm and at 2:44pm every Wednesday in the month of March.</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * MON-FRI</td>\n<td align=\"left\">Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 15 * ?</td>\n<td align=\"left\">Fire at 10:15am on the 15th day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 L * ?</td>\n<td align=\"left\">Fire at 10:15am on the last day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 L-2 * ?</td>\n<td align=\"left\">Fire at 10:15am on the 2nd-to-last last day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L</td>\n<td align=\"left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L</td>\n<td align=\"left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L 2002-2005</td>\n<td align=\"left\">Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6#3</td>\n<td align=\"left\">Fire at 10:15am on the third Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 0 12 1/5 * ?</td>\n<td align=\"left\">Fire at 12pm (noon) every 5 days every month, starting on the first day of the month.</td>\n</tr>\n<tr>\n<td align=\"left\">0 11 11 11 11 ?</td>\n<td align=\"left\">Fire every November 11th at 11:11am.</td>\n</tr>\n</tbody></table>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><a href=\"http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\" rel=\"noopener\">官方说明</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Cron表达式\"><a href=\"#Cron表达式\" class=\"headerlink\" title=\"Cron表达式\"></a>Cron表达式</h2><blockquote>\n<p>格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]<br>year是可选的</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">字段名</th>\n<th align=\"center\">允许的值</th>\n<th align=\"left\">允许的字符</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">秒</td>\n<td align=\"center\">0-59</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">分</td>\n<td align=\"center\">0-59</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">小时</td>\n<td align=\"center\">0-23</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">日</td>\n<td align=\"center\">1-32</td>\n<td align=\"left\">, - * / ? L W C</td>\n</tr>\n<tr>\n<td align=\"center\">月</td>\n<td align=\"center\">1-12 or JAN-DEC</td>\n<td align=\"left\">, - * /</td>\n</tr>\n<tr>\n<td align=\"center\">周</td>\n<td align=\"center\">1-7 or SUN-SAT</td>\n<td align=\"left\">, - * / ? L #</td>\n</tr>\n<tr>\n<td align=\"center\">年</td>\n<td align=\"center\">empty,1970-2099</td>\n<td align=\"left\">, - * /</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。<br>day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。<br>month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 </p>\n</blockquote>\n<h2 id=\"字符解释\"><a href=\"#字符解释\" class=\"headerlink\" title=\"字符解释\"></a>字符解释</h2><blockquote>\n<p>* :匹配该域的任意值，如* 用在分所在的域，表示每分钟都会触发事件。<br>?  :该字符仅用在<code>day of month</code>与<code>day of week</code>两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。<br>- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。<br>,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。<br>/  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如<code>senconds</code>的值为’5/15’ 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。<br>L  :表示最后的意思。   </p>\n<ul>\n<li>在<code>day of month</code>表示每月最后一天；</li>\n<li>在<code>day of week</code>表示周日；</li>\n<li>如果前面加上数字，表示本月最后一天，例如’6L’表示每月最后一个周五；</li>\n<li>还可以指定从最后一天到开始时间，例如，’L-2’表示每月的第2天到最后一天。</li>\n</ul>\n<p>W  :表示工作日，例如，值为’15W’，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。<br>   <em>* *’L’可以与’W’结合使用，’LW’表示当月最后一个工作日</em> **<br>#  :用来表示每个月的第几个星期几，例如，’6#3’表示某个月的第3个星期五。  </p>\n</blockquote>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th align=\"left\">表达式</th>\n<th align=\"left\">意思</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">0 0 12 * * ?</td>\n<td align=\"left\">Fire at 12pm (noon) every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * *</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ?</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ? *</td>\n<td align=\"left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 * * ? 2005</td>\n<td align=\"left\">Fire at 10:15am every day during the year 2005</td>\n</tr>\n<tr>\n<td align=\"left\">0 * 14 * * ?</td>\n<td align=\"left\">Fire every minute starting at 2pm and ending at 2:59pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0/5 14 * * ?</td>\n<td align=\"left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0/5 14,18 * * ?</td>\n<td align=\"left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 0-5 14 * * ?</td>\n<td align=\"left\">Fire every minute starting at 2pm and ending at 2:05pm, every day</td>\n</tr>\n<tr>\n<td align=\"left\">0 10,44 14 ? 3 WED</td>\n<td align=\"left\">Fire at 2:10pm and at 2:44pm every Wednesday in the month of March.</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * MON-FRI</td>\n<td align=\"left\">Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 15 * ?</td>\n<td align=\"left\">Fire at 10:15am on the 15th day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 L * ?</td>\n<td align=\"left\">Fire at 10:15am on the last day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 L-2 * ?</td>\n<td align=\"left\">Fire at 10:15am on the 2nd-to-last last day of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L</td>\n<td align=\"left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L</td>\n<td align=\"left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6L 2002-2005</td>\n<td align=\"left\">Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005</td>\n</tr>\n<tr>\n<td align=\"left\">0 15 10 ? * 6#3</td>\n<td align=\"left\">Fire at 10:15am on the third Friday of every month</td>\n</tr>\n<tr>\n<td align=\"left\">0 0 12 1/5 * ?</td>\n<td align=\"left\">Fire at 12pm (noon) every 5 days every month, starting on the first day of the month.</td>\n</tr>\n<tr>\n<td align=\"left\">0 11 11 11 11 ?</td>\n<td align=\"left\">Fire every November 11th at 11:11am.</td>\n</tr>\n</tbody></table>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><a href=\"http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\" rel=\"noopener\">官方说明</a></p>\n</blockquote>\n"},{"title":"常用的正则表达式","date":"2017-02-26T07:28:46.000Z","_content":"### 匹配HTML标签\n```javascript\n<\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:\".*?\"|'.*?'|[\\\\^'\">\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?>\n```\n\n### 抽取注释\n```javascript\n<!--(.*?)-->\n```\n### 查找 CSS 属性\n```javascript\n^\\\\s*[a-zA-Z\\\\-]+\\\\s*[:]{1}\\\\s[a-zA-Z0-9\\\\s.#]+[;]{1}\n```\n### 提取网页中所有图片信息\n```javascript\n\\\\< *[img][^\\\\\\\\>]*[src] *= *[\\\\\"\\\\']{0,1}([^\\\\\"\\\\'\\\\ >]*)\n```\n### 提取 html 中的超链接\n```javascript\n(<a\\\\s*(?!.*\\\\brel=)[^>]*)(href=\"https?:\\\\/\\\\/)((?!(?:(?:www\\\\.)?'.implode('|(?:www\\\\.)?', $follow_list).'))[^\"]+)\"((?!.*\\\\brel=)[^>]*)(?:[^>]*)>\n```\n### 抽取网页中的颜色代码\n```javascript\n^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\n```\n### 验证 windows 下文件路径和扩展名\n```javascript\n^([a-zA-Z]\\\\:|\\\\\\\\)\\\\\\\\([^\\\\\\\\]+\\\\\\\\)*[^\\\\/:*?\"<>|]+\\\\.txt(l)?$\n```\n### 提取 URL 链接\n```javascript\n^(f|ht){1}(tp|tps):\\\\/\\\\/([\\\\w-]+\\\\.)+[\\\\w-]+(\\\\/[\\\\w- ./?%&=]*)?\n```\n### 校验IP地址\n```javascript\n// ip-v4\n\\\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\b\n// ip-v6\n(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\n```\n### 判断 IE 的版本\n```javascript\n^.*MSIE [5-8](?:\\\\.[0-9]+)?(?!.*Trident\\\\/[5-9]\\\\.0).*$\n```\n### 校验手机号\n```javascript\n^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\\\d{8}$\n```\n### 校验金额\n```javascript\n^[0-9]+(.[0-9]{2})?$\n```\n\n### 校验身份证号码\n```javascript\n// 15位\n^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$\n// 18位\n^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}([0-9]|X)$\n```\n### 校验日期\n```javascript\n^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$\n```\n### 校验 mail地址\n```javascript\n[\\\\w!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[\\\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[\\\\w](?:[\\\\w-]*[\\\\w])?\n```\n### 由数字、26 个英文字母或下划线组成的字符串\n```javascript\n^\\\\w+$\n```\n### 校验中文\n```javascript\n^[\\\\u4e00-\\\\u9fa5]{0,}$\n```\n","source":"_posts/Regular-常用的正则表达式.md","raw":"---\ntitle: 常用的正则表达式\ndate: 2017-02-26 15:28:46\ntags: [Regular]\ncategories: [Regular]\n---\n### 匹配HTML标签\n```javascript\n<\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:\".*?\"|'.*?'|[\\\\^'\">\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?>\n```\n\n### 抽取注释\n```javascript\n<!--(.*?)-->\n```\n### 查找 CSS 属性\n```javascript\n^\\\\s*[a-zA-Z\\\\-]+\\\\s*[:]{1}\\\\s[a-zA-Z0-9\\\\s.#]+[;]{1}\n```\n### 提取网页中所有图片信息\n```javascript\n\\\\< *[img][^\\\\\\\\>]*[src] *= *[\\\\\"\\\\']{0,1}([^\\\\\"\\\\'\\\\ >]*)\n```\n### 提取 html 中的超链接\n```javascript\n(<a\\\\s*(?!.*\\\\brel=)[^>]*)(href=\"https?:\\\\/\\\\/)((?!(?:(?:www\\\\.)?'.implode('|(?:www\\\\.)?', $follow_list).'))[^\"]+)\"((?!.*\\\\brel=)[^>]*)(?:[^>]*)>\n```\n### 抽取网页中的颜色代码\n```javascript\n^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\n```\n### 验证 windows 下文件路径和扩展名\n```javascript\n^([a-zA-Z]\\\\:|\\\\\\\\)\\\\\\\\([^\\\\\\\\]+\\\\\\\\)*[^\\\\/:*?\"<>|]+\\\\.txt(l)?$\n```\n### 提取 URL 链接\n```javascript\n^(f|ht){1}(tp|tps):\\\\/\\\\/([\\\\w-]+\\\\.)+[\\\\w-]+(\\\\/[\\\\w- ./?%&=]*)?\n```\n### 校验IP地址\n```javascript\n// ip-v4\n\\\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\b\n// ip-v6\n(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\n```\n### 判断 IE 的版本\n```javascript\n^.*MSIE [5-8](?:\\\\.[0-9]+)?(?!.*Trident\\\\/[5-9]\\\\.0).*$\n```\n### 校验手机号\n```javascript\n^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\\\d{8}$\n```\n### 校验金额\n```javascript\n^[0-9]+(.[0-9]{2})?$\n```\n\n### 校验身份证号码\n```javascript\n// 15位\n^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$\n// 18位\n^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}([0-9]|X)$\n```\n### 校验日期\n```javascript\n^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$\n```\n### 校验 mail地址\n```javascript\n[\\\\w!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[\\\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[\\\\w](?:[\\\\w-]*[\\\\w])?\n```\n### 由数字、26 个英文字母或下划线组成的字符串\n```javascript\n^\\\\w+$\n```\n### 校验中文\n```javascript\n^[\\\\u4e00-\\\\u9fa5]{0,}$\n```\n","slug":"Regular-常用的正则表达式","published":1,"updated":"2020-02-26T14:51:35.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2bdz00131ovcl9t5sa3o","content":"<h3 id=\"匹配HTML标签\"><a href=\"#匹配HTML标签\" class=\"headerlink\" title=\"匹配HTML标签\"></a>匹配HTML标签</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:<span class=\"string\">\".*?\"</span>|<span class=\"string\">'.*?'</span>|[\\\\^<span class=\"string\">'\"&gt;\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"抽取注释\"><a href=\"#抽取注释\" class=\"headerlink\" title=\"抽取注释\"></a>抽取注释</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--(.*?)--&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"查找-CSS-属性\"><a href=\"#查找-CSS-属性\" class=\"headerlink\" title=\"查找 CSS 属性\"></a>查找 CSS 属性</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^\\\\s*[a-zA-Z\\\\-]+\\\\s*[:]&#123;1&#125;\\\\s[a-zA-Z0-9\\\\s.#]+[;]&#123;1&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取网页中所有图片信息\"><a href=\"#提取网页中所有图片信息\" class=\"headerlink\" title=\"提取网页中所有图片信息\"></a>提取网页中所有图片信息</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\\\&lt; *[img][^\\\\\\\\&gt;]*[src] *= *[\\\\<span class=\"string\">\"\\\\']&#123;0,1&#125;([^\\\\\"</span>\\\\<span class=\"string\">'\\\\ &gt;]*)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提取-html-中的超链接\"><a href=\"#提取-html-中的超链接\" class=\"headerlink\" title=\"提取 html 中的超链接\"></a>提取 html 中的超链接</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a\\\\s*(?!.*\\\\brel=)[^</span>&gt;</span>]*)(href=\"https?:\\\\/\\\\/)((?!(?:(?:www\\\\.)?'.implode('|(?:www\\\\.)?', $follow_list).'))[^\"]+)\"((?!.*\\\\brel=)[^&gt;]*)(?:[^&gt;]*)&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"抽取网页中的颜色代码\"><a href=\"#抽取网页中的颜色代码\" class=\"headerlink\" title=\"抽取网页中的颜色代码\"></a>抽取网页中的颜色代码</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^#([A-Fa-f0-9]&#123;6&#125;|[A-Fa-f0-9]&#123;3&#125;)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证-windows-下文件路径和扩展名\"><a href=\"#验证-windows-下文件路径和扩展名\" class=\"headerlink\" title=\"验证 windows 下文件路径和扩展名\"></a>验证 windows 下文件路径和扩展名</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^([a-zA-Z]\\\\:|\\\\\\\\)\\\\\\\\([^\\\\\\\\]+\\\\\\\\)*[^\\\\/:*?<span class=\"string\">\"&lt;&gt;|]+\\\\.txt(l)?$</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提取-URL-链接\"><a href=\"#提取-URL-链接\" class=\"headerlink\" title=\"提取 URL 链接\"></a>提取 URL 链接</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(f|ht)&#123;<span class=\"number\">1</span>&#125;(tp|tps):\\\\/\\\\/([\\\\w-]+\\\\.)+[\\\\w-]+(\\\\/[\\\\w- ./?%&amp;=]*)?</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验IP地址\"><a href=\"#校验IP地址\" class=\"headerlink\" title=\"校验IP地址\"></a>校验IP地址</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ip-v4</span></span><br><span class=\"line\">\\\\b(?:(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\\\.)&#123;<span class=\"number\">3</span>&#125;(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\\\b</span><br><span class=\"line\"><span class=\"comment\">// ip-v6</span></span><br><span class=\"line\">(([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">7</span>,<span class=\"number\">7</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;:|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">6</span>&#125;:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">5</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">5</span>&#125;|[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:((:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">6</span>&#125;)|:((:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;|:)|fe80:(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;%[<span class=\"number\">0</span><span class=\"number\">-9</span>a-zA-Z]&#123;<span class=\"number\">1</span>,&#125;|::(ffff(:<span class=\"number\">0</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])\\\\.)&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;(<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])\\\\.)&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;(<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"判断-IE-的版本\"><a href=\"#判断-IE-的版本\" class=\"headerlink\" title=\"判断 IE 的版本\"></a>判断 IE 的版本</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*MSIE [<span class=\"number\">5</span><span class=\"number\">-8</span>](?:\\\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]+)?(?!.*Trident\\\\/[<span class=\"number\">5</span><span class=\"number\">-9</span>]\\\\<span class=\"number\">.0</span>).*$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验手机号\"><a href=\"#校验手机号\" class=\"headerlink\" title=\"校验手机号\"></a>校验手机号</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(<span class=\"number\">13</span>[<span class=\"number\">0</span><span class=\"number\">-9</span>]|<span class=\"number\">14</span>[<span class=\"number\">5</span>|<span class=\"number\">7</span>]|<span class=\"number\">15</span>[<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>|<span class=\"number\">3</span>|<span class=\"number\">5</span>|<span class=\"number\">6</span>|<span class=\"number\">7</span>|<span class=\"number\">8</span>|<span class=\"number\">9</span>]|<span class=\"number\">18</span>[<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>|<span class=\"number\">3</span>|<span class=\"number\">5</span>|<span class=\"number\">6</span>|<span class=\"number\">7</span>|<span class=\"number\">8</span>|<span class=\"number\">9</span>])\\\\d&#123;<span class=\"number\">8</span>&#125;$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验金额\"><a href=\"#校验金额\" class=\"headerlink\" title=\"校验金额\"></a>校验金额</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[<span class=\"number\">0</span><span class=\"number\">-9</span>]+(.[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">2</span>&#125;)?$</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"校验身份证号码\"><a href=\"#校验身份证号码\" class=\"headerlink\" title=\"校验身份证号码\"></a>校验身份证号码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 15位</span></span><br><span class=\"line\">^[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">7</span>&#125;((<span class=\"number\">0</span>\\\\d)|(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]))(([<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>]\\\\d)|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-1</span>])\\\\d&#123;<span class=\"number\">3</span>&#125;$</span><br><span class=\"line\"><span class=\"comment\">// 18位</span></span><br><span class=\"line\">^[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">5</span>&#125;[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">3</span>&#125;((<span class=\"number\">0</span>\\\\d)|(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]))(([<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>]\\\\d)|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-1</span>])\\\\d&#123;<span class=\"number\">3</span>&#125;([<span class=\"number\">0</span><span class=\"number\">-9</span>]|X)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验日期\"><a href=\"#校验日期\" class=\"headerlink\" title=\"校验日期\"></a>校验日期</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(?:(?!<span class=\"number\">0000</span>)[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;-(?:(?:<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>])-(?:<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-9</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-8</span>])|(?:<span class=\"number\">0</span>[<span class=\"number\">13</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>])-(?:<span class=\"number\">29</span>|<span class=\"number\">30</span>)|(?:<span class=\"number\">0</span>[<span class=\"number\">13578</span>]|<span class=\"number\">1</span>[<span class=\"number\">02</span>])<span class=\"number\">-31</span>)|(?:[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">2</span>&#125;(?:<span class=\"number\">0</span>[<span class=\"number\">48</span>]|[<span class=\"number\">2468</span>][<span class=\"number\">048</span>]|[<span class=\"number\">13579</span>][<span class=\"number\">26</span>])|(?:<span class=\"number\">0</span>[<span class=\"number\">48</span>]|[<span class=\"number\">2468</span>][<span class=\"number\">048</span>]|[<span class=\"number\">13579</span>][<span class=\"number\">26</span>])<span class=\"number\">00</span>)<span class=\"number\">-02</span><span class=\"number\">-29</span>)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验-mail地址\"><a href=\"#校验-mail地址\" class=\"headerlink\" title=\"校验 mail地址\"></a>校验 mail地址</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[\\\\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\\\\.[\\\\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[\\\\w](?:[\\\\w-]*[\\\\w])?</span><br></pre></td></tr></table></figure>\n<h3 id=\"由数字、26-个英文字母或下划线组成的字符串\"><a href=\"#由数字、26-个英文字母或下划线组成的字符串\" class=\"headerlink\" title=\"由数字、26 个英文字母或下划线组成的字符串\"></a>由数字、26 个英文字母或下划线组成的字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^\\\\w+$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验中文\"><a href=\"#校验中文\" class=\"headerlink\" title=\"校验中文\"></a>校验中文</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[\\\\u4e00-\\\\u9fa5]&#123;<span class=\"number\">0</span>,&#125;$</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"匹配HTML标签\"><a href=\"#匹配HTML标签\" class=\"headerlink\" title=\"匹配HTML标签\"></a>匹配HTML标签</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:<span class=\"string\">\".*?\"</span>|<span class=\"string\">'.*?'</span>|[\\\\^<span class=\"string\">'\"&gt;\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"抽取注释\"><a href=\"#抽取注释\" class=\"headerlink\" title=\"抽取注释\"></a>抽取注释</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--(.*?)--&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"查找-CSS-属性\"><a href=\"#查找-CSS-属性\" class=\"headerlink\" title=\"查找 CSS 属性\"></a>查找 CSS 属性</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^\\\\s*[a-zA-Z\\\\-]+\\\\s*[:]&#123;1&#125;\\\\s[a-zA-Z0-9\\\\s.#]+[;]&#123;1&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取网页中所有图片信息\"><a href=\"#提取网页中所有图片信息\" class=\"headerlink\" title=\"提取网页中所有图片信息\"></a>提取网页中所有图片信息</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\\\&lt; *[img][^\\\\\\\\&gt;]*[src] *= *[\\\\<span class=\"string\">\"\\\\']&#123;0,1&#125;([^\\\\\"</span>\\\\<span class=\"string\">'\\\\ &gt;]*)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提取-html-中的超链接\"><a href=\"#提取-html-中的超链接\" class=\"headerlink\" title=\"提取 html 中的超链接\"></a>提取 html 中的超链接</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a\\\\s*(?!.*\\\\brel=)[^</span>&gt;</span>]*)(href=\"https?:\\\\/\\\\/)((?!(?:(?:www\\\\.)?'.implode('|(?:www\\\\.)?', $follow_list).'))[^\"]+)\"((?!.*\\\\brel=)[^&gt;]*)(?:[^&gt;]*)&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"抽取网页中的颜色代码\"><a href=\"#抽取网页中的颜色代码\" class=\"headerlink\" title=\"抽取网页中的颜色代码\"></a>抽取网页中的颜色代码</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^#([A-Fa-f0-9]&#123;6&#125;|[A-Fa-f0-9]&#123;3&#125;)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证-windows-下文件路径和扩展名\"><a href=\"#验证-windows-下文件路径和扩展名\" class=\"headerlink\" title=\"验证 windows 下文件路径和扩展名\"></a>验证 windows 下文件路径和扩展名</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^([a-zA-Z]\\\\:|\\\\\\\\)\\\\\\\\([^\\\\\\\\]+\\\\\\\\)*[^\\\\/:*?<span class=\"string\">\"&lt;&gt;|]+\\\\.txt(l)?$</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提取-URL-链接\"><a href=\"#提取-URL-链接\" class=\"headerlink\" title=\"提取 URL 链接\"></a>提取 URL 链接</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(f|ht)&#123;<span class=\"number\">1</span>&#125;(tp|tps):\\\\/\\\\/([\\\\w-]+\\\\.)+[\\\\w-]+(\\\\/[\\\\w- ./?%&amp;=]*)?</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验IP地址\"><a href=\"#校验IP地址\" class=\"headerlink\" title=\"校验IP地址\"></a>校验IP地址</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ip-v4</span></span><br><span class=\"line\">\\\\b(?:(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\\\.)&#123;<span class=\"number\">3</span>&#125;(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\\\b</span><br><span class=\"line\"><span class=\"comment\">// ip-v6</span></span><br><span class=\"line\">(([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">7</span>,<span class=\"number\">7</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;:|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">6</span>&#125;:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">5</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">5</span>&#125;|[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:((:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">6</span>&#125;)|:((:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;|:)|fe80:(:[<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;%[<span class=\"number\">0</span><span class=\"number\">-9</span>a-zA-Z]&#123;<span class=\"number\">1</span>,&#125;|::(ffff(:<span class=\"number\">0</span>&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])\\\\.)&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;(<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])|([<span class=\"number\">0</span><span class=\"number\">-9</span>a-fA-F]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])\\\\.)&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;(<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]|<span class=\"number\">1</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>])&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"判断-IE-的版本\"><a href=\"#判断-IE-的版本\" class=\"headerlink\" title=\"判断 IE 的版本\"></a>判断 IE 的版本</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*MSIE [<span class=\"number\">5</span><span class=\"number\">-8</span>](?:\\\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]+)?(?!.*Trident\\\\/[<span class=\"number\">5</span><span class=\"number\">-9</span>]\\\\<span class=\"number\">.0</span>).*$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验手机号\"><a href=\"#校验手机号\" class=\"headerlink\" title=\"校验手机号\"></a>校验手机号</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(<span class=\"number\">13</span>[<span class=\"number\">0</span><span class=\"number\">-9</span>]|<span class=\"number\">14</span>[<span class=\"number\">5</span>|<span class=\"number\">7</span>]|<span class=\"number\">15</span>[<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>|<span class=\"number\">3</span>|<span class=\"number\">5</span>|<span class=\"number\">6</span>|<span class=\"number\">7</span>|<span class=\"number\">8</span>|<span class=\"number\">9</span>]|<span class=\"number\">18</span>[<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>|<span class=\"number\">3</span>|<span class=\"number\">5</span>|<span class=\"number\">6</span>|<span class=\"number\">7</span>|<span class=\"number\">8</span>|<span class=\"number\">9</span>])\\\\d&#123;<span class=\"number\">8</span>&#125;$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验金额\"><a href=\"#校验金额\" class=\"headerlink\" title=\"校验金额\"></a>校验金额</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[<span class=\"number\">0</span><span class=\"number\">-9</span>]+(.[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">2</span>&#125;)?$</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"校验身份证号码\"><a href=\"#校验身份证号码\" class=\"headerlink\" title=\"校验身份证号码\"></a>校验身份证号码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 15位</span></span><br><span class=\"line\">^[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">7</span>&#125;((<span class=\"number\">0</span>\\\\d)|(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]))(([<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>]\\\\d)|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-1</span>])\\\\d&#123;<span class=\"number\">3</span>&#125;$</span><br><span class=\"line\"><span class=\"comment\">// 18位</span></span><br><span class=\"line\">^[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">5</span>&#125;[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\\\d&#123;<span class=\"number\">3</span>&#125;((<span class=\"number\">0</span>\\\\d)|(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]))(([<span class=\"number\">0</span>|<span class=\"number\">1</span>|<span class=\"number\">2</span>]\\\\d)|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-1</span>])\\\\d&#123;<span class=\"number\">3</span>&#125;([<span class=\"number\">0</span><span class=\"number\">-9</span>]|X)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验日期\"><a href=\"#校验日期\" class=\"headerlink\" title=\"校验日期\"></a>校验日期</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(?:(?!<span class=\"number\">0000</span>)[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;-(?:(?:<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>])-(?:<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-9</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-8</span>])|(?:<span class=\"number\">0</span>[<span class=\"number\">13</span><span class=\"number\">-9</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>])-(?:<span class=\"number\">29</span>|<span class=\"number\">30</span>)|(?:<span class=\"number\">0</span>[<span class=\"number\">13578</span>]|<span class=\"number\">1</span>[<span class=\"number\">02</span>])<span class=\"number\">-31</span>)|(?:[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">2</span>&#125;(?:<span class=\"number\">0</span>[<span class=\"number\">48</span>]|[<span class=\"number\">2468</span>][<span class=\"number\">048</span>]|[<span class=\"number\">13579</span>][<span class=\"number\">26</span>])|(?:<span class=\"number\">0</span>[<span class=\"number\">48</span>]|[<span class=\"number\">2468</span>][<span class=\"number\">048</span>]|[<span class=\"number\">13579</span>][<span class=\"number\">26</span>])<span class=\"number\">00</span>)<span class=\"number\">-02</span><span class=\"number\">-29</span>)$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验-mail地址\"><a href=\"#校验-mail地址\" class=\"headerlink\" title=\"校验 mail地址\"></a>校验 mail地址</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[\\\\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\\\\.[\\\\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[\\\\w](?:[\\\\w-]*[\\\\w])?</span><br></pre></td></tr></table></figure>\n<h3 id=\"由数字、26-个英文字母或下划线组成的字符串\"><a href=\"#由数字、26-个英文字母或下划线组成的字符串\" class=\"headerlink\" title=\"由数字、26 个英文字母或下划线组成的字符串\"></a>由数字、26 个英文字母或下划线组成的字符串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^\\\\w+$</span><br></pre></td></tr></table></figure>\n<h3 id=\"校验中文\"><a href=\"#校验中文\" class=\"headerlink\" title=\"校验中文\"></a>校验中文</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[\\\\u4e00-\\\\u9fa5]&#123;<span class=\"number\">0</span>,&#125;$</span><br></pre></td></tr></table></figure>\n"},{"title":"Sublime Text之Evernote","date":"2016-09-13T13:27:26.000Z","_content":"\n# Evernote\n\n下载了`Evernote`之后可以用Markdown编写印象笔记了。 [sublime evernote主页](https://github.com/bordaigorl/sublime-evernote)\n\n## 功能\n\n|功能|说明|commond|\n|:---|:--|:----|\n|Delete Node|删除笔记||\n|Search Note|搜索笔记||\n|Show Attachments|显示当前笔记的附件||\n|Attach current file to a note|将当前文件作为附件发送给指定笔记||\n|Insert Attachment Here|在光标处插入附件||\n|Delete Attachment|删除附件||\n|View Note in Web App|打开该笔记的网页版||\n|View Note in Evernote client|在客户端中打开该笔记||\n|Update Evernote Note|更新笔记|save_evernote_note|\n|Send to Evernote as new note|创建新笔记send_to_evernote|\n|Create New Notebook|创建新的笔记本||\n|Open Evernote Note| 打开笔记|open_evernote_note|\n|Clip to Evernote as new note|将当前选中的内容作为新的笔记创建||\n|List linked notes|显示当前笔记引用的其它笔记链接||\n|Insert link to a note|插入其它笔记的链接||\n\n## 配置\n\n访问[Developer Tokens](https://app.yinxiang.com/api/DeveloperToken.action)获取Token，打开Evernote.sublime-settings\n\n```shell\n{\n    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",\n    \"token\": \"\"\n}\n```\n\n### 添加快捷键示例\n\n```shell\n{ \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\", \"text\": \"Evernote: \"} },\n{ \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" },\n```\n\n### 个性化配置\n\n  * md_syntax：定义md语法\n  * inline_css：定义部分CSS样式\n  * code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac","source":"_posts/Sublime-Text之Evernote.md","raw":"---\ntitle: Sublime Text之Evernote\ndate: 2016-09-13 21:27:26\ntags: [sublime, markdown]\ncategories: [sublime]\n---\n\n# Evernote\n\n下载了`Evernote`之后可以用Markdown编写印象笔记了。 [sublime evernote主页](https://github.com/bordaigorl/sublime-evernote)\n\n## 功能\n\n|功能|说明|commond|\n|:---|:--|:----|\n|Delete Node|删除笔记||\n|Search Note|搜索笔记||\n|Show Attachments|显示当前笔记的附件||\n|Attach current file to a note|将当前文件作为附件发送给指定笔记||\n|Insert Attachment Here|在光标处插入附件||\n|Delete Attachment|删除附件||\n|View Note in Web App|打开该笔记的网页版||\n|View Note in Evernote client|在客户端中打开该笔记||\n|Update Evernote Note|更新笔记|save_evernote_note|\n|Send to Evernote as new note|创建新笔记send_to_evernote|\n|Create New Notebook|创建新的笔记本||\n|Open Evernote Note| 打开笔记|open_evernote_note|\n|Clip to Evernote as new note|将当前选中的内容作为新的笔记创建||\n|List linked notes|显示当前笔记引用的其它笔记链接||\n|Insert link to a note|插入其它笔记的链接||\n\n## 配置\n\n访问[Developer Tokens](https://app.yinxiang.com/api/DeveloperToken.action)获取Token，打开Evernote.sublime-settings\n\n```shell\n{\n    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",\n    \"token\": \"\"\n}\n```\n\n### 添加快捷键示例\n\n```shell\n{ \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\", \"text\": \"Evernote: \"} },\n{ \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" },\n```\n\n### 个性化配置\n\n  * md_syntax：定义md语法\n  * inline_css：定义部分CSS样式\n  * code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac","slug":"Sublime-Text之Evernote","published":1,"updated":"2016-09-13T13:34:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be000141ovcal4m879f","content":"<h1 id=\"Evernote\"><a href=\"#Evernote\" class=\"headerlink\" title=\"Evernote\"></a>Evernote</h1><p>下载了<code>Evernote</code>之后可以用Markdown编写印象笔记了。 <a href=\"https://github.com/bordaigorl/sublime-evernote\" target=\"_blank\" rel=\"noopener\">sublime evernote主页</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><table>\n<thead>\n<tr>\n<th align=\"left\">功能</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">commond</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Delete Node</td>\n<td align=\"left\">删除笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Search Note</td>\n<td align=\"left\">搜索笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Show Attachments</td>\n<td align=\"left\">显示当前笔记的附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Attach current file to a note</td>\n<td align=\"left\">将当前文件作为附件发送给指定笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Insert Attachment Here</td>\n<td align=\"left\">在光标处插入附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Delete Attachment</td>\n<td align=\"left\">删除附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">View Note in Web App</td>\n<td align=\"left\">打开该笔记的网页版</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">View Note in Evernote client</td>\n<td align=\"left\">在客户端中打开该笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Update Evernote Note</td>\n<td align=\"left\">更新笔记</td>\n<td align=\"left\">save_evernote_note</td>\n</tr>\n<tr>\n<td align=\"left\">Send to Evernote as new note</td>\n<td align=\"left\">创建新笔记send_to_evernote</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Create New Notebook</td>\n<td align=\"left\">创建新的笔记本</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Open Evernote Note</td>\n<td align=\"left\">打开笔记</td>\n<td align=\"left\">open_evernote_note</td>\n</tr>\n<tr>\n<td align=\"left\">Clip to Evernote as new note</td>\n<td align=\"left\">将当前选中的内容作为新的笔记创建</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">List linked notes</td>\n<td align=\"left\">显示当前笔记引用的其它笔记链接</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Insert link to a note</td>\n<td align=\"left\">插入其它笔记的链接</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>访问<a href=\"https://app.yinxiang.com/api/DeveloperToken.action\" target=\"_blank\" rel=\"noopener\">Developer Tokens</a>获取Token，打开Evernote.sublime-settings</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",</span><br><span class=\"line\">    \"token\": \"\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加快捷键示例\"><a href=\"#添加快捷键示例\" class=\"headerlink\" title=\"添加快捷键示例\"></a>添加快捷键示例</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": &#123;\"overlay\": \"command_palette\", \"text\": \"Evernote: \"&#125; &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"个性化配置\"><a href=\"#个性化配置\" class=\"headerlink\" title=\"个性化配置\"></a>个性化配置</h3><ul>\n<li>md_syntax：定义md语法</li>\n<li>inline_css：定义部分CSS样式</li>\n<li>code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Evernote\"><a href=\"#Evernote\" class=\"headerlink\" title=\"Evernote\"></a>Evernote</h1><p>下载了<code>Evernote</code>之后可以用Markdown编写印象笔记了。 <a href=\"https://github.com/bordaigorl/sublime-evernote\" target=\"_blank\" rel=\"noopener\">sublime evernote主页</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><table>\n<thead>\n<tr>\n<th align=\"left\">功能</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">commond</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Delete Node</td>\n<td align=\"left\">删除笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Search Note</td>\n<td align=\"left\">搜索笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Show Attachments</td>\n<td align=\"left\">显示当前笔记的附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Attach current file to a note</td>\n<td align=\"left\">将当前文件作为附件发送给指定笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Insert Attachment Here</td>\n<td align=\"left\">在光标处插入附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Delete Attachment</td>\n<td align=\"left\">删除附件</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">View Note in Web App</td>\n<td align=\"left\">打开该笔记的网页版</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">View Note in Evernote client</td>\n<td align=\"left\">在客户端中打开该笔记</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Update Evernote Note</td>\n<td align=\"left\">更新笔记</td>\n<td align=\"left\">save_evernote_note</td>\n</tr>\n<tr>\n<td align=\"left\">Send to Evernote as new note</td>\n<td align=\"left\">创建新笔记send_to_evernote</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Create New Notebook</td>\n<td align=\"left\">创建新的笔记本</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Open Evernote Note</td>\n<td align=\"left\">打开笔记</td>\n<td align=\"left\">open_evernote_note</td>\n</tr>\n<tr>\n<td align=\"left\">Clip to Evernote as new note</td>\n<td align=\"left\">将当前选中的内容作为新的笔记创建</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">List linked notes</td>\n<td align=\"left\">显示当前笔记引用的其它笔记链接</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Insert link to a note</td>\n<td align=\"left\">插入其它笔记的链接</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>访问<a href=\"https://app.yinxiang.com/api/DeveloperToken.action\" target=\"_blank\" rel=\"noopener\">Developer Tokens</a>获取Token，打开Evernote.sublime-settings</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",</span><br><span class=\"line\">    \"token\": \"\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加快捷键示例\"><a href=\"#添加快捷键示例\" class=\"headerlink\" title=\"添加快捷键示例\"></a>添加快捷键示例</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": &#123;\"overlay\": \"command_palette\", \"text\": \"Evernote: \"&#125; &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" &#125;,</span><br><span class=\"line\">&#123; \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"个性化配置\"><a href=\"#个性化配置\" class=\"headerlink\" title=\"个性化配置\"></a>个性化配置</h3><ul>\n<li>md_syntax：定义md语法</li>\n<li>inline_css：定义部分CSS样式</li>\n<li>code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac</li>\n</ul>\n"},{"title":"Sublime Text之OmniMarkupPreviewer","date":"2016-09-13T13:37:44.000Z","_content":"\n# OmniMarkupPreviewer\n## 功能概述\n\n* 实时预览，多设备同时刷新\n* 扩展语法\n* MathJax 公式\n* 文档内标题导航\n* 支持HTML、PDF格式导出\n\nOmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅[python-markdown](https://pythonhosted.org/Markdown/extensions/index.html)\n\n## 快捷键\n\n|快捷键| 说明|\n|:--|:-|\n|`option`+`command`+O|打开浏览器进行预览|\n\n## 配置\n\n| 配置| 说明|\n|:--|:--|\n|server_host|开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可|\n|server_port|访问端口号，默认即可|\n|refresh_on_modified| 是否开启实时刷新，默认即可|\n|refresh_on_modified_delay|刷新延时，单位毫秒，默认即可|\n|refresh_on_saved|保存时刷新预览，默认即可|\n|browser_command|设置预览的浏览器|\n|html_template_name|预览模版|\n|ignored_renderers|忽略标记语言的渲染器|\n|mathjax_enabled|开启LaTex|\n|renderer_options-MarkdownRenderer|渲染扩展，扩展Markdown的语法|\n\n### 渲染说明\n\n* attr_list ：开启文档内跳转\n* footnotes ：文档脚注  \n* codehilite：代码语法高亮     \n* toc ：在文章开头自动生成目录，并附带跳转链接  \n* strikeout：删除线   ~~ 删除线 ~~\n* superscript ：上标  H^2^\n* subscript：下标   H~2~  ","source":"_posts/Sublime-Text之OmniMarkupPreviewer.md","raw":"---\ntitle: Sublime Text之OmniMarkupPreviewer\ndate: 2016-09-13 21:37:44\ntags: [sublime, markdown]\ncategories: [sublime]\n---\n\n# OmniMarkupPreviewer\n## 功能概述\n\n* 实时预览，多设备同时刷新\n* 扩展语法\n* MathJax 公式\n* 文档内标题导航\n* 支持HTML、PDF格式导出\n\nOmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅[python-markdown](https://pythonhosted.org/Markdown/extensions/index.html)\n\n## 快捷键\n\n|快捷键| 说明|\n|:--|:-|\n|`option`+`command`+O|打开浏览器进行预览|\n\n## 配置\n\n| 配置| 说明|\n|:--|:--|\n|server_host|开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可|\n|server_port|访问端口号，默认即可|\n|refresh_on_modified| 是否开启实时刷新，默认即可|\n|refresh_on_modified_delay|刷新延时，单位毫秒，默认即可|\n|refresh_on_saved|保存时刷新预览，默认即可|\n|browser_command|设置预览的浏览器|\n|html_template_name|预览模版|\n|ignored_renderers|忽略标记语言的渲染器|\n|mathjax_enabled|开启LaTex|\n|renderer_options-MarkdownRenderer|渲染扩展，扩展Markdown的语法|\n\n### 渲染说明\n\n* attr_list ：开启文档内跳转\n* footnotes ：文档脚注  \n* codehilite：代码语法高亮     \n* toc ：在文章开头自动生成目录，并附带跳转链接  \n* strikeout：删除线   ~~ 删除线 ~~\n* superscript ：上标  H^2^\n* subscript：下标   H~2~  ","slug":"Sublime-Text之OmniMarkupPreviewer","published":1,"updated":"2016-09-13T13:38:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be000151ovc2966drzf","content":"<h1 id=\"OmniMarkupPreviewer\"><a href=\"#OmniMarkupPreviewer\" class=\"headerlink\" title=\"OmniMarkupPreviewer\"></a>OmniMarkupPreviewer</h1><h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><ul>\n<li>实时预览，多设备同时刷新</li>\n<li>扩展语法</li>\n<li>MathJax 公式</li>\n<li>文档内标题导航</li>\n<li>支持HTML、PDF格式导出</li>\n</ul>\n<p>OmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅<a href=\"https://pythonhosted.org/Markdown/extensions/index.html\" target=\"_blank\" rel=\"noopener\">python-markdown</a></p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>option</code>+<code>command</code>+O</td>\n<td align=\"left\">打开浏览器进行预览</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><table>\n<thead>\n<tr>\n<th align=\"left\">配置</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">server_host</td>\n<td align=\"left\">开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">server_port</td>\n<td align=\"left\">访问端口号，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_modified</td>\n<td align=\"left\">是否开启实时刷新，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_modified_delay</td>\n<td align=\"left\">刷新延时，单位毫秒，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_saved</td>\n<td align=\"left\">保存时刷新预览，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">browser_command</td>\n<td align=\"left\">设置预览的浏览器</td>\n</tr>\n<tr>\n<td align=\"left\">html_template_name</td>\n<td align=\"left\">预览模版</td>\n</tr>\n<tr>\n<td align=\"left\">ignored_renderers</td>\n<td align=\"left\">忽略标记语言的渲染器</td>\n</tr>\n<tr>\n<td align=\"left\">mathjax_enabled</td>\n<td align=\"left\">开启LaTex</td>\n</tr>\n<tr>\n<td align=\"left\">renderer_options-MarkdownRenderer</td>\n<td align=\"left\">渲染扩展，扩展Markdown的语法</td>\n</tr>\n</tbody></table>\n<h3 id=\"渲染说明\"><a href=\"#渲染说明\" class=\"headerlink\" title=\"渲染说明\"></a>渲染说明</h3><ul>\n<li>attr_list ：开启文档内跳转</li>\n<li>footnotes ：文档脚注  </li>\n<li>codehilite：代码语法高亮     </li>\n<li>toc ：在文章开头自动生成目录，并附带跳转链接  </li>\n<li>strikeout：删除线   <del>~ 删除线 ~</del></li>\n<li>superscript ：上标  H^2^</li>\n<li>subscript：下标   H<del>2</del>  </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"OmniMarkupPreviewer\"><a href=\"#OmniMarkupPreviewer\" class=\"headerlink\" title=\"OmniMarkupPreviewer\"></a>OmniMarkupPreviewer</h1><h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><ul>\n<li>实时预览，多设备同时刷新</li>\n<li>扩展语法</li>\n<li>MathJax 公式</li>\n<li>文档内标题导航</li>\n<li>支持HTML、PDF格式导出</li>\n</ul>\n<p>OmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅<a href=\"https://pythonhosted.org/Markdown/extensions/index.html\" target=\"_blank\" rel=\"noopener\">python-markdown</a></p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>option</code>+<code>command</code>+O</td>\n<td align=\"left\">打开浏览器进行预览</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><table>\n<thead>\n<tr>\n<th align=\"left\">配置</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">server_host</td>\n<td align=\"left\">开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">server_port</td>\n<td align=\"left\">访问端口号，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_modified</td>\n<td align=\"left\">是否开启实时刷新，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_modified_delay</td>\n<td align=\"left\">刷新延时，单位毫秒，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_on_saved</td>\n<td align=\"left\">保存时刷新预览，默认即可</td>\n</tr>\n<tr>\n<td align=\"left\">browser_command</td>\n<td align=\"left\">设置预览的浏览器</td>\n</tr>\n<tr>\n<td align=\"left\">html_template_name</td>\n<td align=\"left\">预览模版</td>\n</tr>\n<tr>\n<td align=\"left\">ignored_renderers</td>\n<td align=\"left\">忽略标记语言的渲染器</td>\n</tr>\n<tr>\n<td align=\"left\">mathjax_enabled</td>\n<td align=\"left\">开启LaTex</td>\n</tr>\n<tr>\n<td align=\"left\">renderer_options-MarkdownRenderer</td>\n<td align=\"left\">渲染扩展，扩展Markdown的语法</td>\n</tr>\n</tbody></table>\n<h3 id=\"渲染说明\"><a href=\"#渲染说明\" class=\"headerlink\" title=\"渲染说明\"></a>渲染说明</h3><ul>\n<li>attr_list ：开启文档内跳转</li>\n<li>footnotes ：文档脚注  </li>\n<li>codehilite：代码语法高亮     </li>\n<li>toc ：在文章开头自动生成目录，并附带跳转链接  </li>\n<li>strikeout：删除线   <del>~ 删除线 ~</del></li>\n<li>superscript ：上标  H^2^</li>\n<li>subscript：下标   H<del>2</del>  </li>\n</ul>\n"},{"title":"XML Schema 简要 01","date":"2016-12-16T14:41:28.000Z","_content":"## 前言\nXML Schema 语言即XML Schema Definition(XSD)，是基于XML格式，用于描述XML结构的文档，也是DTD的替代者。    \n\n## XML Schema的作用\n* 定义可出现在文档中的元素\n* 定义可出现在文档中的属性\n* 定义哪个元素是子元素 \n* 定义子元素的次序\n* 定义子元素的数目 \n* 定义元素是否为空，或者是否可包含文本\n* 定义元素和属性的数据类型\n* 定义元素和属性的默认值以及固定值 \n\n## XML Schema 引用\n### schema 元素\n`<schema>`元素是每一个XML Schema的根元素。    \n```xml\n<?xml version=\"1.0\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\ntargetNamespace=\"http://www.w3school.com.cn\"\nxmlns=\"http://www.w3school.com.cn\"\nelementFormDefault=\"qualified\">\n</xs:schema>\n```\n```xml\nxmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n```\n显示`schema`中用到的元素和 数据类型来自命名空间`http://www.w3.org/2001/XMLSchema`。同时它还规定了来自该命名空间的元素和数据类型应该使用前缀`xs`\n\n```xml\ntargetNamespace=\"http://www.w3school.com.cn\" \n```\n显示被此`schema`定义的元素来自命名空间`http://www.w3school.com.cn`。    \n\n```xml\nxmlns=\"http://www.w3school.com.cn\" \n```\n指出默认的命名空间是`http://www.w3school.com.cn`\n\n```xml\nelementFormDefault=\"qualified\" \n```\n指出任何XML实例文档所使用的且在此schema中声明过的元素必须被命名空间限定。    \n\n### 引用XSD \n\n```xml\n<?xml version=\"1.0\"?>\n<note xmlns=\"http://www.w3school.com.cn\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://www.w3school.com.cn/note.xsd\">\n\n<to>George</to>\n<from>John</from>\n<heading>Reminder</heading>\n<body>Don't forget the meeting!</body>\n</note>\n```\n```xml\nxmlns=\"http://www.w3school.com.cn\" \n```\n规定了默认命名空间的声明。此声明会告知schema验证器，在此XML文档中使用的所有元素都被声明于`http://www.w3school.com.cn`这个命名空间。 一旦您拥有了可用的 XML Schema 实例命名空间： \n```xml\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n```\n您就可以使用 schemaLocation 属性了。此属性有两个值。第一个值是需要使用的命名空间。第二个值是供命名空间使用的 XML schema 的位置：\n\n","source":"_posts/Web-XML-Schema-01-简要.md","raw":"---\ntitle: XML Schema 简要 01\ndate: 2016-12-16 22:41:28\ntags: [XML,Web,note]\ncategories: [XML]\n---\n## 前言\nXML Schema 语言即XML Schema Definition(XSD)，是基于XML格式，用于描述XML结构的文档，也是DTD的替代者。    \n\n## XML Schema的作用\n* 定义可出现在文档中的元素\n* 定义可出现在文档中的属性\n* 定义哪个元素是子元素 \n* 定义子元素的次序\n* 定义子元素的数目 \n* 定义元素是否为空，或者是否可包含文本\n* 定义元素和属性的数据类型\n* 定义元素和属性的默认值以及固定值 \n\n## XML Schema 引用\n### schema 元素\n`<schema>`元素是每一个XML Schema的根元素。    \n```xml\n<?xml version=\"1.0\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\ntargetNamespace=\"http://www.w3school.com.cn\"\nxmlns=\"http://www.w3school.com.cn\"\nelementFormDefault=\"qualified\">\n</xs:schema>\n```\n```xml\nxmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n```\n显示`schema`中用到的元素和 数据类型来自命名空间`http://www.w3.org/2001/XMLSchema`。同时它还规定了来自该命名空间的元素和数据类型应该使用前缀`xs`\n\n```xml\ntargetNamespace=\"http://www.w3school.com.cn\" \n```\n显示被此`schema`定义的元素来自命名空间`http://www.w3school.com.cn`。    \n\n```xml\nxmlns=\"http://www.w3school.com.cn\" \n```\n指出默认的命名空间是`http://www.w3school.com.cn`\n\n```xml\nelementFormDefault=\"qualified\" \n```\n指出任何XML实例文档所使用的且在此schema中声明过的元素必须被命名空间限定。    \n\n### 引用XSD \n\n```xml\n<?xml version=\"1.0\"?>\n<note xmlns=\"http://www.w3school.com.cn\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://www.w3school.com.cn/note.xsd\">\n\n<to>George</to>\n<from>John</from>\n<heading>Reminder</heading>\n<body>Don't forget the meeting!</body>\n</note>\n```\n```xml\nxmlns=\"http://www.w3school.com.cn\" \n```\n规定了默认命名空间的声明。此声明会告知schema验证器，在此XML文档中使用的所有元素都被声明于`http://www.w3school.com.cn`这个命名空间。 一旦您拥有了可用的 XML Schema 实例命名空间： \n```xml\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n```\n您就可以使用 schemaLocation 属性了。此属性有两个值。第一个值是需要使用的命名空间。第二个值是供命名空间使用的 XML schema 的位置：\n\n","slug":"Web-XML-Schema-01-简要","published":1,"updated":"2020-02-26T14:51:35.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be100161ovcij2kfojv","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>XML Schema 语言即XML Schema Definition(XSD)，是基于XML格式，用于描述XML结构的文档，也是DTD的替代者。    </p>\n<h2 id=\"XML-Schema的作用\"><a href=\"#XML-Schema的作用\" class=\"headerlink\" title=\"XML Schema的作用\"></a>XML Schema的作用</h2><ul>\n<li>定义可出现在文档中的元素</li>\n<li>定义可出现在文档中的属性</li>\n<li>定义哪个元素是子元素 </li>\n<li>定义子元素的次序</li>\n<li>定义子元素的数目 </li>\n<li>定义元素是否为空，或者是否可包含文本</li>\n<li>定义元素和属性的数据类型</li>\n<li>定义元素和属性的默认值以及固定值 </li>\n</ul>\n<h2 id=\"XML-Schema-引用\"><a href=\"#XML-Schema-引用\" class=\"headerlink\" title=\"XML Schema 引用\"></a>XML Schema 引用</h2><h3 id=\"schema-元素\"><a href=\"#schema-元素\" class=\"headerlink\" title=\"schema 元素\"></a>schema 元素</h3><p><code>&lt;schema&gt;</code>元素是每一个XML Schema的根元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:schema</span> <span class=\"attr\">xmlns:xs</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetNamespace</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">elementFormDefault</span>=<span class=\"string\">\"qualified\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"</span><br></pre></td></tr></table></figure>\n<p>显示<code>schema</code>中用到的元素和 数据类型来自命名空间<code>http://www.w3.org/2001/XMLSchema</code>。同时它还规定了来自该命名空间的元素和数据类型应该使用前缀<code>xs</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targetNamespace=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>显示被此<code>schema</code>定义的元素来自命名空间<code>http://www.w3school.com.cn</code>。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>指出默认的命名空间是<code>http://www.w3school.com.cn</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elementFormDefault=\"qualified\"</span><br></pre></td></tr></table></figure>\n<p>指出任何XML实例文档所使用的且在此schema中声明过的元素必须被命名空间限定。    </p>\n<h3 id=\"引用XSD\"><a href=\"#引用XSD\" class=\"headerlink\" title=\"引用XSD\"></a>引用XSD</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.w3school.com.cn/note.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>George<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don't forget the meeting!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>规定了默认命名空间的声明。此声明会告知schema验证器，在此XML文档中使用的所有元素都被声明于<code>http://www.w3school.com.cn</code>这个命名空间。 一旦您拥有了可用的 XML Schema 实例命名空间： </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</span><br></pre></td></tr></table></figure>\n<p>您就可以使用 schemaLocation 属性了。此属性有两个值。第一个值是需要使用的命名空间。第二个值是供命名空间使用的 XML schema 的位置：</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>XML Schema 语言即XML Schema Definition(XSD)，是基于XML格式，用于描述XML结构的文档，也是DTD的替代者。    </p>\n<h2 id=\"XML-Schema的作用\"><a href=\"#XML-Schema的作用\" class=\"headerlink\" title=\"XML Schema的作用\"></a>XML Schema的作用</h2><ul>\n<li>定义可出现在文档中的元素</li>\n<li>定义可出现在文档中的属性</li>\n<li>定义哪个元素是子元素 </li>\n<li>定义子元素的次序</li>\n<li>定义子元素的数目 </li>\n<li>定义元素是否为空，或者是否可包含文本</li>\n<li>定义元素和属性的数据类型</li>\n<li>定义元素和属性的默认值以及固定值 </li>\n</ul>\n<h2 id=\"XML-Schema-引用\"><a href=\"#XML-Schema-引用\" class=\"headerlink\" title=\"XML Schema 引用\"></a>XML Schema 引用</h2><h3 id=\"schema-元素\"><a href=\"#schema-元素\" class=\"headerlink\" title=\"schema 元素\"></a>schema 元素</h3><p><code>&lt;schema&gt;</code>元素是每一个XML Schema的根元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:schema</span> <span class=\"attr\">xmlns:xs</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetNamespace</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">elementFormDefault</span>=<span class=\"string\">\"qualified\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"</span><br></pre></td></tr></table></figure>\n<p>显示<code>schema</code>中用到的元素和 数据类型来自命名空间<code>http://www.w3.org/2001/XMLSchema</code>。同时它还规定了来自该命名空间的元素和数据类型应该使用前缀<code>xs</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targetNamespace=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>显示被此<code>schema</code>定义的元素来自命名空间<code>http://www.w3school.com.cn</code>。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>指出默认的命名空间是<code>http://www.w3school.com.cn</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elementFormDefault=\"qualified\"</span><br></pre></td></tr></table></figure>\n<p>指出任何XML实例文档所使用的且在此schema中声明过的元素必须被命名空间限定。    </p>\n<h3 id=\"引用XSD\"><a href=\"#引用XSD\" class=\"headerlink\" title=\"引用XSD\"></a>引用XSD</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.w3school.com.cn/note.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>George<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don't forget the meeting!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns=\"http://www.w3school.com.cn\"</span><br></pre></td></tr></table></figure>\n<p>规定了默认命名空间的声明。此声明会告知schema验证器，在此XML文档中使用的所有元素都被声明于<code>http://www.w3school.com.cn</code>这个命名空间。 一旦您拥有了可用的 XML Schema 实例命名空间： </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</span><br></pre></td></tr></table></figure>\n<p>您就可以使用 schemaLocation 属性了。此属性有两个值。第一个值是需要使用的命名空间。第二个值是供命名空间使用的 XML schema 的位置：</p>\n"},{"title":"XML Schema 限定 02","date":"2016-12-17T06:34:55.000Z","_content":"## 限定\n限定用于限制元素和属性可接受的值，对元素的限定被称为facet。    \n关于限定的详细列子，请参考该链接[XSD 限定 / Facets](http://www.w3school.com.cn/schema/schema_facets.asp)    \n\n### 限定定义  \n```xml\n<xs:element name=\"age\">\n<xs:simpleType>\n  <xs:restriction base=\"xs:integer\">\n    <xs:minInclusive value=\"0\"/>\n    <xs:maxInclusive value=\"120\"/>\n  </xs:restriction>\n</xs:simpleType>\n</xs:element>   \n```\n上面的列子定义了`age`元素的值，不能低于0或者高于120.下面的列子具有同样的效果，只是类型`ageType`可被其他元素使用。 \n\n```xml\n<xs:element name=\"age\" type=\"ageType\">\n<xs:simpleType name=\"ageType\">\n  <xs:restriction base=\"xs:integer\">\n    <xs:minInclusive value=\"0\"/>\n    <xs:maxInclusive value=\"120\"/>\n  </xs:restriction>\n</xs:simpleType>\n```\n\n### 枚举约束\n将XML元素的内容限制为一组可接受的值。    \n\n```xml\n<xs:simpleType name=\"carType\">\n  <xs:restriction base=\"xs:string\">\n    <xs:enumeration value=\"Audi\"/>\n    <xs:enumeration value=\"Golf\"/>\n    <xs:enumeration value=\"BMW\"/>\n  </xs:restriction>\n</xs:simpleType>\n```\n### 数据类型限定\n|限定|描述|取值|\n|:--|:--|:--|\n|enumeration   | 定义可接受值的一个列表||\n|fractionDigits  |定义所允许的最大的小数位数。必须大于等于 0。||\n|length  |定义所允许的字符或者列表项目的精确数目。必须大于或等于 0。||\n|maxExclusive   | 定义数值的上限。所允许的值必须小于此值。||\n|maxInclusive  |  定义数值的上限。所允许的值必须小于或等于此值。||\n|maxLength  | 定义所允许的字符或者列表项目的最大数目。必须大于或等于 0。||\n|minExclusive  |  定义数值的下限。所允许的值必需大于此值。||\n|minInclusive  |  定义数值的下限。所允许的值必需大于或等于此值。||\n|minLength  | 定义所允许的字符或者列表项目的最小数目。必须大于或等于 0。||\n|pattern |定义可接受的字符的精确序列。||\n|totalDigits |定义所允许的阿拉伯数字的精确位数。必须大于 0。||\n|whiteSpace | 定义空白字符（换行、回车、空格以及制表符）的处理方式。||\n\n> whiteSpace的取值：  \n> \n> * collapse:移除所有空白字符（换行、回车、空格以及制表符会被替换为空格，开头和结尾的空格会被移除，而多个连续的空格会被缩减为一个单一的空格)\n> * replace:除所有空白字符（换行、回车、空格以及制表符)\n> * preserve:不会移除任何空白字符\n","source":"_posts/Web-XML-Schema-02-限定.md","raw":"---\ntitle: XML Schema 限定 02\ndate: 2016-12-17 14:34:55\ntags: [XML,Web,note]\ncategories: [XML]\n---\n## 限定\n限定用于限制元素和属性可接受的值，对元素的限定被称为facet。    \n关于限定的详细列子，请参考该链接[XSD 限定 / Facets](http://www.w3school.com.cn/schema/schema_facets.asp)    \n\n### 限定定义  \n```xml\n<xs:element name=\"age\">\n<xs:simpleType>\n  <xs:restriction base=\"xs:integer\">\n    <xs:minInclusive value=\"0\"/>\n    <xs:maxInclusive value=\"120\"/>\n  </xs:restriction>\n</xs:simpleType>\n</xs:element>   \n```\n上面的列子定义了`age`元素的值，不能低于0或者高于120.下面的列子具有同样的效果，只是类型`ageType`可被其他元素使用。 \n\n```xml\n<xs:element name=\"age\" type=\"ageType\">\n<xs:simpleType name=\"ageType\">\n  <xs:restriction base=\"xs:integer\">\n    <xs:minInclusive value=\"0\"/>\n    <xs:maxInclusive value=\"120\"/>\n  </xs:restriction>\n</xs:simpleType>\n```\n\n### 枚举约束\n将XML元素的内容限制为一组可接受的值。    \n\n```xml\n<xs:simpleType name=\"carType\">\n  <xs:restriction base=\"xs:string\">\n    <xs:enumeration value=\"Audi\"/>\n    <xs:enumeration value=\"Golf\"/>\n    <xs:enumeration value=\"BMW\"/>\n  </xs:restriction>\n</xs:simpleType>\n```\n### 数据类型限定\n|限定|描述|取值|\n|:--|:--|:--|\n|enumeration   | 定义可接受值的一个列表||\n|fractionDigits  |定义所允许的最大的小数位数。必须大于等于 0。||\n|length  |定义所允许的字符或者列表项目的精确数目。必须大于或等于 0。||\n|maxExclusive   | 定义数值的上限。所允许的值必须小于此值。||\n|maxInclusive  |  定义数值的上限。所允许的值必须小于或等于此值。||\n|maxLength  | 定义所允许的字符或者列表项目的最大数目。必须大于或等于 0。||\n|minExclusive  |  定义数值的下限。所允许的值必需大于此值。||\n|minInclusive  |  定义数值的下限。所允许的值必需大于或等于此值。||\n|minLength  | 定义所允许的字符或者列表项目的最小数目。必须大于或等于 0。||\n|pattern |定义可接受的字符的精确序列。||\n|totalDigits |定义所允许的阿拉伯数字的精确位数。必须大于 0。||\n|whiteSpace | 定义空白字符（换行、回车、空格以及制表符）的处理方式。||\n\n> whiteSpace的取值：  \n> \n> * collapse:移除所有空白字符（换行、回车、空格以及制表符会被替换为空格，开头和结尾的空格会被移除，而多个连续的空格会被缩减为一个单一的空格)\n> * replace:除所有空白字符（换行、回车、空格以及制表符)\n> * preserve:不会移除任何空白字符\n","slug":"Web-XML-Schema-02-限定","published":1,"updated":"2020-02-26T14:51:35.553Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be200171ovchkops1n1","content":"<h2 id=\"限定\"><a href=\"#限定\" class=\"headerlink\" title=\"限定\"></a>限定</h2><p>限定用于限制元素和属性可接受的值，对元素的限定被称为facet。<br>关于限定的详细列子，请参考该链接<a href=\"http://www.w3school.com.cn/schema/schema_facets.asp\" target=\"_blank\" rel=\"noopener\">XSD 限定 / Facets</a>    </p>\n<h3 id=\"限定定义\"><a href=\"#限定定义\" class=\"headerlink\" title=\"限定定义\"></a>限定定义</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:minInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:maxInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"120\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的列子定义了<code>age</code>元素的值，不能低于0或者高于120.下面的列子具有同样的效果，只是类型<code>ageType</code>可被其他元素使用。 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"ageType\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ageType\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:minInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:maxInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"120\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"枚举约束\"><a href=\"#枚举约束\" class=\"headerlink\" title=\"枚举约束\"></a>枚举约束</h3><p>将XML元素的内容限制为一组可接受的值。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"carType\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:string\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Audi\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Golf\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"BMW\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数据类型限定\"><a href=\"#数据类型限定\" class=\"headerlink\" title=\"数据类型限定\"></a>数据类型限定</h3><table>\n<thead>\n<tr>\n<th align=\"left\">限定</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">enumeration</td>\n<td align=\"left\">定义可接受值的一个列表</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">fractionDigits</td>\n<td align=\"left\">定义所允许的最大的小数位数。必须大于等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">length</td>\n<td align=\"left\">定义所允许的字符或者列表项目的精确数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxExclusive</td>\n<td align=\"left\">定义数值的上限。所允许的值必须小于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxInclusive</td>\n<td align=\"left\">定义数值的上限。所允许的值必须小于或等于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxLength</td>\n<td align=\"left\">定义所允许的字符或者列表项目的最大数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minExclusive</td>\n<td align=\"left\">定义数值的下限。所允许的值必需大于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minInclusive</td>\n<td align=\"left\">定义数值的下限。所允许的值必需大于或等于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minLength</td>\n<td align=\"left\">定义所允许的字符或者列表项目的最小数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">pattern</td>\n<td align=\"left\">定义可接受的字符的精确序列。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">totalDigits</td>\n<td align=\"left\">定义所允许的阿拉伯数字的精确位数。必须大于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">whiteSpace</td>\n<td align=\"left\">定义空白字符（换行、回车、空格以及制表符）的处理方式。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>whiteSpace的取值：  </p>\n<ul>\n<li>collapse:移除所有空白字符（换行、回车、空格以及制表符会被替换为空格，开头和结尾的空格会被移除，而多个连续的空格会被缩减为一个单一的空格)</li>\n<li>replace:除所有空白字符（换行、回车、空格以及制表符)</li>\n<li>preserve:不会移除任何空白字符</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"限定\"><a href=\"#限定\" class=\"headerlink\" title=\"限定\"></a>限定</h2><p>限定用于限制元素和属性可接受的值，对元素的限定被称为facet。<br>关于限定的详细列子，请参考该链接<a href=\"http://www.w3school.com.cn/schema/schema_facets.asp\" target=\"_blank\" rel=\"noopener\">XSD 限定 / Facets</a>    </p>\n<h3 id=\"限定定义\"><a href=\"#限定定义\" class=\"headerlink\" title=\"限定定义\"></a>限定定义</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:minInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:maxInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"120\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的列子定义了<code>age</code>元素的值，不能低于0或者高于120.下面的列子具有同样的效果，只是类型<code>ageType</code>可被其他元素使用。 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"ageType\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ageType\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:minInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:maxInclusive</span> <span class=\"attr\">value</span>=<span class=\"string\">\"120\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"枚举约束\"><a href=\"#枚举约束\" class=\"headerlink\" title=\"枚举约束\"></a>枚举约束</h3><p>将XML元素的内容限制为一组可接受的值。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:simpleType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"carType\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:string\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Audi\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Golf\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:enumeration</span> <span class=\"attr\">value</span>=<span class=\"string\">\"BMW\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:simpleType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数据类型限定\"><a href=\"#数据类型限定\" class=\"headerlink\" title=\"数据类型限定\"></a>数据类型限定</h3><table>\n<thead>\n<tr>\n<th align=\"left\">限定</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">取值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">enumeration</td>\n<td align=\"left\">定义可接受值的一个列表</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">fractionDigits</td>\n<td align=\"left\">定义所允许的最大的小数位数。必须大于等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">length</td>\n<td align=\"left\">定义所允许的字符或者列表项目的精确数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxExclusive</td>\n<td align=\"left\">定义数值的上限。所允许的值必须小于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxInclusive</td>\n<td align=\"left\">定义数值的上限。所允许的值必须小于或等于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">maxLength</td>\n<td align=\"left\">定义所允许的字符或者列表项目的最大数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minExclusive</td>\n<td align=\"left\">定义数值的下限。所允许的值必需大于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minInclusive</td>\n<td align=\"left\">定义数值的下限。所允许的值必需大于或等于此值。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">minLength</td>\n<td align=\"left\">定义所允许的字符或者列表项目的最小数目。必须大于或等于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">pattern</td>\n<td align=\"left\">定义可接受的字符的精确序列。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">totalDigits</td>\n<td align=\"left\">定义所允许的阿拉伯数字的精确位数。必须大于 0。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">whiteSpace</td>\n<td align=\"left\">定义空白字符（换行、回车、空格以及制表符）的处理方式。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>whiteSpace的取值：  </p>\n<ul>\n<li>collapse:移除所有空白字符（换行、回车、空格以及制表符会被替换为空格，开头和结尾的空格会被移除，而多个连续的空格会被缩减为一个单一的空格)</li>\n<li>replace:除所有空白字符（换行、回车、空格以及制表符)</li>\n<li>preserve:不会移除任何空白字符</li>\n</ul>\n</blockquote>\n"},{"title":"XML Schema 简易元素及属性 03","date":"2016-12-17T06:31:52.000Z","_content":"\n## 简易元素\n简易元素是指只包含文本的元素，不包括其他元素或者属性。  \n#### 简易元素的语法\n```xml\n<xs:element name=\"xxx\" type=\"yyy\"/>\n```\n`xxx`是指元素的名称，`yyy`是指元素数据类型\n例如 ：      \n```xml\n<lastname>Smith</lastname>\n<age>28</age>\n<dateborn>1980-03-27</dateborn>\n``\n对应       \n```xml\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"age\" type=\"xs:integer\"/>\n<xs:element name=\"dateborn\" type=\"xs:date\"/> \n```\n#### 常用的数据类型\n* xs:string\n* xs:decimal\n* xs:integer\n* xs:boolean\n* xs:date\n* xs:time\n\n#### 固定值和默认值\n固定值会自动分配给元素，并且您无法规定另外一个值  \n```xml\n<xs:element name=\"color\" type=\"xs:string\" default=\"red\"/>\n<xs:element name=\"color\" type=\"xs:string\" fixed=\"red\"/>\n```\n\n## 属性\n简易元素无法拥有属性，但是属性总是作为简易类型被声明。     \n#### 声明属性\n```xml\n<xs:attribute name=\"xxx\" type=\"yyy\"/>\n```\n属性的数据类型参见简易元素的数据类型。    \n属性同样可以拥有固定值和默认值\n```xml\n<xs:attribute name=\"lang\" type=\"xs:string\" default=\"EN\"/>\n<xs:attribute name=\"lang\" type=\"xs:string\" fixed=\"EN\"/>\n```\n属性默认是可选的，如规定属性必选，请使用`use`属性：    \n```xml\n<xs:attribute name=\"lang\" type=\"xs:string\" use=\"required\"/>\n```\n","source":"_posts/Web-XML-Schema-03-简易元素及属性.md","raw":"---\ntitle: XML Schema 简易元素及属性 03\ndate: 2016-12-17 14:31:52\ntags: [XML,Web,note]\ncategories: [XML]\n---\n\n## 简易元素\n简易元素是指只包含文本的元素，不包括其他元素或者属性。  \n#### 简易元素的语法\n```xml\n<xs:element name=\"xxx\" type=\"yyy\"/>\n```\n`xxx`是指元素的名称，`yyy`是指元素数据类型\n例如 ：      \n```xml\n<lastname>Smith</lastname>\n<age>28</age>\n<dateborn>1980-03-27</dateborn>\n``\n对应       \n```xml\n<xs:element name=\"lastname\" type=\"xs:string\"/>\n<xs:element name=\"age\" type=\"xs:integer\"/>\n<xs:element name=\"dateborn\" type=\"xs:date\"/> \n```\n#### 常用的数据类型\n* xs:string\n* xs:decimal\n* xs:integer\n* xs:boolean\n* xs:date\n* xs:time\n\n#### 固定值和默认值\n固定值会自动分配给元素，并且您无法规定另外一个值  \n```xml\n<xs:element name=\"color\" type=\"xs:string\" default=\"red\"/>\n<xs:element name=\"color\" type=\"xs:string\" fixed=\"red\"/>\n```\n\n## 属性\n简易元素无法拥有属性，但是属性总是作为简易类型被声明。     \n#### 声明属性\n```xml\n<xs:attribute name=\"xxx\" type=\"yyy\"/>\n```\n属性的数据类型参见简易元素的数据类型。    \n属性同样可以拥有固定值和默认值\n```xml\n<xs:attribute name=\"lang\" type=\"xs:string\" default=\"EN\"/>\n<xs:attribute name=\"lang\" type=\"xs:string\" fixed=\"EN\"/>\n```\n属性默认是可选的，如规定属性必选，请使用`use`属性：    \n```xml\n<xs:attribute name=\"lang\" type=\"xs:string\" use=\"required\"/>\n```\n","slug":"Web-XML-Schema-03-简易元素及属性","published":1,"updated":"2020-02-26T14:51:35.553Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be300181ovcwx2snz5y","content":"<h2 id=\"简易元素\"><a href=\"#简易元素\" class=\"headerlink\" title=\"简易元素\"></a>简易元素</h2><p>简易元素是指只包含文本的元素，不包括其他元素或者属性。  </p>\n<h4 id=\"简易元素的语法\"><a href=\"#简易元素的语法\" class=\"headerlink\" title=\"简易元素的语法\"></a>简易元素的语法</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xxx\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"yyy\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>xxx</code>是指元素的名称，<code>yyy</code>是指元素数据类型<br>例如 ：      </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">lastname</span>&gt;</span>Smith<span class=\"tag\">&lt;/<span class=\"name\">lastname</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">age</span>&gt;</span>28<span class=\"tag\">&lt;/<span class=\"name\">age</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dateborn</span>&gt;</span>1980-03-27<span class=\"tag\">&lt;/<span class=\"name\">dateborn</span>&gt;</span></span><br><span class=\"line\">``</span><br><span class=\"line\">对应       </span><br><span class=\"line\">```xml</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:integer\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dateborn\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"常用的数据类型\"><a href=\"#常用的数据类型\" class=\"headerlink\" title=\"常用的数据类型\"></a>常用的数据类型</h4><ul>\n<li>xs:string</li>\n<li>xs:decimal</li>\n<li>xs:integer</li>\n<li>xs:boolean</li>\n<li>xs:date</li>\n<li>xs:time</li>\n</ul>\n<h4 id=\"固定值和默认值\"><a href=\"#固定值和默认值\" class=\"headerlink\" title=\"固定值和默认值\"></a>固定值和默认值</h4><p>固定值会自动分配给元素，并且您无法规定另外一个值  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">default</span>=<span class=\"string\">\"red\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">fixed</span>=<span class=\"string\">\"red\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><p>简易元素无法拥有属性，但是属性总是作为简易类型被声明。     </p>\n<h4 id=\"声明属性\"><a href=\"#声明属性\" class=\"headerlink\" title=\"声明属性\"></a>声明属性</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xxx\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"yyy\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性的数据类型参见简易元素的数据类型。<br>属性同样可以拥有固定值和默认值</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">default</span>=<span class=\"string\">\"EN\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">fixed</span>=<span class=\"string\">\"EN\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性默认是可选的，如规定属性必选，请使用<code>use</code>属性：    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">use</span>=<span class=\"string\">\"required\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简易元素\"><a href=\"#简易元素\" class=\"headerlink\" title=\"简易元素\"></a>简易元素</h2><p>简易元素是指只包含文本的元素，不包括其他元素或者属性。  </p>\n<h4 id=\"简易元素的语法\"><a href=\"#简易元素的语法\" class=\"headerlink\" title=\"简易元素的语法\"></a>简易元素的语法</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xxx\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"yyy\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>xxx</code>是指元素的名称，<code>yyy</code>是指元素数据类型<br>例如 ：      </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">lastname</span>&gt;</span>Smith<span class=\"tag\">&lt;/<span class=\"name\">lastname</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">age</span>&gt;</span>28<span class=\"tag\">&lt;/<span class=\"name\">age</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dateborn</span>&gt;</span>1980-03-27<span class=\"tag\">&lt;/<span class=\"name\">dateborn</span>&gt;</span></span><br><span class=\"line\">``</span><br><span class=\"line\">对应       </span><br><span class=\"line\">```xml</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:integer\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dateborn\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"常用的数据类型\"><a href=\"#常用的数据类型\" class=\"headerlink\" title=\"常用的数据类型\"></a>常用的数据类型</h4><ul>\n<li>xs:string</li>\n<li>xs:decimal</li>\n<li>xs:integer</li>\n<li>xs:boolean</li>\n<li>xs:date</li>\n<li>xs:time</li>\n</ul>\n<h4 id=\"固定值和默认值\"><a href=\"#固定值和默认值\" class=\"headerlink\" title=\"固定值和默认值\"></a>固定值和默认值</h4><p>固定值会自动分配给元素，并且您无法规定另外一个值  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">default</span>=<span class=\"string\">\"red\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">fixed</span>=<span class=\"string\">\"red\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><p>简易元素无法拥有属性，但是属性总是作为简易类型被声明。     </p>\n<h4 id=\"声明属性\"><a href=\"#声明属性\" class=\"headerlink\" title=\"声明属性\"></a>声明属性</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xxx\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"yyy\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性的数据类型参见简易元素的数据类型。<br>属性同样可以拥有固定值和默认值</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">default</span>=<span class=\"string\">\"EN\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">fixed</span>=<span class=\"string\">\"EN\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>属性默认是可选的，如规定属性必选，请使用<code>use</code>属性：    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">use</span>=<span class=\"string\">\"required\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"XML Schema 指示器 04","date":"2016-12-17T06:35:57.000Z","_content":"\n## 指示器\n通过指示器可以控制在文档中使用元素的方式。    \n### Order 指示器\nOrder 用于定义元素的顺序\n#### All\n`<all>`指示器规定子元素可以按照任意顺序出现，且每个子元素必须只能出现一次。 \n> 当使用 `<all>` 指示器时，你可以把 `<minOccurs>`设置为 0 或者 1，而只能把 `<maxOccurs>` 指示器设置为 1 \n#### Choice\n`<choice>`指示器规定可出现某个子元素或者可出现另外一个子元素（非此即彼）。 \n\n```xml\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:choice>\n      <xs:element name=\"employee\" type=\"employee\"/>\n      <xs:element name=\"member\" type=\"member\"/>\n    </xs:choice>\n  </xs:complexType>\n</xs:element>\n```\n> 如需设置子元素出现任意次数，可将 `<maxOccurs>`设置为 `unbounded`（无限次）。\n\n#### Sequence\n`<sequence>` 规定子元素必须按照特定的顺序出现。\n\n### Occurrence 指示器\nOccurrence 指示器用于定义某个元素出现的频率。    \n> 对于所有的 \"Order\" 和 \"Group\" 指示器（any、all、choice、sequence、group name 以及 group reference），其中的 maxOccurs 以及 minOccurs 的默认值均为 1。\n\n#### maxOccurs\n`<maxOccurs>` 指示器可规定某个元素可出现的最大次数。如需使某个元素的出现次数不受限制，请使用`maxOccurs=\"unbounded\"` 这个声明\n\n```xml\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"full_name\" type=\"xs:string\"/>\n      <xs:element name=\"child_name\" type=\"xs:string\" maxOccurs=\"10\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n\n#### minOccurs\n`<minOccurs>` 指示器可规定某个元素能够出现的最小次数。\n\n### Group指示器\nGroup 指示器用于定义相关的数批元素。       \n您必须在 `group` 声明内部定义一个 `all`、`choice` 或者 `sequence` 元素。\n#### 元素组\n把 group 定义完毕以后，就可以在另一个定义中引用它了。\n\n```xml\n<xs:group name=\"persongroup\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n    <xs:element name=\"birthday\" type=\"xs:date\"/>\n  </xs:sequence>\n</xs:group>\n\n<xs:element name=\"person\" type=\"personinfo\"/>\n\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:group ref=\"persongroup\"/>\n    <xs:element name=\"country\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n```\n\n#### 属性组\n已定义完毕属性组之后，就可以在另一个定义中引用它了。\n\n```xml\n<xs:attributeGroup name=\"personattrgroup\">\n  <xs:attribute name=\"firstname\" type=\"xs:string\"/>\n  <xs:attribute name=\"lastname\" type=\"xs:string\"/>\n  <xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>\n\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:attributeGroup ref=\"personattrgroup\"/>\n  </xs:complexType>\n</xs:element>\n```","source":"_posts/Web-XML-Schema-04-指示器.md","raw":"---\ntitle: XML Schema 指示器 04\ndate: 2016-12-17 14:35:57\ntags: [XML,Web,note]\ncategories: [XML]\n---\n\n## 指示器\n通过指示器可以控制在文档中使用元素的方式。    \n### Order 指示器\nOrder 用于定义元素的顺序\n#### All\n`<all>`指示器规定子元素可以按照任意顺序出现，且每个子元素必须只能出现一次。 \n> 当使用 `<all>` 指示器时，你可以把 `<minOccurs>`设置为 0 或者 1，而只能把 `<maxOccurs>` 指示器设置为 1 \n#### Choice\n`<choice>`指示器规定可出现某个子元素或者可出现另外一个子元素（非此即彼）。 \n\n```xml\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:choice>\n      <xs:element name=\"employee\" type=\"employee\"/>\n      <xs:element name=\"member\" type=\"member\"/>\n    </xs:choice>\n  </xs:complexType>\n</xs:element>\n```\n> 如需设置子元素出现任意次数，可将 `<maxOccurs>`设置为 `unbounded`（无限次）。\n\n#### Sequence\n`<sequence>` 规定子元素必须按照特定的顺序出现。\n\n### Occurrence 指示器\nOccurrence 指示器用于定义某个元素出现的频率。    \n> 对于所有的 \"Order\" 和 \"Group\" 指示器（any、all、choice、sequence、group name 以及 group reference），其中的 maxOccurs 以及 minOccurs 的默认值均为 1。\n\n#### maxOccurs\n`<maxOccurs>` 指示器可规定某个元素可出现的最大次数。如需使某个元素的出现次数不受限制，请使用`maxOccurs=\"unbounded\"` 这个声明\n\n```xml\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"full_name\" type=\"xs:string\"/>\n      <xs:element name=\"child_name\" type=\"xs:string\" maxOccurs=\"10\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n\n#### minOccurs\n`<minOccurs>` 指示器可规定某个元素能够出现的最小次数。\n\n### Group指示器\nGroup 指示器用于定义相关的数批元素。       \n您必须在 `group` 声明内部定义一个 `all`、`choice` 或者 `sequence` 元素。\n#### 元素组\n把 group 定义完毕以后，就可以在另一个定义中引用它了。\n\n```xml\n<xs:group name=\"persongroup\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n    <xs:element name=\"birthday\" type=\"xs:date\"/>\n  </xs:sequence>\n</xs:group>\n\n<xs:element name=\"person\" type=\"personinfo\"/>\n\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:group ref=\"persongroup\"/>\n    <xs:element name=\"country\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n```\n\n#### 属性组\n已定义完毕属性组之后，就可以在另一个定义中引用它了。\n\n```xml\n<xs:attributeGroup name=\"personattrgroup\">\n  <xs:attribute name=\"firstname\" type=\"xs:string\"/>\n  <xs:attribute name=\"lastname\" type=\"xs:string\"/>\n  <xs:attribute name=\"birthday\" type=\"xs:date\"/>\n</xs:attributeGroup>\n\n<xs:element name=\"person\">\n  <xs:complexType>\n    <xs:attributeGroup ref=\"personattrgroup\"/>\n  </xs:complexType>\n</xs:element>\n```","slug":"Web-XML-Schema-04-指示器","published":1,"updated":"2020-02-26T14:51:35.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be300191ovcxmb475ou","content":"<h2 id=\"指示器\"><a href=\"#指示器\" class=\"headerlink\" title=\"指示器\"></a>指示器</h2><p>通过指示器可以控制在文档中使用元素的方式。    </p>\n<h3 id=\"Order-指示器\"><a href=\"#Order-指示器\" class=\"headerlink\" title=\"Order 指示器\"></a>Order 指示器</h3><p>Order 用于定义元素的顺序</p>\n<h4 id=\"All\"><a href=\"#All\" class=\"headerlink\" title=\"All\"></a>All</h4><p><code>&lt;all&gt;</code>指示器规定子元素可以按照任意顺序出现，且每个子元素必须只能出现一次。 </p>\n<blockquote>\n<p>当使用 <code>&lt;all&gt;</code> 指示器时，你可以把 <code>&lt;minOccurs&gt;</code>设置为 0 或者 1，而只能把 <code>&lt;maxOccurs&gt;</code> 指示器设置为 1 </p>\n</blockquote>\n<h4 id=\"Choice\"><a href=\"#Choice\" class=\"headerlink\" title=\"Choice\"></a>Choice</h4><p><code>&lt;choice&gt;</code>指示器规定可出现某个子元素或者可出现另外一个子元素（非此即彼）。 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:choice</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"employee\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"member\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"member\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:choice</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如需设置子元素出现任意次数，可将 <code>&lt;maxOccurs&gt;</code>设置为 <code>unbounded</code>（无限次）。</p>\n</blockquote>\n<h4 id=\"Sequence\"><a href=\"#Sequence\" class=\"headerlink\" title=\"Sequence\"></a>Sequence</h4><p><code>&lt;sequence&gt;</code> 规定子元素必须按照特定的顺序出现。</p>\n<h3 id=\"Occurrence-指示器\"><a href=\"#Occurrence-指示器\" class=\"headerlink\" title=\"Occurrence 指示器\"></a>Occurrence 指示器</h3><p>Occurrence 指示器用于定义某个元素出现的频率。    </p>\n<blockquote>\n<p>对于所有的 “Order” 和 “Group” 指示器（any、all、choice、sequence、group name 以及 group reference），其中的 maxOccurs 以及 minOccurs 的默认值均为 1。</p>\n</blockquote>\n<h4 id=\"maxOccurs\"><a href=\"#maxOccurs\" class=\"headerlink\" title=\"maxOccurs\"></a>maxOccurs</h4><p><code>&lt;maxOccurs&gt;</code> 指示器可规定某个元素可出现的最大次数。如需使某个元素的出现次数不受限制，请使用<code>maxOccurs=&quot;unbounded&quot;</code> 这个声明</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"full_name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"child_name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">maxOccurs</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"minOccurs\"><a href=\"#minOccurs\" class=\"headerlink\" title=\"minOccurs\"></a>minOccurs</h4><p><code>&lt;minOccurs&gt;</code> 指示器可规定某个元素能够出现的最小次数。</p>\n<h3 id=\"Group指示器\"><a href=\"#Group指示器\" class=\"headerlink\" title=\"Group指示器\"></a>Group指示器</h3><p>Group 指示器用于定义相关的数批元素。<br>您必须在 <code>group</code> 声明内部定义一个 <code>all</code>、<code>choice</code> 或者 <code>sequence</code> 元素。</p>\n<h4 id=\"元素组\"><a href=\"#元素组\" class=\"headerlink\" title=\"元素组\"></a>元素组</h4><p>把 group 定义完毕以后，就可以在另一个定义中引用它了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:group</span> <span class=\"attr\">name</span>=<span class=\"string\">\"persongroup\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"birthday\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:group</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"personinfo\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:group</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"persongroup\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性组\"><a href=\"#属性组\" class=\"headerlink\" title=\"属性组\"></a>属性组</h4><p>已定义完毕属性组之后，就可以在另一个定义中引用它了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attributeGroup</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personattrgroup\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"birthday\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:attributeGroup</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:attributeGroup</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"personattrgroup\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"指示器\"><a href=\"#指示器\" class=\"headerlink\" title=\"指示器\"></a>指示器</h2><p>通过指示器可以控制在文档中使用元素的方式。    </p>\n<h3 id=\"Order-指示器\"><a href=\"#Order-指示器\" class=\"headerlink\" title=\"Order 指示器\"></a>Order 指示器</h3><p>Order 用于定义元素的顺序</p>\n<h4 id=\"All\"><a href=\"#All\" class=\"headerlink\" title=\"All\"></a>All</h4><p><code>&lt;all&gt;</code>指示器规定子元素可以按照任意顺序出现，且每个子元素必须只能出现一次。 </p>\n<blockquote>\n<p>当使用 <code>&lt;all&gt;</code> 指示器时，你可以把 <code>&lt;minOccurs&gt;</code>设置为 0 或者 1，而只能把 <code>&lt;maxOccurs&gt;</code> 指示器设置为 1 </p>\n</blockquote>\n<h4 id=\"Choice\"><a href=\"#Choice\" class=\"headerlink\" title=\"Choice\"></a>Choice</h4><p><code>&lt;choice&gt;</code>指示器规定可出现某个子元素或者可出现另外一个子元素（非此即彼）。 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:choice</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"employee\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"member\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"member\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:choice</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如需设置子元素出现任意次数，可将 <code>&lt;maxOccurs&gt;</code>设置为 <code>unbounded</code>（无限次）。</p>\n</blockquote>\n<h4 id=\"Sequence\"><a href=\"#Sequence\" class=\"headerlink\" title=\"Sequence\"></a>Sequence</h4><p><code>&lt;sequence&gt;</code> 规定子元素必须按照特定的顺序出现。</p>\n<h3 id=\"Occurrence-指示器\"><a href=\"#Occurrence-指示器\" class=\"headerlink\" title=\"Occurrence 指示器\"></a>Occurrence 指示器</h3><p>Occurrence 指示器用于定义某个元素出现的频率。    </p>\n<blockquote>\n<p>对于所有的 “Order” 和 “Group” 指示器（any、all、choice、sequence、group name 以及 group reference），其中的 maxOccurs 以及 minOccurs 的默认值均为 1。</p>\n</blockquote>\n<h4 id=\"maxOccurs\"><a href=\"#maxOccurs\" class=\"headerlink\" title=\"maxOccurs\"></a>maxOccurs</h4><p><code>&lt;maxOccurs&gt;</code> 指示器可规定某个元素可出现的最大次数。如需使某个元素的出现次数不受限制，请使用<code>maxOccurs=&quot;unbounded&quot;</code> 这个声明</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"full_name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"child_name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> <span class=\"attr\">maxOccurs</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"minOccurs\"><a href=\"#minOccurs\" class=\"headerlink\" title=\"minOccurs\"></a>minOccurs</h4><p><code>&lt;minOccurs&gt;</code> 指示器可规定某个元素能够出现的最小次数。</p>\n<h3 id=\"Group指示器\"><a href=\"#Group指示器\" class=\"headerlink\" title=\"Group指示器\"></a>Group指示器</h3><p>Group 指示器用于定义相关的数批元素。<br>您必须在 <code>group</code> 声明内部定义一个 <code>all</code>、<code>choice</code> 或者 <code>sequence</code> 元素。</p>\n<h4 id=\"元素组\"><a href=\"#元素组\" class=\"headerlink\" title=\"元素组\"></a>元素组</h4><p>把 group 定义完毕以后，就可以在另一个定义中引用它了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:group</span> <span class=\"attr\">name</span>=<span class=\"string\">\"persongroup\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"birthday\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:group</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"personinfo\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:group</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"persongroup\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性组\"><a href=\"#属性组\" class=\"headerlink\" title=\"属性组\"></a>属性组</h4><p>已定义完毕属性组之后，就可以在另一个定义中引用它了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:attributeGroup</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personattrgroup\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"birthday\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:attributeGroup</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:attributeGroup</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"personattrgroup\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"XML Schema 复合元素 05","date":"2016-12-17T06:33:09.000Z","_content":"## 复合元素\n复合元素包含其他元素及属性的XML元素。 复合元素包括：   \n* 空元素\n* 包含其他元素的元素\n* 仅包含文本的元素\n* 包含元素和文本的元素\n* 上述所有元素均可包含属性\n\n### 仅包含元素的复合元素\n复合元素声明有两种方式，第二种方式可用于其他元素。    \n\n```xml\n<xs:element name=\"employee\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"firstname\" type=\"xs:string\"/>\n      <xs:element name=\"lastname\" type=\"xs:string\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n\n```xml\n<xs:element name=\"employee\" type=\"personinfo\"/>\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n```\n还可以在已有复合元素的基础上，添加一些元素。    \n\n```xml\n<xs:element name=\"employee\" type=\"fullpersoninfo\"/>\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n<xs:complexType name=\"fullpersoninfo\">\n  <xs:complexContent>\n    <xs:extension base=\"personinfo\">\n      <xs:sequence>\n        <xs:element name=\"address\" type=\"xs:string\"/>\n        <xs:element name=\"city\" type=\"xs:string\"/>\n        <xs:element name=\"country\" type=\"xs:string\"/>\n      </xs:sequence>\n    </xs:extension>\n  </xs:complexContent>\n</xs:complexType>\n```\n`<sequence>`是指示器，这意味着子元素必须按照声明的次序出现。   \n\n### 仅包含属性的复合元素\n空的复合元素只能包含属性不能包含其他内容。   \n一个空的XML元素:   \n\n```xml\n<product prodid=\"1345\" />\n```\n声明如下：    \n\n```xml\n<xs:element name=\"product\">\n  <xs:complexType>\n    <xs:complexContent>\n      <xs:restriction base=\"xs:integer\">\n        <xs:attribute name=\"prodid\" type=\"xs:positiveInteger\"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n</xs:element>\n```\n或者更紧凑的写法\n\n```xml\n<xs:element name=\"product\">\n  <xs:complexType>\n    <xs:attribute name=\"prodid\" type=\"xs:positiveInteger\"/>\n  </xs:complexType>\n</xs:element>\n```\n\n### 包含文本和属性的复合元素\n```xml\n<shoesize country=\"france\">35</shoesize>\n```\n```xml\n<xs:element name=\"shoesize\">\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base=\"xs:integer\">\n        <xs:attribute name=\"country\" type=\"xs:string\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>\n```\n> 请使用`extension` 或 `restriction` 元素来扩展或限制元素的基本简易类型\n\n### 包含文本和元素的复合元素\n```xml\n<letter>\nDear Mr.<name>John Smith</name>.\nYour order <orderid>1032</orderid>\nwill be shipped on <shipdate>2001-07-13</shipdate>.\n</letter>\n```\n```xml\n<xs:element name=\"letter\">\n  <xs:complexType mixed=\"true\">\n    <xs:sequence>\n      <xs:element name=\"name\" type=\"xs:string\"/>\n      <xs:element name=\"orderid\" type=\"xs:positiveInteger\"/>\n      <xs:element name=\"shipdate\" type=\"xs:date\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n> 为了使字符数据可以出现在 \"letter\" 的子元素之间，mixed 属性必须被设置为 \"true\"。\n","source":"_posts/Web-XML-Schema-05-复合元素.md","raw":"---\ntitle: XML Schema 复合元素 05\ndate: 2016-12-17 14:33:09\ntags: [XML,Web,note]\ncategories: [XML]\n---\n## 复合元素\n复合元素包含其他元素及属性的XML元素。 复合元素包括：   \n* 空元素\n* 包含其他元素的元素\n* 仅包含文本的元素\n* 包含元素和文本的元素\n* 上述所有元素均可包含属性\n\n### 仅包含元素的复合元素\n复合元素声明有两种方式，第二种方式可用于其他元素。    \n\n```xml\n<xs:element name=\"employee\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"firstname\" type=\"xs:string\"/>\n      <xs:element name=\"lastname\" type=\"xs:string\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n\n```xml\n<xs:element name=\"employee\" type=\"personinfo\"/>\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n```\n还可以在已有复合元素的基础上，添加一些元素。    \n\n```xml\n<xs:element name=\"employee\" type=\"fullpersoninfo\"/>\n<xs:complexType name=\"personinfo\">\n  <xs:sequence>\n    <xs:element name=\"firstname\" type=\"xs:string\"/>\n    <xs:element name=\"lastname\" type=\"xs:string\"/>\n  </xs:sequence>\n</xs:complexType>\n<xs:complexType name=\"fullpersoninfo\">\n  <xs:complexContent>\n    <xs:extension base=\"personinfo\">\n      <xs:sequence>\n        <xs:element name=\"address\" type=\"xs:string\"/>\n        <xs:element name=\"city\" type=\"xs:string\"/>\n        <xs:element name=\"country\" type=\"xs:string\"/>\n      </xs:sequence>\n    </xs:extension>\n  </xs:complexContent>\n</xs:complexType>\n```\n`<sequence>`是指示器，这意味着子元素必须按照声明的次序出现。   \n\n### 仅包含属性的复合元素\n空的复合元素只能包含属性不能包含其他内容。   \n一个空的XML元素:   \n\n```xml\n<product prodid=\"1345\" />\n```\n声明如下：    \n\n```xml\n<xs:element name=\"product\">\n  <xs:complexType>\n    <xs:complexContent>\n      <xs:restriction base=\"xs:integer\">\n        <xs:attribute name=\"prodid\" type=\"xs:positiveInteger\"/>\n      </xs:restriction>\n    </xs:complexContent>\n  </xs:complexType>\n</xs:element>\n```\n或者更紧凑的写法\n\n```xml\n<xs:element name=\"product\">\n  <xs:complexType>\n    <xs:attribute name=\"prodid\" type=\"xs:positiveInteger\"/>\n  </xs:complexType>\n</xs:element>\n```\n\n### 包含文本和属性的复合元素\n```xml\n<shoesize country=\"france\">35</shoesize>\n```\n```xml\n<xs:element name=\"shoesize\">\n  <xs:complexType>\n    <xs:simpleContent>\n      <xs:extension base=\"xs:integer\">\n        <xs:attribute name=\"country\" type=\"xs:string\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:element>\n```\n> 请使用`extension` 或 `restriction` 元素来扩展或限制元素的基本简易类型\n\n### 包含文本和元素的复合元素\n```xml\n<letter>\nDear Mr.<name>John Smith</name>.\nYour order <orderid>1032</orderid>\nwill be shipped on <shipdate>2001-07-13</shipdate>.\n</letter>\n```\n```xml\n<xs:element name=\"letter\">\n  <xs:complexType mixed=\"true\">\n    <xs:sequence>\n      <xs:element name=\"name\" type=\"xs:string\"/>\n      <xs:element name=\"orderid\" type=\"xs:positiveInteger\"/>\n      <xs:element name=\"shipdate\" type=\"xs:date\"/>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n```\n> 为了使字符数据可以出现在 \"letter\" 的子元素之间，mixed 属性必须被设置为 \"true\"。\n","slug":"Web-XML-Schema-05-复合元素","published":1,"updated":"2020-02-26T14:51:35.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be4001a1ovcnqiih1vq","content":"<h2 id=\"复合元素\"><a href=\"#复合元素\" class=\"headerlink\" title=\"复合元素\"></a>复合元素</h2><p>复合元素包含其他元素及属性的XML元素。 复合元素包括：   </p>\n<ul>\n<li>空元素</li>\n<li>包含其他元素的元素</li>\n<li>仅包含文本的元素</li>\n<li>包含元素和文本的元素</li>\n<li>上述所有元素均可包含属性</li>\n</ul>\n<h3 id=\"仅包含元素的复合元素\"><a href=\"#仅包含元素的复合元素\" class=\"headerlink\" title=\"仅包含元素的复合元素\"></a>仅包含元素的复合元素</h3><p>复合元素声明有两种方式，第二种方式可用于其他元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"personinfo\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>还可以在已有复合元素的基础上，添加一些元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"fullpersoninfo\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"fullpersoninfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:extension</span> <span class=\"attr\">base</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"city\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:extension</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;sequence&gt;</code>是指示器，这意味着子元素必须按照声明的次序出现。   </p>\n<h3 id=\"仅包含属性的复合元素\"><a href=\"#仅包含属性的复合元素\" class=\"headerlink\" title=\"仅包含属性的复合元素\"></a>仅包含属性的复合元素</h3><p>空的复合元素只能包含属性不能包含其他内容。<br>一个空的XML元素:   </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">product</span> <span class=\"attr\">prodid</span>=<span class=\"string\">\"1345\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>声明如下：    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"product\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prodid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>或者更紧凑的写法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"product\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prodid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包含文本和属性的复合元素\"><a href=\"#包含文本和属性的复合元素\" class=\"headerlink\" title=\"包含文本和属性的复合元素\"></a>包含文本和属性的复合元素</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shoesize</span> <span class=\"attr\">country</span>=<span class=\"string\">\"france\"</span>&gt;</span>35<span class=\"tag\">&lt;/<span class=\"name\">shoesize</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"shoesize\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:simpleContent</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:extension</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:extension</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:simpleContent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>请使用<code>extension</code> 或 <code>restriction</code> 元素来扩展或限制元素的基本简易类型</p>\n</blockquote>\n<h3 id=\"包含文本和元素的复合元素\"><a href=\"#包含文本和元素的复合元素\" class=\"headerlink\" title=\"包含文本和元素的复合元素\"></a>包含文本和元素的复合元素</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">letter</span>&gt;</span></span><br><span class=\"line\">Dear Mr.<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>John Smith<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>.</span><br><span class=\"line\">Your order <span class=\"tag\">&lt;<span class=\"name\">orderid</span>&gt;</span>1032<span class=\"tag\">&lt;/<span class=\"name\">orderid</span>&gt;</span></span><br><span class=\"line\">will be shipped on <span class=\"tag\">&lt;<span class=\"name\">shipdate</span>&gt;</span>2001-07-13<span class=\"tag\">&lt;/<span class=\"name\">shipdate</span>&gt;</span>.</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">letter</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"letter\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">mixed</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"orderid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"shipdate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>为了使字符数据可以出现在 “letter” 的子元素之间，mixed 属性必须被设置为 “true”。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"复合元素\"><a href=\"#复合元素\" class=\"headerlink\" title=\"复合元素\"></a>复合元素</h2><p>复合元素包含其他元素及属性的XML元素。 复合元素包括：   </p>\n<ul>\n<li>空元素</li>\n<li>包含其他元素的元素</li>\n<li>仅包含文本的元素</li>\n<li>包含元素和文本的元素</li>\n<li>上述所有元素均可包含属性</li>\n</ul>\n<h3 id=\"仅包含元素的复合元素\"><a href=\"#仅包含元素的复合元素\" class=\"headerlink\" title=\"仅包含元素的复合元素\"></a>仅包含元素的复合元素</h3><p>复合元素声明有两种方式，第二种方式可用于其他元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"personinfo\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>还可以在已有复合元素的基础上，添加一些元素。    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"employee\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"fullpersoninfo\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">name</span>=<span class=\"string\">\"fullpersoninfo\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:extension</span> <span class=\"attr\">base</span>=<span class=\"string\">\"personinfo\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"address\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"city\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:extension</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;sequence&gt;</code>是指示器，这意味着子元素必须按照声明的次序出现。   </p>\n<h3 id=\"仅包含属性的复合元素\"><a href=\"#仅包含属性的复合元素\" class=\"headerlink\" title=\"仅包含属性的复合元素\"></a>仅包含属性的复合元素</h3><p>空的复合元素只能包含属性不能包含其他内容。<br>一个空的XML元素:   </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">product</span> <span class=\"attr\">prodid</span>=<span class=\"string\">\"1345\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>声明如下：    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"product\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:restriction</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prodid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:restriction</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:complexContent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>或者更紧凑的写法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"product\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prodid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包含文本和属性的复合元素\"><a href=\"#包含文本和属性的复合元素\" class=\"headerlink\" title=\"包含文本和属性的复合元素\"></a>包含文本和属性的复合元素</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shoesize</span> <span class=\"attr\">country</span>=<span class=\"string\">\"france\"</span>&gt;</span>35<span class=\"tag\">&lt;/<span class=\"name\">shoesize</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"shoesize\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:simpleContent</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:extension</span> <span class=\"attr\">base</span>=<span class=\"string\">\"xs:integer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">xs:attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"country\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">xs:extension</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:simpleContent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>请使用<code>extension</code> 或 <code>restriction</code> 元素来扩展或限制元素的基本简易类型</p>\n</blockquote>\n<h3 id=\"包含文本和元素的复合元素\"><a href=\"#包含文本和元素的复合元素\" class=\"headerlink\" title=\"包含文本和元素的复合元素\"></a>包含文本和元素的复合元素</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">letter</span>&gt;</span></span><br><span class=\"line\">Dear Mr.<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>John Smith<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>.</span><br><span class=\"line\">Your order <span class=\"tag\">&lt;<span class=\"name\">orderid</span>&gt;</span>1032<span class=\"tag\">&lt;/<span class=\"name\">orderid</span>&gt;</span></span><br><span class=\"line\">will be shipped on <span class=\"tag\">&lt;<span class=\"name\">shipdate</span>&gt;</span>2001-07-13<span class=\"tag\">&lt;/<span class=\"name\">shipdate</span>&gt;</span>.</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">letter</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"letter\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">xs:complexType</span> <span class=\"attr\">mixed</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:string\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"orderid\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:positiveInteger\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">xs:element</span> <span class=\"attr\">name</span>=<span class=\"string\">\"shipdate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"xs:date\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xs:sequence</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">xs:complexType</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">xs:element</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>为了使字符数据可以出现在 “letter” 的子元素之间，mixed 属性必须被设置为 “true”。</p>\n</blockquote>\n"},{"title":"XML简要","date":"2016-12-15T13:44:31.000Z","update":"2016-12-16T14:34:00.000Z","_content":"## 前言\nXML是可扩展标记语言，本文整理自[W3School](http://www.w3school.com.cn/xml/index.asp)。    \n关于XML的简介、用途以及与HTML的区别，请参考以下链接，本文只列出XML的要点：    \n[XML简介](http://www.w3school.com.cn/xml/xml_intro.asp)     \n[XML用途](http://www.w3school.com.cn/xml/xml_usedfor.asp)\n\n## 语法\n* XML文档的第一行为XML声明，定义了XML的版本和使用的编码。\n* 第二行为描述文档的根元素，XML文档必须包含根元素，该元素是所有其他元素的父元素。\n* 所有元素均可拥有文本内容、属性(类似HTML)以及子元素\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<note>\n<to>George</to>\n<from>John</from>\n<heading>Reminder</heading>\n<body>Don't forget the meeting!</body>\n</note>\n```\n* 所有元素必须有关闭标签\n* XML对大小写敏感   \n* XML必须正确的嵌套\n* XML的属性值须加引号，单引号和双引号均可使用\n* XML的注释为`<!--  -->`，同HTML一样\n* XML中空格会保留，HTML会把多个连续的空格裁减为一个\n* XML以`LF`存储换行。`CR`回车符，`LF`换行符\n\n### XML命名规则及最佳实践\n* 名称可以含字母、数字以及其他的字符 \n* 名称不能以数字或标点符号开始\n* 名称不能以字符`xml`、`XML`、`Xml`等开始\n* 名称不能包含空格\n* 避免使用`-`、`.`、`:`字符。最好使用字母、数字以及`_`下划线\n\n### XML属性\n* 尽量使用元素来描述数据，仅仅使用属性提供与数据无关的信息\n* 元数据应当存储为属性，而数据本身应当存储为元素\n\n### XML验证\n* DTD文档用于定义XML文档的结构\n* SchemaDTD的代替者\n* 如果XML文档存在错误，那么程序不应该继续处理这个文档\n\n### XML 样式\n* XML可以引用CSS样式格式化XML，但不推荐使用该方法，W3C推荐使用XSLT\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<?xml-stylesheet type=\"text/css\" href=\"cd_catalog.css\"?>\n<CATALOG>\n  <CD>\n    <TITLE>Empire Burlesque</TITLE>\n    <ARTIST>Bob Dylan</ARTIST>\n    <COUNTRY>USA</COUNTRY>\n    <COMPANY>Columbia</COMPANY>\n    <PRICE>10.90</PRICE>\n    <YEAR>1985</YEAR>\n  </CD>\n  <CD>\n    <TITLE>Hide your heart</TITLE>\n    <ARTIST>Bonnie Tyler</ARTIST>\n    <COUNTRY>UK</COUNTRY>\n    <COMPANY>CBS Records</COMPANY>\n    <PRICE>9.90</PRICE>\n    <YEAR>1988</YEAR>\n  </CD>\n</CATALOG>\n```\n* XSLT是首选的XML样式表语言\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"simple.xsl\"?>\n<breakfast_menu>\n  <food>\n    <name>Belgian Waffles</name>\n    <price>$5.95</price>\n    <description>\n       two of our famous Belgian Waffles\n    </description>\n    <calories>650</calories>\n  </food>\n</breakfast_menu>\n```\n### XML 命名空间\n当两个相同的XML文档被一起使用时，如果两个文档包含不同内容和定义的相同元素，就会发送命名冲突。 为了避免该问题，引入了命名空间的概念。    \n#### 通过使用前缀来避免命名冲突 \n```xml\n<h:table xmlns:h=\"http://www.w3.org/TR/html4/\">\n   <h:tr>\n   <h:td>Apples</h:td>\n   <h:td>Bananas</h:td>\n   </h:tr>\n</h:table>\n\n<f:table xmlns:f=\"http://www.w3school.com.cn/furniture\">\n   <f:name>African Coffee Table</f:name>\n   <f:width>80</f:width>\n   <f:length>120</f:length>\n</f:table>\n```\n其中`xmlns`属性为前缀赋予了一个与某个命名空间相关联的限定名称。(可以不使用`xmlns`，仅仅使用前缀来避免命名冲突)\n\n#### 命名空间属性\n命名空间属性被放置于元素的开始标签中，并使用以下语法：   \n```xml\nxmlns:namespace-prefix=\"namespaceURI\"\n```\n#### 默认的命名空间\n为元素定义默认的命名空间可以让我们省去在所有的子元素中使用前缀的工作。\n```xml\n<table xmlns=\"http://www.w3.org/TR/html4/\">\n   <tr>\n   <td>Apples</td>\n   <td>Bananas</td>\n   </tr>\n</table>\n<table xmlns=\"http://www.w3school.com.cn/furniture\">\n   <name>African Coffee Table</name>\n   <width>80</width>\n   <length>120</length>\n</table>\n```\n### CDATA\nCDATA部分的所有内容都会被解析器忽略。     \nCDATA部分不能包含字符串`]]>`。也不允许嵌套的CDATA。      \n标记CDATA部分结尾的`]]>`不能包含空格或折行。  \n```xml\n<script>\n<![CDATA[\nfunction matchwo(a,b)\n{\nif (a < b && a < 0) then\n  {\n  return 1;\n  }\nelse\n  {\n  return 0;\n  }\n}\n]]>\n</script>\n```\n\n\n\n","source":"_posts/Web-XML详解.md","raw":"---\ntitle: XML简要\ndate: 2016-12-15 21:44:31\nupdate: 2016-12-16 22:34:00\ntags: [XML,Web,note]\ncategories: [XML]\n---\n## 前言\nXML是可扩展标记语言，本文整理自[W3School](http://www.w3school.com.cn/xml/index.asp)。    \n关于XML的简介、用途以及与HTML的区别，请参考以下链接，本文只列出XML的要点：    \n[XML简介](http://www.w3school.com.cn/xml/xml_intro.asp)     \n[XML用途](http://www.w3school.com.cn/xml/xml_usedfor.asp)\n\n## 语法\n* XML文档的第一行为XML声明，定义了XML的版本和使用的编码。\n* 第二行为描述文档的根元素，XML文档必须包含根元素，该元素是所有其他元素的父元素。\n* 所有元素均可拥有文本内容、属性(类似HTML)以及子元素\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<note>\n<to>George</to>\n<from>John</from>\n<heading>Reminder</heading>\n<body>Don't forget the meeting!</body>\n</note>\n```\n* 所有元素必须有关闭标签\n* XML对大小写敏感   \n* XML必须正确的嵌套\n* XML的属性值须加引号，单引号和双引号均可使用\n* XML的注释为`<!--  -->`，同HTML一样\n* XML中空格会保留，HTML会把多个连续的空格裁减为一个\n* XML以`LF`存储换行。`CR`回车符，`LF`换行符\n\n### XML命名规则及最佳实践\n* 名称可以含字母、数字以及其他的字符 \n* 名称不能以数字或标点符号开始\n* 名称不能以字符`xml`、`XML`、`Xml`等开始\n* 名称不能包含空格\n* 避免使用`-`、`.`、`:`字符。最好使用字母、数字以及`_`下划线\n\n### XML属性\n* 尽量使用元素来描述数据，仅仅使用属性提供与数据无关的信息\n* 元数据应当存储为属性，而数据本身应当存储为元素\n\n### XML验证\n* DTD文档用于定义XML文档的结构\n* SchemaDTD的代替者\n* 如果XML文档存在错误，那么程序不应该继续处理这个文档\n\n### XML 样式\n* XML可以引用CSS样式格式化XML，但不推荐使用该方法，W3C推荐使用XSLT\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<?xml-stylesheet type=\"text/css\" href=\"cd_catalog.css\"?>\n<CATALOG>\n  <CD>\n    <TITLE>Empire Burlesque</TITLE>\n    <ARTIST>Bob Dylan</ARTIST>\n    <COUNTRY>USA</COUNTRY>\n    <COMPANY>Columbia</COMPANY>\n    <PRICE>10.90</PRICE>\n    <YEAR>1985</YEAR>\n  </CD>\n  <CD>\n    <TITLE>Hide your heart</TITLE>\n    <ARTIST>Bonnie Tyler</ARTIST>\n    <COUNTRY>UK</COUNTRY>\n    <COMPANY>CBS Records</COMPANY>\n    <PRICE>9.90</PRICE>\n    <YEAR>1988</YEAR>\n  </CD>\n</CATALOG>\n```\n* XSLT是首选的XML样式表语言\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"simple.xsl\"?>\n<breakfast_menu>\n  <food>\n    <name>Belgian Waffles</name>\n    <price>$5.95</price>\n    <description>\n       two of our famous Belgian Waffles\n    </description>\n    <calories>650</calories>\n  </food>\n</breakfast_menu>\n```\n### XML 命名空间\n当两个相同的XML文档被一起使用时，如果两个文档包含不同内容和定义的相同元素，就会发送命名冲突。 为了避免该问题，引入了命名空间的概念。    \n#### 通过使用前缀来避免命名冲突 \n```xml\n<h:table xmlns:h=\"http://www.w3.org/TR/html4/\">\n   <h:tr>\n   <h:td>Apples</h:td>\n   <h:td>Bananas</h:td>\n   </h:tr>\n</h:table>\n\n<f:table xmlns:f=\"http://www.w3school.com.cn/furniture\">\n   <f:name>African Coffee Table</f:name>\n   <f:width>80</f:width>\n   <f:length>120</f:length>\n</f:table>\n```\n其中`xmlns`属性为前缀赋予了一个与某个命名空间相关联的限定名称。(可以不使用`xmlns`，仅仅使用前缀来避免命名冲突)\n\n#### 命名空间属性\n命名空间属性被放置于元素的开始标签中，并使用以下语法：   \n```xml\nxmlns:namespace-prefix=\"namespaceURI\"\n```\n#### 默认的命名空间\n为元素定义默认的命名空间可以让我们省去在所有的子元素中使用前缀的工作。\n```xml\n<table xmlns=\"http://www.w3.org/TR/html4/\">\n   <tr>\n   <td>Apples</td>\n   <td>Bananas</td>\n   </tr>\n</table>\n<table xmlns=\"http://www.w3school.com.cn/furniture\">\n   <name>African Coffee Table</name>\n   <width>80</width>\n   <length>120</length>\n</table>\n```\n### CDATA\nCDATA部分的所有内容都会被解析器忽略。     \nCDATA部分不能包含字符串`]]>`。也不允许嵌套的CDATA。      \n标记CDATA部分结尾的`]]>`不能包含空格或折行。  \n```xml\n<script>\n<![CDATA[\nfunction matchwo(a,b)\n{\nif (a < b && a < 0) then\n  {\n  return 1;\n  }\nelse\n  {\n  return 0;\n  }\n}\n]]>\n</script>\n```\n\n\n\n","slug":"Web-XML详解","published":1,"updated":"2020-02-26T14:51:35.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be4001b1ovc242uebve","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>XML是可扩展标记语言，本文整理自<a href=\"http://www.w3school.com.cn/xml/index.asp\" target=\"_blank\" rel=\"noopener\">W3School</a>。<br>关于XML的简介、用途以及与HTML的区别，请参考以下链接，本文只列出XML的要点：<br><a href=\"http://www.w3school.com.cn/xml/xml_intro.asp\" target=\"_blank\" rel=\"noopener\">XML简介</a><br><a href=\"http://www.w3school.com.cn/xml/xml_usedfor.asp\" target=\"_blank\" rel=\"noopener\">XML用途</a></p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><ul>\n<li>XML文档的第一行为XML声明，定义了XML的版本和使用的编码。</li>\n<li>第二行为描述文档的根元素，XML文档必须包含根元素，该元素是所有其他元素的父元素。</li>\n<li>所有元素均可拥有文本内容、属性(类似HTML)以及子元素<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>George<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don't forget the meeting!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>所有元素必须有关闭标签</li>\n<li>XML对大小写敏感   </li>\n<li>XML必须正确的嵌套</li>\n<li>XML的属性值须加引号，单引号和双引号均可使用</li>\n<li>XML的注释为<code>&lt;!--  --&gt;</code>，同HTML一样</li>\n<li>XML中空格会保留，HTML会把多个连续的空格裁减为一个</li>\n<li>XML以<code>LF</code>存储换行。<code>CR</code>回车符，<code>LF</code>换行符</li>\n</ul>\n<h3 id=\"XML命名规则及最佳实践\"><a href=\"#XML命名规则及最佳实践\" class=\"headerlink\" title=\"XML命名规则及最佳实践\"></a>XML命名规则及最佳实践</h3><ul>\n<li>名称可以含字母、数字以及其他的字符 </li>\n<li>名称不能以数字或标点符号开始</li>\n<li>名称不能以字符<code>xml</code>、<code>XML</code>、<code>Xml</code>等开始</li>\n<li>名称不能包含空格</li>\n<li>避免使用<code>-</code>、<code>.</code>、<code>:</code>字符。最好使用字母、数字以及<code>_</code>下划线</li>\n</ul>\n<h3 id=\"XML属性\"><a href=\"#XML属性\" class=\"headerlink\" title=\"XML属性\"></a>XML属性</h3><ul>\n<li>尽量使用元素来描述数据，仅仅使用属性提供与数据无关的信息</li>\n<li>元数据应当存储为属性，而数据本身应当存储为元素</li>\n</ul>\n<h3 id=\"XML验证\"><a href=\"#XML验证\" class=\"headerlink\" title=\"XML验证\"></a>XML验证</h3><ul>\n<li>DTD文档用于定义XML文档的结构</li>\n<li>SchemaDTD的代替者</li>\n<li>如果XML文档存在错误，那么程序不应该继续处理这个文档</li>\n</ul>\n<h3 id=\"XML-样式\"><a href=\"#XML-样式\" class=\"headerlink\" title=\"XML 样式\"></a>XML 样式</h3><ul>\n<li>XML可以引用CSS样式格式化XML，但不推荐使用该方法，W3C推荐使用XSLT<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?xml-stylesheet type=\"text/css\" href=\"cd_catalog.css\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CATALOG</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TITLE</span>&gt;</span>Empire Burlesque<span class=\"tag\">&lt;/<span class=\"name\">TITLE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ARTIST</span>&gt;</span>Bob Dylan<span class=\"tag\">&lt;/<span class=\"name\">ARTIST</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COUNTRY</span>&gt;</span>USA<span class=\"tag\">&lt;/<span class=\"name\">COUNTRY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COMPANY</span>&gt;</span>Columbia<span class=\"tag\">&lt;/<span class=\"name\">COMPANY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PRICE</span>&gt;</span>10.90<span class=\"tag\">&lt;/<span class=\"name\">PRICE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">YEAR</span>&gt;</span>1985<span class=\"tag\">&lt;/<span class=\"name\">YEAR</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TITLE</span>&gt;</span>Hide your heart<span class=\"tag\">&lt;/<span class=\"name\">TITLE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ARTIST</span>&gt;</span>Bonnie Tyler<span class=\"tag\">&lt;/<span class=\"name\">ARTIST</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COUNTRY</span>&gt;</span>UK<span class=\"tag\">&lt;/<span class=\"name\">COUNTRY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COMPANY</span>&gt;</span>CBS Records<span class=\"tag\">&lt;/<span class=\"name\">COMPANY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PRICE</span>&gt;</span>9.90<span class=\"tag\">&lt;/<span class=\"name\">PRICE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">YEAR</span>&gt;</span>1988<span class=\"tag\">&lt;/<span class=\"name\">YEAR</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">CATALOG</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>XSLT是首选的XML样式表语言<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?xml-stylesheet type=\"text/xsl\" href=\"simple.xsl\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">breakfast_menu</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">food</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Belgian Waffles<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">price</span>&gt;</span>$5.95<span class=\"tag\">&lt;/<span class=\"name\">price</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">       two of our famous Belgian Waffles</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">calories</span>&gt;</span>650<span class=\"tag\">&lt;/<span class=\"name\">calories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">food</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">breakfast_menu</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"XML-命名空间\"><a href=\"#XML-命名空间\" class=\"headerlink\" title=\"XML 命名空间\"></a>XML 命名空间</h3>当两个相同的XML文档被一起使用时，如果两个文档包含不同内容和定义的相同元素，就会发送命名冲突。 为了避免该问题，引入了命名空间的概念。    <h4 id=\"通过使用前缀来避免命名冲突\"><a href=\"#通过使用前缀来避免命名冲突\" class=\"headerlink\" title=\"通过使用前缀来避免命名冲突\"></a>通过使用前缀来避免命名冲突</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h:table</span> <span class=\"attr\">xmlns:h</span>=<span class=\"string\">\"http://www.w3.org/TR/html4/\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:tr</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:td</span>&gt;</span>Apples<span class=\"tag\">&lt;/<span class=\"name\">h:td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:td</span>&gt;</span>Bananas<span class=\"tag\">&lt;/<span class=\"name\">h:td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">h:tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h:table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f:table</span> <span class=\"attr\">xmlns:f</span>=<span class=\"string\">\"http://www.w3school.com.cn/furniture\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:name</span>&gt;</span>African Coffee Table<span class=\"tag\">&lt;/<span class=\"name\">f:name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:width</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">f:width</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:length</span>&gt;</span>120<span class=\"tag\">&lt;/<span class=\"name\">f:length</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">f:table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n其中<code>xmlns</code>属性为前缀赋予了一个与某个命名空间相关联的限定名称。(可以不使用<code>xmlns</code>，仅仅使用前缀来避免命名冲突)</li>\n</ul>\n<h4 id=\"命名空间属性\"><a href=\"#命名空间属性\" class=\"headerlink\" title=\"命名空间属性\"></a>命名空间属性</h4><p>命名空间属性被放置于元素的开始标签中，并使用以下语法：   </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:namespace-prefix=\"namespaceURI\"</span><br></pre></td></tr></table></figure>\n<h4 id=\"默认的命名空间\"><a href=\"#默认的命名空间\" class=\"headerlink\" title=\"默认的命名空间\"></a>默认的命名空间</h4><p>为元素定义默认的命名空间可以让我们省去在所有的子元素中使用前缀的工作。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/TR/html4/\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Apples<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Bananas<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn/furniture\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>African Coffee Table<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">width</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">width</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">length</span>&gt;</span>120<span class=\"tag\">&lt;/<span class=\"name\">length</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"CDATA\"><a href=\"#CDATA\" class=\"headerlink\" title=\"CDATA\"></a>CDATA</h3><p>CDATA部分的所有内容都会被解析器忽略。<br>CDATA部分不能包含字符串<code>]]&gt;</code>。也不允许嵌套的CDATA。<br>标记CDATA部分结尾的<code>]]&gt;</code>不能包含空格或折行。  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">&lt;![CDATA[</span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">matchwo</span><span class=\"params\">(a,b)</span></span></span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (a &lt; b &amp;&amp; a &lt; 0) then</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"keyword\">else</span></span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]]&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>XML是可扩展标记语言，本文整理自<a href=\"http://www.w3school.com.cn/xml/index.asp\" target=\"_blank\" rel=\"noopener\">W3School</a>。<br>关于XML的简介、用途以及与HTML的区别，请参考以下链接，本文只列出XML的要点：<br><a href=\"http://www.w3school.com.cn/xml/xml_intro.asp\" target=\"_blank\" rel=\"noopener\">XML简介</a><br><a href=\"http://www.w3school.com.cn/xml/xml_usedfor.asp\" target=\"_blank\" rel=\"noopener\">XML用途</a></p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><ul>\n<li>XML文档的第一行为XML声明，定义了XML的版本和使用的编码。</li>\n<li>第二行为描述文档的根元素，XML文档必须包含根元素，该元素是所有其他元素的父元素。</li>\n<li>所有元素均可拥有文本内容、属性(类似HTML)以及子元素<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">note</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">to</span>&gt;</span>George<span class=\"tag\">&lt;/<span class=\"name\">to</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">from</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">from</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heading</span>&gt;</span>Reminder<span class=\"tag\">&lt;/<span class=\"name\">heading</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>Don't forget the meeting!<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>所有元素必须有关闭标签</li>\n<li>XML对大小写敏感   </li>\n<li>XML必须正确的嵌套</li>\n<li>XML的属性值须加引号，单引号和双引号均可使用</li>\n<li>XML的注释为<code>&lt;!--  --&gt;</code>，同HTML一样</li>\n<li>XML中空格会保留，HTML会把多个连续的空格裁减为一个</li>\n<li>XML以<code>LF</code>存储换行。<code>CR</code>回车符，<code>LF</code>换行符</li>\n</ul>\n<h3 id=\"XML命名规则及最佳实践\"><a href=\"#XML命名规则及最佳实践\" class=\"headerlink\" title=\"XML命名规则及最佳实践\"></a>XML命名规则及最佳实践</h3><ul>\n<li>名称可以含字母、数字以及其他的字符 </li>\n<li>名称不能以数字或标点符号开始</li>\n<li>名称不能以字符<code>xml</code>、<code>XML</code>、<code>Xml</code>等开始</li>\n<li>名称不能包含空格</li>\n<li>避免使用<code>-</code>、<code>.</code>、<code>:</code>字符。最好使用字母、数字以及<code>_</code>下划线</li>\n</ul>\n<h3 id=\"XML属性\"><a href=\"#XML属性\" class=\"headerlink\" title=\"XML属性\"></a>XML属性</h3><ul>\n<li>尽量使用元素来描述数据，仅仅使用属性提供与数据无关的信息</li>\n<li>元数据应当存储为属性，而数据本身应当存储为元素</li>\n</ul>\n<h3 id=\"XML验证\"><a href=\"#XML验证\" class=\"headerlink\" title=\"XML验证\"></a>XML验证</h3><ul>\n<li>DTD文档用于定义XML文档的结构</li>\n<li>SchemaDTD的代替者</li>\n<li>如果XML文档存在错误，那么程序不应该继续处理这个文档</li>\n</ul>\n<h3 id=\"XML-样式\"><a href=\"#XML-样式\" class=\"headerlink\" title=\"XML 样式\"></a>XML 样式</h3><ul>\n<li>XML可以引用CSS样式格式化XML，但不推荐使用该方法，W3C推荐使用XSLT<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?xml-stylesheet type=\"text/css\" href=\"cd_catalog.css\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CATALOG</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TITLE</span>&gt;</span>Empire Burlesque<span class=\"tag\">&lt;/<span class=\"name\">TITLE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ARTIST</span>&gt;</span>Bob Dylan<span class=\"tag\">&lt;/<span class=\"name\">ARTIST</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COUNTRY</span>&gt;</span>USA<span class=\"tag\">&lt;/<span class=\"name\">COUNTRY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COMPANY</span>&gt;</span>Columbia<span class=\"tag\">&lt;/<span class=\"name\">COMPANY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PRICE</span>&gt;</span>10.90<span class=\"tag\">&lt;/<span class=\"name\">PRICE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">YEAR</span>&gt;</span>1985<span class=\"tag\">&lt;/<span class=\"name\">YEAR</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TITLE</span>&gt;</span>Hide your heart<span class=\"tag\">&lt;/<span class=\"name\">TITLE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ARTIST</span>&gt;</span>Bonnie Tyler<span class=\"tag\">&lt;/<span class=\"name\">ARTIST</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COUNTRY</span>&gt;</span>UK<span class=\"tag\">&lt;/<span class=\"name\">COUNTRY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">COMPANY</span>&gt;</span>CBS Records<span class=\"tag\">&lt;/<span class=\"name\">COMPANY</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PRICE</span>&gt;</span>9.90<span class=\"tag\">&lt;/<span class=\"name\">PRICE</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">YEAR</span>&gt;</span>1988<span class=\"tag\">&lt;/<span class=\"name\">YEAR</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">CD</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">CATALOG</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>XSLT是首选的XML样式表语言<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?xml-stylesheet type=\"text/xsl\" href=\"simple.xsl\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">breakfast_menu</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">food</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Belgian Waffles<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">price</span>&gt;</span>$5.95<span class=\"tag\">&lt;/<span class=\"name\">price</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">       two of our famous Belgian Waffles</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">calories</span>&gt;</span>650<span class=\"tag\">&lt;/<span class=\"name\">calories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">food</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">breakfast_menu</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"XML-命名空间\"><a href=\"#XML-命名空间\" class=\"headerlink\" title=\"XML 命名空间\"></a>XML 命名空间</h3>当两个相同的XML文档被一起使用时，如果两个文档包含不同内容和定义的相同元素，就会发送命名冲突。 为了避免该问题，引入了命名空间的概念。    <h4 id=\"通过使用前缀来避免命名冲突\"><a href=\"#通过使用前缀来避免命名冲突\" class=\"headerlink\" title=\"通过使用前缀来避免命名冲突\"></a>通过使用前缀来避免命名冲突</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h:table</span> <span class=\"attr\">xmlns:h</span>=<span class=\"string\">\"http://www.w3.org/TR/html4/\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:tr</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:td</span>&gt;</span>Apples<span class=\"tag\">&lt;/<span class=\"name\">h:td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h:td</span>&gt;</span>Bananas<span class=\"tag\">&lt;/<span class=\"name\">h:td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">h:tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h:table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f:table</span> <span class=\"attr\">xmlns:f</span>=<span class=\"string\">\"http://www.w3school.com.cn/furniture\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:name</span>&gt;</span>African Coffee Table<span class=\"tag\">&lt;/<span class=\"name\">f:name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:width</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">f:width</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">f:length</span>&gt;</span>120<span class=\"tag\">&lt;/<span class=\"name\">f:length</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">f:table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n其中<code>xmlns</code>属性为前缀赋予了一个与某个命名空间相关联的限定名称。(可以不使用<code>xmlns</code>，仅仅使用前缀来避免命名冲突)</li>\n</ul>\n<h4 id=\"命名空间属性\"><a href=\"#命名空间属性\" class=\"headerlink\" title=\"命名空间属性\"></a>命名空间属性</h4><p>命名空间属性被放置于元素的开始标签中，并使用以下语法：   </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:namespace-prefix=\"namespaceURI\"</span><br></pre></td></tr></table></figure>\n<h4 id=\"默认的命名空间\"><a href=\"#默认的命名空间\" class=\"headerlink\" title=\"默认的命名空间\"></a>默认的命名空间</h4><p>为元素定义默认的命名空间可以让我们省去在所有的子元素中使用前缀的工作。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/TR/html4/\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Apples<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Bananas<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3school.com.cn/furniture\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>African Coffee Table<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">width</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">width</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">length</span>&gt;</span>120<span class=\"tag\">&lt;/<span class=\"name\">length</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"CDATA\"><a href=\"#CDATA\" class=\"headerlink\" title=\"CDATA\"></a>CDATA</h3><p>CDATA部分的所有内容都会被解析器忽略。<br>CDATA部分不能包含字符串<code>]]&gt;</code>。也不允许嵌套的CDATA。<br>标记CDATA部分结尾的<code>]]&gt;</code>不能包含空格或折行。  </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">&lt;![CDATA[</span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">matchwo</span><span class=\"params\">(a,b)</span></span></span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (a &lt; b &amp;&amp; a &lt; 0) then</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"keyword\">else</span></span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">]]&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Window 10 快速安装.NET 3.5","date":"2017-01-16T03:49:25.000Z","_content":"1. 加载windows 10镜像文件到光驱\n2. 按`Win`+`X`，选择'命令提示符(管理员)' \n3. 输入以下命令，其中`D:`代表光驱盘符 \n```shell\ndism.exe /online /enable-feature /featurename:netfx3 /Source:D:\\sources\\sxs\n```\n","source":"_posts/Window-Windows-10-快速安装-NET-3-5.md","raw":"---\ntitle: Window 10 快速安装.NET 3.5\ndate: 2017-01-16 11:49:25\ntags: [Window,os,.net,tools]\ncategories: [Window]\n---\n1. 加载windows 10镜像文件到光驱\n2. 按`Win`+`X`，选择'命令提示符(管理员)' \n3. 输入以下命令，其中`D:`代表光驱盘符 \n```shell\ndism.exe /online /enable-feature /featurename:netfx3 /Source:D:\\sources\\sxs\n```\n","slug":"Window-Windows-10-快速安装-NET-3-5","published":1,"updated":"2020-02-26T14:51:35.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be5001c1ovcnyqgss29","content":"<ol>\n<li>加载windows 10镜像文件到光驱</li>\n<li>按<code>Win</code>+<code>X</code>，选择’命令提示符(管理员)’ </li>\n<li>输入以下命令，其中<code>D:</code>代表光驱盘符 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dism.exe /online /enable-feature /featurename:netfx3 /Source:D:\\sources\\sxs</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>加载windows 10镜像文件到光驱</li>\n<li>按<code>Win</code>+<code>X</code>，选择’命令提示符(管理员)’ </li>\n<li>输入以下命令，其中<code>D:</code>代表光驱盘符 <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dism.exe /online /enable-feature /featurename:netfx3 /Source:D:\\sources\\sxs</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Window下将脚本注册成服务","date":"2017-02-26T07:08:52.000Z","_content":"1. 下载微软系统小工具 instsrv.exe 和 srvany.exe 至 C:\\Windows\\System32。[下载地址](https://www.microsoft.com/en-us/download/details.aspx?id=17657)    \n2. 运行 Dos 命令代码：instsrv ServiceName C:\\Windows\\System32\\srvany.exe    \n    (ServiceName 即你自己定义的服务名称，可以是要作为系统服务启动的应用程序的名称。) \n3. 打开注册表，定位到下面的路径。 \n    HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ServiceName      \n    (同样的 ServiceName 是你刚才安装服务时自定义的服务名称。) \n    如果该服务名下没有 Parameters 项目，则对服务名称项目右击新建项，名称为 Parameters，然后定位到 Parameters 项，新建以下几个字符串值。    \n    名称 Application 值为你要作为服务运行的 BAT 文件地址。    \n    名称 AppDirectory 值为你要作为服务运行的 BAT 文件所在文件夹路径。    \n    名称 AppParameters 值为你要作为服务运行的 BAT 文件启动所需要的参数。     \n\n注：instsrv ServiceName remove 命令可删除服务。","source":"_posts/Window-Window下将脚本或程序注册成服务.md","raw":"---\ntitle: Window下将脚本注册成服务\ndate: 2017-02-26 15:08:52\ntags: [Window,Service]\ncategories: [Window]\n---\n1. 下载微软系统小工具 instsrv.exe 和 srvany.exe 至 C:\\Windows\\System32。[下载地址](https://www.microsoft.com/en-us/download/details.aspx?id=17657)    \n2. 运行 Dos 命令代码：instsrv ServiceName C:\\Windows\\System32\\srvany.exe    \n    (ServiceName 即你自己定义的服务名称，可以是要作为系统服务启动的应用程序的名称。) \n3. 打开注册表，定位到下面的路径。 \n    HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ServiceName      \n    (同样的 ServiceName 是你刚才安装服务时自定义的服务名称。) \n    如果该服务名下没有 Parameters 项目，则对服务名称项目右击新建项，名称为 Parameters，然后定位到 Parameters 项，新建以下几个字符串值。    \n    名称 Application 值为你要作为服务运行的 BAT 文件地址。    \n    名称 AppDirectory 值为你要作为服务运行的 BAT 文件所在文件夹路径。    \n    名称 AppParameters 值为你要作为服务运行的 BAT 文件启动所需要的参数。     \n\n注：instsrv ServiceName remove 命令可删除服务。","slug":"Window-Window下将脚本或程序注册成服务","published":1,"updated":"2020-02-26T14:51:35.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be5001d1ovc72bi0s0f","content":"<ol>\n<li>下载微软系统小工具 instsrv.exe 和 srvany.exe 至 C:\\Windows\\System32。<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=17657\" target=\"_blank\" rel=\"noopener\">下载地址</a>    </li>\n<li>运行 Dos 命令代码：instsrv ServiceName C:\\Windows\\System32\\srvany.exe<br> (ServiceName 即你自己定义的服务名称，可以是要作为系统服务启动的应用程序的名称。) </li>\n<li>打开注册表，定位到下面的路径。<br> HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ServiceName<br> (同样的 ServiceName 是你刚才安装服务时自定义的服务名称。)<br> 如果该服务名下没有 Parameters 项目，则对服务名称项目右击新建项，名称为 Parameters，然后定位到 Parameters 项，新建以下几个字符串值。<br> 名称 Application 值为你要作为服务运行的 BAT 文件地址。<br> 名称 AppDirectory 值为你要作为服务运行的 BAT 文件所在文件夹路径。<br> 名称 AppParameters 值为你要作为服务运行的 BAT 文件启动所需要的参数。     </li>\n</ol>\n<p>注：instsrv ServiceName remove 命令可删除服务。</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>下载微软系统小工具 instsrv.exe 和 srvany.exe 至 C:\\Windows\\System32。<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=17657\" target=\"_blank\" rel=\"noopener\">下载地址</a>    </li>\n<li>运行 Dos 命令代码：instsrv ServiceName C:\\Windows\\System32\\srvany.exe<br> (ServiceName 即你自己定义的服务名称，可以是要作为系统服务启动的应用程序的名称。) </li>\n<li>打开注册表，定位到下面的路径。<br> HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ServiceName<br> (同样的 ServiceName 是你刚才安装服务时自定义的服务名称。)<br> 如果该服务名下没有 Parameters 项目，则对服务名称项目右击新建项，名称为 Parameters，然后定位到 Parameters 项，新建以下几个字符串值。<br> 名称 Application 值为你要作为服务运行的 BAT 文件地址。<br> 名称 AppDirectory 值为你要作为服务运行的 BAT 文件所在文件夹路径。<br> 名称 AppParameters 值为你要作为服务运行的 BAT 文件启动所需要的参数。     </li>\n</ol>\n<p>注：instsrv ServiceName remove 命令可删除服务。</p>\n"},{"title":"在IDEA上远程调试Java Web项目","date":"2015-12-27T16:12:59.000Z","_content":"在catalina.bat文件的，最上方添加以下代码\n```shell\nset JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n\n```\n- -Xdebug：启用调试特性\n- -Xrunjdwp：启用JDWP实现，包含以下选项：\n    - transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输\n    - address=9999：JVM在9999端口上监听请求\n    - server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器\n    - suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y\n接下来再IDEA上新增一个Remote Tomcat\n![](../images/java_idea_1.png)\nHost地址不用加Http\nPort：为tomcat的端口\n![](../images/java_idea_2.png)\n这里的port为调试端口，1中所设置的端口一直\n","source":"_posts/在IDEA上远程调试Java-Web项目.md","raw":"---\ntitle: 在IDEA上远程调试Java Web项目\ndate: 2015-12-28 00:12:59\ntags: [Java, IntelliJ IDEA, skill]\ncategories: [IDEA]\n---\n在catalina.bat文件的，最上方添加以下代码\n```shell\nset JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n\n```\n- -Xdebug：启用调试特性\n- -Xrunjdwp：启用JDWP实现，包含以下选项：\n    - transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输\n    - address=9999：JVM在9999端口上监听请求\n    - server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器\n    - suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y\n接下来再IDEA上新增一个Remote Tomcat\n![](../images/java_idea_1.png)\nHost地址不用加Http\nPort：为tomcat的端口\n![](../images/java_idea_2.png)\n这里的port为调试端口，1中所设置的端口一直\n","slug":"在IDEA上远程调试Java-Web项目","published":1,"updated":"2016-09-03T16:19:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be6001e1ovc72s6bi51","content":"<p>在catalina.bat文件的，最上方添加以下代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-Xdebug：启用调试特性</li>\n<li>-Xrunjdwp：启用JDWP实现，包含以下选项：<ul>\n<li>transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输</li>\n<li>address=9999：JVM在9999端口上监听请求</li>\n<li>server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器</li>\n<li>suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y<br>接下来再IDEA上新增一个Remote Tomcat<br><img src=\"../images/java_idea_1.png\" alt=\"\"><br>Host地址不用加Http<br>Port：为tomcat的端口<br><img src=\"../images/java_idea_2.png\" alt=\"\"><br>这里的port为调试端口，1中所设置的端口一直</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在catalina.bat文件的，最上方添加以下代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-Xdebug：启用调试特性</li>\n<li>-Xrunjdwp：启用JDWP实现，包含以下选项：<ul>\n<li>transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输</li>\n<li>address=9999：JVM在9999端口上监听请求</li>\n<li>server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器</li>\n<li>suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y<br>接下来再IDEA上新增一个Remote Tomcat<br><img src=\"../images/java_idea_1.png\" alt=\"\"><br>Host地址不用加Http<br>Port：为tomcat的端口<br><img src=\"../images/java_idea_2.png\" alt=\"\"><br>这里的port为调试端口，1中所设置的端口一直</li>\n</ul>\n</li>\n</ul>\n"},{"title":"对象的创建和销毁-《Effective Java》笔记","date":"2016-08-18T10:18:03.000Z","_content":"\n## 使用静态方法代替构造器\n> * 静态方法有名称，便于理解\n> * 静态方法可以返回已存在的对象，避免创建不必要的重复对象\n> * 静态方法可以返回原返回类型的任何子类型，增加灵活性\n> * 在创建参数化类型实例的时候，使代码更加简洁\n\n## 存在多个构造器参数时考虑使用构造器\n> * 易于阅读\n> * 加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功\n> * 可以非常灵活的增加参数数量\n> * Builder模式适用于有多个参数构造时使用，一般是4个或多个。\n> * 通常最好一开始就使用Builder模式\n\n以下是使用构造器的示例\n\n```java\npublic class NutritionFacts {\n    private final int servingSize;\n    private final int servings;\n    private final int calories;\n    private final int fat;\n    private final int sodium;\n    private final int carbohydrate;\n\n    public static class Builder {\n        private final int servingSize;\n        private final int servings;\n\n        /**\n         * 带默认值的\n         */\n        private int calories = 0;\n        private int fat = 0;\n        private int sodium = 0;\n        private int carbohydrate = 0;\n\n        public Builder(int servingSize, int servings) {\n            this.servings = servings;\n            this.servingSize = servingSize;\n        }\n\n        public Builder calories(int val) {\n            calories=val;\n            return this;\n        }\n\n        public Builder fat(int val) {\n            fat = val;\n            return this;\n        }\n\n        public Builder carbohydrate(int val) {\n            carbohydrate = val;\n            return this;\n        }\n\n        public Builder sodium(int val) {\n            sodium = val;\n            return this;\n        }\n        public  NutritionFacts build() {\n            return new NutritionFacts(this);\n        }\n\n    }\n\n    private NutritionFacts(Builder builder) {\n        servings = builder.servings;\n        servingSize = builder.servingSize;\n        calories = builder.calories;\n        fat = builder.fat;\n        carbohydrate = builder.carbohydrate;\n        sodium = builder.sodium;\n    }\n    public static void main(String[] args) {\n        NutritionFacts nutritionFacts = new NutritionFacts.Builder(20, 20)\n                .calories(10).carbohydrate(12).build();\n    }\n}\n```\n\n## 使用枚举类型实现单例模式\n> 单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考[设计模式之单例模式](http://blog.csdn.net/abyss521/article/details/52232409)\n\n## 对于不想被实例化的类添加私有构造器\n> 例如`java.lang.Math`这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化\n\n## 避免创建不必要的对象\n> 尤其是要避免在大规模应用场景中使用字符串连接符`+`连接字符串，以及对包装类`Integer`、`Long`等类型使用运算符。 \n\n## 避免使用finalize\n> * `finalize()`不能保证被及时地执行，甚至根本不保证它们会执行\n> * 在`finalize()`中创建和销毁对象对性能损耗非常大\n> * 在`finalize()` 中抛出的异常会被忽略，使对象处于破坏状态\n> * 假如需要释放资源，推荐使用`try-finally` ","source":"_posts/对象的创建和销毁-《Effective-Java》笔记.md","raw":"---\ntitle: 对象的创建和销毁-《Effective Java》笔记\ndate: 2016-08-18 18:18:03\ntags: [Java, Effective, note]\ncategories: Java\n---\n\n## 使用静态方法代替构造器\n> * 静态方法有名称，便于理解\n> * 静态方法可以返回已存在的对象，避免创建不必要的重复对象\n> * 静态方法可以返回原返回类型的任何子类型，增加灵活性\n> * 在创建参数化类型实例的时候，使代码更加简洁\n\n## 存在多个构造器参数时考虑使用构造器\n> * 易于阅读\n> * 加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功\n> * 可以非常灵活的增加参数数量\n> * Builder模式适用于有多个参数构造时使用，一般是4个或多个。\n> * 通常最好一开始就使用Builder模式\n\n以下是使用构造器的示例\n\n```java\npublic class NutritionFacts {\n    private final int servingSize;\n    private final int servings;\n    private final int calories;\n    private final int fat;\n    private final int sodium;\n    private final int carbohydrate;\n\n    public static class Builder {\n        private final int servingSize;\n        private final int servings;\n\n        /**\n         * 带默认值的\n         */\n        private int calories = 0;\n        private int fat = 0;\n        private int sodium = 0;\n        private int carbohydrate = 0;\n\n        public Builder(int servingSize, int servings) {\n            this.servings = servings;\n            this.servingSize = servingSize;\n        }\n\n        public Builder calories(int val) {\n            calories=val;\n            return this;\n        }\n\n        public Builder fat(int val) {\n            fat = val;\n            return this;\n        }\n\n        public Builder carbohydrate(int val) {\n            carbohydrate = val;\n            return this;\n        }\n\n        public Builder sodium(int val) {\n            sodium = val;\n            return this;\n        }\n        public  NutritionFacts build() {\n            return new NutritionFacts(this);\n        }\n\n    }\n\n    private NutritionFacts(Builder builder) {\n        servings = builder.servings;\n        servingSize = builder.servingSize;\n        calories = builder.calories;\n        fat = builder.fat;\n        carbohydrate = builder.carbohydrate;\n        sodium = builder.sodium;\n    }\n    public static void main(String[] args) {\n        NutritionFacts nutritionFacts = new NutritionFacts.Builder(20, 20)\n                .calories(10).carbohydrate(12).build();\n    }\n}\n```\n\n## 使用枚举类型实现单例模式\n> 单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考[设计模式之单例模式](http://blog.csdn.net/abyss521/article/details/52232409)\n\n## 对于不想被实例化的类添加私有构造器\n> 例如`java.lang.Math`这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化\n\n## 避免创建不必要的对象\n> 尤其是要避免在大规模应用场景中使用字符串连接符`+`连接字符串，以及对包装类`Integer`、`Long`等类型使用运算符。 \n\n## 避免使用finalize\n> * `finalize()`不能保证被及时地执行，甚至根本不保证它们会执行\n> * 在`finalize()`中创建和销毁对象对性能损耗非常大\n> * 在`finalize()` 中抛出的异常会被忽略，使对象处于破坏状态\n> * 假如需要释放资源，推荐使用`try-finally` ","slug":"对象的创建和销毁-《Effective-Java》笔记","published":1,"updated":"2016-09-07T15:28:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be6001f1ovcuucp0282","content":"<h2 id=\"使用静态方法代替构造器\"><a href=\"#使用静态方法代替构造器\" class=\"headerlink\" title=\"使用静态方法代替构造器\"></a>使用静态方法代替构造器</h2><blockquote>\n<ul>\n<li>静态方法有名称，便于理解</li>\n<li>静态方法可以返回已存在的对象，避免创建不必要的重复对象</li>\n<li>静态方法可以返回原返回类型的任何子类型，增加灵活性</li>\n<li>在创建参数化类型实例的时候，使代码更加简洁</li>\n</ul>\n</blockquote>\n<h2 id=\"存在多个构造器参数时考虑使用构造器\"><a href=\"#存在多个构造器参数时考虑使用构造器\" class=\"headerlink\" title=\"存在多个构造器参数时考虑使用构造器\"></a>存在多个构造器参数时考虑使用构造器</h2><blockquote>\n<ul>\n<li>易于阅读</li>\n<li>加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功</li>\n<li>可以非常灵活的增加参数数量</li>\n<li>Builder模式适用于有多个参数构造时使用，一般是4个或多个。</li>\n<li>通常最好一开始就使用Builder模式</li>\n</ul>\n</blockquote>\n<p>以下是使用构造器的示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NutritionFacts</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> calories;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fat;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> sodium;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> carbohydrate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Builder</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 带默认值的</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> calories = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> fat = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sodium = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> carbohydrate = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Builder</span><span class=\"params\">(<span class=\"keyword\">int</span> servingSize, <span class=\"keyword\">int</span> servings)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.servings = servings;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.servingSize = servingSize;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">calories</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            calories=val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">fat</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            fat = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">carbohydrate</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            carbohydrate = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">sodium</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            sodium = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span>  NutritionFacts <span class=\"title\">build</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> NutritionFacts(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NutritionFacts</span><span class=\"params\">(Builder builder)</span> </span>&#123;</span><br><span class=\"line\">        servings = builder.servings;</span><br><span class=\"line\">        servingSize = builder.servingSize;</span><br><span class=\"line\">        calories = builder.calories;</span><br><span class=\"line\">        fat = builder.fat;</span><br><span class=\"line\">        carbohydrate = builder.carbohydrate;</span><br><span class=\"line\">        sodium = builder.sodium;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        NutritionFacts nutritionFacts = <span class=\"keyword\">new</span> NutritionFacts.Builder(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">                .calories(<span class=\"number\">10</span>).carbohydrate(<span class=\"number\">12</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用枚举类型实现单例模式\"><a href=\"#使用枚举类型实现单例模式\" class=\"headerlink\" title=\"使用枚举类型实现单例模式\"></a>使用枚举类型实现单例模式</h2><blockquote>\n<p>单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考<a href=\"http://blog.csdn.net/abyss521/article/details/52232409\" target=\"_blank\" rel=\"noopener\">设计模式之单例模式</a></p>\n</blockquote>\n<h2 id=\"对于不想被实例化的类添加私有构造器\"><a href=\"#对于不想被实例化的类添加私有构造器\" class=\"headerlink\" title=\"对于不想被实例化的类添加私有构造器\"></a>对于不想被实例化的类添加私有构造器</h2><blockquote>\n<p>例如<code>java.lang.Math</code>这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化</p>\n</blockquote>\n<h2 id=\"避免创建不必要的对象\"><a href=\"#避免创建不必要的对象\" class=\"headerlink\" title=\"避免创建不必要的对象\"></a>避免创建不必要的对象</h2><blockquote>\n<p>尤其是要避免在大规模应用场景中使用字符串连接符<code>+</code>连接字符串，以及对包装类<code>Integer</code>、<code>Long</code>等类型使用运算符。 </p>\n</blockquote>\n<h2 id=\"避免使用finalize\"><a href=\"#避免使用finalize\" class=\"headerlink\" title=\"避免使用finalize\"></a>避免使用finalize</h2><blockquote>\n<ul>\n<li><code>finalize()</code>不能保证被及时地执行，甚至根本不保证它们会执行</li>\n<li>在<code>finalize()</code>中创建和销毁对象对性能损耗非常大</li>\n<li>在<code>finalize()</code> 中抛出的异常会被忽略，使对象处于破坏状态</li>\n<li>假如需要释放资源，推荐使用<code>try-finally</code> </li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用静态方法代替构造器\"><a href=\"#使用静态方法代替构造器\" class=\"headerlink\" title=\"使用静态方法代替构造器\"></a>使用静态方法代替构造器</h2><blockquote>\n<ul>\n<li>静态方法有名称，便于理解</li>\n<li>静态方法可以返回已存在的对象，避免创建不必要的重复对象</li>\n<li>静态方法可以返回原返回类型的任何子类型，增加灵活性</li>\n<li>在创建参数化类型实例的时候，使代码更加简洁</li>\n</ul>\n</blockquote>\n<h2 id=\"存在多个构造器参数时考虑使用构造器\"><a href=\"#存在多个构造器参数时考虑使用构造器\" class=\"headerlink\" title=\"存在多个构造器参数时考虑使用构造器\"></a>存在多个构造器参数时考虑使用构造器</h2><blockquote>\n<ul>\n<li>易于阅读</li>\n<li>加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功</li>\n<li>可以非常灵活的增加参数数量</li>\n<li>Builder模式适用于有多个参数构造时使用，一般是4个或多个。</li>\n<li>通常最好一开始就使用Builder模式</li>\n</ul>\n</blockquote>\n<p>以下是使用构造器的示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NutritionFacts</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> calories;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fat;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> sodium;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> carbohydrate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Builder</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 带默认值的</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> calories = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> fat = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sodium = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> carbohydrate = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Builder</span><span class=\"params\">(<span class=\"keyword\">int</span> servingSize, <span class=\"keyword\">int</span> servings)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.servings = servings;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.servingSize = servingSize;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">calories</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            calories=val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">fat</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            fat = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">carbohydrate</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            carbohydrate = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">sodium</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">            sodium = val;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span>  NutritionFacts <span class=\"title\">build</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> NutritionFacts(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NutritionFacts</span><span class=\"params\">(Builder builder)</span> </span>&#123;</span><br><span class=\"line\">        servings = builder.servings;</span><br><span class=\"line\">        servingSize = builder.servingSize;</span><br><span class=\"line\">        calories = builder.calories;</span><br><span class=\"line\">        fat = builder.fat;</span><br><span class=\"line\">        carbohydrate = builder.carbohydrate;</span><br><span class=\"line\">        sodium = builder.sodium;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        NutritionFacts nutritionFacts = <span class=\"keyword\">new</span> NutritionFacts.Builder(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">                .calories(<span class=\"number\">10</span>).carbohydrate(<span class=\"number\">12</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用枚举类型实现单例模式\"><a href=\"#使用枚举类型实现单例模式\" class=\"headerlink\" title=\"使用枚举类型实现单例模式\"></a>使用枚举类型实现单例模式</h2><blockquote>\n<p>单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考<a href=\"http://blog.csdn.net/abyss521/article/details/52232409\" target=\"_blank\" rel=\"noopener\">设计模式之单例模式</a></p>\n</blockquote>\n<h2 id=\"对于不想被实例化的类添加私有构造器\"><a href=\"#对于不想被实例化的类添加私有构造器\" class=\"headerlink\" title=\"对于不想被实例化的类添加私有构造器\"></a>对于不想被实例化的类添加私有构造器</h2><blockquote>\n<p>例如<code>java.lang.Math</code>这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化</p>\n</blockquote>\n<h2 id=\"避免创建不必要的对象\"><a href=\"#避免创建不必要的对象\" class=\"headerlink\" title=\"避免创建不必要的对象\"></a>避免创建不必要的对象</h2><blockquote>\n<p>尤其是要避免在大规模应用场景中使用字符串连接符<code>+</code>连接字符串，以及对包装类<code>Integer</code>、<code>Long</code>等类型使用运算符。 </p>\n</blockquote>\n<h2 id=\"避免使用finalize\"><a href=\"#避免使用finalize\" class=\"headerlink\" title=\"避免使用finalize\"></a>避免使用finalize</h2><blockquote>\n<ul>\n<li><code>finalize()</code>不能保证被及时地执行，甚至根本不保证它们会执行</li>\n<li>在<code>finalize()</code>中创建和销毁对象对性能损耗非常大</li>\n<li>在<code>finalize()</code> 中抛出的异常会被忽略，使对象处于破坏状态</li>\n<li>假如需要释放资源，推荐使用<code>try-finally</code> </li>\n</ul>\n</blockquote>\n"},{"title":"设计模式概述","date":"2016-09-12T15:21:32.000Z","_content":"\n## 预览\n|名称|定义|\n|:---|:---|\n|策略模式|封装了算法，为不同的算法提供统一的接口|\n|单一职责|就一个类而言，应当仅有一个引起它变化的原因|\n|开放封闭原则|类、模块、函数可以扩展，但是不可以修改|\n|依赖倒转原则|抽象不应该依赖细节，细节应该依赖于抽象|\n|里氏替换原则|子类型必须能够替换掉它们的父类型|\n|装饰模式|动态的给对象添加额外的职责|\n|代理模式|为其他对象提供一种代理以控制对这个对象的访问|\n|工厂模式|定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类|\n|模版方法|定义封装算法的骨架，而将特定的细节交由子类实现|\n|建造者模式|将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用|\n\n\n## 策略模式\n### 定义\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户\n\n### 优点\n* 策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。\n* 易于进行单元测试\n\n### 使用场景\n测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。\n\n## 单一职责\n### 定义\n就一个类而言，应当仅有一个引起它变化的原因\n\n### 为何需要单一职责\n当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏\n\n### 何时需要职责分离 \n如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责\n\n## 开放封闭原则\n* 无论模块是多么的\"封闭\"，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。\n* 等到变化发生时立即采取行动\n* 面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码\n* 开发人员应改仅对程序中频繁变化的那些部分做出抽象\n\n## 依赖倒转原则\n* 高层模块不应该依赖低层模块，两个都应该依赖抽象\n* 抽象不应该依赖细节。细节应该依赖抽象\n* 依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。\n\n## 里氏替换原则\n* 只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。\n* 由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。\n\n## 装饰模式(Decorator)\n动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。\n* 装饰模式是为已有功能动态的添加更多功能的一种方式\n* 当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。\n* 装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。\n\n## 代理模式\n为其他对象提供一种代理以控制对这个对象的访问。\n* 远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。\n* 虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。\n* 安全代理，用来控制真实对象访问时的权限。\n* 智能指引，是指当调用真实对象时，代理处理另外一些事。\n\n## 工厂方法模式\n* 简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。\n* 工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。\n\n## 模版方法\n定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。\n* 模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势\n* 当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。\n\n## 迪米特法则\n如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。\n* 迪米特法则的前提是，每个类都应当尽量降低成员的访问权限\n* 迪米特法则的根本思想是强调类与类之间的松耦合。\n* 类之间的耦合越弱，越有利于复用。\n\n## 外观(Facade )模式\n为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用\n\n### 用途\n* 在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构\n* 在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖\n* 维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。\n\n## 建造者模式(Builder)\n### 用途\n主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。   \n建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式\n\n### 优势\n使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。\n\n## 观察者模式(Observer)\n又称发布订阅模式(Publish/Subscribe)\n观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。\n\n### 优势\n* 观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。\n* 一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。\n\n### 用途\n* 将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。\n* 当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。\n\n\n\n\n\n\n\n","source":"_posts/设计模式概述.md","raw":"---\ntitle: 设计模式概述\ndate: 2016-09-12 23:21:32\ntags: [设计模式]\ncategories: 设计模式\n---\n\n## 预览\n|名称|定义|\n|:---|:---|\n|策略模式|封装了算法，为不同的算法提供统一的接口|\n|单一职责|就一个类而言，应当仅有一个引起它变化的原因|\n|开放封闭原则|类、模块、函数可以扩展，但是不可以修改|\n|依赖倒转原则|抽象不应该依赖细节，细节应该依赖于抽象|\n|里氏替换原则|子类型必须能够替换掉它们的父类型|\n|装饰模式|动态的给对象添加额外的职责|\n|代理模式|为其他对象提供一种代理以控制对这个对象的访问|\n|工厂模式|定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类|\n|模版方法|定义封装算法的骨架，而将特定的细节交由子类实现|\n|建造者模式|将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用|\n\n\n## 策略模式\n### 定义\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户\n\n### 优点\n* 策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。\n* 易于进行单元测试\n\n### 使用场景\n测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。\n\n## 单一职责\n### 定义\n就一个类而言，应当仅有一个引起它变化的原因\n\n### 为何需要单一职责\n当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏\n\n### 何时需要职责分离 \n如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责\n\n## 开放封闭原则\n* 无论模块是多么的\"封闭\"，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。\n* 等到变化发生时立即采取行动\n* 面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码\n* 开发人员应改仅对程序中频繁变化的那些部分做出抽象\n\n## 依赖倒转原则\n* 高层模块不应该依赖低层模块，两个都应该依赖抽象\n* 抽象不应该依赖细节。细节应该依赖抽象\n* 依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。\n\n## 里氏替换原则\n* 只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。\n* 由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。\n\n## 装饰模式(Decorator)\n动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。\n* 装饰模式是为已有功能动态的添加更多功能的一种方式\n* 当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。\n* 装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。\n\n## 代理模式\n为其他对象提供一种代理以控制对这个对象的访问。\n* 远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。\n* 虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。\n* 安全代理，用来控制真实对象访问时的权限。\n* 智能指引，是指当调用真实对象时，代理处理另外一些事。\n\n## 工厂方法模式\n* 简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。\n* 工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。\n\n## 模版方法\n定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。\n* 模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势\n* 当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。\n\n## 迪米特法则\n如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。\n* 迪米特法则的前提是，每个类都应当尽量降低成员的访问权限\n* 迪米特法则的根本思想是强调类与类之间的松耦合。\n* 类之间的耦合越弱，越有利于复用。\n\n## 外观(Facade )模式\n为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用\n\n### 用途\n* 在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构\n* 在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖\n* 维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。\n\n## 建造者模式(Builder)\n### 用途\n主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。   \n建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式\n\n### 优势\n使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。\n\n## 观察者模式(Observer)\n又称发布订阅模式(Publish/Subscribe)\n观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。\n\n### 优势\n* 观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。\n* 一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。\n\n### 用途\n* 将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。\n* 当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。\n\n\n\n\n\n\n\n","slug":"设计模式概述","published":1,"updated":"2016-09-12T16:17:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck73g2be7001g1ovc2ylzdiit","content":"<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">定义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">策略模式</td>\n<td align=\"left\">封装了算法，为不同的算法提供统一的接口</td>\n</tr>\n<tr>\n<td align=\"left\">单一职责</td>\n<td align=\"left\">就一个类而言，应当仅有一个引起它变化的原因</td>\n</tr>\n<tr>\n<td align=\"left\">开放封闭原则</td>\n<td align=\"left\">类、模块、函数可以扩展，但是不可以修改</td>\n</tr>\n<tr>\n<td align=\"left\">依赖倒转原则</td>\n<td align=\"left\">抽象不应该依赖细节，细节应该依赖于抽象</td>\n</tr>\n<tr>\n<td align=\"left\">里氏替换原则</td>\n<td align=\"left\">子类型必须能够替换掉它们的父类型</td>\n</tr>\n<tr>\n<td align=\"left\">装饰模式</td>\n<td align=\"left\">动态的给对象添加额外的职责</td>\n</tr>\n<tr>\n<td align=\"left\">代理模式</td>\n<td align=\"left\">为其他对象提供一种代理以控制对这个对象的访问</td>\n</tr>\n<tr>\n<td align=\"left\">工厂模式</td>\n<td align=\"left\">定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</td>\n</tr>\n<tr>\n<td align=\"left\">模版方法</td>\n<td align=\"left\">定义封装算法的骨架，而将特定的细节交由子类实现</td>\n</tr>\n<tr>\n<td align=\"left\">建造者模式</td>\n<td align=\"left\">将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用</td>\n</tr>\n</tbody></table>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ul>\n<li>策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。</li>\n<li>易于进行单元测试</li>\n</ul>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。</p>\n<h2 id=\"单一职责\"><a href=\"#单一职责\" class=\"headerlink\" title=\"单一职责\"></a>单一职责</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>就一个类而言，应当仅有一个引起它变化的原因</p>\n<h3 id=\"为何需要单一职责\"><a href=\"#为何需要单一职责\" class=\"headerlink\" title=\"为何需要单一职责\"></a>为何需要单一职责</h3><p>当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏</p>\n<h3 id=\"何时需要职责分离\"><a href=\"#何时需要职责分离\" class=\"headerlink\" title=\"何时需要职责分离\"></a>何时需要职责分离</h3><p>如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><ul>\n<li>无论模块是多么的”封闭”，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。</li>\n<li>等到变化发生时立即采取行动</li>\n<li>面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码</li>\n<li>开发人员应改仅对程序中频繁变化的那些部分做出抽象</li>\n</ul>\n<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><ul>\n<li>高层模块不应该依赖低层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节。细节应该依赖抽象</li>\n<li>依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。</li>\n</ul>\n<h2 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h2><ul>\n<li>只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。</li>\n<li>由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。</li>\n</ul>\n<h2 id=\"装饰模式-Decorator\"><a href=\"#装饰模式-Decorator\" class=\"headerlink\" title=\"装饰模式(Decorator)\"></a>装饰模式(Decorator)</h2><p>动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。</p>\n<ul>\n<li>装饰模式是为已有功能动态的添加更多功能的一种方式</li>\n<li>当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。</li>\n<li>装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。</li>\n</ul>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><p>为其他对象提供一种代理以控制对这个对象的访问。</p>\n<ul>\n<li>远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。</li>\n<li>虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。</li>\n<li>安全代理，用来控制真实对象访问时的权限。</li>\n<li>智能指引，是指当调用真实对象时，代理处理另外一些事。</li>\n</ul>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ul>\n<li>简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。</li>\n<li>工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。</li>\n</ul>\n<h2 id=\"模版方法\"><a href=\"#模版方法\" class=\"headerlink\" title=\"模版方法\"></a>模版方法</h2><p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p>\n<ul>\n<li>模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势</li>\n<li>当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。</li>\n</ul>\n<h2 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h2><p>如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。</p>\n<ul>\n<li>迪米特法则的前提是，每个类都应当尽量降低成员的访问权限</li>\n<li>迪米特法则的根本思想是强调类与类之间的松耦合。</li>\n<li>类之间的耦合越弱，越有利于复用。</li>\n</ul>\n<h2 id=\"外观-Facade-模式\"><a href=\"#外观-Facade-模式\" class=\"headerlink\" title=\"外观(Facade )模式\"></a>外观(Facade )模式</h2><p>为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构</li>\n<li>在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖</li>\n<li>维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。</li>\n</ul>\n<h2 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式(Builder)\"></a>建造者模式(Builder)</h2><h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><p>主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。<br>建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。</p>\n<h2 id=\"观察者模式-Observer\"><a href=\"#观察者模式-Observer\" class=\"headerlink\" title=\"观察者模式(Observer)\"></a>观察者模式(Observer)</h2><p>又称发布订阅模式(Publish/Subscribe)<br>观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</p>\n<h3 id=\"优势-1\"><a href=\"#优势-1\" class=\"headerlink\" title=\"优势\"></a>优势</h3><ul>\n<li>观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。</li>\n<li>一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。</li>\n</ul>\n<h3 id=\"用途-2\"><a href=\"#用途-2\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。</li>\n<li>当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><table>\n<thead>\n<tr>\n<th align=\"left\">名称</th>\n<th align=\"left\">定义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">策略模式</td>\n<td align=\"left\">封装了算法，为不同的算法提供统一的接口</td>\n</tr>\n<tr>\n<td align=\"left\">单一职责</td>\n<td align=\"left\">就一个类而言，应当仅有一个引起它变化的原因</td>\n</tr>\n<tr>\n<td align=\"left\">开放封闭原则</td>\n<td align=\"left\">类、模块、函数可以扩展，但是不可以修改</td>\n</tr>\n<tr>\n<td align=\"left\">依赖倒转原则</td>\n<td align=\"left\">抽象不应该依赖细节，细节应该依赖于抽象</td>\n</tr>\n<tr>\n<td align=\"left\">里氏替换原则</td>\n<td align=\"left\">子类型必须能够替换掉它们的父类型</td>\n</tr>\n<tr>\n<td align=\"left\">装饰模式</td>\n<td align=\"left\">动态的给对象添加额外的职责</td>\n</tr>\n<tr>\n<td align=\"left\">代理模式</td>\n<td align=\"left\">为其他对象提供一种代理以控制对这个对象的访问</td>\n</tr>\n<tr>\n<td align=\"left\">工厂模式</td>\n<td align=\"left\">定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</td>\n</tr>\n<tr>\n<td align=\"left\">模版方法</td>\n<td align=\"left\">定义封装算法的骨架，而将特定的细节交由子类实现</td>\n</tr>\n<tr>\n<td align=\"left\">建造者模式</td>\n<td align=\"left\">将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用</td>\n</tr>\n</tbody></table>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ul>\n<li>策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。</li>\n<li>易于进行单元测试</li>\n</ul>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。</p>\n<h2 id=\"单一职责\"><a href=\"#单一职责\" class=\"headerlink\" title=\"单一职责\"></a>单一职责</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>就一个类而言，应当仅有一个引起它变化的原因</p>\n<h3 id=\"为何需要单一职责\"><a href=\"#为何需要单一职责\" class=\"headerlink\" title=\"为何需要单一职责\"></a>为何需要单一职责</h3><p>当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏</p>\n<h3 id=\"何时需要职责分离\"><a href=\"#何时需要职责分离\" class=\"headerlink\" title=\"何时需要职责分离\"></a>何时需要职责分离</h3><p>如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><ul>\n<li>无论模块是多么的”封闭”，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。</li>\n<li>等到变化发生时立即采取行动</li>\n<li>面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码</li>\n<li>开发人员应改仅对程序中频繁变化的那些部分做出抽象</li>\n</ul>\n<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><ul>\n<li>高层模块不应该依赖低层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节。细节应该依赖抽象</li>\n<li>依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。</li>\n</ul>\n<h2 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h2><ul>\n<li>只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。</li>\n<li>由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。</li>\n</ul>\n<h2 id=\"装饰模式-Decorator\"><a href=\"#装饰模式-Decorator\" class=\"headerlink\" title=\"装饰模式(Decorator)\"></a>装饰模式(Decorator)</h2><p>动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。</p>\n<ul>\n<li>装饰模式是为已有功能动态的添加更多功能的一种方式</li>\n<li>当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。</li>\n<li>装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。</li>\n</ul>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><p>为其他对象提供一种代理以控制对这个对象的访问。</p>\n<ul>\n<li>远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。</li>\n<li>虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。</li>\n<li>安全代理，用来控制真实对象访问时的权限。</li>\n<li>智能指引，是指当调用真实对象时，代理处理另外一些事。</li>\n</ul>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ul>\n<li>简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。</li>\n<li>工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。</li>\n</ul>\n<h2 id=\"模版方法\"><a href=\"#模版方法\" class=\"headerlink\" title=\"模版方法\"></a>模版方法</h2><p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p>\n<ul>\n<li>模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势</li>\n<li>当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。</li>\n</ul>\n<h2 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h2><p>如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。</p>\n<ul>\n<li>迪米特法则的前提是，每个类都应当尽量降低成员的访问权限</li>\n<li>迪米特法则的根本思想是强调类与类之间的松耦合。</li>\n<li>类之间的耦合越弱，越有利于复用。</li>\n</ul>\n<h2 id=\"外观-Facade-模式\"><a href=\"#外观-Facade-模式\" class=\"headerlink\" title=\"外观(Facade )模式\"></a>外观(Facade )模式</h2><p>为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构</li>\n<li>在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖</li>\n<li>维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。</li>\n</ul>\n<h2 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式(Builder)\"></a>建造者模式(Builder)</h2><h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><p>主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。<br>建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。</p>\n<h2 id=\"观察者模式-Observer\"><a href=\"#观察者模式-Observer\" class=\"headerlink\" title=\"观察者模式(Observer)\"></a>观察者模式(Observer)</h2><p>又称发布订阅模式(Publish/Subscribe)<br>观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</p>\n<h3 id=\"优势-1\"><a href=\"#优势-1\" class=\"headerlink\" title=\"优势\"></a>优势</h3><ul>\n<li>观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。</li>\n<li>一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。</li>\n</ul>\n<h3 id=\"用途-2\"><a href=\"#用途-2\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。</li>\n<li>当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck73g2bdb00021ovc8sqi3cr7","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjv006d1ovcmvho213k"},{"post_id":"ck73g2bdf00041ovci442oqoe","category_id":"ck73g2bhi001j1ovcw00tveg8","_id":"ck73g2bjv006f1ovczg7a6zsg"},{"post_id":"ck73g2bdg00061ovc9vi1n8wu","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjw006h1ovc9zsqaooy"},{"post_id":"ck73g2bdg00071ovcgb36r6ut","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjw006j1ovcu8gqvs91"},{"post_id":"ck73g2bdh00081ovcvmsxn5sk","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjw006l1ovcqawj2gz7"},{"post_id":"ck73g2bdi00091ovckiw05aj3","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjw006n1ovcy9788usx"},{"post_id":"ck73g2bdi000a1ovc7k4wpp2f","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjx006p1ovc07dfbqa3"},{"post_id":"ck73g2bdj000b1ovc4vm3a525","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bjx006r1ovcvtcbbyjh"},{"post_id":"ck73g2bdj000c1ovc4y514ibm","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bjx006t1ovctjzr93uw"},{"post_id":"ck73g2bdk000d1ovca6rujuon","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bjx006v1ovc5as7f0fb"},{"post_id":"ck73g2bdl000e1ovc05k4xg5f","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bjx006x1ovcppdtb4an"},{"post_id":"ck73g2bdl000f1ovc4bl71u5r","category_id":"ck73g2bhi001j1ovcw00tveg8","_id":"ck73g2bjx006z1ovcpj1urj2a"},{"post_id":"ck73g2bdm000g1ovc5pf87dn9","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bjy00711ovcsig8lk5m"},{"post_id":"ck73g2bdm000h1ovcejahqjlo","category_id":"ck73g2bhi001j1ovcw00tveg8","_id":"ck73g2bjy00731ovctf3whc46"},{"post_id":"ck73g2bdn000i1ovcj8fjhntf","category_id":"ck73g2bhi001j1ovcw00tveg8","_id":"ck73g2bjy00751ovcurz25afw"},{"post_id":"ck73g2bdn000j1ovcx6f6r9sg","category_id":"ck73g2bht002b1ovcig7smlog","_id":"ck73g2bjy00771ovcibbnohqk"},{"post_id":"ck73g2bdo000k1ovcuhrvrds5","category_id":"ck73g2bhu002d1ovcysb57psy","_id":"ck73g2bjy00791ovcflg27t1k"},{"post_id":"ck73g2bdo000l1ovcck4os9uc","category_id":"ck73g2bhi001j1ovcw00tveg8","_id":"ck73g2bjy007b1ovcrlohk72v"},{"post_id":"ck73g2bdp000m1ovcz4yu2q4o","category_id":"ck73g2bhw002h1ovcolzdylsa","_id":"ck73g2bjz007d1ovcl2e644sx"},{"post_id":"ck73g2bdp000n1ovcigtnaugd","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007f1ovchkaqc88d"},{"post_id":"ck73g2bdq000o1ovc0wwa7hur","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007h1ovcc5ljjgfc"},{"post_id":"ck73g2bdr000p1ovc9anxsj8u","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007j1ovcniut652f"},{"post_id":"ck73g2bdr000q1ovcih8xh9g1","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007l1ovci7z6trqv"},{"post_id":"ck73g2bds000r1ovc036apxeg","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007n1ovcpr9eorzt"},{"post_id":"ck73g2bds000s1ovc8dgcw4ol","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007p1ovcx3xfpsui"},{"post_id":"ck73g2bdt000t1ovch1ckq065","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bjz007r1ovczu6vhptc"},{"post_id":"ck73g2bdt000u1ovcp2rt4mxo","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bk0007t1ovcux9ann7k"},{"post_id":"ck73g2bdv000v1ovc1pw97rrt","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bk0007v1ovclhex6tru"},{"post_id":"ck73g2bdv000w1ovcr1dgb9ec","category_id":"ck73g2bh5001h1ovct3abk4uw","_id":"ck73g2bk0007x1ovcyoutzx9o"},{"post_id":"ck73g2bdw000x1ovc42abnieq","category_id":"ck73g2bi400331ovcynjfzg4f","_id":"ck73g2bk0007z1ovchollb7q6"},{"post_id":"ck73g2bdx000y1ovcc26clrd5","category_id":"ck73g2bi500351ovcxlo7eogr","_id":"ck73g2bk000811ovctwrplew4"},{"post_id":"ck73g2bdx000z1ovcanu0yot4","category_id":"ck73g2bi600371ovc29k9rf3e","_id":"ck73g2bk000831ovc526jvanq"},{"post_id":"ck73g2bdy00101ovcwgb43wh5","category_id":"ck73g2bi600391ovcj5er1uz3","_id":"ck73g2bk000851ovcxb4smw90"},{"post_id":"ck73g2bdy00111ovcnsiewrqd","category_id":"ck73g2bi600391ovcj5er1uz3","_id":"ck73g2bk000871ovcit31ncgc"},{"post_id":"ck73g2bdz00121ovcd5pfcfza","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bk000891ovcx4t4lg51"},{"post_id":"ck73g2bdz00131ovcl9t5sa3o","category_id":"ck73g2bi8003f1ovcl51yh9hw","_id":"ck73g2bk0008b1ovc6c1c3ey9"},{"post_id":"ck73g2be000141ovcal4m879f","category_id":"ck73g2bi500351ovcxlo7eogr","_id":"ck73g2bk1008d1ovcu2krpi8p"},{"post_id":"ck73g2be000151ovc2966drzf","category_id":"ck73g2bi500351ovcxlo7eogr","_id":"ck73g2bk1008f1ovcsk178f2d"},{"post_id":"ck73g2be100161ovcij2kfojv","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008h1ovcpytfa7xs"},{"post_id":"ck73g2be200171ovchkops1n1","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008j1ovcbc71q9hn"},{"post_id":"ck73g2be300181ovcwx2snz5y","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008l1ovcvzygbo33"},{"post_id":"ck73g2be300191ovcxmb475ou","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008n1ovcbtcuom03"},{"post_id":"ck73g2be4001a1ovcnqiih1vq","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008p1ovcj9qr3a3o"},{"post_id":"ck73g2be4001b1ovc242uebve","category_id":"ck73g2bib003k1ovcu31kzz2l","_id":"ck73g2bk1008r1ovcw8odefsj"},{"post_id":"ck73g2be5001c1ovcnyqgss29","category_id":"ck73g2bie003w1ovcjyv5yyez","_id":"ck73g2bk1008t1ovc0lkskp0e"},{"post_id":"ck73g2be5001d1ovc72bi0s0f","category_id":"ck73g2bie003w1ovcjyv5yyez","_id":"ck73g2bk1008v1ovcokjgwh47"},{"post_id":"ck73g2be6001e1ovc72s6bi51","category_id":"ck73g2bif00401ovcd3clki5o","_id":"ck73g2bk2008x1ovcgguvazif"},{"post_id":"ck73g2be6001f1ovcuucp0282","category_id":"ck73g2bhn001v1ovc7eg1q0t6","_id":"ck73g2bk2008z1ovcac83cmhu"},{"post_id":"ck73g2be7001g1ovc2ylzdiit","category_id":"ck73g2big00441ovcizo735jr","_id":"ck73g2bk200911ovcpjhgwpho"}],"PostTag":[{"post_id":"ck73g2bdb00021ovc8sqi3cr7","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjv006c1ovcntef3wgs"},{"post_id":"ck73g2bdb00021ovc8sqi3cr7","tag_id":"ck73g2bhi001k1ovcw0v981as","_id":"ck73g2bjv006e1ovc4h0au9us"},{"post_id":"ck73g2bdb00021ovc8sqi3cr7","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bjw006g1ovclf3nt0gx"},{"post_id":"ck73g2bdf00041ovci442oqoe","tag_id":"ck73g2bhk001o1ovctasvf0k1","_id":"ck73g2bjw006i1ovch9b6pz49"},{"post_id":"ck73g2bdf00041ovci442oqoe","tag_id":"ck73g2bhl001q1ovcynnbw4ha","_id":"ck73g2bjw006k1ovc85leawvo"},{"post_id":"ck73g2bdf00041ovci442oqoe","tag_id":"ck73g2bhm001s1ovcom8q6ak7","_id":"ck73g2bjw006m1ovchvl37tma"},{"post_id":"ck73g2bdf00041ovci442oqoe","tag_id":"ck73g2bhm001u1ovc1y6bp6lt","_id":"ck73g2bjx006o1ovc9sy433zj"},{"post_id":"ck73g2bdg00061ovc9vi1n8wu","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjx006q1ovccclqax49"},{"post_id":"ck73g2bdg00061ovc9vi1n8wu","tag_id":"ck73g2bho001y1ovc8yx5336r","_id":"ck73g2bjx006s1ovc0j93gjfk"},{"post_id":"ck73g2bdg00071ovcgb36r6ut","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjx006u1ovconc5lnl8"},{"post_id":"ck73g2bdg00071ovcgb36r6ut","tag_id":"ck73g2bho001y1ovc8yx5336r","_id":"ck73g2bjx006w1ovcvg2nljlr"},{"post_id":"ck73g2bdg00071ovcgb36r6ut","tag_id":"ck73g2bhq00241ovcjktyx2uk","_id":"ck73g2bjx006y1ovcollz9v26"},{"post_id":"ck73g2bdh00081ovcvmsxn5sk","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjy00701ovcxnukiio3"},{"post_id":"ck73g2bdh00081ovcvmsxn5sk","tag_id":"ck73g2bho001y1ovc8yx5336r","_id":"ck73g2bjy00721ovcs9igavk1"},{"post_id":"ck73g2bdh00081ovcvmsxn5sk","tag_id":"ck73g2bhq00241ovcjktyx2uk","_id":"ck73g2bjy00741ovclxet5urt"},{"post_id":"ck73g2bdi00091ovckiw05aj3","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjy00761ovc4wen5awv"},{"post_id":"ck73g2bdi00091ovckiw05aj3","tag_id":"ck73g2bho001y1ovc8yx5336r","_id":"ck73g2bjy00781ovccyrwmwkt"},{"post_id":"ck73g2bdi00091ovckiw05aj3","tag_id":"ck73g2bhq00241ovcjktyx2uk","_id":"ck73g2bjy007a1ovcs0osfxrq"},{"post_id":"ck73g2bdi000a1ovc7k4wpp2f","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bjy007c1ovc9za7b00k"},{"post_id":"ck73g2bdi000a1ovc7k4wpp2f","tag_id":"ck73g2bho001y1ovc8yx5336r","_id":"ck73g2bjz007e1ovcnv13tdlg"},{"post_id":"ck73g2bdi000a1ovc7k4wpp2f","tag_id":"ck73g2bhq00241ovcjktyx2uk","_id":"ck73g2bjz007g1ovcaj0dm7s0"},{"post_id":"ck73g2bdj000b1ovc4vm3a525","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bjz007i1ovcrrako21o"},{"post_id":"ck73g2bdj000b1ovc4vm3a525","tag_id":"ck73g2bhz002q1ovcy8uf5th0","_id":"ck73g2bjz007k1ovc3lqqauw1"},{"post_id":"ck73g2bdj000c1ovc4y514ibm","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bjz007m1ovcvildz4bd"},{"post_id":"ck73g2bdj000c1ovc4y514ibm","tag_id":"ck73g2bhz002q1ovcy8uf5th0","_id":"ck73g2bjz007o1ovclnn7w6gv"},{"post_id":"ck73g2bdk000d1ovca6rujuon","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bjz007q1ovcmj9j1qed"},{"post_id":"ck73g2bdk000d1ovca6rujuon","tag_id":"ck73g2bi2002y1ovcg9tp6k0d","_id":"ck73g2bjz007s1ovcpjvm0ebf"},{"post_id":"ck73g2bdk000d1ovca6rujuon","tag_id":"ck73g2bi300301ovcj7lpsben","_id":"ck73g2bk0007u1ovc2cpbz9m3"},{"post_id":"ck73g2bdl000e1ovc05k4xg5f","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bk0007w1ovc8jxb10d6"},{"post_id":"ck73g2bdl000e1ovc05k4xg5f","tag_id":"ck73g2bi500341ovcud7dkcro","_id":"ck73g2bk0007y1ovcvkz536se"},{"post_id":"ck73g2bdl000e1ovc05k4xg5f","tag_id":"ck73g2bi500361ovcm0sonndf","_id":"ck73g2bk000801ovca0jkaq9z"},{"post_id":"ck73g2bdl000f1ovc4bl71u5r","tag_id":"ck73g2bi600381ovci3cl38kf","_id":"ck73g2bk000821ovcqrxspcnh"},{"post_id":"ck73g2bdl000f1ovc4bl71u5r","tag_id":"ck73g2bi6003a1ovcdit84zxi","_id":"ck73g2bk000841ovc1tgzytzs"},{"post_id":"ck73g2bdm000g1ovc5pf87dn9","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bk000861ovck3ixy9zx"},{"post_id":"ck73g2bdm000g1ovc5pf87dn9","tag_id":"ck73g2bi8003e1ovcfbih6yhc","_id":"ck73g2bk000881ovcsys9ayal"},{"post_id":"ck73g2bdm000h1ovcejahqjlo","tag_id":"ck73g2bi600381ovci3cl38kf","_id":"ck73g2bk0008a1ovc8d93alhb"},{"post_id":"ck73g2bdm000h1ovcejahqjlo","tag_id":"ck73g2bia003i1ovc5u2f21ti","_id":"ck73g2bk0008c1ovcxrztmo76"},{"post_id":"ck73g2bdn000i1ovcj8fjhntf","tag_id":"ck73g2bi600381ovci3cl38kf","_id":"ck73g2bk1008e1ovcgqygyoyo"},{"post_id":"ck73g2bdn000i1ovcj8fjhntf","tag_id":"ck73g2bib003m1ovctioxd351","_id":"ck73g2bk1008g1ovc2se60mz8"},{"post_id":"ck73g2bdn000j1ovcx6f6r9sg","tag_id":"ck73g2bi600381ovci3cl38kf","_id":"ck73g2bk1008i1ovc14g7kt1m"},{"post_id":"ck73g2bdn000j1ovcx6f6r9sg","tag_id":"ck73g2bid003r1ovcbsk091ja","_id":"ck73g2bk1008k1ovclkx5ceei"},{"post_id":"ck73g2bdo000k1ovcuhrvrds5","tag_id":"ck73g2bhm001u1ovc1y6bp6lt","_id":"ck73g2bk1008m1ovcd3xvii3b"},{"post_id":"ck73g2bdo000k1ovcuhrvrds5","tag_id":"ck73g2bie003v1ovctgklvr8a","_id":"ck73g2bk1008o1ovckgcljhtb"},{"post_id":"ck73g2bdo000l1ovcck4os9uc","tag_id":"ck73g2bi600381ovci3cl38kf","_id":"ck73g2bk1008q1ovc0lar8pie"},{"post_id":"ck73g2bdo000l1ovcck4os9uc","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk1008s1ovcyw0k9mw0"},{"post_id":"ck73g2bdo000l1ovcck4os9uc","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk1008u1ovc3jok3sgf"},{"post_id":"ck73g2bdp000m1ovcz4yu2q4o","tag_id":"ck73g2big00431ovcddfxoyt9","_id":"ck73g2bk1008w1ovcts7ldolf"},{"post_id":"ck73g2bdp000m1ovcz4yu2q4o","tag_id":"ck73g2bhl001q1ovcynnbw4ha","_id":"ck73g2bk2008y1ovcd1ufhvra"},{"post_id":"ck73g2bdp000m1ovcz4yu2q4o","tag_id":"ck73g2bih00461ovcu07elm4d","_id":"ck73g2bk200901ovcf6bmsqfa"},{"post_id":"ck73g2bdp000n1ovcigtnaugd","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk200921ovc39behytx"},{"post_id":"ck73g2bdp000n1ovcigtnaugd","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk200931ovcsjoes2m7"},{"post_id":"ck73g2bdp000n1ovcigtnaugd","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk200941ovcekw3tc8d"},{"post_id":"ck73g2bdq000o1ovc0wwa7hur","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk200951ovci9s3wp1b"},{"post_id":"ck73g2bdq000o1ovc0wwa7hur","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk200961ovckq371kzu"},{"post_id":"ck73g2bdr000p1ovc9anxsj8u","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk200971ovcq1dg4dyx"},{"post_id":"ck73g2bdr000p1ovc9anxsj8u","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk200981ovcvzl7h4wy"},{"post_id":"ck73g2bdr000p1ovc9anxsj8u","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk200991ovcbijg7h8q"},{"post_id":"ck73g2bdr000q1ovcih8xh9g1","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk2009a1ovc7ykcuqw6"},{"post_id":"ck73g2bdr000q1ovcih8xh9g1","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk2009b1ovcj7r7ifzn"},{"post_id":"ck73g2bdr000q1ovcih8xh9g1","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk2009c1ovckm24n9j3"},{"post_id":"ck73g2bds000r1ovc036apxeg","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk3009d1ovcupzyyfqf"},{"post_id":"ck73g2bds000r1ovc036apxeg","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk3009e1ovcwwdjsc13"},{"post_id":"ck73g2bds000r1ovc036apxeg","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk3009f1ovclc8zzmnm"},{"post_id":"ck73g2bds000s1ovc8dgcw4ol","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk3009g1ovc8e11bvb6"},{"post_id":"ck73g2bds000s1ovc8dgcw4ol","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk3009h1ovcu9sp0z5b"},{"post_id":"ck73g2bds000s1ovc8dgcw4ol","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk3009i1ovcdbhd49ic"},{"post_id":"ck73g2bdt000t1ovch1ckq065","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk3009j1ovcfma3lycz"},{"post_id":"ck73g2bdt000t1ovch1ckq065","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk3009k1ovcsqddckf8"},{"post_id":"ck73g2bdt000t1ovch1ckq065","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk3009l1ovcxqjkr109"},{"post_id":"ck73g2bdt000u1ovcp2rt4mxo","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk3009m1ovcgm0i4oxr"},{"post_id":"ck73g2bdt000u1ovcp2rt4mxo","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk3009n1ovc4pya6xrt"},{"post_id":"ck73g2bdt000u1ovcp2rt4mxo","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk3009o1ovcfl1tqf1c"},{"post_id":"ck73g2bdv000v1ovc1pw97rrt","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk3009p1ovctvfh2naf"},{"post_id":"ck73g2bdv000v1ovc1pw97rrt","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk3009q1ovcefmht5jr"},{"post_id":"ck73g2bdv000v1ovc1pw97rrt","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk3009r1ovcie1t3r3p"},{"post_id":"ck73g2bdv000w1ovcr1dgb9ec","tag_id":"ck73g2bih00471ovcm6gosvf7","_id":"ck73g2bk4009s1ovc2sd9579s"},{"post_id":"ck73g2bdv000w1ovcr1dgb9ec","tag_id":"ck73g2bhg001i1ovcncjt08bl","_id":"ck73g2bk4009t1ovc7bpmhsdi"},{"post_id":"ck73g2bdv000w1ovcr1dgb9ec","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk4009u1ovcs5ays0p3"},{"post_id":"ck73g2bdw000x1ovc42abnieq","tag_id":"ck73g2bir00501ovcbix9q8rg","_id":"ck73g2bk4009v1ovcaeaab12n"},{"post_id":"ck73g2bdw000x1ovc42abnieq","tag_id":"ck73g2bir00511ovcvhyfzgqb","_id":"ck73g2bk4009w1ovcllbvd0nv"},{"post_id":"ck73g2bdx000y1ovcc26clrd5","tag_id":"ck73g2bis00521ovcye3z0h1h","_id":"ck73g2bk4009x1ovc6i94mkcf"},{"post_id":"ck73g2bdx000z1ovcanu0yot4","tag_id":"ck73g2bis00531ovcf1mjsbvp","_id":"ck73g2bk4009y1ovcr3ufdr6c"},{"post_id":"ck73g2bdx000z1ovcanu0yot4","tag_id":"ck73g2bis00541ovchnu99zsz","_id":"ck73g2bk4009z1ovc4abi0z9f"},{"post_id":"ck73g2bdy00101ovcwgb43wh5","tag_id":"ck73g2bis00551ovcmbk7wgyz","_id":"ck73g2bk400a01ovc4vtqxs6k"},{"post_id":"ck73g2bdy00101ovcwgb43wh5","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk400a11ovcq9puyo97"},{"post_id":"ck73g2bdy00111ovcnsiewrqd","tag_id":"ck73g2bis00551ovcmbk7wgyz","_id":"ck73g2bk400a21ovcq3cawcm8"},{"post_id":"ck73g2bdz00121ovcd5pfcfza","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bk400a31ovcb3trbbrq"},{"post_id":"ck73g2bdz00121ovcd5pfcfza","tag_id":"ck73g2bit00591ovciik1gv8p","_id":"ck73g2bk400a41ovc3f6mc4la"},{"post_id":"ck73g2bdz00121ovcd5pfcfza","tag_id":"ck73g2biu005a1ovcd12a59qt","_id":"ck73g2bk400a51ovcj8nrte7c"},{"post_id":"ck73g2bdz00121ovcd5pfcfza","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk400a61ovcef3fpcx8"},{"post_id":"ck73g2bdz00131ovcl9t5sa3o","tag_id":"ck73g2biu005c1ovcnx9u7p0p","_id":"ck73g2bk400a71ovcdiw17mma"},{"post_id":"ck73g2be000141ovcal4m879f","tag_id":"ck73g2bis00521ovcye3z0h1h","_id":"ck73g2bk400a81ovcbooyxeuh"},{"post_id":"ck73g2be000141ovcal4m879f","tag_id":"ck73g2bir00511ovcvhyfzgqb","_id":"ck73g2bk500a91ovch2gso9ik"},{"post_id":"ck73g2be000151ovc2966drzf","tag_id":"ck73g2bis00521ovcye3z0h1h","_id":"ck73g2bk500aa1ovcqv47bkkk"},{"post_id":"ck73g2be000151ovc2966drzf","tag_id":"ck73g2bir00511ovcvhyfzgqb","_id":"ck73g2bk500ab1ovcmurbueel"},{"post_id":"ck73g2be100161ovcij2kfojv","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk500ac1ovc6g4na9lo"},{"post_id":"ck73g2be100161ovcij2kfojv","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600ad1ovcuy2fxakt"},{"post_id":"ck73g2be100161ovcij2kfojv","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600ae1ovc41uoqdna"},{"post_id":"ck73g2be200171ovchkops1n1","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk600af1ovc2y0o6ec0"},{"post_id":"ck73g2be200171ovchkops1n1","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600ag1ovc2k9jgatj"},{"post_id":"ck73g2be200171ovchkops1n1","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600ah1ovchybf3op1"},{"post_id":"ck73g2be300181ovcwx2snz5y","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk600ai1ovcd7vvwogp"},{"post_id":"ck73g2be300181ovcwx2snz5y","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600aj1ovcc4xw2q0y"},{"post_id":"ck73g2be300181ovcwx2snz5y","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600ak1ovcohtzd6d8"},{"post_id":"ck73g2be300191ovcxmb475ou","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk600al1ovcgu7xqgkn"},{"post_id":"ck73g2be300191ovcxmb475ou","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600am1ovcgxyihq3k"},{"post_id":"ck73g2be300191ovcxmb475ou","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600an1ovcvtsa6l38"},{"post_id":"ck73g2be4001a1ovcnqiih1vq","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk600ao1ovc0j3hbjuw"},{"post_id":"ck73g2be4001a1ovcnqiih1vq","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600ap1ovcuseydm22"},{"post_id":"ck73g2be4001a1ovcnqiih1vq","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600aq1ovc4ug52l7g"},{"post_id":"ck73g2be4001b1ovc242uebve","tag_id":"ck73g2biw005h1ovcdiu177x4","_id":"ck73g2bk600ar1ovcc362fkmp"},{"post_id":"ck73g2be4001b1ovc242uebve","tag_id":"ck73g2bif003z1ovcm7m73bu4","_id":"ck73g2bk600as1ovc81ckgpye"},{"post_id":"ck73g2be4001b1ovc242uebve","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk600at1ovce8ie8lun"},{"post_id":"ck73g2be5001c1ovcnyqgss29","tag_id":"ck73g2bhm001s1ovcom8q6ak7","_id":"ck73g2bk600au1ovcua6dxczf"},{"post_id":"ck73g2be5001c1ovcnyqgss29","tag_id":"ck73g2big00431ovcddfxoyt9","_id":"ck73g2bk600av1ovc6u60gnic"},{"post_id":"ck73g2be5001c1ovcnyqgss29","tag_id":"ck73g2bj400611ovc599woc7h","_id":"ck73g2bk700aw1ovcb7lwgs02"},{"post_id":"ck73g2be5001c1ovcnyqgss29","tag_id":"ck73g2bih00461ovcu07elm4d","_id":"ck73g2bk700ax1ovc68t3eok4"},{"post_id":"ck73g2be5001d1ovc72bi0s0f","tag_id":"ck73g2bhm001s1ovcom8q6ak7","_id":"ck73g2bk700ay1ovc5w4mgosm"},{"post_id":"ck73g2be5001d1ovc72bi0s0f","tag_id":"ck73g2bj500641ovcxzdi853j","_id":"ck73g2bk700az1ovcqv11zpsr"},{"post_id":"ck73g2be6001e1ovc72s6bi51","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bk700b01ovccog6rg5c"},{"post_id":"ck73g2be6001e1ovc72s6bi51","tag_id":"ck73g2bj500661ovch80n458s","_id":"ck73g2bk700b11ovcyw3dessj"},{"post_id":"ck73g2be6001e1ovc72s6bi51","tag_id":"ck73g2bj600671ovcaluy9mo6","_id":"ck73g2bk700b21ovcpp98ymwg"},{"post_id":"ck73g2be6001f1ovcuucp0282","tag_id":"ck73g2bhz002o1ovcofskizh5","_id":"ck73g2bk700b31ovcxmvj8cuy"},{"post_id":"ck73g2be6001f1ovcuucp0282","tag_id":"ck73g2bj600691ovcommp7fja","_id":"ck73g2bk700b41ovceoqdmcrs"},{"post_id":"ck73g2be6001f1ovcuucp0282","tag_id":"ck73g2bhi001m1ovcxrxqq85t","_id":"ck73g2bk700b51ovchmwozw2x"},{"post_id":"ck73g2be7001g1ovc2ylzdiit","tag_id":"ck73g2bj7006b1ovcaq1jfsw8","_id":"ck73g2bk700b61ovcpk2jte1m"}],"Tag":[{"name":"Math","_id":"ck73g2bhg001i1ovcncjt08bl"},{"name":"Elementary mathematics","_id":"ck73g2bhi001k1ovcw0v981as"},{"name":"note","_id":"ck73g2bhi001m1ovcxrxqq85t"},{"name":"app","_id":"ck73g2bhk001o1ovctasvf0k1"},{"name":"Mac","_id":"ck73g2bhl001q1ovcynnbw4ha"},{"name":"Window","_id":"ck73g2bhm001s1ovcom8q6ak7"},{"name":"Linux","_id":"ck73g2bhm001u1ovc1y6bp6lt"},{"name":"function","_id":"ck73g2bho001y1ovc8yx5336r"},{"name":"Alg","_id":"ck73g2bhq00241ovcjktyx2uk"},{"name":"Java","_id":"ck73g2bhz002o1ovcofskizh5"},{"name":"IO","_id":"ck73g2bhz002q1ovcy8uf5th0"},{"name":"wsdl","_id":"ck73g2bi2002y1ovcg9tp6k0d"},{"name":"cxf","_id":"ck73g2bi300301ovcj7lpsben"},{"name":"javassist","_id":"ck73g2bi500341ovcud7dkcro"},{"name":"dubbo","_id":"ck73g2bi500361ovcm0sonndf"},{"name":"JavaScript","_id":"ck73g2bi600381ovci3cl38kf"},{"name":"style guideline","_id":"ck73g2bi6003a1ovcdit84zxi"},{"name":"log4j","_id":"ck73g2bi8003e1ovcfbih6yhc"},{"name":"npm","_id":"ck73g2bia003i1ovc5u2f21ti"},{"name":"effective","_id":"ck73g2bib003m1ovctioxd351"},{"name":"Node","_id":"ck73g2bid003r1ovcbsk091ja"},{"name":"shell","_id":"ck73g2bie003v1ovctgklvr8a"},{"name":"Web","_id":"ck73g2bif003z1ovcm7m73bu4"},{"name":"os","_id":"ck73g2big00431ovcddfxoyt9"},{"name":"tools","_id":"ck73g2bih00461ovcu07elm4d"},{"name":"Discrete Mathematics","_id":"ck73g2bih00471ovcm6gosvf7"},{"name":"MathJax","_id":"ck73g2bir00501ovcbix9q8rg"},{"name":"markdown","_id":"ck73g2bir00511ovcvhyfzgqb"},{"name":"sublime","_id":"ck73g2bis00521ovcye3z0h1h"},{"name":"MySQL","_id":"ck73g2bis00531ovcf1mjsbvp"},{"name":"error","_id":"ck73g2bis00541ovchnu99zsz"},{"name":"Python","_id":"ck73g2bis00551ovcmbk7wgyz"},{"name":"QuartZ","_id":"ck73g2bit00591ovciik1gv8p"},{"name":"Cron","_id":"ck73g2biu005a1ovcd12a59qt"},{"name":"Regular","_id":"ck73g2biu005c1ovcnx9u7p0p"},{"name":"XML","_id":"ck73g2biw005h1ovcdiu177x4"},{"name":".net","_id":"ck73g2bj400611ovc599woc7h"},{"name":"Service","_id":"ck73g2bj500641ovcxzdi853j"},{"name":"IntelliJ IDEA","_id":"ck73g2bj500661ovch80n458s"},{"name":"skill","_id":"ck73g2bj600671ovcaluy9mo6"},{"name":"Effective","_id":"ck73g2bj600691ovcommp7fja"},{"name":"设计模式","_id":"ck73g2bj7006b1ovcaq1jfsw8"}]}}