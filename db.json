{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":1,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":0},{"_id":"source/images/java_idea_1.png","path":"images/java_idea_1.png","modified":1,"renderable":0},{"_id":"source/images/java_idea_2.png","path":"images/java_idea_2.png","modified":1,"renderable":0},{"_id":"source/images/inference_rule_!.png","path":"images/inference_rule_!.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/inference_rule.png","path":"images/inference_rule.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/images/math_function_2.png","path":"images/math_function_2.png","modified":1,"renderable":0},{"_id":"source/images/math_function_1.png","path":"images/math_function_1.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.html","hash":"909a2b39bf012a9bb70865f9ba4569a08b165adb","modified":1472871440000},{"_id":"source/CNAME","hash":"5c00228fe6fec1d4945c95bf59da340b3b0cae80","modified":1472745780000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1472867980000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1472867980000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1472867980000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1472867980000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1472867980000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1472867980000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1472867980000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1472867980000},{"_id":"themes/next/_config.yml","hash":"32f0f50e8afc7db4951a58d436597f6a26c2eada","modified":1473577230000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1472867980000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1472867980000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1472867980000},{"_id":"source/about/index.md","hash":"b5a62e7f233f49b5b8e1921b95ee43e2abecb9ec","modified":1473577195000},{"_id":"source/categories/index.md","hash":"a618cd201268e8416cb3b52cd8f68576592dba71","modified":1472871030000},{"_id":"source/images/avatar.jpeg","hash":"78e21b0e2038c70af8c58054fd0994bc5b9c3a79","modified":1472868535000},{"_id":"source/images/favicon.png","hash":"f7ca08f91ff7a432d6e8a75e8f2750862ab9aa37","modified":1472889643000},{"_id":"source/images/java_idea_1.png","hash":"3c766b4c85a268817369651217b05312d5bc3974","modified":1472919117000},{"_id":"source/images/java_idea_2.png","hash":"caaa69b506af5d5ed351706a801f4e2b38d4a1b5","modified":1472919140000},{"_id":"source/tags/index.md","hash":"8264669fdde2509f11a5e695a4662ff493ab294a","modified":1472870978000},{"_id":"source/_posts/Application.md","hash":"bcb24356f35e51b57334151e0376c377b9e99bc1","modified":1480144303000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1481178975000},{"_id":"source/_posts/JavaScript之表达式和运算符.md","hash":"d70938bb3a85744e76fd35a4a2a1c444ebd2854f","modified":1472897757000},{"_id":"source/_posts/Math-DM-01-基本逻辑.md","hash":"6a3fbaa1aebe7ca99401a5b3c071706b9875d6be","modified":1480515011000},{"_id":"source/_posts/Math-DM-02-逻辑等价.md","hash":"332c427f51fcb96e5e9053e29bcd888b92da03c7","modified":1480774595000},{"_id":"source/_posts/Math-DM-03-谓词逻辑.md","hash":"fd1d383e334890407f8353fa3dae220628aa9204","modified":1480601942000},{"_id":"source/_posts/Math-DM-04-嵌套量词.md","hash":"786bb023d03131f6a41744103a54ddb3433bef6a","modified":1480735179000},{"_id":"source/_posts/Math-DM-05-推理规则.md","hash":"f6173563297aeb89e6050746ba3556bb0453c22c","modified":1480776895000},{"_id":"source/_posts/Math-DM-06-证明导论.md","hash":"00b93bbe55a90f6a7218b289d26b2b07f775fc06","modified":1480841281000},{"_id":"source/_posts/Math-DM-07-集合.md","hash":"496df76f8bbbbb36290be21d4bfb1cbdd3c31a5b","modified":1481177838000},{"_id":"source/_posts/Math-直线与方程.md","hash":"1f4d8d417280f133455d0911129bda65486a1a88","modified":1473686010000},{"_id":"source/_posts/Math-矩阵代数－《线性代数及应用》.md","hash":"7697acae0a7c4a617626f7ab98c7c959a749ce69","modified":1473692434000},{"_id":"source/_posts/Math-向量空间－《线性代数及应用》.md","hash":"d372a554d008f9ce37a21b56d4530972a5634ee1","modified":1473691818000},{"_id":"source/_posts/Math-算法-整数－矩阵.md","hash":"26565aa7bb21d72e053045b30a699779806fb1a3","modified":1475766358000},{"_id":"source/_posts/Math-行列式－《线性代数及应用》.md","hash":"ea29fa30051c0239266aefc0383e96125efbcdfd","modified":1473509020000},{"_id":"source/_posts/Math-线性方程组－《线性代数及应用》.md","hash":"696a268d680cc5a67b18eb68fff648994fbfc317","modified":1473692402000},{"_id":"source/_posts/Math-集合-函数-数列.md","hash":"91937f583e7b4f5025b20ce6ca09e05274d7b156","modified":1475634921000},{"_id":"source/_posts/MathJax-tutorial.md","hash":"d8648ca48bc88925d487015f4f3277a4326b1be9","modified":1481178063000},{"_id":"source/_posts/My-Sublime-Text-Setting.md","hash":"7072dc483288f6cc47f3bdac121598fb5fa5d3f1","modified":1473773963000},{"_id":"source/_posts/Quart表达式详解.md","hash":"bfd0776c26ed799831be92ba6a014fe24e595028","modified":1472920383000},{"_id":"source/_posts/Python语法预览.md","hash":"570a4056595033c9674d8b89bdab60aff48ec378","modified":1472917601000},{"_id":"source/_posts/Python资料收集.md","hash":"856858805f8066a8e36e0bfb14a5986ca410e633","modified":1474778834000},{"_id":"source/_posts/Sublime-Text之Evernote.md","hash":"4cb9fb66a4c27a413cab0d99c7fe5ec422472849","modified":1473773655000},{"_id":"source/_posts/Sublime-Text之OmniMarkupPreviewer.md","hash":"460bd2d4abbcfc106bfae29f13b668221fcad0bb","modified":1473773905000},{"_id":"source/_posts/对象的创建和销毁-《Effective-Java》笔记.md","hash":"84164aa976e8890d62d86522a0ffdb7f7219d37d","modified":1473262113000},{"_id":"source/_posts/在IDEA上远程调试Java-Web项目.md","hash":"4deb31cf1ff629de0a326a31714bba3649d4508d","modified":1472919572000},{"_id":"source/_posts/设计模式概述.md","hash":"439b38a8ae8515129896deb99aadb386128f5b72","modified":1473697026000},{"_id":"source/_posts/开源项目推荐.md","hash":"f0524ce4e1193edb4ae5286766abd59465270bba","modified":1472918968000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1472867980000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1472867980000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1472867980000},{"_id":"themes/next/.git/config","hash":"ca83ce520f770c3104c997d323b9f293dd920073","modified":1472867980000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1472867734000},{"_id":"themes/next/.git/index","hash":"f00c6a7ff48b3240a2afc8477574fbdeab7a5386","modified":1472977464000},{"_id":"themes/next/.git/packed-refs","hash":"5299dd07c22750af4a0d99f89ea2c8e2d52787e3","modified":1472867980000},{"_id":"source/_drafts/初等函数.md","hash":"25b955f7d5a59b95b503812a325dd99064d998ab","modified":1472895063000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1472867980000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1472867980000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1472867980000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1472867980000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1472867980000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1472867980000},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1472867980000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1472867980000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1472867980000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1472867980000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1472867980000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1472867980000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1472867980000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1472867980000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1472867980000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1472867980000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1472867980000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1472867980000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1472867980000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1472867980000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1472867980000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1472867980000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1472867980000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1472867980000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"source/images/inference_rule_!.png","hash":"8ec94dd9db817ac18fed669f3647c33546a11f91","modified":1475334900000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1472867734000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1472867734000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1472867734000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1472867734000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1472867734000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1472867734000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1472867734000},{"_id":"themes/next/.git/logs/HEAD","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1472867980000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f3895bf44a9fb7c462f2e57b9a914703c2f152ba","modified":1472867980000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1472867980000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1472867980000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1472867980000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1472867980000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1472867980000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1472867980000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1472867980000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1472867980000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1472867980000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1472867980000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1472867980000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1472867980000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1472867980000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1472867980000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1472867980000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1472867980000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1472867980000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1472867980000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1472867980000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1472867980000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1472867980000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1472867980000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1472867980000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1472867980000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1472867980000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1472867980000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1472867980000},{"_id":"source/images/inference_rule.png","hash":"6c6214e358d9874a8d732b02d4c5df41f0a7de8e","modified":1475331259000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472867980000},{"_id":"themes/next/.git/refs/heads/master","hash":"a000ff7ceba1704584e39c908e83fe3db5859335","modified":1472867980000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1472867980000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1472867980000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1472867980000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1472867980000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1472867980000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1472867980000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1472867980000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1472867980000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1472867980000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1472867980000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1472867980000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1472867980000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1472867980000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1472867980000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1472867980000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1472867980000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1472867980000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1472867980000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1472867980000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1472867980000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/.git/objects/pack/pack-86fef626de1eb962abc5ba6bb6a3172ba82e6ec3.idx","hash":"df3e80c427ffb662152d057bc39d5e53ad3f3ffe","modified":1472867980000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"1e3e1c6231408e18e8485a8e0e59e8880349b210","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1472867980000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1472867980000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1472867980000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1472867980000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1472867980000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1472867980000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1472867980000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1472867980000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1472867980000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c20338b2711879ff3fcb709d7831af3d0a0f64f3","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1472867980000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1472867980000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1472867980000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1472867980000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1472867980000},{"_id":"source/images/math_function_2.png","hash":"e39ff63946e552708eb658042326859ab8dfecd4","modified":1472894932000},{"_id":"source/images/math_function_1.png","hash":"204487aaca8b35436dfa3d575a90d3d14bbc3f90","modified":1472893705000},{"_id":"themes/next/.git/objects/pack/pack-86fef626de1eb962abc5ba6bb6a3172ba82e6ec3.pack","hash":"8b28a22776ffc0e6313769e8f2cc855633f4de03","modified":1472867980000},{"_id":"public/atom.xml","hash":"6793be45b951cae459644a96f8396cb2692671c8","modified":1481178988519},{"_id":"public/404.html","hash":"7e332fbec9de619fa37984254956f7665d8da881","modified":1481178989150},{"_id":"public/about/index.html","hash":"555f708d92f2f42f389454afbd51aeb0b217bb0b","modified":1481178989154},{"_id":"public/archives/2015/08/index.html","hash":"e25e4f5640cc9f632268199b90cc1d32aa2bf6f5","modified":1481178989154},{"_id":"public/archives/2015/12/index.html","hash":"d71e9db5437ba911993819e9f118913bb162b96f","modified":1481178989161},{"_id":"public/archives/2016/05/index.html","hash":"8eea61b1d980ebeb19d633134ace09b0debb0f24","modified":1481178989161},{"_id":"public/archives/2016/08/index.html","hash":"c2790728ceace86c8fc4639be5829316600a978c","modified":1481178989161},{"_id":"public/categories/JavaScript/index.html","hash":"553e943276cb1945533dd0fa2230c80249e746ee","modified":1481178989161},{"_id":"public/categories/MathJax/index.html","hash":"ef9518f465968627bd38facbed6ad0288e7d4110","modified":1481178989161},{"_id":"public/categories/Python/index.html","hash":"675283cd6029f163307186acb77d049b181ff25e","modified":1481178989161},{"_id":"public/categories/IDEA/index.html","hash":"c56315dd2534deb63a6c920b5f3a0500481807eb","modified":1481178989161},{"_id":"public/categories/设计模式/index.html","hash":"2e165b94733895ac115ad39d061f3fb767c4fe09","modified":1481178989161},{"_id":"public/categories/资源/index.html","hash":"75417a56e4482ff1643256ece7eaf7bd707c56d8","modified":1481178989161},{"_id":"public/tags/JavaScript/index.html","hash":"4fe4bc52199e410dca34885f27ebace148ce967c","modified":1481178989161},{"_id":"public/tags/Web/index.html","hash":"94b7f642ce9280b5a068af56218d6171ee12428f","modified":1481178989162},{"_id":"public/tags/Calculus/index.html","hash":"fe463cdbf295cbd68c0a04030083d2dcfd9b041d","modified":1481178989162},{"_id":"public/tags/MathJax/index.html","hash":"4eab29783997e6fce91d8da829df9c6ab032f121","modified":1481178989162},{"_id":"public/tags/QuartZ/index.html","hash":"b14ec0610ab93326a478518dc3da1c75e3d543b5","modified":1481178989162},{"_id":"public/tags/Cron/index.html","hash":"2eca4ad1fe974f54c193cd887189a89e502372dc","modified":1481178989162},{"_id":"public/tags/Python/index.html","hash":"b13ca8b1750830e31a44ae75e4d6d19a8f8723cc","modified":1481178989162},{"_id":"public/tags/Effective/index.html","hash":"4a13736199e8b0ae06f28a8d2065961b04ba97e7","modified":1481178989162},{"_id":"public/tags/IntelliJ-IDEA/index.html","hash":"e3a2b949c5e9793e44a7c4f41b5628c33b8b46f1","modified":1481178989162},{"_id":"public/tags/skill/index.html","hash":"35c19167ace2300822cf4d0ee43af5d9f0e1fd93","modified":1481178989162},{"_id":"public/tags/设计模式/index.html","hash":"6f72f256f75ce69f878b4dae4b53b29013373421","modified":1481178989162},{"_id":"public/tags/open-source/index.html","hash":"158de8c2ccc77d4145e8d74b0c9073441389da26","modified":1481178989162},{"_id":"public/categories/index.html","hash":"ff88dde0d48fd9a35889f2b075e891d936328b7e","modified":1481178989162},{"_id":"public/tags/index.html","hash":"603ee26d56cb38b7d0598f7b42c25ad01a68592e","modified":1481178989162},{"_id":"public/2016/09/13/Sublime-Text之OmniMarkupPreviewer/index.html","hash":"37f7e3341c7a7f4b667360c13badc969f8eef657","modified":1481178989162},{"_id":"public/2016/09/13/My-Sublime-Text-Setting/index.html","hash":"4c6006d9477962e935ca7a90246266c5d9860fbe","modified":1481178989162},{"_id":"public/2016/09/13/Sublime-Text之Evernote/index.html","hash":"4daa0cefbe7fb2f31a3320697ae9d5692e36cc85","modified":1481178989162},{"_id":"public/2016/09/13/Python资料收集/index.html","hash":"23916824cace87b26a7df453780880f4c08d26b9","modified":1481178989162},{"_id":"public/2016/09/12/设计模式概述/index.html","hash":"d8649d316d1922f92eb737a0b8bcab8ccb402df5","modified":1481178989163},{"_id":"public/2016/09/11/MathJax-tutorial/index.html","hash":"e7904dbb9feb6d4f19d3a3b3116a6f6661c31608","modified":1481178989163},{"_id":"public/2016/09/11/Math-直线与方程/index.html","hash":"0c62163fd36b70ec6cf81e6155b5cb6d2c9dafe3","modified":1481178989163},{"_id":"public/2016/09/10/Math-向量空间－《线性代数及应用》/index.html","hash":"9057a0111f1ba173a8c8c9009227892cf1d8f952","modified":1481178989163},{"_id":"public/2016/09/08/Math-行列式－《线性代数及应用》/index.html","hash":"e3acbc99ac422ab82b2d57f17284c7b5b27f206c","modified":1481178989163},{"_id":"public/2016/09/04/Math-矩阵代数－《线性代数及应用》/index.html","hash":"63d39018f32ebb69f508abf6f70c4fc96aeb3162","modified":1481178989163},{"_id":"public/2016/09/03/开源项目推荐/index.html","hash":"fb50fcb4056f12f34a58ba207bb31978f87f9160","modified":1481178989163},{"_id":"public/2016/09/03/Math-线性方程组－《线性代数及应用》/index.html","hash":"c0b32e03b7c79fa82ac93f8af57988ddf71f9a69","modified":1481178989163},{"_id":"public/2016/09/03/JavaScript之表达式和运算符/index.html","hash":"3324078884407e64385b088c7b3c5c977f4b4a3b","modified":1481178989163},{"_id":"public/2016/08/18/对象的创建和销毁-《Effective-Java》笔记/index.html","hash":"6cc6c1fee1c7a486ad5eb9ed22f6a80472d7c5a0","modified":1481178989163},{"_id":"public/2016/05/29/Quart表达式详解/index.html","hash":"8927728a01ee4885820a8634ae39852f39972641","modified":1481178989163},{"_id":"public/2015/12/28/在IDEA上远程调试Java-Web项目/index.html","hash":"3fd0ec714ee4d337641253baeb117634848c7af1","modified":1481178989163},{"_id":"public/2015/08/22/Python语法预览/index.html","hash":"045057b61a6357ef9419a787934da456637750b4","modified":1481178989163},{"_id":"public/archives/index.html","hash":"b374c29a0898ac49c4cb262aa61b18a7b7d2c9e2","modified":1481178989163},{"_id":"public/archives/2015/index.html","hash":"3833aa45d7643f96269126e82c2e15ca752b2bef","modified":1481178989164},{"_id":"public/archives/2016/index.html","hash":"4e386efc319fae9420cc5886ab29674ea9dc74f2","modified":1481178989164},{"_id":"public/archives/2016/09/index.html","hash":"171a5df2c3761b40c568ffd43e6e2b7f5c96f121","modified":1481178989164},{"_id":"public/categories/Math/index.html","hash":"5aadb5bfa61300b692592f6df6a5dc082b114756","modified":1481178989164},{"_id":"public/categories/sublime/index.html","hash":"60d241c550bf66a1d995514face9710ae6410580","modified":1481178989164},{"_id":"public/categories/Java/index.html","hash":"2be998f51fc8de44bd220ce6d6d3cf82bae6e006","modified":1481178989164},{"_id":"public/index.html","hash":"c7b437d54a55bc246129a8b026cb7b0b8276a90a","modified":1481178989164},{"_id":"public/tags/note/index.html","hash":"6e46dc233b8e696abb39d5f0020971c51349e063","modified":1481178989164},{"_id":"public/tags/Math/index.html","hash":"d7b58fd06d0b787514e8969c5f84d1987484b1a3","modified":1481178989164},{"_id":"public/tags/Linear-Algebra/index.html","hash":"45de730bb8d52b9f9f4e74b36156cdf5ae3435d3","modified":1481178989164},{"_id":"public/tags/markdown/index.html","hash":"5c1dd2c3d64c71b8a37639965107f1c340b48379","modified":1481178989164},{"_id":"public/tags/sublime/index.html","hash":"05be988712bad80223e68adc178143a98c372833","modified":1481178989164},{"_id":"public/tags/Java/index.html","hash":"5851b4e9c843743a121edb1a9afd784b153752f7","modified":1481178989164},{"_id":"public/tags/app/index.html","hash":"b80b821913d444a7d542c8e655d6fcf6acf2fca0","modified":1481178989174},{"_id":"public/tags/Mac/index.html","hash":"866b08ec2790d14a031ef2b933d3d8c341f6e3bb","modified":1481178989174},{"_id":"public/tags/Window/index.html","hash":"e9ae9433d3cd0b126467fd5e191c8b6df90adf98","modified":1481178989174},{"_id":"public/tags/Linux/index.html","hash":"ad3613d28872307d4a73c20f7a4fda46c5f4cf56","modified":1481178989175},{"_id":"public/2016/12/08/Math-DM-07-集合/index.html","hash":"d2b1ce62bf1092afbdd2b9f19a909312656fe8ac","modified":1481178989175},{"_id":"public/2016/12/04/Math-DM-06-证明导论/index.html","hash":"e9b2c9973e417145e59523ea496c34218804b857","modified":1481178989175},{"_id":"public/2016/12/03/Math-DM-05-推理规则/index.html","hash":"70c2f14f6d7321163ed119cabff036c6630fb6d2","modified":1481178989175},{"_id":"public/2016/12/03/Math-DM-04-嵌套量词/index.html","hash":"feec9c0647844ae718f00e9f32bedd9ed51dbee2","modified":1481178989175},{"_id":"public/2016/11/30/Math-DM-03-谓词逻辑/index.html","hash":"7a06f669ffbb2c8515688f5563552c84f0dfcc9f","modified":1481178989175},{"_id":"public/2016/11/26/Math-DM-02-逻辑等价/index.html","hash":"5d82a427fb34206782d67bb07e482ea3de916afc","modified":1481178989175},{"_id":"public/2016/11/26/Math-DM-01-基本逻辑/index.html","hash":"e114887c20115edbbb9e49e79ba2144f8f8e63ef","modified":1481178989175},{"_id":"public/2016/11/26/Application/index.html","hash":"d519a52fb2132e38f102b882df1fa57ab8e9c700","modified":1481178989175},{"_id":"public/2016/10/05/Math-算法-整数－矩阵/index.html","hash":"d62d5bfb4ff4b8b0557ec7b64f2ece386232599d","modified":1481178989175},{"_id":"public/2016/10/02/Math-集合-函数-数列/index.html","hash":"27a54a4ec82d71152adf5f8fd7562e942bf55f5e","modified":1481178989175},{"_id":"public/archives/page/2/index.html","hash":"b6d3c0e562c0aefc0f6de5e7a4d9eeebf7312893","modified":1481178989175},{"_id":"public/archives/2016/page/2/index.html","hash":"89d9c2e4a4eff8033c1fabdee4f5bfc474c6bc5c","modified":1481178989175},{"_id":"public/archives/2016/10/index.html","hash":"1e6a3b63eb3c8679b7da97e3866ed91a8b4cc712","modified":1481178989175},{"_id":"public/archives/2016/11/index.html","hash":"f48a90135584be677f9c19a935c2bfb2dc85b04c","modified":1481178989175},{"_id":"public/archives/2016/12/index.html","hash":"2b47594e3830496f5e8b174b96f615eaa5533804","modified":1481178989175},{"_id":"public/page/2/index.html","hash":"c830041b653c282dfedae1413d8e4591f40dbc9a","modified":1481178989175},{"_id":"public/tags/Discrete-Mathematics/index.html","hash":"6383806b479dbc9743d998e35708ba8e34ba28c3","modified":1481178989175},{"_id":"public/CNAME","hash":"5c00228fe6fec1d4945c95bf59da340b3b0cae80","modified":1481178989181},{"_id":"public/images/avatar.jpeg","hash":"78e21b0e2038c70af8c58054fd0994bc5b9c3a79","modified":1481178989181},{"_id":"public/images/favicon.png","hash":"f7ca08f91ff7a432d6e8a75e8f2750862ab9aa37","modified":1481178989181},{"_id":"public/images/java_idea_1.png","hash":"3c766b4c85a268817369651217b05312d5bc3974","modified":1481178989181},{"_id":"public/images/java_idea_2.png","hash":"caaa69b506af5d5ed351706a801f4e2b38d4a1b5","modified":1481178989181},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481178989181},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1481178989181},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1481178989181},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1481178989181},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1481178989181},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1481178989181},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1481178989181},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1481178989181},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481178989181},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481178989181},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1481178989181},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1481178989181},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1481178989181},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1481178989181},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1481178989181},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1481178989181},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481178989181},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481178989181},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1481178989181},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481178989181},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481178989181},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481178989181},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481178989182},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481178989182},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1481178989712},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1481178989717},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1481178989717},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1481178989723},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1481178989723},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1481178989723},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1481178989723},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1481178989723},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1481178989724},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1481178989724},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1481178989724},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1481178989724},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1481178989724},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1481178989724},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1481178989724},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1481178989724},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1481178989724},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1481178989724},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1481178989724},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1481178989724},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1481178989724},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1481178989724},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1481178989724},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1481178989724},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1481178989724},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1481178989725},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1481178989725},{"_id":"public/vendors/fastclick/README.html","hash":"c52d599f3a276053019fc41af2759ce6491ef581","modified":1481178989725},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1481178989725},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1481178989725},{"_id":"public/css/main.css","hash":"e05cd2818263497ce8559f36f2b0252deb30323a","modified":1481178989725},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1481178989725},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1481178989725},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1481178989725},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1481178989725},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1481178989725},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1481178989725},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1481178989725},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1481178989725},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1481178989725},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1481178989725},{"_id":"public/images/inference_rule_!.png","hash":"8ec94dd9db817ac18fed669f3647c33546a11f91","modified":1481178989725},{"_id":"public/images/inference_rule.png","hash":"6c6214e358d9874a8d732b02d4c5df41f0a7de8e","modified":1481178989728},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1481178989734},{"_id":"public/images/math_function_2.png","hash":"e39ff63946e552708eb658042326859ab8dfecd4","modified":1481178989747},{"_id":"public/images/math_function_1.png","hash":"204487aaca8b35436dfa3d575a90d3d14bbc3f90","modified":1481178989749}],"Category":[{"name":"JavaScript","_id":"ciwfzq43s00069ruikkc2j25a"},{"name":"Math","_id":"ciwfzq441000g9rui7youz0iv"},{"name":"MathJax","_id":"ciwfzq44j001f9ruitciv1vdn"},{"name":"sublime","_id":"ciwfzq44n001p9ruim2llspok"},{"name":"Java","_id":"ciwfzq44q001w9ruipz86twqb"},{"name":"Python","_id":"ciwfzq44t00229ruix2sa075p"},{"name":"IDEA","_id":"ciwfzq44z002g9rui90or68rt"},{"name":"设计模式","_id":"ciwfzq450002m9ruizhirxe7f"},{"name":"资源","_id":"ciwfzq451002s9rui45p1ajww"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2016-09-03T02:57:20.000Z","updated":"2016-09-03T02:57:20.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ciwfzq3yp00009ruihrjjzgyn","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\"><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n<body>\n\n<!-- hexo-inject:begin --><!-- hexo-inject:end --><script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n<body>\n\n<!-- hexo-inject:begin --><!-- hexo-inject:end --><script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n\n</body>\n</html>"},{"title":"about","date":"2016-09-03T01:14:03.000Z","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-09-03 09:14:03\ncomments: false\n---\n","updated":"2016-09-11T06:59:55.000Z","path":"about/index.html","layout":"page","_id":"ciwfzq43g00019rui9iyhidsy","content":"","excerpt":"","more":""},{"title":"categories","date":"2016-09-03T02:50:00.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-09-03 10:50:00\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-09-03T02:50:30.000Z","path":"categories/index.html","layout":"page","_id":"ciwfzq43n00039ruig6wok8t5","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-09-03T02:48:41.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-09-03 10:48:41\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-09-03T02:49:38.000Z","path":"tags/index.html","layout":"page","_id":"ciwfzq43t00079rui4se7er1e","content":"","excerpt":"","more":""}],"Post":[{"title":"软件推荐","date":"2016-11-26T06:56:00.000Z","_content":"\n|名称|描述|平台|\n|:--|:--| :--|\n|[Toogl](https://www.toggl.com/)| 时间管理软件|all|\n|[Pomotodo](https://pomotodo.com/app/)|番茄工作法| all|\n|[Alfred](https://www.alfredapp.com/powerpack/) [Alfred 插件集合](http://alfredworkflow.com/)| Mac最好用的快速启动工具|Mac|\n|[Moom](http://manytricks.com/moom/)| 分屏工具 |Mac|\n|[Go2Shell](http://zipzapmac.com/Go2Shell)|在Finder打开terminal |Mac|\n|[OmniFocus](https://www.omnigroup.com/)|GTD管理软件|Mac iOS|\n|[Snappy](http://wwww.snappy-app.com)|截屏软件|Mac|\n|[Near Lock](http://nearlock.me/)| 用iPhone解锁Mac| Mac iOS|\n|[Dropbox](https://www.dropbox.com/) | Dropbox 软件|Mac Window Linux iPhone Android|\n|[Intellij IDEA](https://www.jetbrains.com/idea/) | 最好用，最智能的Java IDE|Mac Window|\n|[Sublime Text](https://www.sublimetext.com/) | 流行的跨平台编辑器|Mac Window|\n|[TyBase](http://www.typhoonsystems.com.au/projects/tybase/)| 数据库设计| Mac|\n|[Basejump](https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8)| base64编码工具| Mac|\n|[fHash](https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8)| 哈希计算工具，支持MD5,SHA1,SHA256,CRC32|Mac|\n|[noodle](https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8) |SSH 连接工具|Mac|\n|[Minity](https://minifyapp.com/)|代码压缩 |Mac|\n|AVPlayer| 视频播放器，可通过FTP，web等多种方式播放视频| iOS|\n\n","source":"_posts/Application.md","raw":"---\ntitle: 软件推荐\ndate: 2016-11-26 14:56:00\ntags: [app,Mac,Window,Linux]\ncategories: JavaScript\n---\n\n|名称|描述|平台|\n|:--|:--| :--|\n|[Toogl](https://www.toggl.com/)| 时间管理软件|all|\n|[Pomotodo](https://pomotodo.com/app/)|番茄工作法| all|\n|[Alfred](https://www.alfredapp.com/powerpack/) [Alfred 插件集合](http://alfredworkflow.com/)| Mac最好用的快速启动工具|Mac|\n|[Moom](http://manytricks.com/moom/)| 分屏工具 |Mac|\n|[Go2Shell](http://zipzapmac.com/Go2Shell)|在Finder打开terminal |Mac|\n|[OmniFocus](https://www.omnigroup.com/)|GTD管理软件|Mac iOS|\n|[Snappy](http://wwww.snappy-app.com)|截屏软件|Mac|\n|[Near Lock](http://nearlock.me/)| 用iPhone解锁Mac| Mac iOS|\n|[Dropbox](https://www.dropbox.com/) | Dropbox 软件|Mac Window Linux iPhone Android|\n|[Intellij IDEA](https://www.jetbrains.com/idea/) | 最好用，最智能的Java IDE|Mac Window|\n|[Sublime Text](https://www.sublimetext.com/) | 流行的跨平台编辑器|Mac Window|\n|[TyBase](http://www.typhoonsystems.com.au/projects/tybase/)| 数据库设计| Mac|\n|[Basejump](https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&ign-mpt=uo%3D8)| base64编码工具| Mac|\n|[fHash](https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&ign-mpt=uo%3D8)| 哈希计算工具，支持MD5,SHA1,SHA256,CRC32|Mac|\n|[noodle](https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&ign-mpt=uo%3D8) |SSH 连接工具|Mac|\n|[Minity](https://minifyapp.com/)|代码压缩 |Mac|\n|AVPlayer| 视频播放器，可通过FTP，web等多种方式播放视频| iOS|\n\n","slug":"Application","published":1,"updated":"2016-11-26T07:11:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43i00029ruir1681t19","content":"<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">平台</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.toggl.com/\" target=\"_blank\" rel=\"external\">Toogl</a></td>\n<td style=\"text-align:left\">时间管理软件</td>\n<td style=\"text-align:left\">all</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://pomotodo.com/app/\" target=\"_blank\" rel=\"external\">Pomotodo</a></td>\n<td style=\"text-align:left\">番茄工作法</td>\n<td style=\"text-align:left\">all</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.alfredapp.com/powerpack/\" target=\"_blank\" rel=\"external\">Alfred</a> <a href=\"http://alfredworkflow.com/\" target=\"_blank\" rel=\"external\">Alfred 插件集合</a></td>\n<td style=\"text-align:left\">Mac最好用的快速启动工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://manytricks.com/moom/\" target=\"_blank\" rel=\"external\">Moom</a></td>\n<td style=\"text-align:left\">分屏工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://zipzapmac.com/Go2Shell\" target=\"_blank\" rel=\"external\">Go2Shell</a></td>\n<td style=\"text-align:left\">在Finder打开terminal</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.omnigroup.com/\" target=\"_blank\" rel=\"external\">OmniFocus</a></td>\n<td style=\"text-align:left\">GTD管理软件</td>\n<td style=\"text-align:left\">Mac iOS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://wwww.snappy-app.com\" target=\"_blank\" rel=\"external\">Snappy</a></td>\n<td style=\"text-align:left\">截屏软件</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://nearlock.me/\" target=\"_blank\" rel=\"external\">Near Lock</a></td>\n<td style=\"text-align:left\">用iPhone解锁Mac</td>\n<td style=\"text-align:left\">Mac iOS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"external\">Dropbox</a></td>\n<td style=\"text-align:left\">Dropbox 软件</td>\n<td style=\"text-align:left\">Mac Window Linux iPhone Android</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"external\">Intellij IDEA</a></td>\n<td style=\"text-align:left\">最好用，最智能的Java IDE</td>\n<td style=\"text-align:left\">Mac Window</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.sublimetext.com/\" target=\"_blank\" rel=\"external\">Sublime Text</a></td>\n<td style=\"text-align:left\">流行的跨平台编辑器</td>\n<td style=\"text-align:left\">Mac Window</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://www.typhoonsystems.com.au/projects/tybase/\" target=\"_blank\" rel=\"external\">TyBase</a></td>\n<td style=\"text-align:left\">数据库设计</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&amp;ign-mpt=uo%3D8\" target=\"_blank\" rel=\"external\">Basejump</a></td>\n<td style=\"text-align:left\">base64编码工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&amp;ign-mpt=uo%3D8\" target=\"_blank\" rel=\"external\">fHash</a></td>\n<td style=\"text-align:left\">哈希计算工具，支持MD5,SHA1,SHA256,CRC32</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&amp;ign-mpt=uo%3D8\" target=\"_blank\" rel=\"external\">noodle</a></td>\n<td style=\"text-align:left\">SSH 连接工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://minifyapp.com/\" target=\"_blank\" rel=\"external\">Minity</a></td>\n<td style=\"text-align:left\">代码压缩</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AVPlayer</td>\n<td style=\"text-align:left\">视频播放器，可通过FTP，web等多种方式播放视频</td>\n<td style=\"text-align:left\">iOS</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">平台</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.toggl.com/\">Toogl</a></td>\n<td style=\"text-align:left\">时间管理软件</td>\n<td style=\"text-align:left\">all</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://pomotodo.com/app/\">Pomotodo</a></td>\n<td style=\"text-align:left\">番茄工作法</td>\n<td style=\"text-align:left\">all</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.alfredapp.com/powerpack/\">Alfred</a> <a href=\"http://alfredworkflow.com/\">Alfred 插件集合</a></td>\n<td style=\"text-align:left\">Mac最好用的快速启动工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://manytricks.com/moom/\">Moom</a></td>\n<td style=\"text-align:left\">分屏工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://zipzapmac.com/Go2Shell\">Go2Shell</a></td>\n<td style=\"text-align:left\">在Finder打开terminal</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.omnigroup.com/\">OmniFocus</a></td>\n<td style=\"text-align:left\">GTD管理软件</td>\n<td style=\"text-align:left\">Mac iOS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://wwww.snappy-app.com\">Snappy</a></td>\n<td style=\"text-align:left\">截屏软件</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://nearlock.me/\">Near Lock</a></td>\n<td style=\"text-align:left\">用iPhone解锁Mac</td>\n<td style=\"text-align:left\">Mac iOS</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.dropbox.com/\">Dropbox</a></td>\n<td style=\"text-align:left\">Dropbox 软件</td>\n<td style=\"text-align:left\">Mac Window Linux iPhone Android</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.jetbrains.com/idea/\">Intellij IDEA</a></td>\n<td style=\"text-align:left\">最好用，最智能的Java IDE</td>\n<td style=\"text-align:left\">Mac Window</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.sublimetext.com/\">Sublime Text</a></td>\n<td style=\"text-align:left\">流行的跨平台编辑器</td>\n<td style=\"text-align:left\">Mac Window</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://www.typhoonsystems.com.au/projects/tybase/\">TyBase</a></td>\n<td style=\"text-align:left\">数据库设计</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/basejump/id1060639224?mt=12&amp;ign-mpt=uo%3D8\">Basejump</a></td>\n<td style=\"text-align:left\">base64编码工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/fhash/id1055555711?mt=12&amp;ign-mpt=uo%3D8\">fHash</a></td>\n<td style=\"text-align:left\">哈希计算工具，支持MD5,SHA1,SHA256,CRC32</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://itunes.apple.com/cn/app/noodle/id1048842988?mt=12&amp;ign-mpt=uo%3D8\">noodle</a></td>\n<td style=\"text-align:left\">SSH 连接工具</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://minifyapp.com/\">Minity</a></td>\n<td style=\"text-align:left\">代码压缩</td>\n<td style=\"text-align:left\">Mac</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AVPlayer</td>\n<td style=\"text-align:left\">视频播放器，可通过FTP，web等多种方式播放视频</td>\n<td style=\"text-align:left\">iOS</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"JavaScript之表达式和运算符","date":"2016-09-03T07:33:59.000Z","_content":"\n# 1 表达式\n\n* 数组初始化表达式中，逗号之间的元素可以省略，空位会填充`undefined`。 \n* 在对象初始化表达式中，属性名称可以是字符串而不是标识符。  \n\n# 2 运算符概述\n\n&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  \n\n|运算符 |操作| A | N |类型|\n| :-- | :--|:-|:- | :--|\n| ++ | 前/后增量 | R | 1 | lval -> num|\n| -- | 前/后减量 | R | 1 | lval -> num|\n| - | 求反 | R | 1 | num->num |\n| + | 转换为数字 | R | 1 | num->num |\n| ~ | 按位求反 | R | 1 | int->int |\n| ! | 逻辑非 | R | 1 | bool->bool|\n| delete | 删除属性 | R | 1 | lval->bool |\n| typeof | 检测操作数类型 | R | 1 | any->str |\n| void | 返回undefined值 | R | 1 | any->undef |\n| * 、／、％ | 乘、除、求余 | L | 2 | num,num->num |\n| +、－| 加、减 | L | 2 | num,num->num |\n| + | 字符串连接 | L | 2 | str,str->str |\n| << | 左移位 | L | 2 | int,int->int |\n| >> | 有符号右移 | L | 2 | int,int->int |\n| >>> | 无符号右移 | L | 2 | int,int->int |\n| <、 <=、>、>= | 比较数字顺序 | L | 2 | num,num->bool |\n| <、 <=、>、>= | 比较在字母表中的顺序 | L | 2 | str,str->bool |\n| instanceof | 测试对象类 | L | 2 | obj,func->bool |\n| in | 测试属性是否存在 | L | 2 | str,obj->bool |\n| == | 判断相等 | L | 2 | any,any->bool |\n| != | 判断不等 | L | 2 | any,any->bool |\n| === | 判断恒等 | L | 2 | any,any->bool |\n| !== | 判断非恒等 | L | 2 | any,any-bool |\n| & | 按位与 | L | 2| int,int->int |\n| ^ | 按位异或 | L | 2 | int,int->int |\n| &#124; | 按位或 | L | 2 | int,int->int |\n| && | 逻辑与 | L | 2| any,any->any |\n| &#124; &#124; | 逻辑或 | L | 2 | any,any->any |\n| ? : | 条件运算符 | R | 3 | bool,any,any->any |\n| = | 变量赋值或对象属性赋值 | R | 2 | lval,any->any |\n| *= 、/=、%=、+=、-=、&= <br/> ^=、&#124;=、<<=、>>=、>>>= | 运算且赋值 | R | 2 | lval,any->any |\n| , | 忽略第一个操作数，返回第二个操作数 | L | 2 | any,any->any |\n\n* 属性访问表达式和调用表达式的优先级要比所有运算符都高。  \n\n## 2.1 左值\n\n* ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   \n\n## 2.2 + 运算法\n\n* \\+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  \n* 如果操作数中没有字符串，则都转化为数字。    \n* 加法操作符的行为表现为：\n    - 如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  \n    - 转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串\n    - 否则，两个操作数都转换为数字进行加法操作\n\n## 2.3 位运算符\n\n* 位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。   \n* 移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。   \n* 位运算会将NaN、Infinity和-Infinity转换为0。   \n\n## 2.4 相等和不等运算\n### 2.4.1 严格相等运算符\n\n* \"===\"首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   \n* 如果两个值类型不相同，则它们不想等。  \n* 如果两个值都是 `null`或者都是`undefined`，则它们相等，`null`和`undefined`不相等。   \n* 如果其中一个值是`NaN`或者两个值都是`NaN`，则它们不相等。  \n* 如果两个值为数字且数值相等，则它们相等，`0===-0 = true`。\n* 如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 \n* 如果两个引用值指向同一对象、数组或函数，则它们是相等的。\n\n### 2.4.2 相等运算符\n\n* 如果两个操作数类型一样，则执行严格相等一样的比较规则。   \n* 如果两个操作数的类型不一样，则遵守如下规则：\n    - `null==undefined = true`\n    - 字符串和数字比较时，将字符串转换为数字，再做比较\n    - 如果其中一个操作数为布尔类型，则将其转换为数字再做比较。\n    - 如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  \n    - 其它不同类型之间的比较均不相等。  \n\n## 2.5 关系运算符\n\n* 只有数字和字符串才能真正的执行比较操作。    \n* 如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  \n* 0等于-0，`Infinity`比任何数都大(除了本身)，`-Infinity`比任何数都小(除了本身)。\n* 其中一个操作数为`NaN`，比较操作符总是返回`false`。\n\n## 2.6 逻辑表达式\n\n* 在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  \n* 在逻辑或中，当左操作数为真值时，返回该值。 \n\n## 2.7 带操作的赋值运算\n\n* `a op= b`等价于 `a=a op b`。 `op`代表一个运算符。第一个表达式中`a`只计算了一次，第二个表达式中`a`计算了两次。  \n* 当`a`是带有副作用的表达式时，两者不等价。   \n\n## 2.8 eval()\n\n* eval()是一个函数，但被当作运算符对待。   \n* eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   \n* eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回`undefined`。   \n* eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  \n* eval()的字符串必须在语法上讲的通。\n* ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  \n* 当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  \n* ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   \n\n### 2.8.1 严格模式下的eval\n\n* 当在严格模式下，或者eval()执行的代码段以`\"use strict\"`开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。   \n\n## 2.9 typeof 运算符\n\n| x| typeof x |\n|:--| :----|\n|undefined | \"undefined\"|\n|null | \"object\"|\n|true或false | \"boolean\"|\n|任意数字或NaN、Infinity | \"number\" |\n|任意字符串 | \"string\" |\n| 任意函数 | \"function\" |\n| 任意内置对象 非函数 | \"object\" |\n|任意宿主对象 | 由编译器各自实现的字符串 ，但不是 \"undefined\"、\"boolean\"、\"number\"、\"string\"|\n\n* ECMAScript 3规范规定所有内置可执行对象，typeof一律返回\"function\"。\n* ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回\"function\"。\n\n## 2.10 delete 运算符\n\n* delete删除属性成功将返回`true`\n* delete无法删除内置核心、客户端属性、通过`var`声明的变量、`function`定义的函数、函数参数。\n* 在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   \n\n## 2.11 void 运算符\n\n* void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回`undefined`","source":"_posts/JavaScript之表达式和运算符.md","raw":"---\ntitle: JavaScript之表达式和运算符\ndate: 2016-09-03 15:33:59\ntags: [JavaScript,Web,note]\ncategories: JavaScript\n---\n\n# 1 表达式\n\n* 数组初始化表达式中，逗号之间的元素可以省略，空位会填充`undefined`。 \n* 在对象初始化表达式中，属性名称可以是字符串而不是标识符。  \n\n# 2 运算符概述\n\n&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  \n\n|运算符 |操作| A | N |类型|\n| :-- | :--|:-|:- | :--|\n| ++ | 前/后增量 | R | 1 | lval -> num|\n| -- | 前/后减量 | R | 1 | lval -> num|\n| - | 求反 | R | 1 | num->num |\n| + | 转换为数字 | R | 1 | num->num |\n| ~ | 按位求反 | R | 1 | int->int |\n| ! | 逻辑非 | R | 1 | bool->bool|\n| delete | 删除属性 | R | 1 | lval->bool |\n| typeof | 检测操作数类型 | R | 1 | any->str |\n| void | 返回undefined值 | R | 1 | any->undef |\n| * 、／、％ | 乘、除、求余 | L | 2 | num,num->num |\n| +、－| 加、减 | L | 2 | num,num->num |\n| + | 字符串连接 | L | 2 | str,str->str |\n| << | 左移位 | L | 2 | int,int->int |\n| >> | 有符号右移 | L | 2 | int,int->int |\n| >>> | 无符号右移 | L | 2 | int,int->int |\n| <、 <=、>、>= | 比较数字顺序 | L | 2 | num,num->bool |\n| <、 <=、>、>= | 比较在字母表中的顺序 | L | 2 | str,str->bool |\n| instanceof | 测试对象类 | L | 2 | obj,func->bool |\n| in | 测试属性是否存在 | L | 2 | str,obj->bool |\n| == | 判断相等 | L | 2 | any,any->bool |\n| != | 判断不等 | L | 2 | any,any->bool |\n| === | 判断恒等 | L | 2 | any,any->bool |\n| !== | 判断非恒等 | L | 2 | any,any-bool |\n| & | 按位与 | L | 2| int,int->int |\n| ^ | 按位异或 | L | 2 | int,int->int |\n| &#124; | 按位或 | L | 2 | int,int->int |\n| && | 逻辑与 | L | 2| any,any->any |\n| &#124; &#124; | 逻辑或 | L | 2 | any,any->any |\n| ? : | 条件运算符 | R | 3 | bool,any,any->any |\n| = | 变量赋值或对象属性赋值 | R | 2 | lval,any->any |\n| *= 、/=、%=、+=、-=、&= <br/> ^=、&#124;=、<<=、>>=、>>>= | 运算且赋值 | R | 2 | lval,any->any |\n| , | 忽略第一个操作数，返回第二个操作数 | L | 2 | any,any->any |\n\n* 属性访问表达式和调用表达式的优先级要比所有运算符都高。  \n\n## 2.1 左值\n\n* ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   \n\n## 2.2 + 运算法\n\n* \\+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  \n* 如果操作数中没有字符串，则都转化为数字。    \n* 加法操作符的行为表现为：\n    - 如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  \n    - 转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串\n    - 否则，两个操作数都转换为数字进行加法操作\n\n## 2.3 位运算符\n\n* 位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。   \n* 移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。   \n* 位运算会将NaN、Infinity和-Infinity转换为0。   \n\n## 2.4 相等和不等运算\n### 2.4.1 严格相等运算符\n\n* \"===\"首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   \n* 如果两个值类型不相同，则它们不想等。  \n* 如果两个值都是 `null`或者都是`undefined`，则它们相等，`null`和`undefined`不相等。   \n* 如果其中一个值是`NaN`或者两个值都是`NaN`，则它们不相等。  \n* 如果两个值为数字且数值相等，则它们相等，`0===-0 = true`。\n* 如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 \n* 如果两个引用值指向同一对象、数组或函数，则它们是相等的。\n\n### 2.4.2 相等运算符\n\n* 如果两个操作数类型一样，则执行严格相等一样的比较规则。   \n* 如果两个操作数的类型不一样，则遵守如下规则：\n    - `null==undefined = true`\n    - 字符串和数字比较时，将字符串转换为数字，再做比较\n    - 如果其中一个操作数为布尔类型，则将其转换为数字再做比较。\n    - 如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  \n    - 其它不同类型之间的比较均不相等。  \n\n## 2.5 关系运算符\n\n* 只有数字和字符串才能真正的执行比较操作。    \n* 如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  \n* 0等于-0，`Infinity`比任何数都大(除了本身)，`-Infinity`比任何数都小(除了本身)。\n* 其中一个操作数为`NaN`，比较操作符总是返回`false`。\n\n## 2.6 逻辑表达式\n\n* 在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  \n* 在逻辑或中，当左操作数为真值时，返回该值。 \n\n## 2.7 带操作的赋值运算\n\n* `a op= b`等价于 `a=a op b`。 `op`代表一个运算符。第一个表达式中`a`只计算了一次，第二个表达式中`a`计算了两次。  \n* 当`a`是带有副作用的表达式时，两者不等价。   \n\n## 2.8 eval()\n\n* eval()是一个函数，但被当作运算符对待。   \n* eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   \n* eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回`undefined`。   \n* eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  \n* eval()的字符串必须在语法上讲的通。\n* ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  \n* 当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  \n* ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   \n\n### 2.8.1 严格模式下的eval\n\n* 当在严格模式下，或者eval()执行的代码段以`\"use strict\"`开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。   \n\n## 2.9 typeof 运算符\n\n| x| typeof x |\n|:--| :----|\n|undefined | \"undefined\"|\n|null | \"object\"|\n|true或false | \"boolean\"|\n|任意数字或NaN、Infinity | \"number\" |\n|任意字符串 | \"string\" |\n| 任意函数 | \"function\" |\n| 任意内置对象 非函数 | \"object\" |\n|任意宿主对象 | 由编译器各自实现的字符串 ，但不是 \"undefined\"、\"boolean\"、\"number\"、\"string\"|\n\n* ECMAScript 3规范规定所有内置可执行对象，typeof一律返回\"function\"。\n* ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回\"function\"。\n\n## 2.10 delete 运算符\n\n* delete删除属性成功将返回`true`\n* delete无法删除内置核心、客户端属性、通过`var`声明的变量、`function`定义的函数、函数参数。\n* 在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   \n\n## 2.11 void 运算符\n\n* void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回`undefined`","slug":"JavaScript之表达式和运算符","published":1,"updated":"2016-09-03T10:15:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43n00049ruiawbgjz0d","content":"<h1 id=\"1-表达式\"><a href=\"#1-表达式\" class=\"headerlink\" title=\"1 表达式\"></a>1 表达式</h1><ul>\n<li>数组初始化表达式中，逗号之间的元素可以省略，空位会填充<code>undefined</code>。 </li>\n<li>在对象初始化表达式中，属性名称可以是字符串而不是标识符。  </li>\n</ul>\n<h1 id=\"2-运算符概述\"><a href=\"#2-运算符概述\" class=\"headerlink\" title=\"2 运算符概述\"></a>2 运算符概述</h1><p>&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">操作</th>\n<th style=\"text-align:left\">A</th>\n<th style=\"text-align:left\">N</th>\n<th style=\"text-align:left\">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">++</td>\n<td style=\"text-align:left\">前/后增量</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–</td>\n<td style=\"text-align:left\">前/后减量</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">求反</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">转换为数字</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">~</td>\n<td style=\"text-align:left\">按位求反</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!</td>\n<td style=\"text-align:left\">逻辑非</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">bool-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">delete</td>\n<td style=\"text-align:left\">删除属性</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">typeof</td>\n<td style=\"text-align:left\">检测操作数类型</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">any-&gt;str</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void</td>\n<td style=\"text-align:left\">返回undefined值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">any-&gt;undef</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">* 、／、％</td>\n<td style=\"text-align:left\">乘、除、求余</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+、－</td>\n<td style=\"text-align:left\">加、减</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">字符串连接</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,str-&gt;str</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&lt;</td>\n<td style=\"text-align:left\">左移位</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;</td>\n<td style=\"text-align:left\">有符号右移</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;&gt;</td>\n<td style=\"text-align:left\">无符号右移</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td style=\"text-align:left\">比较数字顺序</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td style=\"text-align:left\">比较在字母表中的顺序</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,str-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">instanceof</td>\n<td style=\"text-align:left\">测试对象类</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">obj,func-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">in</td>\n<td style=\"text-align:left\">测试属性是否存在</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,obj-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">==</td>\n<td style=\"text-align:left\">判断相等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!=</td>\n<td style=\"text-align:left\">判断不等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">===</td>\n<td style=\"text-align:left\">判断恒等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!==</td>\n<td style=\"text-align:left\">判断非恒等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;</td>\n<td style=\"text-align:left\">按位与</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">按位异或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&#124;</td>\n<td style=\"text-align:left\">按位或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;&amp;</td>\n<td style=\"text-align:left\">逻辑与</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&#124; &#124;</td>\n<td style=\"text-align:left\">逻辑或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">? :</td>\n<td style=\"text-align:left\">条件运算符</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">bool,any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">=</td>\n<td style=\"text-align:left\">变量赋值或对象属性赋值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*= 、/=、%=、+=、-=、&amp;= <br> ^=、&#124;=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=</td>\n<td style=\"text-align:left\">运算且赋值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">,</td>\n<td style=\"text-align:left\">忽略第一个操作数，返回第二个操作数</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>属性访问表达式和调用表达式的优先级要比所有运算符都高。  </li>\n</ul>\n<h2 id=\"2-1-左值\"><a href=\"#2-1-左值\" class=\"headerlink\" title=\"2.1 左值\"></a>2.1 左值</h2><ul>\n<li>ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   </li>\n</ul>\n<h2 id=\"2-2-运算法\"><a href=\"#2-2-运算法\" class=\"headerlink\" title=\"2.2 + 运算法\"></a>2.2 + 运算法</h2><ul>\n<li>+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  </li>\n<li>如果操作数中没有字符串，则都转化为数字。    </li>\n<li>加法操作符的行为表现为：<ul>\n<li>如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  </li>\n<li>转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串</li>\n<li>否则，两个操作数都转换为数字进行加法操作</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-3-位运算符\"><a href=\"#2-3-位运算符\" class=\"headerlink\" title=\"2.3 位运算符\"></a>2.3 位运算符</h2><ul>\n<li>位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。   </li>\n<li>移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。   </li>\n<li>位运算会将NaN、Infinity和-Infinity转换为0。   </li>\n</ul>\n<h2 id=\"2-4-相等和不等运算\"><a href=\"#2-4-相等和不等运算\" class=\"headerlink\" title=\"2.4 相等和不等运算\"></a>2.4 相等和不等运算</h2><h3 id=\"2-4-1-严格相等运算符\"><a href=\"#2-4-1-严格相等运算符\" class=\"headerlink\" title=\"2.4.1 严格相等运算符\"></a>2.4.1 严格相等运算符</h3><ul>\n<li>“===”首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   </li>\n<li>如果两个值类型不相同，则它们不想等。  </li>\n<li>如果两个值都是 <code>null</code>或者都是<code>undefined</code>，则它们相等，<code>null</code>和<code>undefined</code>不相等。   </li>\n<li>如果其中一个值是<code>NaN</code>或者两个值都是<code>NaN</code>，则它们不相等。  </li>\n<li>如果两个值为数字且数值相等，则它们相等，<code>0===-0 = true</code>。</li>\n<li>如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 </li>\n<li>如果两个引用值指向同一对象、数组或函数，则它们是相等的。</li>\n</ul>\n<h3 id=\"2-4-2-相等运算符\"><a href=\"#2-4-2-相等运算符\" class=\"headerlink\" title=\"2.4.2 相等运算符\"></a>2.4.2 相等运算符</h3><ul>\n<li>如果两个操作数类型一样，则执行严格相等一样的比较规则。   </li>\n<li>如果两个操作数的类型不一样，则遵守如下规则：<ul>\n<li><code>null==undefined = true</code></li>\n<li>字符串和数字比较时，将字符串转换为数字，再做比较</li>\n<li>如果其中一个操作数为布尔类型，则将其转换为数字再做比较。</li>\n<li>如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  </li>\n<li>其它不同类型之间的比较均不相等。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-5-关系运算符\"><a href=\"#2-5-关系运算符\" class=\"headerlink\" title=\"2.5 关系运算符\"></a>2.5 关系运算符</h2><ul>\n<li>只有数字和字符串才能真正的执行比较操作。    </li>\n<li>如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  </li>\n<li>0等于-0，<code>Infinity</code>比任何数都大(除了本身)，<code>-Infinity</code>比任何数都小(除了本身)。</li>\n<li>其中一个操作数为<code>NaN</code>，比较操作符总是返回<code>false</code>。</li>\n</ul>\n<h2 id=\"2-6-逻辑表达式\"><a href=\"#2-6-逻辑表达式\" class=\"headerlink\" title=\"2.6 逻辑表达式\"></a>2.6 逻辑表达式</h2><ul>\n<li>在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  </li>\n<li>在逻辑或中，当左操作数为真值时，返回该值。 </li>\n</ul>\n<h2 id=\"2-7-带操作的赋值运算\"><a href=\"#2-7-带操作的赋值运算\" class=\"headerlink\" title=\"2.7 带操作的赋值运算\"></a>2.7 带操作的赋值运算</h2><ul>\n<li><code>a op= b</code>等价于 <code>a=a op b</code>。 <code>op</code>代表一个运算符。第一个表达式中<code>a</code>只计算了一次，第二个表达式中<code>a</code>计算了两次。  </li>\n<li>当<code>a</code>是带有副作用的表达式时，两者不等价。   </li>\n</ul>\n<h2 id=\"2-8-eval\"><a href=\"#2-8-eval\" class=\"headerlink\" title=\"2.8 eval()\"></a>2.8 eval()</h2><ul>\n<li>eval()是一个函数，但被当作运算符对待。   </li>\n<li>eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   </li>\n<li>eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回<code>undefined</code>。   </li>\n<li>eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  </li>\n<li>eval()的字符串必须在语法上讲的通。</li>\n<li>ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  </li>\n<li>当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  </li>\n<li>ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   </li>\n</ul>\n<h3 id=\"2-8-1-严格模式下的eval\"><a href=\"#2-8-1-严格模式下的eval\" class=\"headerlink\" title=\"2.8.1 严格模式下的eval\"></a>2.8.1 严格模式下的eval</h3><ul>\n<li>当在严格模式下，或者eval()执行的代码段以<code>&quot;use strict&quot;</code>开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。   </li>\n</ul>\n<h2 id=\"2-9-typeof-运算符\"><a href=\"#2-9-typeof-运算符\" class=\"headerlink\" title=\"2.9 typeof 运算符\"></a>2.9 typeof 运算符</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">x</th>\n<th style=\"text-align:left\">typeof x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">undefined</td>\n<td style=\"text-align:left\">“undefined”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">null</td>\n<td style=\"text-align:left\">“object”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">true或false</td>\n<td style=\"text-align:left\">“boolean”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意数字或NaN、Infinity</td>\n<td style=\"text-align:left\">“number”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意字符串</td>\n<td style=\"text-align:left\">“string”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意函数</td>\n<td style=\"text-align:left\">“function”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意内置对象 非函数</td>\n<td style=\"text-align:left\">“object”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意宿主对象</td>\n<td style=\"text-align:left\">由编译器各自实现的字符串 ，但不是 “undefined”、”boolean”、”number”、”string”</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>ECMAScript 3规范规定所有内置可执行对象，typeof一律返回”function”。</li>\n<li>ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回”function”。</li>\n</ul>\n<h2 id=\"2-10-delete-运算符\"><a href=\"#2-10-delete-运算符\" class=\"headerlink\" title=\"2.10 delete 运算符\"></a>2.10 delete 运算符</h2><ul>\n<li>delete删除属性成功将返回<code>true</code></li>\n<li>delete无法删除内置核心、客户端属性、通过<code>var</code>声明的变量、<code>function</code>定义的函数、函数参数。</li>\n<li>在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   </li>\n</ul>\n<h2 id=\"2-11-void-运算符\"><a href=\"#2-11-void-运算符\" class=\"headerlink\" title=\"2.11 void 运算符\"></a>2.11 void 运算符</h2><ul>\n<li>void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回<code>undefined</code></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"1-表达式\"><a href=\"#1-表达式\" class=\"headerlink\" title=\"1 表达式\"></a>1 表达式</h1><ul>\n<li>数组初始化表达式中，逗号之间的元素可以省略，空位会填充<code>undefined</code>。 </li>\n<li>在对象初始化表达式中，属性名称可以是字符串而不是标识符。  </li>\n</ul>\n<h1 id=\"2-运算符概述\"><a href=\"#2-运算符概述\" class=\"headerlink\" title=\"2 运算符概述\"></a>2 运算符概述</h1><p>&emsp;&emsp; 类型列表示期望的操作数类型，以及运算符结果类型。lval表示左值。  </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">操作</th>\n<th style=\"text-align:left\">A</th>\n<th style=\"text-align:left\">N</th>\n<th style=\"text-align:left\">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">++</td>\n<td style=\"text-align:left\">前/后增量</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">–</td>\n<td style=\"text-align:left\">前/后减量</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval -&gt; num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">求反</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">转换为数字</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">~</td>\n<td style=\"text-align:left\">按位求反</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!</td>\n<td style=\"text-align:left\">逻辑非</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">bool-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">delete</td>\n<td style=\"text-align:left\">删除属性</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">lval-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">typeof</td>\n<td style=\"text-align:left\">检测操作数类型</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">any-&gt;str</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void</td>\n<td style=\"text-align:left\">返回undefined值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">any-&gt;undef</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">* 、／、％</td>\n<td style=\"text-align:left\">乘、除、求余</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+、－</td>\n<td style=\"text-align:left\">加、减</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;num</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">字符串连接</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,str-&gt;str</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&lt;</td>\n<td style=\"text-align:left\">左移位</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;</td>\n<td style=\"text-align:left\">有符号右移</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;&gt;</td>\n<td style=\"text-align:left\">无符号右移</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td style=\"text-align:left\">比较数字顺序</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">num,num-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;、 &lt;=、&gt;、&gt;=</td>\n<td style=\"text-align:left\">比较在字母表中的顺序</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,str-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">instanceof</td>\n<td style=\"text-align:left\">测试对象类</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">obj,func-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">in</td>\n<td style=\"text-align:left\">测试属性是否存在</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">str,obj-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">==</td>\n<td style=\"text-align:left\">判断相等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!=</td>\n<td style=\"text-align:left\">判断不等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">===</td>\n<td style=\"text-align:left\">判断恒等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!==</td>\n<td style=\"text-align:left\">判断非恒等</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-bool</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;</td>\n<td style=\"text-align:left\">按位与</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">按位异或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&#124;</td>\n<td style=\"text-align:left\">按位或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">int,int-&gt;int</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;&amp;</td>\n<td style=\"text-align:left\">逻辑与</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&#124; &#124;</td>\n<td style=\"text-align:left\">逻辑或</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">? :</td>\n<td style=\"text-align:left\">条件运算符</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">bool,any,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">=</td>\n<td style=\"text-align:left\">变量赋值或对象属性赋值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*= 、/=、%=、+=、-=、&amp;= <br/> ^=、&#124;=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=</td>\n<td style=\"text-align:left\">运算且赋值</td>\n<td style=\"text-align:left\">R</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">lval,any-&gt;any</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">,</td>\n<td style=\"text-align:left\">忽略第一个操作数，返回第二个操作数</td>\n<td style=\"text-align:left\">L</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">any,any-&gt;any</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>属性访问表达式和调用表达式的优先级要比所有运算符都高。  </li>\n</ul>\n<h2 id=\"2-1-左值\"><a href=\"#2-1-左值\" class=\"headerlink\" title=\"2.1 左值\"></a>2.1 左值</h2><ul>\n<li>ECMAScript规范允许内置函数返回一个左值，但是自定义函数不能返回左值，不过如果返回的是对象的话，可以访问其属性。   </li>\n</ul>\n<h2 id=\"2-2-运算法\"><a href=\"#2-2-运算法\" class=\"headerlink\" title=\"2.2 + 运算法\"></a>2.2 + 运算法</h2><ul>\n<li>+ 运算法即可以作为加法运算，也可以作为字符串连接，但是优先考虑字符串连接。  </li>\n<li>如果操作数中没有字符串，则都转化为数字。    </li>\n<li>加法操作符的行为表现为：<ul>\n<li>如果其中一个操作时是对象，则尊照对象到原始值的转换规则转为原始值。  </li>\n<li>转化为原始值后，如果其中一个操作数是字符串的话，则转化为字符串</li>\n<li>否则，两个操作数都转换为数字进行加法操作</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-3-位运算符\"><a href=\"#2-3-位运算符\" class=\"headerlink\" title=\"2.3 位运算符\"></a>2.3 位运算符</h2><ul>\n<li>位运算会将操作数转换为数字，并强制表示为32位整数，这会忽略原格式中的小数部分和任何超过32位的二进制。   </li>\n<li>移位运算符要求右操作数在0～31之间，在将其操作数转化为无符号32位整数后，将舍弃第5位之后的二进制数。   </li>\n<li>位运算会将NaN、Infinity和-Infinity转换为0。   </li>\n</ul>\n<h2 id=\"2-4-相等和不等运算\"><a href=\"#2-4-相等和不等运算\" class=\"headerlink\" title=\"2.4 相等和不等运算\"></a>2.4 相等和不等运算</h2><h3 id=\"2-4-1-严格相等运算符\"><a href=\"#2-4-1-严格相等运算符\" class=\"headerlink\" title=\"2.4.1 严格相等运算符\"></a>2.4.1 严格相等运算符</h3><ul>\n<li>“===”首先计算操作数的值，然后比较这两个值，比较过程中没有任何类型转换。   </li>\n<li>如果两个值类型不相同，则它们不想等。  </li>\n<li>如果两个值都是 <code>null</code>或者都是<code>undefined</code>，则它们相等，<code>null</code>和<code>undefined</code>不相等。   </li>\n<li>如果其中一个值是<code>NaN</code>或者两个值都是<code>NaN</code>，则它们不相等。  </li>\n<li>如果两个值为数字且数值相等，则它们相等，<code>0===-0 = true</code>。</li>\n<li>如果两个值为字符串，且所含的对应位上的16位数完全相等，则它们相等。 </li>\n<li>如果两个引用值指向同一对象、数组或函数，则它们是相等的。</li>\n</ul>\n<h3 id=\"2-4-2-相等运算符\"><a href=\"#2-4-2-相等运算符\" class=\"headerlink\" title=\"2.4.2 相等运算符\"></a>2.4.2 相等运算符</h3><ul>\n<li>如果两个操作数类型一样，则执行严格相等一样的比较规则。   </li>\n<li>如果两个操作数的类型不一样，则遵守如下规则：<ul>\n<li><code>null==undefined = true</code></li>\n<li>字符串和数字比较时，将字符串转换为数字，再做比较</li>\n<li>如果其中一个操作数为布尔类型，则将其转换为数字再做比较。</li>\n<li>如果是对象和数字或字符串对比，按照对象转原始值的转换规则转换为原始值。  </li>\n<li>其它不同类型之间的比较均不相等。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-5-关系运算符\"><a href=\"#2-5-关系运算符\" class=\"headerlink\" title=\"2.5 关系运算符\"></a>2.5 关系运算符</h2><ul>\n<li>只有数字和字符串才能真正的执行比较操作。    </li>\n<li>如果操作数中不都包含字符串时，则都转化为数字进行数值比较。  </li>\n<li>0等于-0，<code>Infinity</code>比任何数都大(除了本身)，<code>-Infinity</code>比任何数都小(除了本身)。</li>\n<li>其中一个操作数为<code>NaN</code>，比较操作符总是返回<code>false</code>。</li>\n</ul>\n<h2 id=\"2-6-逻辑表达式\"><a href=\"#2-6-逻辑表达式\" class=\"headerlink\" title=\"2.6 逻辑表达式\"></a>2.6 逻辑表达式</h2><ul>\n<li>在逻辑与运算中，JavaScript先计算左操作数，如果为假植，则直接返回假植，如果为真值则返回右操作数的计算结果。  </li>\n<li>在逻辑或中，当左操作数为真值时，返回该值。 </li>\n</ul>\n<h2 id=\"2-7-带操作的赋值运算\"><a href=\"#2-7-带操作的赋值运算\" class=\"headerlink\" title=\"2.7 带操作的赋值运算\"></a>2.7 带操作的赋值运算</h2><ul>\n<li><code>a op= b</code>等价于 <code>a=a op b</code>。 <code>op</code>代表一个运算符。第一个表达式中<code>a</code>只计算了一次，第二个表达式中<code>a</code>计算了两次。  </li>\n<li>当<code>a</code>是带有副作用的表达式时，两者不等价。   </li>\n</ul>\n<h2 id=\"2-8-eval\"><a href=\"#2-8-eval\" class=\"headerlink\" title=\"2.8 eval()\"></a>2.8 eval()</h2><ul>\n<li>eval()是一个函数，但被当作运算符对待。   </li>\n<li>eval()只有一个参数，如果传入的参数不是字符串，只是简单的返回这个参数。   </li>\n<li>eval()将传入的字符串进行编译，编译失败抛出语法错误，编译成功则执行这段代码，并返回最后一个表达式或者语句的值，如果该语句没有值，则返回<code>undefined</code>。   </li>\n<li>eval()的字符串执行时的上下文环境和调用函数的上下文环境是一样的。  </li>\n<li>eval()的字符串必须在语法上讲的通。</li>\n<li>ECMAScript 3规范规定不允许对eval()赋予别名，实际上大多数实现很少这么做。  </li>\n<li>当通过别名调用时，eval()会将其字符串当成顶层的全局代码执行，执行的代码可能会修改或创建新的全局变量和全局函数，但不会使用主调函数的局部变量。  </li>\n<li>ECMAScript 5规定，当直接使用eval()时，在调用它的上下文作用域内执行，当使用别名调用时则使用全局对象作为上下文作用域，并且无法访问定义局部变量和函数。   </li>\n</ul>\n<h3 id=\"2-8-1-严格模式下的eval\"><a href=\"#2-8-1-严格模式下的eval\" class=\"headerlink\" title=\"2.8.1 严格模式下的eval\"></a>2.8.1 严格模式下的eval</h3><ul>\n<li>当在严格模式下，或者eval()执行的代码段以<code>&quot;use strict&quot;</code>开头时，无法定义新的局部变量和函数，只能查询或更改局部变量。   </li>\n</ul>\n<h2 id=\"2-9-typeof-运算符\"><a href=\"#2-9-typeof-运算符\" class=\"headerlink\" title=\"2.9 typeof 运算符\"></a>2.9 typeof 运算符</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">x</th>\n<th style=\"text-align:left\">typeof x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">undefined</td>\n<td style=\"text-align:left\">“undefined”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">null</td>\n<td style=\"text-align:left\">“object”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">true或false</td>\n<td style=\"text-align:left\">“boolean”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意数字或NaN、Infinity</td>\n<td style=\"text-align:left\">“number”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意字符串</td>\n<td style=\"text-align:left\">“string”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意函数</td>\n<td style=\"text-align:left\">“function”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意内置对象 非函数</td>\n<td style=\"text-align:left\">“object”</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">任意宿主对象</td>\n<td style=\"text-align:left\">由编译器各自实现的字符串 ，但不是 “undefined”、”boolean”、”number”、”string”</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>ECMAScript 3规范规定所有内置可执行对象，typeof一律返回”function”。</li>\n<li>ECMASCript 5规范规定所有可执行对象，包括内置对象和数组对象一律返回”function”。</li>\n</ul>\n<h2 id=\"2-10-delete-运算符\"><a href=\"#2-10-delete-运算符\" class=\"headerlink\" title=\"2.10 delete 运算符\"></a>2.10 delete 运算符</h2><ul>\n<li>delete删除属性成功将返回<code>true</code></li>\n<li>delete无法删除内置核心、客户端属性、通过<code>var</code>声明的变量、<code>function</code>定义的函数、函数参数。</li>\n<li>在严格模式下，delete的操作数是非法时，将抛出语法错误异常，如果操作数是不可配置的属性，将抛出类型错误异常。   </li>\n</ul>\n<h2 id=\"2-11-void-运算符\"><a href=\"#2-11-void-运算符\" class=\"headerlink\" title=\"2.11 void 运算符\"></a>2.11 void 运算符</h2><ul>\n<li>void运算符出现在操作数之间，操作数会照常计算，但忽略计算结果并返回<code>undefined</code></li>\n</ul>\n"},{"title":"Math-DM-01-基本逻辑","date":"2016-11-26T08:33:43.000Z","updated":"2016-11-28T14:58:00.000Z","_content":"## 命题逻辑\n逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。    \n涉及命题的逻辑领域称为命题演算或命题逻辑。\n\n## 逻辑运算符\n### 非\n令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作\"非$p$\"。\n### 与(合取)\n令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。\n### 或(析取)\n令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。\n### 异或\n令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。\n### 与非\n命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。\n### 或非\n命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。\n### 条件语句\n令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。   \n在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。    \n条件语句也称蕴含。\n\n#### 逆、倒置和反\n命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。    \n命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。   \n命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  \n\n### 双条件语句\n令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。    \n双条件语句也称双蕴含。  \n\n### 真值表\n\n|p <span style=\"margin-left:20px\">q</span>| $\\lnot p$| $p\\land q$|$p\\lor q$|$p\\oplus q$|$p\\rightarrow q$|$p↔︎q$|$p \\vert q$|$p\\downarrow q$|\n|:----:|:--------:|:---------:|:-------:|:---------:|:------:|:---:|:--:|:--:|\n|T <span style=\"margin-left:20px\">T</span>| F|T|T|F|T|T|F|F|\n|T <span style=\"margin-left:20px\">F</span>| F|F|T|T|F|F|T|F|\n|F <span style=\"margin-left:20px\">T</span>| T|F|T|T|T|F|T|F|\n|F <span style=\"margin-left:20px\">F</span>| F|F|F|F|T|T|T|T|\n\n### 逻辑运算符的优先级\n* 否定运算符在其他所有逻辑运算符之前执行。\n* 合取运算优先于析取运算。\n* 条件运算和双条件运算优先级低于合取和析取运算。\n\n","source":"_posts/Math-DM-01-基本逻辑.md","raw":"---\ntitle: Math-DM-01-基本逻辑\ndate: 2016-11-26 16:33:43\nupdated: 2016-11-28 22:58:00\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 命题逻辑\n逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。    \n涉及命题的逻辑领域称为命题演算或命题逻辑。\n\n## 逻辑运算符\n### 非\n令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作\"非$p$\"。\n### 与(合取)\n令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。\n### 或(析取)\n令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。\n### 异或\n令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。\n### 与非\n命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。\n### 或非\n命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。\n### 条件语句\n令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。   \n在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。    \n条件语句也称蕴含。\n\n#### 逆、倒置和反\n命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。    \n命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。   \n命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  \n\n### 双条件语句\n令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。    \n双条件语句也称双蕴含。  \n\n### 真值表\n\n|p <span style=\"margin-left:20px\">q</span>| $\\lnot p$| $p\\land q$|$p\\lor q$|$p\\oplus q$|$p\\rightarrow q$|$p↔︎q$|$p \\vert q$|$p\\downarrow q$|\n|:----:|:--------:|:---------:|:-------:|:---------:|:------:|:---:|:--:|:--:|\n|T <span style=\"margin-left:20px\">T</span>| F|T|T|F|T|T|F|F|\n|T <span style=\"margin-left:20px\">F</span>| F|F|T|T|F|F|T|F|\n|F <span style=\"margin-left:20px\">T</span>| T|F|T|T|T|F|T|F|\n|F <span style=\"margin-left:20px\">F</span>| F|F|F|F|T|T|T|T|\n\n### 逻辑运算符的优先级\n* 否定运算符在其他所有逻辑运算符之前执行。\n* 合取运算优先于析取运算。\n* 条件运算和双条件运算优先级低于合取和析取运算。\n\n","slug":"Math-DM-01-基本逻辑","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43u00089ruibqavkrq8","content":"<h2 id=\"命题逻辑\"><a href=\"#命题逻辑\" class=\"headerlink\" title=\"命题逻辑\"></a>命题逻辑</h2><p>逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。<br>涉及命题的逻辑领域称为命题演算或命题逻辑。</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"非\"><a href=\"#非\" class=\"headerlink\" title=\"非\"></a>非</h3><p>令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作”非$p$”。</p>\n<h3 id=\"与-合取\"><a href=\"#与-合取\" class=\"headerlink\" title=\"与(合取)\"></a>与(合取)</h3><p>令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。</p>\n<h3 id=\"或-析取\"><a href=\"#或-析取\" class=\"headerlink\" title=\"或(析取)\"></a>或(析取)</h3><p>令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。</p>\n<h3 id=\"异或\"><a href=\"#异或\" class=\"headerlink\" title=\"异或\"></a>异或</h3><p>令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。</p>\n<h3 id=\"与非\"><a href=\"#与非\" class=\"headerlink\" title=\"与非\"></a>与非</h3><p>命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。</p>\n<h3 id=\"或非\"><a href=\"#或非\" class=\"headerlink\" title=\"或非\"></a>或非</h3><p>命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。</p>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><p>令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。<br>在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。<br>条件语句也称蕴含。</p>\n<h4 id=\"逆、倒置和反\"><a href=\"#逆、倒置和反\" class=\"headerlink\" title=\"逆、倒置和反\"></a>逆、倒置和反</h4><p>命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。<br>命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。<br>命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  </p>\n<h3 id=\"双条件语句\"><a href=\"#双条件语句\" class=\"headerlink\" title=\"双条件语句\"></a>双条件语句</h3><p>令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。<br>双条件语句也称双蕴含。  </p>\n<h3 id=\"真值表\"><a href=\"#真值表\" class=\"headerlink\" title=\"真值表\"></a>真值表</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">p <span style=\"margin-left:20px\">q</span></th>\n<th style=\"text-align:center\">$\\lnot p$</th>\n<th style=\"text-align:center\">$p\\land q$</th>\n<th style=\"text-align:center\">$p\\lor q$</th>\n<th style=\"text-align:center\">$p\\oplus q$</th>\n<th style=\"text-align:center\">$p\\rightarrow q$</th>\n<th style=\"text-align:center\">$p↔︎q$</th>\n<th style=\"text-align:center\">$p \\vert q$</th>\n<th style=\"text-align:center\">$p\\downarrow q$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">T <span style=\"margin-left:20px\">T</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">T <span style=\"margin-left:20px\">F</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">F <span style=\"margin-left:20px\">T</span></td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">F <span style=\"margin-left:20px\">F</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"逻辑运算符的优先级\"><a href=\"#逻辑运算符的优先级\" class=\"headerlink\" title=\"逻辑运算符的优先级\"></a>逻辑运算符的优先级</h3><ul>\n<li>否定运算符在其他所有逻辑运算符之前执行。</li>\n<li>合取运算优先于析取运算。</li>\n<li>条件运算和双条件运算优先级低于合取和析取运算。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"命题逻辑\"><a href=\"#命题逻辑\" class=\"headerlink\" title=\"命题逻辑\"></a>命题逻辑</h2><p>逻辑的基本成分是命题，命题是一个或真或假的陈述语句，即一个陈述事实的句子，但不能既真又假。<br>涉及命题的逻辑领域称为命题演算或命题逻辑。</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"非\"><a href=\"#非\" class=\"headerlink\" title=\"非\"></a>非</h3><p>令$p$为一命题，则$p$的否定表示为$\\lnot p$，命题$\\lnot p$读作”非$p$”。</p>\n<h3 id=\"与-合取\"><a href=\"#与-合取\" class=\"headerlink\" title=\"与(合取)\"></a>与(合取)</h3><p>令$p$和$q$为命题，$p、q$的合取用$p\\land q$表示。即命题$p$并且$q$。</p>\n<h3 id=\"或-析取\"><a href=\"#或-析取\" class=\"headerlink\" title=\"或(析取)\"></a>或(析取)</h3><p>令$p$和$q$为命题，$p、q$的析取用$p\\lor q$表示。即命题$p$或$q$。</p>\n<h3 id=\"异或\"><a href=\"#异或\" class=\"headerlink\" title=\"异或\"></a>异或</h3><p>令$p$和$q$为命题。$p$和$q$的异或是一个命题。当$p$和$q$($p\\oplus q$)中只有一个为真时命题为真，否则为假。</p>\n<h3 id=\"与非\"><a href=\"#与非\" class=\"headerlink\" title=\"与非\"></a>与非</h3><p>命题$p NAND q$(也记作$p\\vert q$)在$p$和$q$均为真时为假，否则为真。</p>\n<h3 id=\"或非\"><a href=\"#或非\" class=\"headerlink\" title=\"或非\"></a>或非</h3><p>命题$p NOR q $(也记作$p\\downarrow q$)在$p$和$q$均为假时为真，否则为假。</p>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><p>令$p$和$q$为命题，条件语句$p\\rightarrow q$ 是命题“若$p$，则$q$”。    当$p$为真而$q$为假时，条件语句$p\\rightarrow q$为假，否则为真。<br>在条件语句$p\\rightarrow q$中，$p$称为假设、前提，$q$称为结论。<br>条件语句也称蕴含。</p>\n<h4 id=\"逆、倒置和反\"><a href=\"#逆、倒置和反\" class=\"headerlink\" title=\"逆、倒置和反\"></a>逆、倒置和反</h4><p>命题$q\\rightarrow p$称为$p\\rightarrow q$的逆蕴含。<br>命题$\\lnot q\\rightarrow \\lnot p$称为$p\\rightarrow q$的倒置蕴含。<br>命题$\\lnot p\\rightarrow \\lnot q$称为$p\\rightarrow q$的反蕴含。  </p>\n<h3 id=\"双条件语句\"><a href=\"#双条件语句\" class=\"headerlink\" title=\"双条件语句\"></a>双条件语句</h3><p>令$p$和$q$为命题。双条件语句$p↔︎q$是命题“$p$当且仅当$q$”。当$p$和$q$有相同真值时，双条件语句为真，否则为假。<br>双条件语句也称双蕴含。  </p>\n<h3 id=\"真值表\"><a href=\"#真值表\" class=\"headerlink\" title=\"真值表\"></a>真值表</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">p <span style=\"margin-left:20px\">q</span></th>\n<th style=\"text-align:center\">$\\lnot p$</th>\n<th style=\"text-align:center\">$p\\land q$</th>\n<th style=\"text-align:center\">$p\\lor q$</th>\n<th style=\"text-align:center\">$p\\oplus q$</th>\n<th style=\"text-align:center\">$p\\rightarrow q$</th>\n<th style=\"text-align:center\">$p↔︎q$</th>\n<th style=\"text-align:center\">$p \\vert q$</th>\n<th style=\"text-align:center\">$p\\downarrow q$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">T <span style=\"margin-left:20px\">T</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">T <span style=\"margin-left:20px\">F</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">F <span style=\"margin-left:20px\">T</span></td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">F <span style=\"margin-left:20px\">F</span></td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">T</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"逻辑运算符的优先级\"><a href=\"#逻辑运算符的优先级\" class=\"headerlink\" title=\"逻辑运算符的优先级\"></a>逻辑运算符的优先级</h3><ul>\n<li>否定运算符在其他所有逻辑运算符之前执行。</li>\n<li>合取运算优先于析取运算。</li>\n<li>条件运算和双条件运算优先级低于合取和析取运算。</li>\n</ul>\n"},{"title":"Math-DM-02-逻辑等价","date":"2016-11-26T08:58:58.000Z","_content":"## 引言\n复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。\n\n### 逻辑等价\n在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  \n\n* 如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。\n> 符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。\n\n## 摩根定律及应用\n$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。\n\n|名称 | 等价关系|\n|:---|:-------|\n|摩根定律|$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$ |\n|恒等律|$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$|\n|支配律|$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$|\n|幂等律|$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$|\n|双非律|$\\lnot(\\lnot p) \\equiv p$|\n|交换律|$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$|\n|结合律|$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$|\n|分配律|$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$|\n|吸收律|$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$|\n|否定律|$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$|\n\n### 涉及条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p\\rightarrow q\\equiv \\lnot p\\lor q $|\n|$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$|\n|$p\\lor q\\equiv \\lnot p\\rightarrow q$| \n|$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $|\n|$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $|\n|$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $|\n|$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $|\n|$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $|\n|$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$|\n\n\n### 涉及双条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $|\n|$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $|\n|$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $|\n|$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $|\n","source":"_posts/Math-DM-02-逻辑等价.md","raw":"---\ntitle: Math-DM-02-逻辑等价\ndate: 2016-11-26 16:58:58\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 引言\n复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。\n\n### 逻辑等价\n在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  \n\n* 如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。\n> 符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。\n\n## 摩根定律及应用\n$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。\n\n|名称 | 等价关系|\n|:---|:-------|\n|摩根定律|$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$ |\n|恒等律|$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$|\n|支配律|$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$|\n|幂等律|$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$|\n|双非律|$\\lnot(\\lnot p) \\equiv p$|\n|交换律|$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$|\n|结合律|$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$|\n|分配律|$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$|\n|吸收律|$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$|\n|否定律|$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$|\n\n### 涉及条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p\\rightarrow q\\equiv \\lnot p\\lor q $|\n|$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$|\n|$p\\lor q\\equiv \\lnot p\\rightarrow q$| \n|$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $|\n|$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $|\n|$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $|\n|$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $|\n|$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $|\n|$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$|\n\n\n### 涉及双条件语句的逻辑等价\n|等价关系|\n|:----|\n|$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $|\n|$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $|\n|$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $|\n|$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $|\n","slug":"Math-DM-02-逻辑等价","published":1,"updated":"2016-12-03T14:16:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43v00099ruilqbwkybw","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  </p>\n<ul>\n<li>如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。<blockquote>\n<p>符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"摩根定律及应用\"><a href=\"#摩根定律及应用\" class=\"headerlink\" title=\"摩根定律及应用\"></a>摩根定律及应用</h2><p>$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">摩根定律</td>\n<td style=\"text-align:left\">$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">恒等律</td>\n<td style=\"text-align:left\">$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">支配律</td>\n<td style=\"text-align:left\">$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">幂等律</td>\n<td style=\"text-align:left\">$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">双非律</td>\n<td style=\"text-align:left\">$\\lnot(\\lnot p) \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">交换律</td>\n<td style=\"text-align:left\">$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">结合律</td>\n<td style=\"text-align:left\">$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">分配律</td>\n<td style=\"text-align:left\">$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">吸收律</td>\n<td style=\"text-align:left\">$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">否定律</td>\n<td style=\"text-align:left\">$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"涉及条件语句的逻辑等价\"><a href=\"#涉及条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及条件语句的逻辑等价\"></a>涉及条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$p\\rightarrow q\\equiv \\lnot p\\lor q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\lor q\\equiv \\lnot p\\rightarrow q$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"涉及双条件语句的逻辑等价\"><a href=\"#涉及双条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及双条件语句的逻辑等价\"></a>涉及双条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>复合命题中如果无论其中出现的命题的真值是什么，它的真值总是真，称为永真式。真值永远为假的复合命题称为矛盾。最后，既不是永真式又不是矛盾的命题称为可能式。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>在所有可能的情况下都有相同真值的两个复合命题称为逻辑等价。用如下定义这一概念：  </p>\n<ul>\n<li>如果$p↔︎q$是永真式。命题$p$和$q$称为逻辑等价的。记作$p\\equiv q$，有时也记作$p⇔q$。<blockquote>\n<p>符号$\\equiv$不是逻辑链接符，因为$p\\equiv q$不是复合命题。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"摩根定律及应用\"><a href=\"#摩根定律及应用\" class=\"headerlink\" title=\"摩根定律及应用\"></a>摩根定律及应用</h2><p>$\\mathbf T$表示永远为真的复合命题，$\\mathbf F$表示永远为假的复合命题。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">摩根定律</td>\n<td style=\"text-align:left\">$\\lnot (p\\land q) \\equiv \\lnot p \\lor \\lnot q$ <br> $\\lnot (p\\lor q) \\equiv \\lnot p \\land \\lnot q$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">恒等律</td>\n<td style=\"text-align:left\">$p\\land \\mathbf T \\equiv p$ <br> $p\\lor \\mathbf F \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">支配律</td>\n<td style=\"text-align:left\">$p\\lor \\mathbf T \\equiv \\mathbf T$ <br> $p\\land \\mathbf F \\equiv \\mathbf F$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">幂等律</td>\n<td style=\"text-align:left\">$p\\land p \\equiv p$ <br> $p\\lor p \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">双非律</td>\n<td style=\"text-align:left\">$\\lnot(\\lnot p) \\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">交换律</td>\n<td style=\"text-align:left\">$p\\lor q \\equiv q\\lor p$ <br> $p\\land q\\equiv q\\land p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">结合律</td>\n<td style=\"text-align:left\">$(p\\lor q)\\lor r\\equiv p\\lor (q\\lor r)$ <br> $(p\\land q)\\land r\\equiv p\\land (q\\land r)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">分配律</td>\n<td style=\"text-align:left\">$p\\lor(q\\land r) \\equiv (p\\lor q)\\land (p\\lor r)$ <br> $p\\land (q\\lor r) \\equiv (p\\land q)\\lor (p\\land r)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">吸收律</td>\n<td style=\"text-align:left\">$p\\lor (p\\land q)\\equiv p$ <br> $p\\land (p\\lor q)\\equiv p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">否定律</td>\n<td style=\"text-align:left\">$p\\lor \\lnot p\\equiv \\mathbf T$<br> $p\\land \\lnot p\\equiv \\mathbf F$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"涉及条件语句的逻辑等价\"><a href=\"#涉及条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及条件语句的逻辑等价\"></a>涉及条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$p\\rightarrow q\\equiv \\lnot p\\lor q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\lor q\\equiv \\lnot p\\rightarrow q$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p\\land q\\equiv \\lnot(p\\rightarrow \\lnot q) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\lnot(p\\rightarrow q)\\equiv p\\land \\lnot q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow q)\\land (p\\rightarrow r)\\equiv p\\rightarrow (q\\land r) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow r)\\land (q\\rightarrow r)\\equiv (p\\lor q)\\rightarrow r $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow q)\\lor (p\\rightarrow r)\\equiv p\\rightarrow (q\\lor r) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$(p\\rightarrow r)\\lor (q\\rightarrow r)\\equiv (p\\land q)\\rightarrow r$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"涉及双条件语句的逻辑等价\"><a href=\"#涉及双条件语句的逻辑等价\" class=\"headerlink\" title=\"涉及双条件语句的逻辑等价\"></a>涉及双条件语句的逻辑等价</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等价关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv (p\\rightarrow q)\\land (q\\rightarrow p) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv \\lnot p↔︎ \\lnot q $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$p↔︎q \\equiv (p \\land q)\\lor (\\lnot p\\land \\lnot q) $</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\lnot (p↔︎q) \\equiv p↔︎\\lnot q $</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Math-DM-03-谓词逻辑","date":"2016-11-30T13:45:35.000Z","_content":"## 谓词逻辑\n若要明白什么是谓词逻辑，需要了解谓词和量词的概念。\n### 谓词\n谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。      \n形为$P(x_1,x_2,...,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,...,x_n)$的值，$P$也称为$n$元谓词。   \n\n### 量词\n当谓词表示一定范围的事物时，由命题函数产生的命题称为__量化__。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     \n#### 全称量词\n对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。\n#### 存在量词\n对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。\n#### 唯一量词\n存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。\n\n> 通常讲到量词的论域时，隐含假设它为非空集。\n\n#### 约束论域量词\n一个缩略符号通常用来约束量词的论域。 例如：      \n$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。       \n另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$      \n存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$\n\n### 量词的优先级\n量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。\n\n### 逻辑等价\n命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。\n\n#### 量词的摩根定律\n$$\n\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\\n\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)\n$$\n","source":"_posts/Math-DM-03-谓词逻辑.md","raw":"---\ntitle: Math-DM-03-谓词逻辑\ndate: 2016-11-30 21:45:35\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 谓词逻辑\n若要明白什么是谓词逻辑，需要了解谓词和量词的概念。\n### 谓词\n谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。      \n形为$P(x_1,x_2,...,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,...,x_n)$的值，$P$也称为$n$元谓词。   \n\n### 量词\n当谓词表示一定范围的事物时，由命题函数产生的命题称为__量化__。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     \n#### 全称量词\n对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。\n#### 存在量词\n对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。\n#### 唯一量词\n存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。\n\n> 通常讲到量词的论域时，隐含假设它为非空集。\n\n#### 约束论域量词\n一个缩略符号通常用来约束量词的论域。 例如：      \n$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。       \n另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$      \n存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$\n\n### 量词的优先级\n量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。\n\n### 逻辑等价\n命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。\n\n#### 量词的摩根定律\n$$\n\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\\n\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)\n$$\n","slug":"Math-DM-03-谓词逻辑","published":1,"updated":"2016-12-01T14:19:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43w000b9ruiwfp5wuqx","content":"<h2 id=\"谓词逻辑\"><a href=\"#谓词逻辑\" class=\"headerlink\" title=\"谓词逻辑\"></a>谓词逻辑</h2><p>若要明白什么是谓词逻辑，需要了解谓词和量词的概念。</p>\n<h3 id=\"谓词\"><a href=\"#谓词\" class=\"headerlink\" title=\"谓词\"></a>谓词</h3><p>谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。<br>形为$P(x_1,x_2,…,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,…,x_n)$的值，$P$也称为$n$元谓词。   </p>\n<h3 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h3><p>当谓词表示一定范围的事物时，由命题函数产生的命题称为<strong>量化</strong>。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     </p>\n<h4 id=\"全称量词\"><a href=\"#全称量词\" class=\"headerlink\" title=\"全称量词\"></a>全称量词</h4><p>对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。</p>\n<h4 id=\"存在量词\"><a href=\"#存在量词\" class=\"headerlink\" title=\"存在量词\"></a>存在量词</h4><p>对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。</p>\n<h4 id=\"唯一量词\"><a href=\"#唯一量词\" class=\"headerlink\" title=\"唯一量词\"></a>唯一量词</h4><p>存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。</p>\n<blockquote>\n<p>通常讲到量词的论域时，隐含假设它为非空集。</p>\n</blockquote>\n<h4 id=\"约束论域量词\"><a href=\"#约束论域量词\" class=\"headerlink\" title=\"约束论域量词\"></a>约束论域量词</h4><p>一个缩略符号通常用来约束量词的论域。 例如：<br>$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。<br>另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$<br>存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$</p>\n<h3 id=\"量词的优先级\"><a href=\"#量词的优先级\" class=\"headerlink\" title=\"量词的优先级\"></a>量词的优先级</h3><p>量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。</p>\n<h4 id=\"量词的摩根定律\"><a href=\"#量词的摩根定律\" class=\"headerlink\" title=\"量词的摩根定律\"></a>量词的摩根定律</h4><p>$$<br>\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\<br>\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)<br>$$</p>\n","excerpt":"","more":"<h2 id=\"谓词逻辑\"><a href=\"#谓词逻辑\" class=\"headerlink\" title=\"谓词逻辑\"></a>谓词逻辑</h2><p>若要明白什么是谓词逻辑，需要了解谓词和量词的概念。</p>\n<h3 id=\"谓词\"><a href=\"#谓词\" class=\"headerlink\" title=\"谓词\"></a>谓词</h3><p>谓词可以理解为变量。当命题函数中的谓词确定时，命题函数就称为命题，因而有真值。例如：$P(x)$表示语句“$x$大于$3$”，一旦给变量$x$赋一个值，语句$P(x)$就称为命题，因而有真值。<br>形为$P(x_1,x_2,…,x_n)$的语句是命题函数$P$在$m$元组$(x_1, x_2,…,x_n)$的值，$P$也称为$n$元谓词。   </p>\n<h3 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h3><p>当谓词表示一定范围的事物时，由命题函数产生的命题称为<strong>量化</strong>。 这里讨论两种量化：全称量化和存在量化。 处理谓词和量词的逻辑领域称为谓词演算。     </p>\n<h4 id=\"全称量词\"><a href=\"#全称量词\" class=\"headerlink\" title=\"全称量词\"></a>全称量词</h4><p>对于论域内的每一个$x$，$P(x)$都为真值，记作$\\forall xP(x)$，其中$\\forall$称为全称量词。</p>\n<h4 id=\"存在量词\"><a href=\"#存在量词\" class=\"headerlink\" title=\"存在量词\"></a>存在量词</h4><p>对于论域内至少有一个$x$，使$P(x)$为真，记作$\\exists xP(x)$，其中$\\exists$称为存在量词。</p>\n<h4 id=\"唯一量词\"><a href=\"#唯一量词\" class=\"headerlink\" title=\"唯一量词\"></a>唯一量词</h4><p>存在惟一一个$x$使$P(x)$为真。记作$\\exists!xP(x)$或$\\exists_1xP(x)$。</p>\n<blockquote>\n<p>通常讲到量词的论域时，隐含假设它为非空集。</p>\n</blockquote>\n<h4 id=\"约束论域量词\"><a href=\"#约束论域量词\" class=\"headerlink\" title=\"约束论域量词\"></a>约束论域量词</h4><p>一个缩略符号通常用来约束量词的论域。 例如：<br>$\\forall x\\lt 0(x^2 \\gt 0)$表示对于每个实数$x\\lt 0$都有$x^2 \\gt 0$。<br>另外，全称量化的约束和一个条件语句的全称量化等价。例如：$\\forall x\\lt 0(x^2 \\gt 0)$等价于$\\forall x(x\\lt 0\\rightarrow x^2 \\gt 0)$<br>存在量词的约束和一个合取的存在量化等价。例如：$\\exists z\\gt 0(z^2 =2)$等价于$\\exists z(z\\gt 0\\land z^2 =2)$</p>\n<h3 id=\"量词的优先级\"><a href=\"#量词的优先级\" class=\"headerlink\" title=\"量词的优先级\"></a>量词的优先级</h3><p>量词$\\forall$和$\\exists$比所有命题逻辑的逻辑运算有更高的优先级。</p>\n<h3 id=\"逻辑等价\"><a href=\"#逻辑等价\" class=\"headerlink\" title=\"逻辑等价\"></a>逻辑等价</h3><p>命题逻辑中的逻辑等价概念可以扩展到谓词逻辑中。当且仅当无论什么谓词带入命题函数，或者无论哪个个体论域于这些命题函数中的变量上，它们都有相同的真值。</p>\n<h4 id=\"量词的摩根定律\"><a href=\"#量词的摩根定律\" class=\"headerlink\" title=\"量词的摩根定律\"></a>量词的摩根定律</h4><p>$$<br>\\lnot \\forall xP(x) \\equiv \\exists x\\lnot P(x) \\\\<br>\\lnot \\exists xQ(x) \\equiv \\forall x\\lnot Q(x)<br>$$</p>\n"},{"title":"Math-DM-04-嵌套量词","date":"2016-12-03T02:51:05.000Z","_content":"## 嵌套量词\n嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。\n\n### 嵌套量词例子\n这里假定$x$和$y$的论域是所有实数的集合。 \n$$ \\forall x\\forall y(x+y=y+x)$$\n对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。\n$$\\forall x\\exists y(x+y=0) $$\n对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。\n$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$\n\n### 嵌套顺序\n除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。\n\n|语句|何时为真 |何时为假|\n|:--|:------|:------|\n|$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$|对每一对$x、y$，$P(x,y)$均为真|有一对$x、y$使$P(x,y)$为假|\n|$\\forall x\\exists yP(x,y)$|对每个$x$，都有$y$使$P(x,y)$为真|有$x$，使$P(x,y)$对每个$y$总是假|\n|$\\exists x\\forall yP(x,y)$|有一个$x$，使所有$y$对$P(x,y)$均为真|对每个$x$都有$y$使$P(x,y)$为假|\n|$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$|有一对$x、y$，$P(x,y)$为真|对每一对$x、y$，$P(x,y)$均为假|\n\n### 将数学语句翻译成涉及嵌套量词的语句\n1、两个正整数的和是整数\n$$ \\forall x\\forall y((x>0)\\land(y>0)\\rightarrow (x+y>0))$$\n2、每个实数(除$0$外)都有乘法逆元\n$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$\n\n","source":"_posts/Math-DM-04-嵌套量词.md","raw":"---\ntitle: Math-DM-04-嵌套量词\ndate: 2016-12-03 10:51:05\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 嵌套量词\n嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。\n\n### 嵌套量词例子\n这里假定$x$和$y$的论域是所有实数的集合。 \n$$ \\forall x\\forall y(x+y=y+x)$$\n对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。\n$$\\forall x\\exists y(x+y=0) $$\n对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。\n$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$\n\n### 嵌套顺序\n除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。\n\n|语句|何时为真 |何时为假|\n|:--|:------|:------|\n|$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$|对每一对$x、y$，$P(x,y)$均为真|有一对$x、y$使$P(x,y)$为假|\n|$\\forall x\\exists yP(x,y)$|对每个$x$，都有$y$使$P(x,y)$为真|有$x$，使$P(x,y)$对每个$y$总是假|\n|$\\exists x\\forall yP(x,y)$|有一个$x$，使所有$y$对$P(x,y)$均为真|对每个$x$都有$y$使$P(x,y)$为假|\n|$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$|有一对$x、y$，$P(x,y)$为真|对每一对$x、y$，$P(x,y)$均为假|\n\n### 将数学语句翻译成涉及嵌套量词的语句\n1、两个正整数的和是整数\n$$ \\forall x\\forall y((x>0)\\land(y>0)\\rightarrow (x+y>0))$$\n2、每个实数(除$0$外)都有乘法逆元\n$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$\n\n","slug":"Math-DM-04-嵌套量词","published":1,"updated":"2016-12-03T03:19:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq43y000d9ruibyzghpx9","content":"<h2 id=\"嵌套量词\"><a href=\"#嵌套量词\" class=\"headerlink\" title=\"嵌套量词\"></a>嵌套量词</h2><p>嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。</p>\n<h3 id=\"嵌套量词例子\"><a href=\"#嵌套量词例子\" class=\"headerlink\" title=\"嵌套量词例子\"></a>嵌套量词例子</h3><p>这里假定$x$和$y$的论域是所有实数的集合。<br>$$ \\forall x\\forall y(x+y=y+x)$$<br>对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。<br>$$\\forall x\\exists y(x+y=0) $$<br>对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。<br>$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$</p>\n<h3 id=\"嵌套顺序\"><a href=\"#嵌套顺序\" class=\"headerlink\" title=\"嵌套顺序\"></a>嵌套顺序</h3><p>除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语句</th>\n<th style=\"text-align:left\">何时为真</th>\n<th style=\"text-align:left\">何时为假</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$</td>\n<td style=\"text-align:left\">对每一对$x、y$，$P(x,y)$均为真</td>\n<td style=\"text-align:left\">有一对$x、y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\forall x\\exists yP(x,y)$</td>\n<td style=\"text-align:left\">对每个$x$，都有$y$使$P(x,y)$为真</td>\n<td style=\"text-align:left\">有$x$，使$P(x,y)$对每个$y$总是假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\exists x\\forall yP(x,y)$</td>\n<td style=\"text-align:left\">有一个$x$，使所有$y$对$P(x,y)$均为真</td>\n<td style=\"text-align:left\">对每个$x$都有$y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$</td>\n<td style=\"text-align:left\">有一对$x、y$，$P(x,y)$为真</td>\n<td style=\"text-align:left\">对每一对$x、y$，$P(x,y)$均为假</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"将数学语句翻译成涉及嵌套量词的语句\"><a href=\"#将数学语句翻译成涉及嵌套量词的语句\" class=\"headerlink\" title=\"将数学语句翻译成涉及嵌套量词的语句\"></a>将数学语句翻译成涉及嵌套量词的语句</h3><p>1、两个正整数的和是整数<br>$$ \\forall x\\forall y((x&gt;0)\\land(y&gt;0)\\rightarrow (x+y&gt;0))$$<br>2、每个实数(除$0$外)都有乘法逆元<br>$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$</p>\n","excerpt":"","more":"<h2 id=\"嵌套量词\"><a href=\"#嵌套量词\" class=\"headerlink\" title=\"嵌套量词\"></a>嵌套量词</h2><p>嵌套量词类似于复合函数，例如$\\forall x\\exists y(x+y=0)$和$\\forall xQ(x)$相同，其中$Q(x)$指$\\exists y(x+y=0)$。</p>\n<h3 id=\"嵌套量词例子\"><a href=\"#嵌套量词例子\" class=\"headerlink\" title=\"嵌套量词例子\"></a>嵌套量词例子</h3><p>这里假定$x$和$y$的论域是所有实数的集合。<br>$$ \\forall x\\forall y(x+y=y+x)$$<br>对于所有实数$x$和$y$，$x+y=y+x$。这是实数加法的交换律。<br>$$\\forall x\\exists y(x+y=0) $$<br>对于所有实数$x$，存在一个实数$y$，使得$x+y=0$。<br>$$\\forall x\\forall y\\forall z(x+(y+z)=(x+y)+z)$$</p>\n<h3 id=\"嵌套顺序\"><a href=\"#嵌套顺序\" class=\"headerlink\" title=\"嵌套顺序\"></a>嵌套顺序</h3><p>除非所有的量词均为全称量词或存在量词，否则量词的顺序不同会导致不同的真值。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语句</th>\n<th style=\"text-align:left\">何时为真</th>\n<th style=\"text-align:left\">何时为假</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\forall x\\forall yP(x,y)$<br> $\\forall y\\forall xP(x,y)$</td>\n<td style=\"text-align:left\">对每一对$x、y$，$P(x,y)$均为真</td>\n<td style=\"text-align:left\">有一对$x、y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\forall x\\exists yP(x,y)$</td>\n<td style=\"text-align:left\">对每个$x$，都有$y$使$P(x,y)$为真</td>\n<td style=\"text-align:left\">有$x$，使$P(x,y)$对每个$y$总是假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\exists x\\forall yP(x,y)$</td>\n<td style=\"text-align:left\">有一个$x$，使所有$y$对$P(x,y)$均为真</td>\n<td style=\"text-align:left\">对每个$x$都有$y$使$P(x,y)$为假</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\exists x\\exists yP(x,y)$<br> $\\exists y\\exists xP(x,y)$</td>\n<td style=\"text-align:left\">有一对$x、y$，$P(x,y)$为真</td>\n<td style=\"text-align:left\">对每一对$x、y$，$P(x,y)$均为假</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"将数学语句翻译成涉及嵌套量词的语句\"><a href=\"#将数学语句翻译成涉及嵌套量词的语句\" class=\"headerlink\" title=\"将数学语句翻译成涉及嵌套量词的语句\"></a>将数学语句翻译成涉及嵌套量词的语句</h3><p>1、两个正整数的和是整数<br>$$ \\forall x\\forall y((x&gt;0)\\land(y&gt;0)\\rightarrow (x+y&gt;0))$$<br>2、每个实数(除$0$外)都有乘法逆元<br>$$ \\forall x((x\\neq 0)\\rightarrow \\exists y(xy=1))$$</p>\n"},{"title":"Math-DM-06-证明导论","date":"2016-12-04T02:44:13.000Z","_content":"## 证明\n* 定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。\n* 引理：在其他结果证明中很有帮助的不大重要的定理\n* 推论：从定理直接建立被证明的定理\n* 猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。\n\n##证明定理的方法\n### 直接证明\n直接证明用于$p\\rightarrow q$类型语句的方法。    \n第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。\n\n### 反证法\n反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。     \n在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。\n\n#### 例子\n前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。    \n证明\"若$\\3n+2$是奇数，则$n$也是奇数\"。    \n假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。\n\n### 空证明\n在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 平凡证明\n在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 归谬证明\n假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。  \n也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 \n\n#### 归谬证明实例\n前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。    \n证明：$\\sqrt 2$是无理数     \n假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。    \n将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。     \n根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。    \n等式两边除以$2$，得到$b^2=2c^2$。    \n由偶数定义，$b^2$是偶数，$b$也是偶数。     \n我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。\n\n### 等价性证明\n为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于: \n$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$\n有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,...,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎...↔︎p_n$$\n\n### 反例\n证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。\n\n### 穷举证明\n有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。\n\n### 分情形证明\n为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。\n\n### 存在性证明\n对于形如$∃P(x)$的命题的证明。\n* 构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。\n* 非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。\n\n### 唯一性证明\n断言具有特定性质的元素惟一存在。证明分为两部分：\n* 存在性：证明存在某个元素$x$具有期望的性质\n* 唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。\n\n\n\n\n\n\n\n","source":"_posts/Math-DM-06-证明导论.md","raw":"---\ntitle: Math-DM-06-证明导论\ndate: 2016-12-04 10:44:13\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 证明\n* 定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。\n* 引理：在其他结果证明中很有帮助的不大重要的定理\n* 推论：从定理直接建立被证明的定理\n* 猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。\n\n##证明定理的方法\n### 直接证明\n直接证明用于$p\\rightarrow q$类型语句的方法。    \n第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。\n\n### 反证法\n反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。     \n在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。\n\n#### 例子\n前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。    \n证明\"若$\\3n+2$是奇数，则$n$也是奇数\"。    \n假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。\n\n### 空证明\n在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 平凡证明\n在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。\n\n### 归谬证明\n假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。  \n也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 \n\n#### 归谬证明实例\n前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。    \n证明：$\\sqrt 2$是无理数     \n假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。    \n将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。     \n根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。    \n等式两边除以$2$，得到$b^2=2c^2$。    \n由偶数定义，$b^2$是偶数，$b$也是偶数。     \n我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。\n\n### 等价性证明\n为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于: \n$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$\n有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,...,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎...↔︎p_n$$\n\n### 反例\n证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。\n\n### 穷举证明\n有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。\n\n### 分情形证明\n为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。\n\n### 存在性证明\n对于形如$∃P(x)$的命题的证明。\n* 构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。\n* 非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。\n\n### 唯一性证明\n断言具有特定性质的元素惟一存在。证明分为两部分：\n* 存在性：证明存在某个元素$x$具有期望的性质\n* 唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。\n\n\n\n\n\n\n\n","slug":"Math-DM-06-证明导论","published":1,"updated":"2016-12-04T08:48:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq440000f9ruiqg98qxx8","content":"<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><ul>\n<li>定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。</li>\n<li>引理：在其他结果证明中很有帮助的不大重要的定理</li>\n<li>推论：从定理直接建立被证明的定理</li>\n<li>猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。</li>\n</ul>\n<p>##证明定理的方法</p>\n<h3 id=\"直接证明\"><a href=\"#直接证明\" class=\"headerlink\" title=\"直接证明\"></a>直接证明</h3><p>直接证明用于$p\\rightarrow q$类型语句的方法。<br>第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。</p>\n<h3 id=\"反证法\"><a href=\"#反证法\" class=\"headerlink\" title=\"反证法\"></a>反证法</h3><p>反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。<br>在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。<br>证明”若$\\3n+2$是奇数，则$n$也是奇数”。<br>假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。</p>\n<h3 id=\"空证明\"><a href=\"#空证明\" class=\"headerlink\" title=\"空证明\"></a>空证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"平凡证明\"><a href=\"#平凡证明\" class=\"headerlink\" title=\"平凡证明\"></a>平凡证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"归谬证明\"><a href=\"#归谬证明\" class=\"headerlink\" title=\"归谬证明\"></a>归谬证明</h3><p>假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。<br>也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 </p>\n<h4 id=\"归谬证明实例\"><a href=\"#归谬证明实例\" class=\"headerlink\" title=\"归谬证明实例\"></a>归谬证明实例</h4><p>前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。<br>证明：$\\sqrt 2$是无理数<br>假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。<br>将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。<br>根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。<br>等式两边除以$2$，得到$b^2=2c^2$。<br>由偶数定义，$b^2$是偶数，$b$也是偶数。<br>我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。</p>\n<h3 id=\"等价性证明\"><a href=\"#等价性证明\" class=\"headerlink\" title=\"等价性证明\"></a>等价性证明</h3><p>为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于:<br>$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$<br>有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,…,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎…↔︎p_n$$</p>\n<h3 id=\"反例\"><a href=\"#反例\" class=\"headerlink\" title=\"反例\"></a>反例</h3><p>证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。</p>\n<h3 id=\"穷举证明\"><a href=\"#穷举证明\" class=\"headerlink\" title=\"穷举证明\"></a>穷举证明</h3><p>有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。</p>\n<h3 id=\"分情形证明\"><a href=\"#分情形证明\" class=\"headerlink\" title=\"分情形证明\"></a>分情形证明</h3><p>为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。</p>\n<h3 id=\"存在性证明\"><a href=\"#存在性证明\" class=\"headerlink\" title=\"存在性证明\"></a>存在性证明</h3><p>对于形如$∃P(x)$的命题的证明。</p>\n<ul>\n<li>构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。</li>\n<li>非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。</li>\n</ul>\n<h3 id=\"唯一性证明\"><a href=\"#唯一性证明\" class=\"headerlink\" title=\"唯一性证明\"></a>唯一性证明</h3><p>断言具有特定性质的元素惟一存在。证明分为两部分：</p>\n<ul>\n<li>存在性：证明存在某个元素$x$具有期望的性质</li>\n<li>唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><ul>\n<li>定理：是一个能够表明为真的语句，有时把不太重要的定理称为命题。</li>\n<li>引理：在其他结果证明中很有帮助的不大重要的定理</li>\n<li>推论：从定理直接建立被证明的定理</li>\n<li>猜想：被提出为真的命题，通常是在一些依据的基础上，启发式论证，未被证实。</li>\n</ul>\n<p>##证明定理的方法</p>\n<h3 id=\"直接证明\"><a href=\"#直接证明\" class=\"headerlink\" title=\"直接证明\"></a>直接证明</h3><p>直接证明用于$p\\rightarrow q$类型语句的方法。<br>第一步假设$p$为真，然后用定理、定义和前面的证明过的定理以及推理规则，来证明出$q$也肯定为真。</p>\n<h3 id=\"反证法\"><a href=\"#反证法\" class=\"headerlink\" title=\"反证法\"></a>反证法</h3><p>反证法基于$p\\rightarrow q\\equiv \\lnot q\\rightarrow \\lnot p$，也就是说$p\\rightarrow q$可以用它的倒置$\\lnot q\\rightarrow \\lnot p$来证明。<br>在反证法中，将$\\lnot q$作为假设，用公理、定义和前面证明过的定理以及推理规则，证明$\\lnot p$。</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><p>前提定义： 整数$n$是偶数，如果存在一个整数$k$使得$n=2k$；整数$n$是奇数，如果存在一个整数$k$使得$n=2k+1$。<br>证明”若$\\3n+2$是奇数，则$n$也是奇数”。<br>假设$n$为偶数，则有$n=2k$，将其带入，得到$3n+2=3(2k)+2=6k+2=2(3k+1)$，由偶数定义得知$3n+2$是偶数，这与定理前提矛盾，因此$n$是奇数。</p>\n<h3 id=\"空证明\"><a href=\"#空证明\" class=\"headerlink\" title=\"空证明\"></a>空证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$p$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"平凡证明\"><a href=\"#平凡证明\" class=\"headerlink\" title=\"平凡证明\"></a>平凡证明</h3><p>在条件语句$p\\rightarrow q$中，如果能够证明$q$为假，那么$p\\rightarrow q$一定为真，这就得到证明$p\\rightarrow q$的证明方法。</p>\n<h3 id=\"归谬证明\"><a href=\"#归谬证明\" class=\"headerlink\" title=\"归谬证明\"></a>归谬证明</h3><p>假设我们要证明$p$是真的，我们可以假定$\\lnot p$为真，然后推导出一个矛盾式$q$，使得$\\lnot p\\rightarrow q$为真，因为$\\lnot p\\rightarrow q$为真，$\\lnot p$必然为假，从而得出$p$为真。<br>也可用矛盾式证明$p\\rightarrow q$是真的，通过假设$p$和$\\lnot q$都为真，来证明$q$也一定为真。这意味着$q$和$\\lnot q$都为真，矛盾。 </p>\n<h4 id=\"归谬证明实例\"><a href=\"#归谬证明实例\" class=\"headerlink\" title=\"归谬证明实例\"></a>归谬证明实例</h4><p>前提定义：若存在整数$p$和$q(q\\neq 0)$使得$r=p/q$。实数$r$是有理数。<br>证明：$\\sqrt 2$是无理数<br>假定$\\sqrt 2$是有理数，则存在整数$a$和$b$满足$\\sqrt 2=a/b$，其中$a$和$b$没有公因子。<br>将等式两边平方，得$2=a^2/b^2$ $2b^2=a^2$。<br>根据偶数定义，$a^2$是偶数，若$a^2$是偶数，则$a$也是偶数，那么存在一个整数$c$，由$a=2c$。因此$2b^2=4c^2$。<br>等式两边除以$2$，得到$b^2=2c^2$。<br>由偶数定义，$b^2$是偶数，$b$也是偶数。<br>我们已经由$\\lnot p$得出等式$\\sqrt 2=a/b$，其中$a$和$b$没有公因子，这与$a$和$b$都是偶数矛盾，因此$\\lnot p$为假，从而得出$p$为真。</p>\n<h3 id=\"等价性证明\"><a href=\"#等价性证明\" class=\"headerlink\" title=\"等价性证明\"></a>等价性证明</h3><p>为了证明一个定理是双条件的，即形如$p↔︎q$的语句，我们来证明$p\\rightarrow q$和$q\\rightarrow p$都是真的。这个方法的有效性基于:<br>$$ (p↔︎q)↔︎[(p\\rightarrow q)\\land (q\\rightarrow p)]$$<br>有时候定理说几个命题都是等价的。这样的定理说命题$p_1,p_2,p_3,…,p_n$都是等价的。这个定理可以写成: $$p_1↔︎p_2↔︎…↔︎p_n$$</p>\n<h3 id=\"反例\"><a href=\"#反例\" class=\"headerlink\" title=\"反例\"></a>反例</h3><p>证明形如$\\forall xP(x)$的语句为假，只要能找到一个反例，即存在一个例子使$P(x)$为假。</p>\n<h3 id=\"穷举证明\"><a href=\"#穷举证明\" class=\"headerlink\" title=\"穷举证明\"></a>穷举证明</h3><p>有些定理能够通过有关的小数量例子测试来证明。这些证明通过穷举所有可能进行。穷举是分情形证明的特殊类型。</p>\n<h3 id=\"分情形证明\"><a href=\"#分情形证明\" class=\"headerlink\" title=\"分情形证明\"></a>分情形证明</h3><p>为了证明形如$(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q$的条件语句，可以用永真式$[(p_1 ∨ p_2 ∨ \\dots ∨ p_n)→q]↔︎[(p_1 →q)∧(p_2 →q)∧\\dots ∧(p_n →q)]$作为推理规则。这个推理规则说明，可以通过分别证明每个条件语句$p_i→q$来证明命题$p_1,p_2,\\dots p_n$的析取式组成前提的原条件语句。</p>\n<h3 id=\"存在性证明\"><a href=\"#存在性证明\" class=\"headerlink\" title=\"存在性证明\"></a>存在性证明</h3><p>对于形如$∃P(x)$的命题的证明。</p>\n<ul>\n<li>构造性的存在性证明：找出一个使得$P(x)$为真的元素$a$。</li>\n<li>非构造性的存在性证明：一个普通方法是，使用归缪证明，证明该存在量词化的否定式蕴含着矛盾。</li>\n</ul>\n<h3 id=\"唯一性证明\"><a href=\"#唯一性证明\" class=\"headerlink\" title=\"唯一性证明\"></a>唯一性证明</h3><p>断言具有特定性质的元素惟一存在。证明分为两部分：</p>\n<ul>\n<li>存在性：证明存在某个元素$x$具有期望的性质</li>\n<li>唯一性：证明若$y≠x$，则$y$不具有期望的性质。或者我们可以证明如果$x$和$y$都具有期望的性质，则$x=y$。</li>\n</ul>\n"},{"title":"Math-DM-05-推理规则","date":"2016-12-03T09:55:52.000Z","_content":"## 推理规则\n证明是建立在数学命题真实性之上的有效论证。    \n为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     \n\n### 命题逻辑的推理规则\n命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。     \n表示命题逻辑论证有效的关键是表示出它的__论证形式__有效。    \n我们可以先建立一些简单的论证形式，称为__推理规则__这些推理规则可以作为模板来构造更多复杂的有效论证形式。     \n\n|推理规则|永真式|名称|\n|:-----|:----|:---|\n|$\\begin{array}{cl} & p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & q \\\\ \\end{array}$| $[p\\land(p\\rightarrow q)]\\rightarrow q$| 假言推理|\n|$\\begin{array}{cl} &\\lnot p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & \\lnot p \\\\ \\end{array}$|$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$|取拒式|\n|$\\begin{array}{cl} & p\\rightarrow q \\\\ & \\underline {q\\rightarrow r} \\\\ \\therefore & p\\rightarrow r \\\\ \\end{array}$|$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$|假言三段论|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p} \\\\ \\therefore & q \\\\ \\end{array}$|$[(p\\lor q)\\land \\lnot p]\\rightarrow q$|析取三段论|\n|$\\begin{array}{cl} & \\underline p \\\\ \\therefore & p\\lor q \\\\ \\end{array}$|$p\\rightarrow (p\\lor q)$| 附加|\n|$\\begin{array}{cl} &\\underline {p\\land q} \\\\\\therefore & p\\\\ \\end{array}$|$(p\\land q)\\rightarrow p$|化简|\n|$\\begin{array}{cl} & p \\\\ & \\underline q \\\\ \\therefore & p\\land q \\\\ \\end{array}$|$(p\\land q)\\rightarrow (p\\land q)$|合取|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p\\lor r} \\\\ \\therefore & q\\lor r \\\\ \\end{array}$|$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$|消解|\n\n### 量词命题的推理规则\n\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\underline {\\forall xP(x)} \\\\ \\therefore & P(c) \\\\ \\end{array}$| 全称示例|\n|$\\begin{array}{cl} & \\underline {P(x),任意c} \\\\ \\therefore & \\forall xP(x)\\\\ \\end{array}$ |全称生成|\n|$\\begin{array}{cl} & \\underline {\\exists P(x)} \\\\ \\therefore & P(c),对某个元素\\\\ \\end{array}$|存在示例|\n|$\\begin{array}{cl} & \\underline {P(c),对某个元素} \\\\ \\therefore & \\exists xP(x)\\\\ \\end{array}$|存在生成|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n\n### 命题逻辑推理规则和量化语句的推理规则结合\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & \\lnot P(a) \\\\ \\end{array}$|全称取拒推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore & \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$|全称传递性|\n\n\n","source":"_posts/Math-DM-05-推理规则.md","raw":"---\ntitle: Math-DM-05-推理规则\ndate: 2016-12-03 17:55:52\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 推理规则\n证明是建立在数学命题真实性之上的有效论证。    \n为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     \n\n### 命题逻辑的推理规则\n命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。     \n表示命题逻辑论证有效的关键是表示出它的__论证形式__有效。    \n我们可以先建立一些简单的论证形式，称为__推理规则__这些推理规则可以作为模板来构造更多复杂的有效论证形式。     \n\n|推理规则|永真式|名称|\n|:-----|:----|:---|\n|$\\begin{array}{cl} & p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & q \\\\ \\end{array}$| $[p\\land(p\\rightarrow q)]\\rightarrow q$| 假言推理|\n|$\\begin{array}{cl} &\\lnot p \\\\ & \\underline {p\\rightarrow q} \\\\ \\therefore & \\lnot p \\\\ \\end{array}$|$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$|取拒式|\n|$\\begin{array}{cl} & p\\rightarrow q \\\\ & \\underline {q\\rightarrow r} \\\\ \\therefore & p\\rightarrow r \\\\ \\end{array}$|$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$|假言三段论|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p} \\\\ \\therefore & q \\\\ \\end{array}$|$[(p\\lor q)\\land \\lnot p]\\rightarrow q$|析取三段论|\n|$\\begin{array}{cl} & \\underline p \\\\ \\therefore & p\\lor q \\\\ \\end{array}$|$p\\rightarrow (p\\lor q)$| 附加|\n|$\\begin{array}{cl} &\\underline {p\\land q} \\\\\\therefore & p\\\\ \\end{array}$|$(p\\land q)\\rightarrow p$|化简|\n|$\\begin{array}{cl} & p \\\\ & \\underline q \\\\ \\therefore & p\\land q \\\\ \\end{array}$|$(p\\land q)\\rightarrow (p\\land q)$|合取|\n|$\\begin{array}{cl} & p\\lor q \\\\ & \\underline {\\lnot p\\lor r} \\\\ \\therefore & q\\lor r \\\\ \\end{array}$|$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$|消解|\n\n### 量词命题的推理规则\n\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\underline {\\forall xP(x)} \\\\ \\therefore & P(c) \\\\ \\end{array}$| 全称示例|\n|$\\begin{array}{cl} & \\underline {P(x),任意c} \\\\ \\therefore & \\forall xP(x)\\\\ \\end{array}$ |全称生成|\n|$\\begin{array}{cl} & \\underline {\\exists P(x)} \\\\ \\therefore & P(c),对某个元素\\\\ \\end{array}$|存在示例|\n|$\\begin{array}{cl} & \\underline {P(c),对某个元素} \\\\ \\therefore & \\exists xP(x)\\\\ \\end{array}$|存在生成|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n\n### 命题逻辑推理规则和量化语句的推理规则结合\n|推理规则|名称|\n|:-----|:---|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & Q(a) \\\\ \\end{array}$|全称假言推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore & \\lnot P(a) \\\\ \\end{array}$|全称取拒推理|\n|$\\begin{array}{cl} & \\forall x(P(x)\\rightarrow Q(x)) \\\\ & \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore & \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$|全称传递性|\n\n\n","slug":"Math-DM-05-推理规则","published":1,"updated":"2016-12-03T14:54:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq442000i9ruixymx5eih","content":"<h2 id=\"推理规则\"><a href=\"#推理规则\" class=\"headerlink\" title=\"推理规则\"></a>推理规则</h2><p>证明是建立在数学命题真实性之上的有效论证。<br>为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     </p>\n<h3 id=\"命题逻辑的推理规则\"><a href=\"#命题逻辑的推理规则\" class=\"headerlink\" title=\"命题逻辑的推理规则\"></a>命题逻辑的推理规则</h3><p>命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。<br>表示命题逻辑论证有效的关键是表示出它的<strong>论证形式</strong>有效。<br>我们可以先建立一些简单的论证形式，称为<strong>推理规则</strong>这些推理规则可以作为模板来构造更多复杂的有效论证形式。     </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">永真式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p \\\\ &amp; \\underline {p\\rightarrow q} \\\\ \\therefore &amp; q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[p\\land(p\\rightarrow q)]\\rightarrow q$</td>\n<td style=\"text-align:left\">假言推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp;\\lnot p \\\\ &amp; \\underline {p\\rightarrow q} \\\\ \\therefore &amp; \\lnot p \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$</td>\n<td style=\"text-align:left\">取拒式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\rightarrow q \\\\ &amp; \\underline {q\\rightarrow r} \\\\ \\therefore &amp; p\\rightarrow r \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$</td>\n<td style=\"text-align:left\">假言三段论</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\lor q \\\\ &amp; \\underline {\\lnot p} \\\\ \\therefore &amp; q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\lor q)\\land \\lnot p]\\rightarrow q$</td>\n<td style=\"text-align:left\">析取三段论</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline p \\\\ \\therefore &amp; p\\lor q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$p\\rightarrow (p\\lor q)$</td>\n<td style=\"text-align:left\">附加</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp;\\underline {p\\land q} \\\\\\therefore &amp; p\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$(p\\land q)\\rightarrow p$</td>\n<td style=\"text-align:left\">化简</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p \\\\ &amp; \\underline q \\\\ \\therefore &amp; p\\land q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$(p\\land q)\\rightarrow (p\\land q)$</td>\n<td style=\"text-align:left\">合取</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\lor q \\\\ &amp; \\underline {\\lnot p\\lor r} \\\\ \\therefore &amp; q\\lor r \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$</td>\n<td style=\"text-align:left\">消解</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"量词命题的推理规则\"><a href=\"#量词命题的推理规则\" class=\"headerlink\" title=\"量词命题的推理规则\"></a>量词命题的推理规则</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {\\forall xP(x)} \\\\ \\therefore &amp; P(c) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称示例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {P(x),任意c} \\\\ \\therefore &amp; \\forall xP(x)\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称生成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {\\exists P(x)} \\\\ \\therefore &amp; P(c),对某个元素\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">存在示例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {P(c),对某个元素} \\\\ \\therefore &amp; \\exists xP(x)\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">存在生成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; Q(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称假言推理</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"命题逻辑推理规则和量化语句的推理规则结合\"><a href=\"#命题逻辑推理规则和量化语句的推理规则结合\" class=\"headerlink\" title=\"命题逻辑推理规则和量化语句的推理规则结合\"></a>命题逻辑推理规则和量化语句的推理规则结合</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; Q(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称假言推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; \\lnot P(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称取拒推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore &amp; \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称传递性</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h2 id=\"推理规则\"><a href=\"#推理规则\" class=\"headerlink\" title=\"推理规则\"></a>推理规则</h2><p>证明是建立在数学命题真实性之上的有效论证。<br>为从已有的命题中推出新的命题，应用推理规则，它是构造有效论证的模板。推理规则是建立命题真实性的基本工具。     </p>\n<h3 id=\"命题逻辑的推理规则\"><a href=\"#命题逻辑的推理规则\" class=\"headerlink\" title=\"命题逻辑的推理规则\"></a>命题逻辑的推理规则</h3><p>命理逻辑中的论证是一连串的命题。除了论证中最后一个命题外都叫前提，最后的命题叫结论。当所有前提为真意味着结论为真时，一个论证是有效的。<br>表示命题逻辑论证有效的关键是表示出它的<strong>论证形式</strong>有效。<br>我们可以先建立一些简单的论证形式，称为<strong>推理规则</strong>这些推理规则可以作为模板来构造更多复杂的有效论证形式。     </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">永真式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p \\\\ &amp; \\underline {p\\rightarrow q} \\\\ \\therefore &amp; q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[p\\land(p\\rightarrow q)]\\rightarrow q$</td>\n<td style=\"text-align:left\">假言推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp;\\lnot p \\\\ &amp; \\underline {p\\rightarrow q} \\\\ \\therefore &amp; \\lnot p \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[\\lnot q\\land (p\\rightarrow q)]\\rightarrow \\lnot p$</td>\n<td style=\"text-align:left\">取拒式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\rightarrow q \\\\ &amp; \\underline {q\\rightarrow r} \\\\ \\therefore &amp; p\\rightarrow r \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\rightarrow q)\\land (q\\rightarrow r)]\\rightarrow (p\\rightarrow r)$</td>\n<td style=\"text-align:left\">假言三段论</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\lor q \\\\ &amp; \\underline {\\lnot p} \\\\ \\therefore &amp; q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\lor q)\\land \\lnot p]\\rightarrow q$</td>\n<td style=\"text-align:left\">析取三段论</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline p \\\\ \\therefore &amp; p\\lor q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$p\\rightarrow (p\\lor q)$</td>\n<td style=\"text-align:left\">附加</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp;\\underline {p\\land q} \\\\\\therefore &amp; p\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$(p\\land q)\\rightarrow p$</td>\n<td style=\"text-align:left\">化简</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p \\\\ &amp; \\underline q \\\\ \\therefore &amp; p\\land q \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$(p\\land q)\\rightarrow (p\\land q)$</td>\n<td style=\"text-align:left\">合取</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; p\\lor q \\\\ &amp; \\underline {\\lnot p\\lor r} \\\\ \\therefore &amp; q\\lor r \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">$[(p\\lor q)\\land (\\lnot p\\lor r)]\\rightarrow (q\\lor r)$</td>\n<td style=\"text-align:left\">消解</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"量词命题的推理规则\"><a href=\"#量词命题的推理规则\" class=\"headerlink\" title=\"量词命题的推理规则\"></a>量词命题的推理规则</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {\\forall xP(x)} \\\\ \\therefore &amp; P(c) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称示例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {P(x),任意c} \\\\ \\therefore &amp; \\forall xP(x)\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称生成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {\\exists P(x)} \\\\ \\therefore &amp; P(c),对某个元素\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">存在示例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\underline {P(c),对某个元素} \\\\ \\therefore &amp; \\exists xP(x)\\\\ \\end{array}$</td>\n<td style=\"text-align:left\">存在生成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; Q(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称假言推理</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"命题逻辑推理规则和量化语句的推理规则结合\"><a href=\"#命题逻辑推理规则和量化语句的推理规则结合\" class=\"headerlink\" title=\"命题逻辑推理规则和量化语句的推理规则结合\"></a>命题逻辑推理规则和量化语句的推理规则结合</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">推理规则</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {P(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; Q(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称假言推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {\\lnot Q(a), 其中a是论域中一个特定的元素} \\\\ \\therefore &amp; \\lnot P(a) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称取拒推理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\begin{array}{cl} &amp; \\forall x(P(x)\\rightarrow Q(x)) \\\\ &amp; \\underline {\\forall x(Q(x)\\rightarrow R(x))} \\\\ \\therefore &amp; \\forall x(P(x)\\rightarrow R(x)) \\\\ \\end{array}$</td>\n<td style=\"text-align:left\">全称传递性</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Math-DM-07-集合","date":"2016-12-08T04:37:07.000Z","_content":"## 集合\n集合是一组无序的对象。\n> 该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。\n    \n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n\n#### 笛卡儿积\n##### 元组\n\n有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,...,a_n)$。      \n只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。    \n令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合： \n$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$\n\n集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}\n$$\n#### 带量词的集合符合\n* $∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。\n* $∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。\n\n##### 实例\n$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。      \n$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。\n\n#### 量词的真值集合\n我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:    \n$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 \n> 在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。\n\n\n#### 常用集合表示\n|符号|描述|\n|:--|:---|\n|$\\mathbf Q$|有理数集|\n|$\\mathbf Q^+$| 正有理数集|\n|$\\mathbf N$|自然数集|\n|$\\mathbf Z$|整数集|\n|$\\mathbf Z^+$|正整数集|\n|$\\mathbf R$|实数集|\n|$\\varnothing$|空集|\n\n> 注意，$\\varnothing$不等于$\\{\\varnothing\\}$\n\n### 集合运算\n|运算|描述|\n|:--|:---|\n|并集|$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$|\n|交集|$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$|\n|差集|$A-B=\\{x\\in A\\land x\\notin B\\}$|\n|补集|$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$|\n\n> $U$为全集\n\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n##### 证明集合相等的方法\n证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。    \n另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 \n\n##### 证明实例\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n","source":"_posts/Math-DM-07-集合.md","raw":"---\ntitle: Math-DM-07-集合\ndate: 2016-12-08 12:37:07\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 集合\n集合是一组无序的对象。\n> 该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。\n    \n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n\n#### 笛卡儿积\n##### 元组\n\n有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,...,a_n)$。      \n只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。    \n令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合： \n$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$\n\n集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}\n$$\n#### 带量词的集合符合\n* $∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。\n* $∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。\n\n##### 实例\n$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。      \n$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。\n\n#### 量词的真值集合\n我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:    \n$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 \n> 在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。\n\n\n#### 常用集合表示\n|符号|描述|\n|:--|:---|\n|$\\mathbf Q$|有理数集|\n|$\\mathbf Q^+$| 正有理数集|\n|$\\mathbf N$|自然数集|\n|$\\mathbf Z$|整数集|\n|$\\mathbf Z^+$|正整数集|\n|$\\mathbf R$|实数集|\n|$\\varnothing$|空集|\n\n> 注意，$\\varnothing$不等于$\\{\\varnothing\\}$\n\n### 集合运算\n|运算|描述|\n|:--|:---|\n|并集|$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$|\n|交集|$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$|\n|差集|$A-B=\\{x\\in A\\land x\\notin B\\}$|\n|补集|$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$|\n\n> $U$为全集\n\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n##### 证明集合相等的方法\n证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。    \n另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 \n\n##### 证明实例\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n","slug":"Math-DM-07-集合","published":1,"updated":"2016-12-08T06:17:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq443000k9rui0xmdr0ky","content":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><p>集合是一组无序的对象。</p>\n<blockquote>\n<p>该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。</p>\n</blockquote>\n<h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"笛卡儿积\"><a href=\"#笛卡儿积\" class=\"headerlink\" title=\"笛卡儿积\"></a>笛卡儿积</h4><h5 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h5><p>有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,…,a_n)$。<br>只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。<br>令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合：<br>$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$</p>\n<p>集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}<br>$$</p>\n<h4 id=\"带量词的集合符合\"><a href=\"#带量词的集合符合\" class=\"headerlink\" title=\"带量词的集合符合\"></a>带量词的集合符合</h4><ul>\n<li>$∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。</li>\n<li>$∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。</li>\n</ul>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><p>$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。<br>$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。</p>\n<h4 id=\"量词的真值集合\"><a href=\"#量词的真值集合\" class=\"headerlink\" title=\"量词的真值集合\"></a>量词的真值集合</h4><p>我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:<br>$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 </p>\n<blockquote>\n<p>在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。</p>\n</blockquote>\n<h4 id=\"常用集合表示\"><a href=\"#常用集合表示\" class=\"headerlink\" title=\"常用集合表示\"></a>常用集合表示</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">符号</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Q$</td>\n<td style=\"text-align:left\">有理数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Q^+$</td>\n<td style=\"text-align:left\">正有理数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf N$</td>\n<td style=\"text-align:left\">自然数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Z$</td>\n<td style=\"text-align:left\">整数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Z^+$</td>\n<td style=\"text-align:left\">正整数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf R$</td>\n<td style=\"text-align:left\">实数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\varnothing$</td>\n<td style=\"text-align:left\">空集</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意，$\\varnothing$不等于$\\{\\varnothing\\}$</p>\n</blockquote>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">并集</td>\n<td style=\"text-align:left\">$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">交集</td>\n<td style=\"text-align:left\">$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">差集</td>\n<td style=\"text-align:left\">$A-B=\\{x\\in A\\land x\\notin B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">补集</td>\n<td style=\"text-align:left\">$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>$U$为全集</p>\n</blockquote>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td style=\"text-align:left\">恒等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td style=\"text-align:left\">支配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td style=\"text-align:left\">幂等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline {(\\bar A)}=A$</td>\n<td style=\"text-align:left\">补集律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td style=\"text-align:left\">交换律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td style=\"text-align:left\">结合律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td style=\"text-align:left\">分配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td style=\"text-align:left\">德摩根定律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td style=\"text-align:left\">吸收律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td style=\"text-align:left\">补集</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"证明集合相等的方法\"><a href=\"#证明集合相等的方法\" class=\"headerlink\" title=\"证明集合相等的方法\"></a>证明集合相等的方法</h5><p>证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。<br>另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 </p>\n<h5 id=\"证明实例\"><a href=\"#证明实例\" class=\"headerlink\" title=\"证明实例\"></a>证明实例</h5><p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= \\{x\\mid x\\notin A\\cap B\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\<br>&amp;   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\<br>&amp;   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><p>集合是一组无序的对象。</p>\n<blockquote>\n<p>该定义有逻辑悖论。以公理的基本假设为起点建立集合理论可以避免逻辑上的不一致。</p>\n</blockquote>\n<h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"笛卡儿积\"><a href=\"#笛卡儿积\" class=\"headerlink\" title=\"笛卡儿积\"></a>笛卡儿积</h4><h5 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h5><p>有序$n$元组，是由$n$个元素构成的有序组，用括号表示：$(a_1,a_2,a_3,…,a_n)$。<br>只有在两个有序$n$元组每一个对应的元素都相等时，它们才想等。二元组特称为有序偶。<br>令$\\mathbf A$和$\\mathbf B$为集合，$\\mathbf A$和$\\mathbf B$的笛卡儿积用$\\mathbf A\\times\\mathbf B$表示，是所有有序偶$(a,b)$的集合：<br>$$ \\mathbf A\\times\\mathbf B=\\{(a,b)\\mid a\\in \\mathbf A\\land b\\in \\mathbf B\\}$$</p>\n<p>集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>    A_1\\times A_2\\times \\dots \\times A_n = \\{(a_1,a_2,\\dots ,a_n)\\mid a_i∈A,i=1,2,\\dots,n\\}<br>$$</p>\n<h4 id=\"带量词的集合符合\"><a href=\"#带量词的集合符合\" class=\"headerlink\" title=\"带量词的集合符合\"></a>带量词的集合符合</h4><ul>\n<li>$∀x∈S(P(x))$表示$P(x)$的全称量化，论域是集合$S$，等同于$∀x(x∈S→P(x))$。</li>\n<li>$∃x∈S(P(x))$表示$P(x)$的存在量化，论域是集合$S$, 等同于$∃x(x∈S∧P(x))$。</li>\n</ul>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><p>$\\forall x\\in \\mathbf R(x^2\\ge 0)$的含义是：任意实数的平方是非负的。<br>$\\exists x\\in \\mathbf Z(x^2=1)$的含义是：有某个整数的平方是1。</p>\n<h4 id=\"量词的真值集合\"><a href=\"#量词的真值集合\" class=\"headerlink\" title=\"量词的真值集合\"></a>量词的真值集合</h4><p>我们把集合理论和谓词逻辑的概念结合起来，给定谓词$P$和论域$D$，定义$P$的真值集合:<br>$D$中元素$x$使$P(x)$为真的元素组成的集合。$P(x)$的真值集合记为$\\{x\\in D\\mid P(x)\\}$。 </p>\n<blockquote>\n<p>在域$\\mathbf U$上，$\\forall xP(x)$为真当且仅当$P$的真值集合是集合$U$。同样，域$U$上$\\exists xP(x)$为真，当且仅当$P$的真值集合非空。</p>\n</blockquote>\n<h4 id=\"常用集合表示\"><a href=\"#常用集合表示\" class=\"headerlink\" title=\"常用集合表示\"></a>常用集合表示</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">符号</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Q$</td>\n<td style=\"text-align:left\">有理数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Q^+$</td>\n<td style=\"text-align:left\">正有理数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf N$</td>\n<td style=\"text-align:left\">自然数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Z$</td>\n<td style=\"text-align:left\">整数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf Z^+$</td>\n<td style=\"text-align:left\">正整数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\mathbf R$</td>\n<td style=\"text-align:left\">实数集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\varnothing$</td>\n<td style=\"text-align:left\">空集</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意，$\\varnothing$不等于$\\{\\varnothing\\}$</p>\n</blockquote>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">并集</td>\n<td style=\"text-align:left\">$A\\cup B=\\{x\\mid x\\in A\\lor x\\in B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">交集</td>\n<td style=\"text-align:left\">$A\\cap B=\\{x\\mid x\\in A\\land x\\in B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">差集</td>\n<td style=\"text-align:left\">$A-B=\\{x\\in A\\land x\\notin B\\}$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">补集</td>\n<td style=\"text-align:left\">$\\overline A=\\{x\\mid x\\in U\\land x\\notin A\\}$</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>$U$为全集</p>\n</blockquote>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td style=\"text-align:left\">恒等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td style=\"text-align:left\">支配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td style=\"text-align:left\">幂等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline {(\\bar A)}=A$</td>\n<td style=\"text-align:left\">补集律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td style=\"text-align:left\">交换律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td style=\"text-align:left\">结合律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td style=\"text-align:left\">分配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td style=\"text-align:left\">德摩根定律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td style=\"text-align:left\">吸收律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td style=\"text-align:left\">补集</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"证明集合相等的方法\"><a href=\"#证明集合相等的方法\" class=\"headerlink\" title=\"证明集合相等的方法\"></a>证明集合相等的方法</h5><p>证明集合相等的一种方法是：证明两者中任何一个都是另一个的子集。<br>另外一种方法是：证明一个元素如果属于第一个集合，必定属于第二个集合。 </p>\n<h5 id=\"证明实例\"><a href=\"#证明实例\" class=\"headerlink\" title=\"证明实例\"></a>证明实例</h5><p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= \\{x\\mid x\\notin A\\cap B\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\<br>&amp;   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\<br>&amp;   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n"},{"title":"直线与方程","date":"2016-09-11T11:56:42.000Z","_content":"\n### 直线的斜率\n设点$P(x_1, y_1)$和$P(x_2, y_2)$是非垂直直线$L$上的两个点。$L$的斜率为\n$$\n    m = {\\Delta y\\over \\Delta x} = {y_2 - y_1\\over x_2 - x_1}\n$$\n垂直于$x$轴的直线没有斜率。   \n互相垂直的直线斜率互为*负倒数*。\n\n### 点斜式方程\n设直线过点$(x_1, y_1)$，且斜率为$m$，则方程表示为\n$$\n    y = m(x - x_1) + y_1\n$$\n\n### 斜截距方程\n设直线与$y$轴交与点$(0, b)$，则方程还可以写成下列形式\n$$\n    y = mx + b\n$$\n### 两点式方程\n设直线过两点$P_1(x_1, y_1)$，$P_2(x_2, y_2)$，将$m = {y_2 - y_1\\over x_2 - x_1}$代入点斜式方程得\n$$\n    {y-y_1\\over y_2-y_1} = {x-x_1\\over x_2-x_1}\n$$\n\n### 截距式方程\n设直线与$x$轴，$y$轴分别交与$(a, 0)$，$(0, b)$，代入两点式方程得\n$$\n    {x\\over a}+{y\\over b}=1\n$$\n\n### 两点间的距离公式\n设两点$P_1(x_1, y_1)$ ，$P_2(x_2, y_2)$，则两点间的距离为\n$$\n    |P_1P_2| = \\sqrt {(x_2-x_1)^2+(y_2-y_1)^2}\n$$\n\n### 点到直线的距离\n点$P(x_1, y_1)$到直线$Ax+Bx+C=0$的距离为\n$$\n    d={|Ax_1+By_1+C|\\over \\sqrt {A^2+B^2}}\n$$\n","source":"_posts/Math-直线与方程.md","raw":"---\ntitle: 直线与方程\ndate: 2016-09-11 19:56:42\ntags: [Math, Calculus, note]\ncategories: [Math]\n---\n\n### 直线的斜率\n设点$P(x_1, y_1)$和$P(x_2, y_2)$是非垂直直线$L$上的两个点。$L$的斜率为\n$$\n    m = {\\Delta y\\over \\Delta x} = {y_2 - y_1\\over x_2 - x_1}\n$$\n垂直于$x$轴的直线没有斜率。   \n互相垂直的直线斜率互为*负倒数*。\n\n### 点斜式方程\n设直线过点$(x_1, y_1)$，且斜率为$m$，则方程表示为\n$$\n    y = m(x - x_1) + y_1\n$$\n\n### 斜截距方程\n设直线与$y$轴交与点$(0, b)$，则方程还可以写成下列形式\n$$\n    y = mx + b\n$$\n### 两点式方程\n设直线过两点$P_1(x_1, y_1)$，$P_2(x_2, y_2)$，将$m = {y_2 - y_1\\over x_2 - x_1}$代入点斜式方程得\n$$\n    {y-y_1\\over y_2-y_1} = {x-x_1\\over x_2-x_1}\n$$\n\n### 截距式方程\n设直线与$x$轴，$y$轴分别交与$(a, 0)$，$(0, b)$，代入两点式方程得\n$$\n    {x\\over a}+{y\\over b}=1\n$$\n\n### 两点间的距离公式\n设两点$P_1(x_1, y_1)$ ，$P_2(x_2, y_2)$，则两点间的距离为\n$$\n    |P_1P_2| = \\sqrt {(x_2-x_1)^2+(y_2-y_1)^2}\n$$\n\n### 点到直线的距离\n点$P(x_1, y_1)$到直线$Ax+Bx+C=0$的距离为\n$$\n    d={|Ax_1+By_1+C|\\over \\sqrt {A^2+B^2}}\n$$\n","slug":"Math-直线与方程","published":1,"updated":"2016-09-12T13:13:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq444000n9rui0p42u2se","content":"<h3 id=\"直线的斜率\"><a href=\"#直线的斜率\" class=\"headerlink\" title=\"直线的斜率\"></a>直线的斜率</h3><p>设点$P(x_1, y_1)$和$P(x_2, y_2)$是非垂直直线$L$上的两个点。$L$的斜率为<br>$$<br>    m = {\\Delta y\\over \\Delta x} = {y_2 - y_1\\over x_2 - x_1}<br>$$<br>垂直于$x$轴的直线没有斜率。<br>互相垂直的直线斜率互为<em>负倒数</em>。</p>\n<h3 id=\"点斜式方程\"><a href=\"#点斜式方程\" class=\"headerlink\" title=\"点斜式方程\"></a>点斜式方程</h3><p>设直线过点$(x_1, y_1)$，且斜率为$m$，则方程表示为<br>$$<br>    y = m(x - x_1) + y_1<br>$$</p>\n<h3 id=\"斜截距方程\"><a href=\"#斜截距方程\" class=\"headerlink\" title=\"斜截距方程\"></a>斜截距方程</h3><p>设直线与$y$轴交与点$(0, b)$，则方程还可以写成下列形式<br>$$<br>    y = mx + b<br>$$</p>\n<h3 id=\"两点式方程\"><a href=\"#两点式方程\" class=\"headerlink\" title=\"两点式方程\"></a>两点式方程</h3><p>设直线过两点$P_1(x_1, y_1)$，$P_2(x_2, y_2)$，将$m = {y_2 - y_1\\over x_2 - x_1}$代入点斜式方程得<br>$$<br>    {y-y_1\\over y_2-y_1} = {x-x_1\\over x_2-x_1}<br>$$</p>\n<h3 id=\"截距式方程\"><a href=\"#截距式方程\" class=\"headerlink\" title=\"截距式方程\"></a>截距式方程</h3><p>设直线与$x$轴，$y$轴分别交与$(a, 0)$，$(0, b)$，代入两点式方程得<br>$$<br>    {x\\over a}+{y\\over b}=1<br>$$</p>\n<h3 id=\"两点间的距离公式\"><a href=\"#两点间的距离公式\" class=\"headerlink\" title=\"两点间的距离公式\"></a>两点间的距离公式</h3><p>设两点$P_1(x_1, y_1)$ ，$P_2(x_2, y_2)$，则两点间的距离为<br>$$<br>    |P_1P_2| = \\sqrt {(x_2-x_1)^2+(y_2-y_1)^2}<br>$$</p>\n<h3 id=\"点到直线的距离\"><a href=\"#点到直线的距离\" class=\"headerlink\" title=\"点到直线的距离\"></a>点到直线的距离</h3><p>点$P(x_1, y_1)$到直线$Ax+Bx+C=0$的距离为<br>$$<br>    d={|Ax_1+By_1+C|\\over \\sqrt {A^2+B^2}}<br>$$</p>\n","excerpt":"","more":"<h3 id=\"直线的斜率\"><a href=\"#直线的斜率\" class=\"headerlink\" title=\"直线的斜率\"></a>直线的斜率</h3><p>设点$P(x_1, y_1)$和$P(x_2, y_2)$是非垂直直线$L$上的两个点。$L$的斜率为<br>$$<br>    m = {\\Delta y\\over \\Delta x} = {y_2 - y_1\\over x_2 - x_1}<br>$$<br>垂直于$x$轴的直线没有斜率。<br>互相垂直的直线斜率互为<em>负倒数</em>。</p>\n<h3 id=\"点斜式方程\"><a href=\"#点斜式方程\" class=\"headerlink\" title=\"点斜式方程\"></a>点斜式方程</h3><p>设直线过点$(x_1, y_1)$，且斜率为$m$，则方程表示为<br>$$<br>    y = m(x - x_1) + y_1<br>$$</p>\n<h3 id=\"斜截距方程\"><a href=\"#斜截距方程\" class=\"headerlink\" title=\"斜截距方程\"></a>斜截距方程</h3><p>设直线与$y$轴交与点$(0, b)$，则方程还可以写成下列形式<br>$$<br>    y = mx + b<br>$$</p>\n<h3 id=\"两点式方程\"><a href=\"#两点式方程\" class=\"headerlink\" title=\"两点式方程\"></a>两点式方程</h3><p>设直线过两点$P_1(x_1, y_1)$，$P_2(x_2, y_2)$，将$m = {y_2 - y_1\\over x_2 - x_1}$代入点斜式方程得<br>$$<br>    {y-y_1\\over y_2-y_1} = {x-x_1\\over x_2-x_1}<br>$$</p>\n<h3 id=\"截距式方程\"><a href=\"#截距式方程\" class=\"headerlink\" title=\"截距式方程\"></a>截距式方程</h3><p>设直线与$x$轴，$y$轴分别交与$(a, 0)$，$(0, b)$，代入两点式方程得<br>$$<br>    {x\\over a}+{y\\over b}=1<br>$$</p>\n<h3 id=\"两点间的距离公式\"><a href=\"#两点间的距离公式\" class=\"headerlink\" title=\"两点间的距离公式\"></a>两点间的距离公式</h3><p>设两点$P_1(x_1, y_1)$ ，$P_2(x_2, y_2)$，则两点间的距离为<br>$$<br>    |P_1P_2| = \\sqrt {(x_2-x_1)^2+(y_2-y_1)^2}<br>$$</p>\n<h3 id=\"点到直线的距离\"><a href=\"#点到直线的距离\" class=\"headerlink\" title=\"点到直线的距离\"></a>点到直线的距离</h3><p>点$P(x_1, y_1)$到直线$Ax+Bx+C=0$的距离为<br>$$<br>    d={|Ax_1+By_1+C|\\over \\sqrt {A^2+B^2}}<br>$$</p>\n"},{"title":"矩阵代数－《线性代数及应用》","date":"2016-09-04T08:27:24.000Z","updated":"2016-09-05T12:00:00.000Z","_content":"> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 矩阵运算\n### 与标量相乘\n$A,B,C$是维数相同的矩阵，$r,s$为实数   \n\n* $A+B=B+A$\n* $(A+B)+C=A+(B+C)$\n* $A+0=A$\n* $r(A+B)=rA+rB$\n* $(r+s)A=rA+sA$\n* $r(sA)=(rs)A$\n\n### 矩阵相乘\n* $A(BC)=(AB)C$\n* $A(B+C)=AB+AC$\n* $(B+C)A=BA+CA$\n* $r(AB)=(rA)B=A(rB)$\n* $I_mA=A=AI_n$\n\n### 矩阵的乘幂\n$A^k$表示$k$个$A$的乘积，$A^k\\mathbf x$表示$\\mathbf x$被A连续左乘$k$次。$A^0$解释为单位矩阵。\n\n## 矩阵的性质\n### 矩阵的转置\n若$A$为$m\\times n$矩阵，则$A^T$为$n\\times m$矩阵，它的列由$A$对应的行组成。\n\n* $(A^T)^T=A$\n* $(A+B)^T=A^T+B^T$\n* $(rA)^T=rA^T$\n* $(AB)^T=B^TA^T$\n\n### 矩阵的逆\n对于一个$n\\times n$矩阵A,若存在一个$n\\times n$矩阵C使\n$$\n    AC=I 且CA=I\n$$\n$I$为$n\\times n$的单位矩阵，$C$是$A$的逆阵，记为$A^{-1}$，于是\n$$\n    AA^{-1}=I 且 A^{-1}A=I\n$$\n不可逆矩阵称为奇异矩阵，可逆矩阵称为非奇异矩阵\n\n#### 求$A^{-1}$的算法\n把增广矩阵$[A I]$进行行化简，若$A$行等价于$I$，则$[A I]$行等价于$[I A^{-1}]$，否则$A$没有逆。\n\n#### 可逆矩阵的性质\n参见下面的定理8\n\n### 分块矩阵\n矩阵的维数太多时，可以将矩阵进行分割，每一块是一个子矩阵。\n\n#### 分块矩阵的乘法\n$$\n    A=\n    \\left[\n    \\begin{array}{ccc|cc}\n    2 & -3 & 1 & 0 & 4\\\\\n    \\hline\n    1 & 5 & -2 & 3 & -1\\\\\n    0 & -4 & -2 & 7 & -1\\\\\n    \\end{array}\n    \\right]\n    =\n    \\begin{bmatrix}\n    A_{11} & A_{12}\\\\\n    A_{21} & A_{22}\\\\\n    \\end{bmatrix} \\\\\n    B=\n    \\begin{bmatrix}\n    6 & 4\\\\\n    -2 & 1\\\\\n    -3 & 7\\\\\n    \\hline\n    -1 & 3\\\\\n    5 & 2\\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    B_1 \\\\\n    B_2 \\\\\n    \\end{bmatrix} \\\\\n    AB=\n    \\begin{bmatrix}\n    A_{11} & A_{12}\\\\\n    A_{21} & A_{22}\\\\\n    \\end{bmatrix}\n    \\begin{bmatrix}\n    B_1 \\\\\n    B_2 \\\\\n    \\end{bmatrix}\n    =\n     \\begin{bmatrix}\n    A_{11}B_1 + A_{12}B_2 \\\\\n    A_{21}B_1 + A_{22}B_2 \\\\\n    \\end{bmatrix} \n    =\n    \\begin{bmatrix}\n    -5 & 4 \\\\\n    -6 & 2 \\\\\n    \\hline\n    2 & 1\n    \\end{bmatrix} \n$$\n## 矩阵因式分解\n矩阵的乘法是将多个矩阵结合成一个矩阵，而矩阵的因式分解是将一个矩阵分成多个矩阵\n### LU分解\nLU分解一般用于解一系列具有相同系数矩阵的线性方程，例如\n$$\n    A\\mathbf x=b_1, A\\mathbf x=b_2,\\cdots ,A\\mathbf x=b_n\n$$\n#### LU分解算法\n设$A$可以化为阶梯形$U$，化简过程仅使用行倍加变换，这样存在单位下三角初等矩阵$E_1,\\cdots,E_p$，使得\n$$\n    E_p,\\cdots,E_1A=U \\\\\n    A=(E_p,\\cdots,E_1)^{-1}U=LU  \\\\\n    L=(E_p,\\cdots,E_1)^{-1  }\n$$\n\n## 特殊矩阵\n### 上三角矩阵\n$m\\times n$矩阵的主对角线以下元素全为0，该矩阵是可逆的。\n\n### 下三角矩阵\n$m\\times n$矩阵的主对角线以上元素全为0，该矩阵是可逆的。\n\n### 分块对角矩阵\n分块对角矩阵是一个分块矩阵，除了主对角线上各分块之外，其余全是零分块，当且仅当主对角线上各分块都是可逆时，该矩阵是可逆的。\n\n## 定理\n\n1.$A,B,C$是维数相同的矩阵，$r,s$为实数\n>* $A+B=B+A$\n>* $(A+B)+C=A+(B+C)$\n>* $A+0=A$\n>* $r(A+B)=rA+rB$\n>* $(r+s)A=rA+sA$\n>* $r(sA)=(rs)A$\n\n2.设$A$为$m\\times n$矩阵，$B C$的维数使下列各式有定义\n>* $A(BC)=(AB)C$\n>* $A(B+C)=AB+AC$\n>* $(B+C)A=BA+CA$\n>* $r(AB)=(rA)B=A(rB)$\n>* $I_mA=A=AI_n$\n\n3.设$A$表示为矩阵，其维数使下列各式有定义\n>* $(A^T)^T=A$\n>* $(A+B)^T=A^T+B^T$\n>* $(rA)^T=rA^T$\n>* $(AB)^T=B^TA^T$\n\n4.设$A=\\begin{bmatrix} a & b\\\\ c & d\\\\ \\end{bmatrix}$,若$ad-bc\\neq 0$，则$A$可逆，且\n$$\n    A^{-1}={1\\over{ad-bc}} \\begin{bmatrix} d & -b\\\\ -c & a\\\\ \\end{bmatrix}\n$$\n\n5.若$A$是可逆$n\\times n$矩阵，则对每一个$R^n$中的$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$有唯一解$\\mathbf x=A^{-1}\\mathbf b$\n6.若$A,B$为可逆矩阵，则\n>* $(A^{-1})^{-1}=A$\n>* $(AB)^{-1}=B^{-1}A^{-1}$\n>* $(A^T)^{-1}=(A^{-1})^T$\n\n7.$n\\times n$矩阵$A$是可逆的，当且仅当$A$行等价于$I_n$，这时，把$A$变为$I_n$的一系列初等行变化同时把$I_n$变成$A^[-1]$\n\n8.可逆矩阵定理\n设$A$为$n\\times n$矩阵，则下列命题是等价的，即对某一特定的$A$，它们同时为真或同时为假\n>* $A$是可逆矩阵\n>* $A$等价于$n\\times n$单位矩阵\n>* $A$有$n$个主元位置\n>* 方程$A\\mathbf x=0$仅有平凡解\n>* $A$的各列线性无关\n>* 线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的\n>* 对$R^n$中任意$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$至少有一个解\n>* $A$的各列生成$R^n$\n>* 线性变换$\\mathbf x\\mapsto A\\mathbf x$把$R^n$映射到$R^n$上\n>* 存在$n\\times n$矩阵$C,D$，使$CA=I, AD=I$\n>* $A^T$是可逆矩阵\n\n9.设$T:R^n \\to R^n$为线性变换，$A$为$T$的标准矩阵，则$T$可逆当且仅当$A$是可逆矩阵，这时由$S(\\mathbf x)=A^{-1}\\mathbf x$定义的线性变换$S$是满足以下函数的唯一函数\n$$\n    对所有R^n中的\\mathbf x, S(T(\\mathbf x))=\\mathbf x \\\\\n    对所有R^n中的\\mathbf x, T(S(\\mathbf x))=\\mathbf x \\\\\n$$\n10.若$A$是$m\\times n$矩阵，$B$是$n\\times p$矩阵，$col_k(A)$代表$A$的第$k$列，$row_k(B)$代表$B$的第$k$行，则\n$$\n    AB = [col_1(A) col_2(A) \\cdots col_n(A)]\n    \\begin{bmatrix}\n    row_1(B)\\\\\n    row_2(B)\\\\\n    \\vdots\\\\\n    row_n(B)\\\\\n    \\end{bmatrix}\\\\\n    =col_1(A)row_1(B)+\\cdots+col_n(A)col_n(B)\n$$\n11.列昂惕夫投入产出模型：设$C$为某一经济的消耗矩阵，$d$为最终需求，若$C$和$d$的元素非负，$C$的每一列的和小于1，则$(I-C)^{-1}$存在，而产出向量 \n$$\n    \\mathbf x= (I-C)^{-1}\\mathbf d\n$$\n有非负元素，且是下列方程的唯一解\n$$\n    \\mathbf x = C\\mathbf x + \\mathbf d\n$$\n\n## 证明\n### 分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\n$$\n    AA^{-1}=\n    \\begin{bmatrix}\n    A_{11} & 0\\\\\n    0 & A_{22} \\\\\n    \\end{bmatrix}\n    \\begin{bmatrix}\n    B_{11} & B_{12} \\\\\n    B_{21} & B_{22} \\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    I_q & 0 \\\\\n    0 & I_p \\\\\n    \\end{bmatrix} \\\\\n    A_{11}B_{11}=I_q, A_{11}B_{12}=0 \\\\\n    A_{22}B_{21}=0, A_{22}B_{22}=I_p \\\\\n    B_{11} = A_{11}^{-1}, B_{12}=0 \\\\\n    B_{22} = A_{22}^{-1}, B_{21}=0 \\\\\n    A^{-1}=\n     \\begin{bmatrix}\n    B_{11} & B_{12} \\\\\n    B_{21} & B_{22} \\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    A_{11}^{-1} & 0 \\\\\n    0 & A_{22}^{-1} \\\\\n    \\end{bmatrix}\n$$\n\n\n","source":"_posts/Math-矩阵代数－《线性代数及应用》.md","raw":"---\ntitle: 矩阵代数－《线性代数及应用》\ndate: 2016-09-04 16:27:24\nupdated: 2016-09-05 20:00:00\ntags: [Math, Linear Algebra, note]\ncategories: Math\n---\n> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 矩阵运算\n### 与标量相乘\n$A,B,C$是维数相同的矩阵，$r,s$为实数   \n\n* $A+B=B+A$\n* $(A+B)+C=A+(B+C)$\n* $A+0=A$\n* $r(A+B)=rA+rB$\n* $(r+s)A=rA+sA$\n* $r(sA)=(rs)A$\n\n### 矩阵相乘\n* $A(BC)=(AB)C$\n* $A(B+C)=AB+AC$\n* $(B+C)A=BA+CA$\n* $r(AB)=(rA)B=A(rB)$\n* $I_mA=A=AI_n$\n\n### 矩阵的乘幂\n$A^k$表示$k$个$A$的乘积，$A^k\\mathbf x$表示$\\mathbf x$被A连续左乘$k$次。$A^0$解释为单位矩阵。\n\n## 矩阵的性质\n### 矩阵的转置\n若$A$为$m\\times n$矩阵，则$A^T$为$n\\times m$矩阵，它的列由$A$对应的行组成。\n\n* $(A^T)^T=A$\n* $(A+B)^T=A^T+B^T$\n* $(rA)^T=rA^T$\n* $(AB)^T=B^TA^T$\n\n### 矩阵的逆\n对于一个$n\\times n$矩阵A,若存在一个$n\\times n$矩阵C使\n$$\n    AC=I 且CA=I\n$$\n$I$为$n\\times n$的单位矩阵，$C$是$A$的逆阵，记为$A^{-1}$，于是\n$$\n    AA^{-1}=I 且 A^{-1}A=I\n$$\n不可逆矩阵称为奇异矩阵，可逆矩阵称为非奇异矩阵\n\n#### 求$A^{-1}$的算法\n把增广矩阵$[A I]$进行行化简，若$A$行等价于$I$，则$[A I]$行等价于$[I A^{-1}]$，否则$A$没有逆。\n\n#### 可逆矩阵的性质\n参见下面的定理8\n\n### 分块矩阵\n矩阵的维数太多时，可以将矩阵进行分割，每一块是一个子矩阵。\n\n#### 分块矩阵的乘法\n$$\n    A=\n    \\left[\n    \\begin{array}{ccc|cc}\n    2 & -3 & 1 & 0 & 4\\\\\n    \\hline\n    1 & 5 & -2 & 3 & -1\\\\\n    0 & -4 & -2 & 7 & -1\\\\\n    \\end{array}\n    \\right]\n    =\n    \\begin{bmatrix}\n    A_{11} & A_{12}\\\\\n    A_{21} & A_{22}\\\\\n    \\end{bmatrix} \\\\\n    B=\n    \\begin{bmatrix}\n    6 & 4\\\\\n    -2 & 1\\\\\n    -3 & 7\\\\\n    \\hline\n    -1 & 3\\\\\n    5 & 2\\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    B_1 \\\\\n    B_2 \\\\\n    \\end{bmatrix} \\\\\n    AB=\n    \\begin{bmatrix}\n    A_{11} & A_{12}\\\\\n    A_{21} & A_{22}\\\\\n    \\end{bmatrix}\n    \\begin{bmatrix}\n    B_1 \\\\\n    B_2 \\\\\n    \\end{bmatrix}\n    =\n     \\begin{bmatrix}\n    A_{11}B_1 + A_{12}B_2 \\\\\n    A_{21}B_1 + A_{22}B_2 \\\\\n    \\end{bmatrix} \n    =\n    \\begin{bmatrix}\n    -5 & 4 \\\\\n    -6 & 2 \\\\\n    \\hline\n    2 & 1\n    \\end{bmatrix} \n$$\n## 矩阵因式分解\n矩阵的乘法是将多个矩阵结合成一个矩阵，而矩阵的因式分解是将一个矩阵分成多个矩阵\n### LU分解\nLU分解一般用于解一系列具有相同系数矩阵的线性方程，例如\n$$\n    A\\mathbf x=b_1, A\\mathbf x=b_2,\\cdots ,A\\mathbf x=b_n\n$$\n#### LU分解算法\n设$A$可以化为阶梯形$U$，化简过程仅使用行倍加变换，这样存在单位下三角初等矩阵$E_1,\\cdots,E_p$，使得\n$$\n    E_p,\\cdots,E_1A=U \\\\\n    A=(E_p,\\cdots,E_1)^{-1}U=LU  \\\\\n    L=(E_p,\\cdots,E_1)^{-1  }\n$$\n\n## 特殊矩阵\n### 上三角矩阵\n$m\\times n$矩阵的主对角线以下元素全为0，该矩阵是可逆的。\n\n### 下三角矩阵\n$m\\times n$矩阵的主对角线以上元素全为0，该矩阵是可逆的。\n\n### 分块对角矩阵\n分块对角矩阵是一个分块矩阵，除了主对角线上各分块之外，其余全是零分块，当且仅当主对角线上各分块都是可逆时，该矩阵是可逆的。\n\n## 定理\n\n1.$A,B,C$是维数相同的矩阵，$r,s$为实数\n>* $A+B=B+A$\n>* $(A+B)+C=A+(B+C)$\n>* $A+0=A$\n>* $r(A+B)=rA+rB$\n>* $(r+s)A=rA+sA$\n>* $r(sA)=(rs)A$\n\n2.设$A$为$m\\times n$矩阵，$B C$的维数使下列各式有定义\n>* $A(BC)=(AB)C$\n>* $A(B+C)=AB+AC$\n>* $(B+C)A=BA+CA$\n>* $r(AB)=(rA)B=A(rB)$\n>* $I_mA=A=AI_n$\n\n3.设$A$表示为矩阵，其维数使下列各式有定义\n>* $(A^T)^T=A$\n>* $(A+B)^T=A^T+B^T$\n>* $(rA)^T=rA^T$\n>* $(AB)^T=B^TA^T$\n\n4.设$A=\\begin{bmatrix} a & b\\\\ c & d\\\\ \\end{bmatrix}$,若$ad-bc\\neq 0$，则$A$可逆，且\n$$\n    A^{-1}={1\\over{ad-bc}} \\begin{bmatrix} d & -b\\\\ -c & a\\\\ \\end{bmatrix}\n$$\n\n5.若$A$是可逆$n\\times n$矩阵，则对每一个$R^n$中的$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$有唯一解$\\mathbf x=A^{-1}\\mathbf b$\n6.若$A,B$为可逆矩阵，则\n>* $(A^{-1})^{-1}=A$\n>* $(AB)^{-1}=B^{-1}A^{-1}$\n>* $(A^T)^{-1}=(A^{-1})^T$\n\n7.$n\\times n$矩阵$A$是可逆的，当且仅当$A$行等价于$I_n$，这时，把$A$变为$I_n$的一系列初等行变化同时把$I_n$变成$A^[-1]$\n\n8.可逆矩阵定理\n设$A$为$n\\times n$矩阵，则下列命题是等价的，即对某一特定的$A$，它们同时为真或同时为假\n>* $A$是可逆矩阵\n>* $A$等价于$n\\times n$单位矩阵\n>* $A$有$n$个主元位置\n>* 方程$A\\mathbf x=0$仅有平凡解\n>* $A$的各列线性无关\n>* 线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的\n>* 对$R^n$中任意$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$至少有一个解\n>* $A$的各列生成$R^n$\n>* 线性变换$\\mathbf x\\mapsto A\\mathbf x$把$R^n$映射到$R^n$上\n>* 存在$n\\times n$矩阵$C,D$，使$CA=I, AD=I$\n>* $A^T$是可逆矩阵\n\n9.设$T:R^n \\to R^n$为线性变换，$A$为$T$的标准矩阵，则$T$可逆当且仅当$A$是可逆矩阵，这时由$S(\\mathbf x)=A^{-1}\\mathbf x$定义的线性变换$S$是满足以下函数的唯一函数\n$$\n    对所有R^n中的\\mathbf x, S(T(\\mathbf x))=\\mathbf x \\\\\n    对所有R^n中的\\mathbf x, T(S(\\mathbf x))=\\mathbf x \\\\\n$$\n10.若$A$是$m\\times n$矩阵，$B$是$n\\times p$矩阵，$col_k(A)$代表$A$的第$k$列，$row_k(B)$代表$B$的第$k$行，则\n$$\n    AB = [col_1(A) col_2(A) \\cdots col_n(A)]\n    \\begin{bmatrix}\n    row_1(B)\\\\\n    row_2(B)\\\\\n    \\vdots\\\\\n    row_n(B)\\\\\n    \\end{bmatrix}\\\\\n    =col_1(A)row_1(B)+\\cdots+col_n(A)col_n(B)\n$$\n11.列昂惕夫投入产出模型：设$C$为某一经济的消耗矩阵，$d$为最终需求，若$C$和$d$的元素非负，$C$的每一列的和小于1，则$(I-C)^{-1}$存在，而产出向量 \n$$\n    \\mathbf x= (I-C)^{-1}\\mathbf d\n$$\n有非负元素，且是下列方程的唯一解\n$$\n    \\mathbf x = C\\mathbf x + \\mathbf d\n$$\n\n## 证明\n### 分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\n$$\n    AA^{-1}=\n    \\begin{bmatrix}\n    A_{11} & 0\\\\\n    0 & A_{22} \\\\\n    \\end{bmatrix}\n    \\begin{bmatrix}\n    B_{11} & B_{12} \\\\\n    B_{21} & B_{22} \\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    I_q & 0 \\\\\n    0 & I_p \\\\\n    \\end{bmatrix} \\\\\n    A_{11}B_{11}=I_q, A_{11}B_{12}=0 \\\\\n    A_{22}B_{21}=0, A_{22}B_{22}=I_p \\\\\n    B_{11} = A_{11}^{-1}, B_{12}=0 \\\\\n    B_{22} = A_{22}^{-1}, B_{21}=0 \\\\\n    A^{-1}=\n     \\begin{bmatrix}\n    B_{11} & B_{12} \\\\\n    B_{21} & B_{22} \\\\\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n    A_{11}^{-1} & 0 \\\\\n    0 & A_{22}^{-1} \\\\\n    \\end{bmatrix}\n$$\n\n\n","slug":"Math-矩阵代数－《线性代数及应用》","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq445000p9ruif7p7r86e","content":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"矩阵运算\"><a href=\"#矩阵运算\" class=\"headerlink\" title=\"矩阵运算\"></a>矩阵运算</h2><h3 id=\"与标量相乘\"><a href=\"#与标量相乘\" class=\"headerlink\" title=\"与标量相乘\"></a>与标量相乘</h3><p>$A,B,C$是维数相同的矩阵，$r,s$为实数   </p>\n<ul>\n<li>$A+B=B+A$</li>\n<li>$(A+B)+C=A+(B+C)$</li>\n<li>$A+0=A$</li>\n<li>$r(A+B)=rA+rB$</li>\n<li>$(r+s)A=rA+sA$</li>\n<li>$r(sA)=(rs)A$</li>\n</ul>\n<h3 id=\"矩阵相乘\"><a href=\"#矩阵相乘\" class=\"headerlink\" title=\"矩阵相乘\"></a>矩阵相乘</h3><ul>\n<li>$A(BC)=(AB)C$</li>\n<li>$A(B+C)=AB+AC$</li>\n<li>$(B+C)A=BA+CA$</li>\n<li>$r(AB)=(rA)B=A(rB)$</li>\n<li>$I_mA=A=AI_n$</li>\n</ul>\n<h3 id=\"矩阵的乘幂\"><a href=\"#矩阵的乘幂\" class=\"headerlink\" title=\"矩阵的乘幂\"></a>矩阵的乘幂</h3><p>$A^k$表示$k$个$A$的乘积，$A^k\\mathbf x$表示$\\mathbf x$被A连续左乘$k$次。$A^0$解释为单位矩阵。</p>\n<h2 id=\"矩阵的性质\"><a href=\"#矩阵的性质\" class=\"headerlink\" title=\"矩阵的性质\"></a>矩阵的性质</h2><h3 id=\"矩阵的转置\"><a href=\"#矩阵的转置\" class=\"headerlink\" title=\"矩阵的转置\"></a>矩阵的转置</h3><p>若$A$为$m\\times n$矩阵，则$A^T$为$n\\times m$矩阵，它的列由$A$对应的行组成。</p>\n<ul>\n<li>$(A^T)^T=A$</li>\n<li>$(A+B)^T=A^T+B^T$</li>\n<li>$(rA)^T=rA^T$</li>\n<li>$(AB)^T=B^TA^T$</li>\n</ul>\n<h3 id=\"矩阵的逆\"><a href=\"#矩阵的逆\" class=\"headerlink\" title=\"矩阵的逆\"></a>矩阵的逆</h3><p>对于一个$n\\times n$矩阵A,若存在一个$n\\times n$矩阵C使<br>$$<br>    AC=I 且CA=I<br>$$<br>$I$为$n\\times n$的单位矩阵，$C$是$A$的逆阵，记为$A^{-1}$，于是<br>$$<br>    AA^{-1}=I 且 A^{-1}A=I<br>$$<br>不可逆矩阵称为奇异矩阵，可逆矩阵称为非奇异矩阵</p>\n<h4 id=\"求-A-1-的算法\"><a href=\"#求-A-1-的算法\" class=\"headerlink\" title=\"求$A^{-1}$的算法\"></a>求$A^{-1}$的算法</h4><p>把增广矩阵$[A I]$进行行化简，若$A$行等价于$I$，则$[A I]$行等价于$[I A^{-1}]$，否则$A$没有逆。</p>\n<h4 id=\"可逆矩阵的性质\"><a href=\"#可逆矩阵的性质\" class=\"headerlink\" title=\"可逆矩阵的性质\"></a>可逆矩阵的性质</h4><p>参见下面的定理8</p>\n<h3 id=\"分块矩阵\"><a href=\"#分块矩阵\" class=\"headerlink\" title=\"分块矩阵\"></a>分块矩阵</h3><p>矩阵的维数太多时，可以将矩阵进行分割，每一块是一个子矩阵。</p>\n<h4 id=\"分块矩阵的乘法\"><a href=\"#分块矩阵的乘法\" class=\"headerlink\" title=\"分块矩阵的乘法\"></a>分块矩阵的乘法</h4><p>$$<br>    A=<br>    \\left[<br>    \\begin{array}{ccc|cc}<br>    2 &amp; -3 &amp; 1 &amp; 0 &amp; 4\\\\<br>    \\hline<br>    1 &amp; 5 &amp; -2 &amp; 3 &amp; -1\\\\<br>    0 &amp; -4 &amp; -2 &amp; 7 &amp; -1\\\\<br>    \\end{array}<br>    \\right]<br>    =<br>    \\begin{bmatrix}<br>    A_{11} &amp; A_{12}\\\\<br>    A_{21} &amp; A_{22}\\\\<br>    \\end{bmatrix} \\\\<br>    B=<br>    \\begin{bmatrix}<br>    6 &amp; 4\\\\<br>    -2 &amp; 1\\\\<br>    -3 &amp; 7\\\\<br>    \\hline<br>    -1 &amp; 3\\\\<br>    5 &amp; 2\\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    B_1 \\\\<br>    B_2 \\\\<br>    \\end{bmatrix} \\\\<br>    AB=<br>    \\begin{bmatrix}<br>    A_{11} &amp; A_{12}\\\\<br>    A_{21} &amp; A_{22}\\\\<br>    \\end{bmatrix}<br>    \\begin{bmatrix}<br>    B_1 \\\\<br>    B_2 \\\\<br>    \\end{bmatrix}<br>    =<br>     \\begin{bmatrix}<br>    A_{11}B_1 + A_{12}B_2 \\\\<br>    A_{21}B_1 + A_{22}B_2 \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    -5 &amp; 4 \\\\<br>    -6 &amp; 2 \\\\<br>    \\hline<br>    2 &amp; 1<br>    \\end{bmatrix}<br>$$</p>\n<h2 id=\"矩阵因式分解\"><a href=\"#矩阵因式分解\" class=\"headerlink\" title=\"矩阵因式分解\"></a>矩阵因式分解</h2><p>矩阵的乘法是将多个矩阵结合成一个矩阵，而矩阵的因式分解是将一个矩阵分成多个矩阵</p>\n<h3 id=\"LU分解\"><a href=\"#LU分解\" class=\"headerlink\" title=\"LU分解\"></a>LU分解</h3><p>LU分解一般用于解一系列具有相同系数矩阵的线性方程，例如<br>$$<br>    A\\mathbf x=b_1, A\\mathbf x=b_2,\\cdots ,A\\mathbf x=b_n<br>$$</p>\n<h4 id=\"LU分解算法\"><a href=\"#LU分解算法\" class=\"headerlink\" title=\"LU分解算法\"></a>LU分解算法</h4><p>设$A$可以化为阶梯形$U$，化简过程仅使用行倍加变换，这样存在单位下三角初等矩阵$E_1,\\cdots,E_p$，使得<br>$$<br>    E_p,\\cdots,E_1A=U \\\\<br>    A=(E_p,\\cdots,E_1)^{-1}U=LU  \\\\<br>    L=(E_p,\\cdots,E_1)^{-1  }<br>$$</p>\n<h2 id=\"特殊矩阵\"><a href=\"#特殊矩阵\" class=\"headerlink\" title=\"特殊矩阵\"></a>特殊矩阵</h2><h3 id=\"上三角矩阵\"><a href=\"#上三角矩阵\" class=\"headerlink\" title=\"上三角矩阵\"></a>上三角矩阵</h3><p>$m\\times n$矩阵的主对角线以下元素全为0，该矩阵是可逆的。</p>\n<h3 id=\"下三角矩阵\"><a href=\"#下三角矩阵\" class=\"headerlink\" title=\"下三角矩阵\"></a>下三角矩阵</h3><p>$m\\times n$矩阵的主对角线以上元素全为0，该矩阵是可逆的。</p>\n<h3 id=\"分块对角矩阵\"><a href=\"#分块对角矩阵\" class=\"headerlink\" title=\"分块对角矩阵\"></a>分块对角矩阵</h3><p>分块对角矩阵是一个分块矩阵，除了主对角线上各分块之外，其余全是零分块，当且仅当主对角线上各分块都是可逆时，该矩阵是可逆的。</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><p>1.$A,B,C$是维数相同的矩阵，$r,s$为实数</p>\n<blockquote>\n<ul>\n<li>$A+B=B+A$</li>\n<li>$(A+B)+C=A+(B+C)$</li>\n<li>$A+0=A$</li>\n<li>$r(A+B)=rA+rB$</li>\n<li>$(r+s)A=rA+sA$</li>\n<li>$r(sA)=(rs)A$</li>\n</ul>\n</blockquote>\n<p>2.设$A$为$m\\times n$矩阵，$B C$的维数使下列各式有定义</p>\n<blockquote>\n<ul>\n<li>$A(BC)=(AB)C$</li>\n<li>$A(B+C)=AB+AC$</li>\n<li>$(B+C)A=BA+CA$</li>\n<li>$r(AB)=(rA)B=A(rB)$</li>\n<li>$I_mA=A=AI_n$</li>\n</ul>\n</blockquote>\n<p>3.设$A$表示为矩阵，其维数使下列各式有定义</p>\n<blockquote>\n<ul>\n<li>$(A^T)^T=A$</li>\n<li>$(A+B)^T=A^T+B^T$</li>\n<li>$(rA)^T=rA^T$</li>\n<li>$(AB)^T=B^TA^T$</li>\n</ul>\n</blockquote>\n<p>4.设$A=\\begin{bmatrix} a &amp; b\\\\ c &amp; d\\\\ \\end{bmatrix}$,若$ad-bc\\neq 0$，则$A$可逆，且<br>$$<br>    A^{-1}={1\\over{ad-bc}} \\begin{bmatrix} d &amp; -b\\\\ -c &amp; a\\\\ \\end{bmatrix}<br>$$</p>\n<p>5.若$A$是可逆$n\\times n$矩阵，则对每一个$R^n$中的$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$有唯一解$\\mathbf x=A^{-1}\\mathbf b$<br>6.若$A,B$为可逆矩阵，则</p>\n<blockquote>\n<ul>\n<li>$(A^{-1})^{-1}=A$</li>\n<li>$(AB)^{-1}=B^{-1}A^{-1}$</li>\n<li>$(A^T)^{-1}=(A^{-1})^T$</li>\n</ul>\n</blockquote>\n<p>7.$n\\times n$矩阵$A$是可逆的，当且仅当$A$行等价于$I_n$，这时，把$A$变为$I_n$的一系列初等行变化同时把$I_n$变成$A^[-1]$</p>\n<p>8.可逆矩阵定理<br>设$A$为$n\\times n$矩阵，则下列命题是等价的，即对某一特定的$A$，它们同时为真或同时为假</p>\n<blockquote>\n<ul>\n<li>$A$是可逆矩阵</li>\n<li>$A$等价于$n\\times n$单位矩阵</li>\n<li>$A$有$n$个主元位置</li>\n<li>方程$A\\mathbf x=0$仅有平凡解</li>\n<li>$A$的各列线性无关</li>\n<li>线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的</li>\n<li>对$R^n$中任意$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$至少有一个解</li>\n<li>$A$的各列生成$R^n$</li>\n<li>线性变换$\\mathbf x\\mapsto A\\mathbf x$把$R^n$映射到$R^n$上</li>\n<li>存在$n\\times n$矩阵$C,D$，使$CA=I, AD=I$</li>\n<li>$A^T$是可逆矩阵</li>\n</ul>\n</blockquote>\n<p>9.设$T:R^n \\to R^n$为线性变换，$A$为$T$的标准矩阵，则$T$可逆当且仅当$A$是可逆矩阵，这时由$S(\\mathbf x)=A^{-1}\\mathbf x$定义的线性变换$S$是满足以下函数的唯一函数<br>$$<br>    对所有R^n中的\\mathbf x, S(T(\\mathbf x))=\\mathbf x \\\\<br>    对所有R^n中的\\mathbf x, T(S(\\mathbf x))=\\mathbf x \\\\<br>$$<br>10.若$A$是$m\\times n$矩阵，$B$是$n\\times p$矩阵，$col_k(A)$代表$A$的第$k$列，$row_k(B)$代表$B$的第$k$行，则<br>$$<br>    AB = [col_1(A) col_2(A) \\cdots col_n(A)]<br>    \\begin{bmatrix}<br>    row_1(B)\\\\<br>    row_2(B)\\\\<br>    \\vdots\\\\<br>    row_n(B)\\\\<br>    \\end{bmatrix}\\\\<br>    =col_1(A)row_1(B)+\\cdots+col_n(A)col_n(B)<br>$$<br>11.列昂惕夫投入产出模型：设$C$为某一经济的消耗矩阵，$d$为最终需求，若$C$和$d$的元素非负，$C$的每一列的和小于1，则$(I-C)^{-1}$存在，而产出向量<br>$$<br>    \\mathbf x= (I-C)^{-1}\\mathbf d<br>$$<br>有非负元素，且是下列方程的唯一解<br>$$<br>    \\mathbf x = C\\mathbf x + \\mathbf d<br>$$</p>\n<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><h3 id=\"分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\"><a href=\"#分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\" class=\"headerlink\" title=\"分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\"></a>分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的</h3><p>$$<br>    AA^{-1}=<br>    \\begin{bmatrix}<br>    A_{11} &amp; 0\\\\<br>    0 &amp; A_{22} \\\\<br>    \\end{bmatrix}<br>    \\begin{bmatrix}<br>    B_{11} &amp; B_{12} \\\\<br>    B_{21} &amp; B_{22} \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    I_q &amp; 0 \\\\<br>    0 &amp; I_p \\\\<br>    \\end{bmatrix} \\\\<br>    A_{11}B_{11}=I_q, A_{11}B_{12}=0 \\\\<br>    A_{22}B_{21}=0, A_{22}B_{22}=I_p \\\\<br>    B_{11} = A_{11}^{-1}, B_{12}=0 \\\\<br>    B_{22} = A_{22}^{-1}, B_{21}=0 \\\\<br>    A^{-1}=<br>     \\begin{bmatrix}<br>    B_{11} &amp; B_{12} \\\\<br>    B_{21} &amp; B_{22} \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    A_{11}^{-1} &amp; 0 \\\\<br>    0 &amp; A_{22}^{-1} \\\\<br>    \\end{bmatrix}<br>$$</p>\n","excerpt":"","more":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"矩阵运算\"><a href=\"#矩阵运算\" class=\"headerlink\" title=\"矩阵运算\"></a>矩阵运算</h2><h3 id=\"与标量相乘\"><a href=\"#与标量相乘\" class=\"headerlink\" title=\"与标量相乘\"></a>与标量相乘</h3><p>$A,B,C$是维数相同的矩阵，$r,s$为实数   </p>\n<ul>\n<li>$A+B=B+A$</li>\n<li>$(A+B)+C=A+(B+C)$</li>\n<li>$A+0=A$</li>\n<li>$r(A+B)=rA+rB$</li>\n<li>$(r+s)A=rA+sA$</li>\n<li>$r(sA)=(rs)A$</li>\n</ul>\n<h3 id=\"矩阵相乘\"><a href=\"#矩阵相乘\" class=\"headerlink\" title=\"矩阵相乘\"></a>矩阵相乘</h3><ul>\n<li>$A(BC)=(AB)C$</li>\n<li>$A(B+C)=AB+AC$</li>\n<li>$(B+C)A=BA+CA$</li>\n<li>$r(AB)=(rA)B=A(rB)$</li>\n<li>$I_mA=A=AI_n$</li>\n</ul>\n<h3 id=\"矩阵的乘幂\"><a href=\"#矩阵的乘幂\" class=\"headerlink\" title=\"矩阵的乘幂\"></a>矩阵的乘幂</h3><p>$A^k$表示$k$个$A$的乘积，$A^k\\mathbf x$表示$\\mathbf x$被A连续左乘$k$次。$A^0$解释为单位矩阵。</p>\n<h2 id=\"矩阵的性质\"><a href=\"#矩阵的性质\" class=\"headerlink\" title=\"矩阵的性质\"></a>矩阵的性质</h2><h3 id=\"矩阵的转置\"><a href=\"#矩阵的转置\" class=\"headerlink\" title=\"矩阵的转置\"></a>矩阵的转置</h3><p>若$A$为$m\\times n$矩阵，则$A^T$为$n\\times m$矩阵，它的列由$A$对应的行组成。</p>\n<ul>\n<li>$(A^T)^T=A$</li>\n<li>$(A+B)^T=A^T+B^T$</li>\n<li>$(rA)^T=rA^T$</li>\n<li>$(AB)^T=B^TA^T$</li>\n</ul>\n<h3 id=\"矩阵的逆\"><a href=\"#矩阵的逆\" class=\"headerlink\" title=\"矩阵的逆\"></a>矩阵的逆</h3><p>对于一个$n\\times n$矩阵A,若存在一个$n\\times n$矩阵C使<br>$$<br>    AC=I 且CA=I<br>$$<br>$I$为$n\\times n$的单位矩阵，$C$是$A$的逆阵，记为$A^{-1}$，于是<br>$$<br>    AA^{-1}=I 且 A^{-1}A=I<br>$$<br>不可逆矩阵称为奇异矩阵，可逆矩阵称为非奇异矩阵</p>\n<h4 id=\"求-A-1-的算法\"><a href=\"#求-A-1-的算法\" class=\"headerlink\" title=\"求$A^{-1}$的算法\"></a>求$A^{-1}$的算法</h4><p>把增广矩阵$[A I]$进行行化简，若$A$行等价于$I$，则$[A I]$行等价于$[I A^{-1}]$，否则$A$没有逆。</p>\n<h4 id=\"可逆矩阵的性质\"><a href=\"#可逆矩阵的性质\" class=\"headerlink\" title=\"可逆矩阵的性质\"></a>可逆矩阵的性质</h4><p>参见下面的定理8</p>\n<h3 id=\"分块矩阵\"><a href=\"#分块矩阵\" class=\"headerlink\" title=\"分块矩阵\"></a>分块矩阵</h3><p>矩阵的维数太多时，可以将矩阵进行分割，每一块是一个子矩阵。</p>\n<h4 id=\"分块矩阵的乘法\"><a href=\"#分块矩阵的乘法\" class=\"headerlink\" title=\"分块矩阵的乘法\"></a>分块矩阵的乘法</h4><p>$$<br>    A=<br>    \\left[<br>    \\begin{array}{ccc|cc}<br>    2 &amp; -3 &amp; 1 &amp; 0 &amp; 4\\\\<br>    \\hline<br>    1 &amp; 5 &amp; -2 &amp; 3 &amp; -1\\\\<br>    0 &amp; -4 &amp; -2 &amp; 7 &amp; -1\\\\<br>    \\end{array}<br>    \\right]<br>    =<br>    \\begin{bmatrix}<br>    A_{11} &amp; A_{12}\\\\<br>    A_{21} &amp; A_{22}\\\\<br>    \\end{bmatrix} \\\\<br>    B=<br>    \\begin{bmatrix}<br>    6 &amp; 4\\\\<br>    -2 &amp; 1\\\\<br>    -3 &amp; 7\\\\<br>    \\hline<br>    -1 &amp; 3\\\\<br>    5 &amp; 2\\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    B_1 \\\\<br>    B_2 \\\\<br>    \\end{bmatrix} \\\\<br>    AB=<br>    \\begin{bmatrix}<br>    A_{11} &amp; A_{12}\\\\<br>    A_{21} &amp; A_{22}\\\\<br>    \\end{bmatrix}<br>    \\begin{bmatrix}<br>    B_1 \\\\<br>    B_2 \\\\<br>    \\end{bmatrix}<br>    =<br>     \\begin{bmatrix}<br>    A_{11}B_1 + A_{12}B_2 \\\\<br>    A_{21}B_1 + A_{22}B_2 \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    -5 &amp; 4 \\\\<br>    -6 &amp; 2 \\\\<br>    \\hline<br>    2 &amp; 1<br>    \\end{bmatrix}<br>$$</p>\n<h2 id=\"矩阵因式分解\"><a href=\"#矩阵因式分解\" class=\"headerlink\" title=\"矩阵因式分解\"></a>矩阵因式分解</h2><p>矩阵的乘法是将多个矩阵结合成一个矩阵，而矩阵的因式分解是将一个矩阵分成多个矩阵</p>\n<h3 id=\"LU分解\"><a href=\"#LU分解\" class=\"headerlink\" title=\"LU分解\"></a>LU分解</h3><p>LU分解一般用于解一系列具有相同系数矩阵的线性方程，例如<br>$$<br>    A\\mathbf x=b_1, A\\mathbf x=b_2,\\cdots ,A\\mathbf x=b_n<br>$$</p>\n<h4 id=\"LU分解算法\"><a href=\"#LU分解算法\" class=\"headerlink\" title=\"LU分解算法\"></a>LU分解算法</h4><p>设$A$可以化为阶梯形$U$，化简过程仅使用行倍加变换，这样存在单位下三角初等矩阵$E_1,\\cdots,E_p$，使得<br>$$<br>    E_p,\\cdots,E_1A=U \\\\<br>    A=(E_p,\\cdots,E_1)^{-1}U=LU  \\\\<br>    L=(E_p,\\cdots,E_1)^{-1  }<br>$$</p>\n<h2 id=\"特殊矩阵\"><a href=\"#特殊矩阵\" class=\"headerlink\" title=\"特殊矩阵\"></a>特殊矩阵</h2><h3 id=\"上三角矩阵\"><a href=\"#上三角矩阵\" class=\"headerlink\" title=\"上三角矩阵\"></a>上三角矩阵</h3><p>$m\\times n$矩阵的主对角线以下元素全为0，该矩阵是可逆的。</p>\n<h3 id=\"下三角矩阵\"><a href=\"#下三角矩阵\" class=\"headerlink\" title=\"下三角矩阵\"></a>下三角矩阵</h3><p>$m\\times n$矩阵的主对角线以上元素全为0，该矩阵是可逆的。</p>\n<h3 id=\"分块对角矩阵\"><a href=\"#分块对角矩阵\" class=\"headerlink\" title=\"分块对角矩阵\"></a>分块对角矩阵</h3><p>分块对角矩阵是一个分块矩阵，除了主对角线上各分块之外，其余全是零分块，当且仅当主对角线上各分块都是可逆时，该矩阵是可逆的。</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><p>1.$A,B,C$是维数相同的矩阵，$r,s$为实数</p>\n<blockquote>\n<ul>\n<li>$A+B=B+A$</li>\n<li>$(A+B)+C=A+(B+C)$</li>\n<li>$A+0=A$</li>\n<li>$r(A+B)=rA+rB$</li>\n<li>$(r+s)A=rA+sA$</li>\n<li>$r(sA)=(rs)A$</li>\n</ul>\n</blockquote>\n<p>2.设$A$为$m\\times n$矩阵，$B C$的维数使下列各式有定义</p>\n<blockquote>\n<ul>\n<li>$A(BC)=(AB)C$</li>\n<li>$A(B+C)=AB+AC$</li>\n<li>$(B+C)A=BA+CA$</li>\n<li>$r(AB)=(rA)B=A(rB)$</li>\n<li>$I_mA=A=AI_n$</li>\n</ul>\n</blockquote>\n<p>3.设$A$表示为矩阵，其维数使下列各式有定义</p>\n<blockquote>\n<ul>\n<li>$(A^T)^T=A$</li>\n<li>$(A+B)^T=A^T+B^T$</li>\n<li>$(rA)^T=rA^T$</li>\n<li>$(AB)^T=B^TA^T$</li>\n</ul>\n</blockquote>\n<p>4.设$A=\\begin{bmatrix} a &amp; b\\\\ c &amp; d\\\\ \\end{bmatrix}$,若$ad-bc\\neq 0$，则$A$可逆，且<br>$$<br>    A^{-1}={1\\over{ad-bc}} \\begin{bmatrix} d &amp; -b\\\\ -c &amp; a\\\\ \\end{bmatrix}<br>$$</p>\n<p>5.若$A$是可逆$n\\times n$矩阵，则对每一个$R^n$中的$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$有唯一解$\\mathbf x=A^{-1}\\mathbf b$<br>6.若$A,B$为可逆矩阵，则</p>\n<blockquote>\n<ul>\n<li>$(A^{-1})^{-1}=A$</li>\n<li>$(AB)^{-1}=B^{-1}A^{-1}$</li>\n<li>$(A^T)^{-1}=(A^{-1})^T$</li>\n</ul>\n</blockquote>\n<p>7.$n\\times n$矩阵$A$是可逆的，当且仅当$A$行等价于$I_n$，这时，把$A$变为$I_n$的一系列初等行变化同时把$I_n$变成$A^[-1]$</p>\n<p>8.可逆矩阵定理<br>设$A$为$n\\times n$矩阵，则下列命题是等价的，即对某一特定的$A$，它们同时为真或同时为假</p>\n<blockquote>\n<ul>\n<li>$A$是可逆矩阵</li>\n<li>$A$等价于$n\\times n$单位矩阵</li>\n<li>$A$有$n$个主元位置</li>\n<li>方程$A\\mathbf x=0$仅有平凡解</li>\n<li>$A$的各列线性无关</li>\n<li>线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的</li>\n<li>对$R^n$中任意$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$至少有一个解</li>\n<li>$A$的各列生成$R^n$</li>\n<li>线性变换$\\mathbf x\\mapsto A\\mathbf x$把$R^n$映射到$R^n$上</li>\n<li>存在$n\\times n$矩阵$C,D$，使$CA=I, AD=I$</li>\n<li>$A^T$是可逆矩阵</li>\n</ul>\n</blockquote>\n<p>9.设$T:R^n \\to R^n$为线性变换，$A$为$T$的标准矩阵，则$T$可逆当且仅当$A$是可逆矩阵，这时由$S(\\mathbf x)=A^{-1}\\mathbf x$定义的线性变换$S$是满足以下函数的唯一函数<br>$$<br>    对所有R^n中的\\mathbf x, S(T(\\mathbf x))=\\mathbf x \\\\<br>    对所有R^n中的\\mathbf x, T(S(\\mathbf x))=\\mathbf x \\\\<br>$$<br>10.若$A$是$m\\times n$矩阵，$B$是$n\\times p$矩阵，$col_k(A)$代表$A$的第$k$列，$row_k(B)$代表$B$的第$k$行，则<br>$$<br>    AB = [col_1(A) col_2(A) \\cdots col_n(A)]<br>    \\begin{bmatrix}<br>    row_1(B)\\\\<br>    row_2(B)\\\\<br>    \\vdots\\\\<br>    row_n(B)\\\\<br>    \\end{bmatrix}\\\\<br>    =col_1(A)row_1(B)+\\cdots+col_n(A)col_n(B)<br>$$<br>11.列昂惕夫投入产出模型：设$C$为某一经济的消耗矩阵，$d$为最终需求，若$C$和$d$的元素非负，$C$的每一列的和小于1，则$(I-C)^{-1}$存在，而产出向量<br>$$<br>    \\mathbf x= (I-C)^{-1}\\mathbf d<br>$$<br>有非负元素，且是下列方程的唯一解<br>$$<br>    \\mathbf x = C\\mathbf x + \\mathbf d<br>$$</p>\n<h2 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h2><h3 id=\"分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\"><a href=\"#分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\" class=\"headerlink\" title=\"分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的\"></a>分块对角矩阵可逆时，当且仅当主对角线各分块都是可逆的</h3><p>$$<br>    AA^{-1}=<br>    \\begin{bmatrix}<br>    A_{11} &amp; 0\\\\<br>    0 &amp; A_{22} \\\\<br>    \\end{bmatrix}<br>    \\begin{bmatrix}<br>    B_{11} &amp; B_{12} \\\\<br>    B_{21} &amp; B_{22} \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    I_q &amp; 0 \\\\<br>    0 &amp; I_p \\\\<br>    \\end{bmatrix} \\\\<br>    A_{11}B_{11}=I_q, A_{11}B_{12}=0 \\\\<br>    A_{22}B_{21}=0, A_{22}B_{22}=I_p \\\\<br>    B_{11} = A_{11}^{-1}, B_{12}=0 \\\\<br>    B_{22} = A_{22}^{-1}, B_{21}=0 \\\\<br>    A^{-1}=<br>     \\begin{bmatrix}<br>    B_{11} &amp; B_{12} \\\\<br>    B_{21} &amp; B_{22} \\\\<br>    \\end{bmatrix}<br>    =<br>    \\begin{bmatrix}<br>    A_{11}^{-1} &amp; 0 \\\\<br>    0 &amp; A_{22}^{-1} \\\\<br>    \\end{bmatrix}<br>$$</p>\n"},{"title":"向量空间－《线性代数及应用》","date":"2016-09-10T12:02:45.000Z","_content":"> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n\n## 向量空间和子空间\n### 向量空间\n一个向量空间是由一些被称为向量的对象构成的非空集合$V$，在这个集合上定义两个运算，称为加法和标量乘法，服从以下公理，这些公理必须对$V$中所有向量$\\mathbf u,\\mathbf v,\\mathbf w$及所有标量$c,d$均成立。\n\n* $\\mathbf u, \\mathbf v$之和表示为$\\mathbf u+\\mathbf v$，仍在$V$中\n* $V$中存在一个零向量$0$，使得$\\mathbf u+0=\\mathbf u$\n* 对$V$中每个向量$\\mathbf u$，存在$V$中向量$-\\mathbf u$，使得$\\mathbf u+(-\\mathbf u)=0$\n* $\\mathbf u$与标量$c$的标量乘法记为，$c\\mathbf u$，仍在$V$中\n$$\n    \\mathbf u+\\mathbf v ＝ \\mathbf v+\\mathbf u \\\\\n    (\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w) \\\\\n    c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v \\\\\n    (c+d)\\mathbf u=c\\mathbf u+d\\mathbf u \\\\\n    c(d\\mathbf u)=(cd)\\mathbf u \\\\\n    1\\mathbf u=\\mathbf u  \\\\\n    0\\mathbf u=0 \\\\\n    c0=0 \\\\\n    -\\mathbf u=(-1)\\mathbf u\\\\\n$$\n\n## 零空间、列空间和线性变换\n### 零空间\n$m\\times n$矩阵$A$的零空间写成$NulA$，是齐次方程$A\\mathbf x=0$的全体解的集合，用集合符号表示即：\n$$\n    NulA = {\\mathbf x:\\mathbf x \\in \\mathbb R^n, A\\mathbf x =0}\n$$\n$NulA$可以进一步的描述为$\\mathbb R^n$中在线性变换$\\mathbf x \\mapsto A\\mathbf x$下映射到$\\mathbb R^m$中的零向量的全体向量的集合。\n\n求矩阵$A$的零空间生成集的过程，就是解方程$A\\mathbf x=0$的过程。\n>* 由该方法产生的生成集必然是线性无关的。\n>* 生成集中向量的个数等于方程$A\\mathbx x=0$中自由变量的个数\n\n\n### 子空间\n向量空间$V$的一个子空间是$V$的一个满足以下三个性质的子集$H$：\n\n* $V$中的零向量在$H$中\n* $H$对向量加法封闭，即对$H$中任意向量$\\mathbf u,\\mathbf v$，和$\\mathbf u+\\mathbf v$仍在$H$中\n* $H$对标量乘法封闭，即对$H$中任意向量$\\mathbf u$和任意标量$c$，向量$c\\mathbf u$仍在$H$中\n\n### 矩阵的列空间\n$m\\times n$矩阵的列空间(记为$ColA$)是由$A$的列的所有线性组合组成的集合，若$A=[\\mathbf a_1,\\cdots,\\mathbf a_n]$，则$ColA = Span\\{\\mathbf a_1,\\cdots,\\mathbf a_n\\}$    \n$ColA$)可写成$A\\mathbf x$的形式，其中$\\mathbf x$为某向量，$A\\mathbf x$表示$A$的列向量的一个线性组合，即\n$$\n    ColA = {\\mathbf b:\\mathbf b = A\\mathbf x, \\mathbf x \\in \\mathbb R^n}\n$$\n$m\\times n$矩阵的列空间等于$\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对$\\mathbb R^m$中每个$\\mathbf b$有解\n\n### $NulA$与$ColA$的对比\n对于$m\\times n$矩阵$A$，$NulA$与$ColA$之间的对比\n\n|$NulA$|$ColA$|\n|:-----|:-----|\n|$NulA$是$\\mathbb R^n$的一个子空间|$ColA$是$\\mathbb R^m$的子空间|\n|$NulA$是隐式定义的，即仅给出了一个$NulA$中向量必须满足的条件($A\\mathbf x=0$)|$ColA$是显式定义，即明确指出如何建立$ColA$中的向量|\n|求$NulA$中的向量需要对$[A 0]$做行变换|$A$中的列就是$ColA$的向量，其余的可由$A$的列表示出来|\n|$NulA$与$A$的数值之间没有明显的关系|$ColA$与$A$的数值由明显的关系，因为$A$的列就在$ColA$中|\n|$NulA$的一个典型向量$\\mathbf v$具有$A\\mathbf v=0$的特质|$ColA$中一个典型的向量$v$具有方程$A\\mathbf x=\\mathbf v$是相容的性质|\n|给一个特定的向量$\\mathbf v$，容易判断$\\mathbf v$是否在$NulA$中，仅需计算$A\\mathbf v$|给一个特定的向量$\\mathbf v$，判断$\\mathbf v$是否在$ColA$中，需对$[A \\mathbf v]$作行变换|\n|$NulA ={0}$ 当且仅当方程$A\\mathbf x=0$仅有平凡解|$ColA =\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对每一个$\\mathbf b \\in \\mathbb R^m$有一个解|\n|$NulA ={0}$ 当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的|$ColA =\\mathbb R^m$当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$将$\\mathbb R^n$映射到$\\mathbb R^m$|\n\n### 线性变换的核与值域\n由向量空间$V$映射到向量空间$W$内的线性变换$T$是一个规则，它将$V$中每个向量$\\mathbf x$映射城$W$中惟一向量$T(\\mathbf x)$，且满足\n$$\n    T(\\mathbf u+\\mathbf v) = T(\\mathbf u)+T(\\mathbf v), 对V中所有\\mathbf u,\\mathbf v 均成立 \\\\\n    T(c\\mathbf u) = cT(\\mathbf u),对V中所有\\mathbf u及所有数c均成立\n$$\n线性变换$T$的*核*(或称零空间)是$V$中所有满足$T(\\mathbf u)=0$的向量$\\mathbf u$的集合。   \n$T$的*值域*是$W$中所有具有形式$T(\\mathbf x)$的向量的集合。      \n如果$T$是由一个矩阵变换得到的，例如$T(\\mathbf x)=A\\mathbf x$，则$T$的核与值域对应$A$的零空间和列空间。 \n\n## 线性无关集和基\n### 线性无关集\n$V$中向量的一个指标集$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，称为线性无关的，如果向量方程\n$$\n    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p = 0\n$$\n只有平凡解。\n*矩阵的行初等变换不影响矩阵的列的线性相关关系*\n\n### 基\n令$H$是向量空间$V$的一个子空间，$V$中向量的指标集$B＝\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$称为$H$的一个基，如果\n* $B$是现象无关集\n* 由$B$生成的子空间与$H$相同，即$H=Span\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$\n\n#### 基的两个特性\n> * 基是一个尽可能小的生成集\n> * 基是尽可能大的线性无关集\n\n### $NulA$和$ColA$的基\n通过解$A\\mathbf x=0$的出的生成集总是线性无关的，即$NulA$的基。     \n$ColA$的基由矩阵$A$的主元列构成。\n\n\n## 定理\n1. 若$\\mathbf v_1,\\cdots,\\mathbf v_p$在向量空间$V$中，则$Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$的一个子空间\n2. $m\\times n$矩阵$A$的零空间是$\\mathbb R^n$的一个子空间，也就是说，$m$个方程、$n$个未知数的齐次线性方程组$A\\mathbf x=0$的全体解的集合是$\\mathbb R^n$的一个子空间。\n3. $m\\times n$矩阵$A$的列空间是$\\mathbb R^m$的一个子空间\n4. 不少于两个有编号的向量的集合$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，如果有$\\mathbf v_1 \\neq0$，则$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是线性相关的，当且仅当某$\\mathbf v_1(j>1)$是其前面向量$v_1,\\cdots,v_{j-1}$的线性组合\n5. 生成集定理: 令$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$中的向量集，$H=Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$.\n    * 若$S$中某一向量，比如说$v_k$，是$S$中其余向量的线性组合，则$S$中去掉$v_k$之后形成的集合仍然可以生成$H$。\n    * 若$H\\neq\\{0\\}$，则$S$的某一子集是$H$的一个基\n6.矩阵$A$的主元列构成$ColA$的一个基\n\n\n\n\n","source":"_posts/Math-向量空间－《线性代数及应用》.md","raw":"---\ntitle: 向量空间－《线性代数及应用》\ndate: 2016-09-10 20:02:45\ntags: [Math, Linear Algebra, note]\ncategories: Math\n---\n> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n\n## 向量空间和子空间\n### 向量空间\n一个向量空间是由一些被称为向量的对象构成的非空集合$V$，在这个集合上定义两个运算，称为加法和标量乘法，服从以下公理，这些公理必须对$V$中所有向量$\\mathbf u,\\mathbf v,\\mathbf w$及所有标量$c,d$均成立。\n\n* $\\mathbf u, \\mathbf v$之和表示为$\\mathbf u+\\mathbf v$，仍在$V$中\n* $V$中存在一个零向量$0$，使得$\\mathbf u+0=\\mathbf u$\n* 对$V$中每个向量$\\mathbf u$，存在$V$中向量$-\\mathbf u$，使得$\\mathbf u+(-\\mathbf u)=0$\n* $\\mathbf u$与标量$c$的标量乘法记为，$c\\mathbf u$，仍在$V$中\n$$\n    \\mathbf u+\\mathbf v ＝ \\mathbf v+\\mathbf u \\\\\n    (\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w) \\\\\n    c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v \\\\\n    (c+d)\\mathbf u=c\\mathbf u+d\\mathbf u \\\\\n    c(d\\mathbf u)=(cd)\\mathbf u \\\\\n    1\\mathbf u=\\mathbf u  \\\\\n    0\\mathbf u=0 \\\\\n    c0=0 \\\\\n    -\\mathbf u=(-1)\\mathbf u\\\\\n$$\n\n## 零空间、列空间和线性变换\n### 零空间\n$m\\times n$矩阵$A$的零空间写成$NulA$，是齐次方程$A\\mathbf x=0$的全体解的集合，用集合符号表示即：\n$$\n    NulA = {\\mathbf x:\\mathbf x \\in \\mathbb R^n, A\\mathbf x =0}\n$$\n$NulA$可以进一步的描述为$\\mathbb R^n$中在线性变换$\\mathbf x \\mapsto A\\mathbf x$下映射到$\\mathbb R^m$中的零向量的全体向量的集合。\n\n求矩阵$A$的零空间生成集的过程，就是解方程$A\\mathbf x=0$的过程。\n>* 由该方法产生的生成集必然是线性无关的。\n>* 生成集中向量的个数等于方程$A\\mathbx x=0$中自由变量的个数\n\n\n### 子空间\n向量空间$V$的一个子空间是$V$的一个满足以下三个性质的子集$H$：\n\n* $V$中的零向量在$H$中\n* $H$对向量加法封闭，即对$H$中任意向量$\\mathbf u,\\mathbf v$，和$\\mathbf u+\\mathbf v$仍在$H$中\n* $H$对标量乘法封闭，即对$H$中任意向量$\\mathbf u$和任意标量$c$，向量$c\\mathbf u$仍在$H$中\n\n### 矩阵的列空间\n$m\\times n$矩阵的列空间(记为$ColA$)是由$A$的列的所有线性组合组成的集合，若$A=[\\mathbf a_1,\\cdots,\\mathbf a_n]$，则$ColA = Span\\{\\mathbf a_1,\\cdots,\\mathbf a_n\\}$    \n$ColA$)可写成$A\\mathbf x$的形式，其中$\\mathbf x$为某向量，$A\\mathbf x$表示$A$的列向量的一个线性组合，即\n$$\n    ColA = {\\mathbf b:\\mathbf b = A\\mathbf x, \\mathbf x \\in \\mathbb R^n}\n$$\n$m\\times n$矩阵的列空间等于$\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对$\\mathbb R^m$中每个$\\mathbf b$有解\n\n### $NulA$与$ColA$的对比\n对于$m\\times n$矩阵$A$，$NulA$与$ColA$之间的对比\n\n|$NulA$|$ColA$|\n|:-----|:-----|\n|$NulA$是$\\mathbb R^n$的一个子空间|$ColA$是$\\mathbb R^m$的子空间|\n|$NulA$是隐式定义的，即仅给出了一个$NulA$中向量必须满足的条件($A\\mathbf x=0$)|$ColA$是显式定义，即明确指出如何建立$ColA$中的向量|\n|求$NulA$中的向量需要对$[A 0]$做行变换|$A$中的列就是$ColA$的向量，其余的可由$A$的列表示出来|\n|$NulA$与$A$的数值之间没有明显的关系|$ColA$与$A$的数值由明显的关系，因为$A$的列就在$ColA$中|\n|$NulA$的一个典型向量$\\mathbf v$具有$A\\mathbf v=0$的特质|$ColA$中一个典型的向量$v$具有方程$A\\mathbf x=\\mathbf v$是相容的性质|\n|给一个特定的向量$\\mathbf v$，容易判断$\\mathbf v$是否在$NulA$中，仅需计算$A\\mathbf v$|给一个特定的向量$\\mathbf v$，判断$\\mathbf v$是否在$ColA$中，需对$[A \\mathbf v]$作行变换|\n|$NulA ={0}$ 当且仅当方程$A\\mathbf x=0$仅有平凡解|$ColA =\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对每一个$\\mathbf b \\in \\mathbb R^m$有一个解|\n|$NulA ={0}$ 当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的|$ColA =\\mathbb R^m$当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$将$\\mathbb R^n$映射到$\\mathbb R^m$|\n\n### 线性变换的核与值域\n由向量空间$V$映射到向量空间$W$内的线性变换$T$是一个规则，它将$V$中每个向量$\\mathbf x$映射城$W$中惟一向量$T(\\mathbf x)$，且满足\n$$\n    T(\\mathbf u+\\mathbf v) = T(\\mathbf u)+T(\\mathbf v), 对V中所有\\mathbf u,\\mathbf v 均成立 \\\\\n    T(c\\mathbf u) = cT(\\mathbf u),对V中所有\\mathbf u及所有数c均成立\n$$\n线性变换$T$的*核*(或称零空间)是$V$中所有满足$T(\\mathbf u)=0$的向量$\\mathbf u$的集合。   \n$T$的*值域*是$W$中所有具有形式$T(\\mathbf x)$的向量的集合。      \n如果$T$是由一个矩阵变换得到的，例如$T(\\mathbf x)=A\\mathbf x$，则$T$的核与值域对应$A$的零空间和列空间。 \n\n## 线性无关集和基\n### 线性无关集\n$V$中向量的一个指标集$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，称为线性无关的，如果向量方程\n$$\n    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p = 0\n$$\n只有平凡解。\n*矩阵的行初等变换不影响矩阵的列的线性相关关系*\n\n### 基\n令$H$是向量空间$V$的一个子空间，$V$中向量的指标集$B＝\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$称为$H$的一个基，如果\n* $B$是现象无关集\n* 由$B$生成的子空间与$H$相同，即$H=Span\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$\n\n#### 基的两个特性\n> * 基是一个尽可能小的生成集\n> * 基是尽可能大的线性无关集\n\n### $NulA$和$ColA$的基\n通过解$A\\mathbf x=0$的出的生成集总是线性无关的，即$NulA$的基。     \n$ColA$的基由矩阵$A$的主元列构成。\n\n\n## 定理\n1. 若$\\mathbf v_1,\\cdots,\\mathbf v_p$在向量空间$V$中，则$Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$的一个子空间\n2. $m\\times n$矩阵$A$的零空间是$\\mathbb R^n$的一个子空间，也就是说，$m$个方程、$n$个未知数的齐次线性方程组$A\\mathbf x=0$的全体解的集合是$\\mathbb R^n$的一个子空间。\n3. $m\\times n$矩阵$A$的列空间是$\\mathbb R^m$的一个子空间\n4. 不少于两个有编号的向量的集合$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，如果有$\\mathbf v_1 \\neq0$，则$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是线性相关的，当且仅当某$\\mathbf v_1(j>1)$是其前面向量$v_1,\\cdots,v_{j-1}$的线性组合\n5. 生成集定理: 令$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$中的向量集，$H=Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$.\n    * 若$S$中某一向量，比如说$v_k$，是$S$中其余向量的线性组合，则$S$中去掉$v_k$之后形成的集合仍然可以生成$H$。\n    * 若$H\\neq\\{0\\}$，则$S$的某一子集是$H$的一个基\n6.矩阵$A$的主元列构成$ColA$的一个基\n\n\n\n\n","slug":"Math-向量空间－《线性代数及应用》","published":1,"updated":"2016-09-12T14:50:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq447000t9rui3eg4o1d4","content":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$   </p>\n</blockquote>\n<h2 id=\"向量空间和子空间\"><a href=\"#向量空间和子空间\" class=\"headerlink\" title=\"向量空间和子空间\"></a>向量空间和子空间</h2><h3 id=\"向量空间\"><a href=\"#向量空间\" class=\"headerlink\" title=\"向量空间\"></a>向量空间</h3><p>一个向量空间是由一些被称为向量的对象构成的非空集合$V$，在这个集合上定义两个运算，称为加法和标量乘法，服从以下公理，这些公理必须对$V$中所有向量$\\mathbf u,\\mathbf v,\\mathbf w$及所有标量$c,d$均成立。</p>\n<ul>\n<li>$\\mathbf u, \\mathbf v$之和表示为$\\mathbf u+\\mathbf v$，仍在$V$中</li>\n<li>$V$中存在一个零向量$0$，使得$\\mathbf u+0=\\mathbf u$</li>\n<li>对$V$中每个向量$\\mathbf u$，存在$V$中向量$-\\mathbf u$，使得$\\mathbf u+(-\\mathbf u)=0$</li>\n<li>$\\mathbf u$与标量$c$的标量乘法记为，$c\\mathbf u$，仍在$V$中<br>$$<br>  \\mathbf u+\\mathbf v ＝ \\mathbf v+\\mathbf u \\\\<br>  (\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w) \\\\<br>  c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v \\\\<br>  (c+d)\\mathbf u=c\\mathbf u+d\\mathbf u \\\\<br>  c(d\\mathbf u)=(cd)\\mathbf u \\\\<br>  1\\mathbf u=\\mathbf u  \\\\<br>  0\\mathbf u=0 \\\\<br>  c0=0 \\\\<br>  -\\mathbf u=(-1)\\mathbf u\\\\<br>$$</li>\n</ul>\n<h2 id=\"零空间、列空间和线性变换\"><a href=\"#零空间、列空间和线性变换\" class=\"headerlink\" title=\"零空间、列空间和线性变换\"></a>零空间、列空间和线性变换</h2><h3 id=\"零空间\"><a href=\"#零空间\" class=\"headerlink\" title=\"零空间\"></a>零空间</h3><p>$m\\times n$矩阵$A$的零空间写成$NulA$，是齐次方程$A\\mathbf x=0$的全体解的集合，用集合符号表示即：<br>$$<br>    NulA = {\\mathbf x:\\mathbf x \\in \\mathbb R^n, A\\mathbf x =0}<br>$$<br>$NulA$可以进一步的描述为$\\mathbb R^n$中在线性变换$\\mathbf x \\mapsto A\\mathbf x$下映射到$\\mathbb R^m$中的零向量的全体向量的集合。</p>\n<p>求矩阵$A$的零空间生成集的过程，就是解方程$A\\mathbf x=0$的过程。</p>\n<blockquote>\n<ul>\n<li>由该方法产生的生成集必然是线性无关的。</li>\n<li>生成集中向量的个数等于方程$A\\mathbx x=0$中自由变量的个数</li>\n</ul>\n</blockquote>\n<h3 id=\"子空间\"><a href=\"#子空间\" class=\"headerlink\" title=\"子空间\"></a>子空间</h3><p>向量空间$V$的一个子空间是$V$的一个满足以下三个性质的子集$H$：</p>\n<ul>\n<li>$V$中的零向量在$H$中</li>\n<li>$H$对向量加法封闭，即对$H$中任意向量$\\mathbf u,\\mathbf v$，和$\\mathbf u+\\mathbf v$仍在$H$中</li>\n<li>$H$对标量乘法封闭，即对$H$中任意向量$\\mathbf u$和任意标量$c$，向量$c\\mathbf u$仍在$H$中</li>\n</ul>\n<h3 id=\"矩阵的列空间\"><a href=\"#矩阵的列空间\" class=\"headerlink\" title=\"矩阵的列空间\"></a>矩阵的列空间</h3><p>$m\\times n$矩阵的列空间(记为$ColA$)是由$A$的列的所有线性组合组成的集合，若$A=[\\mathbf a_1,\\cdots,\\mathbf a_n]$，则$ColA = Span\\{\\mathbf a_1,\\cdots,\\mathbf a_n\\}$<br>$ColA$)可写成$A\\mathbf x$的形式，其中$\\mathbf x$为某向量，$A\\mathbf x$表示$A$的列向量的一个线性组合，即<br>$$<br>    ColA = {\\mathbf b:\\mathbf b = A\\mathbf x, \\mathbf x \\in \\mathbb R^n}<br>$$<br>$m\\times n$矩阵的列空间等于$\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对$\\mathbb R^m$中每个$\\mathbf b$有解</p>\n<h3 id=\"NulA-与-ColA-的对比\"><a href=\"#NulA-与-ColA-的对比\" class=\"headerlink\" title=\"$NulA$与$ColA$的对比\"></a>$NulA$与$ColA$的对比</h3><p>对于$m\\times n$矩阵$A$，$NulA$与$ColA$之间的对比</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">$NulA$</th>\n<th style=\"text-align:left\">$ColA$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$NulA$是$\\mathbb R^n$的一个子空间</td>\n<td style=\"text-align:left\">$ColA$是$\\mathbb R^m$的子空间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$是隐式定义的，即仅给出了一个$NulA$中向量必须满足的条件($A\\mathbf x=0$)</td>\n<td style=\"text-align:left\">$ColA$是显式定义，即明确指出如何建立$ColA$中的向量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">求$NulA$中的向量需要对$[A 0]$做行变换</td>\n<td style=\"text-align:left\">$A$中的列就是$ColA$的向量，其余的可由$A$的列表示出来</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$与$A$的数值之间没有明显的关系</td>\n<td style=\"text-align:left\">$ColA$与$A$的数值由明显的关系，因为$A$的列就在$ColA$中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$的一个典型向量$\\mathbf v$具有$A\\mathbf v=0$的特质</td>\n<td style=\"text-align:left\">$ColA$中一个典型的向量$v$具有方程$A\\mathbf x=\\mathbf v$是相容的性质</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">给一个特定的向量$\\mathbf v$，容易判断$\\mathbf v$是否在$NulA$中，仅需计算$A\\mathbf v$</td>\n<td style=\"text-align:left\">给一个特定的向量$\\mathbf v$，判断$\\mathbf v$是否在$ColA$中，需对$[A \\mathbf v]$作行变换</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA ={0}$ 当且仅当方程$A\\mathbf x=0$仅有平凡解</td>\n<td style=\"text-align:left\">$ColA =\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对每一个$\\mathbf b \\in \\mathbb R^m$有一个解</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA ={0}$ 当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的</td>\n<td style=\"text-align:left\">$ColA =\\mathbb R^m$当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$将$\\mathbb R^n$映射到$\\mathbb R^m$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"线性变换的核与值域\"><a href=\"#线性变换的核与值域\" class=\"headerlink\" title=\"线性变换的核与值域\"></a>线性变换的核与值域</h3><p>由向量空间$V$映射到向量空间$W$内的线性变换$T$是一个规则，它将$V$中每个向量$\\mathbf x$映射城$W$中惟一向量$T(\\mathbf x)$，且满足<br>$$<br>    T(\\mathbf u+\\mathbf v) = T(\\mathbf u)+T(\\mathbf v), 对V中所有\\mathbf u,\\mathbf v 均成立 \\\\<br>    T(c\\mathbf u) = cT(\\mathbf u),对V中所有\\mathbf u及所有数c均成立<br>$$<br>线性变换$T$的<em>核</em>(或称零空间)是$V$中所有满足$T(\\mathbf u)=0$的向量$\\mathbf u$的集合。<br>$T$的<em>值域</em>是$W$中所有具有形式$T(\\mathbf x)$的向量的集合。<br>如果$T$是由一个矩阵变换得到的，例如$T(\\mathbf x)=A\\mathbf x$，则$T$的核与值域对应$A$的零空间和列空间。 </p>\n<h2 id=\"线性无关集和基\"><a href=\"#线性无关集和基\" class=\"headerlink\" title=\"线性无关集和基\"></a>线性无关集和基</h2><h3 id=\"线性无关集\"><a href=\"#线性无关集\" class=\"headerlink\" title=\"线性无关集\"></a>线性无关集</h3><p>$V$中向量的一个指标集$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，称为线性无关的，如果向量方程<br>$$<br>    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p = 0<br>$$<br>只有平凡解。<br><em>矩阵的行初等变换不影响矩阵的列的线性相关关系</em></p>\n<h3 id=\"基\"><a href=\"#基\" class=\"headerlink\" title=\"基\"></a>基</h3><p>令$H$是向量空间$V$的一个子空间，$V$中向量的指标集$B＝\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$称为$H$的一个基，如果</p>\n<ul>\n<li>$B$是现象无关集</li>\n<li>由$B$生成的子空间与$H$相同，即$H=Span\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$</li>\n</ul>\n<h4 id=\"基的两个特性\"><a href=\"#基的两个特性\" class=\"headerlink\" title=\"基的两个特性\"></a>基的两个特性</h4><blockquote>\n<ul>\n<li>基是一个尽可能小的生成集</li>\n<li>基是尽可能大的线性无关集</li>\n</ul>\n</blockquote>\n<h3 id=\"NulA-和-ColA-的基\"><a href=\"#NulA-和-ColA-的基\" class=\"headerlink\" title=\"$NulA$和$ColA$的基\"></a>$NulA$和$ColA$的基</h3><p>通过解$A\\mathbf x=0$的出的生成集总是线性无关的，即$NulA$的基。<br>$ColA$的基由矩阵$A$的主元列构成。</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><ol>\n<li>若$\\mathbf v_1,\\cdots,\\mathbf v_p$在向量空间$V$中，则$Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$的一个子空间</li>\n<li>$m\\times n$矩阵$A$的零空间是$\\mathbb R^n$的一个子空间，也就是说，$m$个方程、$n$个未知数的齐次线性方程组$A\\mathbf x=0$的全体解的集合是$\\mathbb R^n$的一个子空间。</li>\n<li>$m\\times n$矩阵$A$的列空间是$\\mathbb R^m$的一个子空间</li>\n<li>不少于两个有编号的向量的集合$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，如果有$\\mathbf v_1 \\neq0$，则$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是线性相关的，当且仅当某$\\mathbf v_1(j&gt;1)$是其前面向量$v_1,\\cdots,v_{j-1}$的线性组合</li>\n<li>生成集定理: 令$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$中的向量集，$H=Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$.<ul>\n<li>若$S$中某一向量，比如说$v_k$，是$S$中其余向量的线性组合，则$S$中去掉$v_k$之后形成的集合仍然可以生成$H$。</li>\n<li>若$H\\neq\\{0\\}$，则$S$的某一子集是$H$的一个基<br>6.矩阵$A$的主元列构成$ColA$的一个基</li>\n</ul>\n</li>\n</ol>\n","excerpt":"","more":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$   </p>\n</blockquote>\n<h2 id=\"向量空间和子空间\"><a href=\"#向量空间和子空间\" class=\"headerlink\" title=\"向量空间和子空间\"></a>向量空间和子空间</h2><h3 id=\"向量空间\"><a href=\"#向量空间\" class=\"headerlink\" title=\"向量空间\"></a>向量空间</h3><p>一个向量空间是由一些被称为向量的对象构成的非空集合$V$，在这个集合上定义两个运算，称为加法和标量乘法，服从以下公理，这些公理必须对$V$中所有向量$\\mathbf u,\\mathbf v,\\mathbf w$及所有标量$c,d$均成立。</p>\n<ul>\n<li>$\\mathbf u, \\mathbf v$之和表示为$\\mathbf u+\\mathbf v$，仍在$V$中</li>\n<li>$V$中存在一个零向量$0$，使得$\\mathbf u+0=\\mathbf u$</li>\n<li>对$V$中每个向量$\\mathbf u$，存在$V$中向量$-\\mathbf u$，使得$\\mathbf u+(-\\mathbf u)=0$</li>\n<li>$\\mathbf u$与标量$c$的标量乘法记为，$c\\mathbf u$，仍在$V$中<br>$$<br>  \\mathbf u+\\mathbf v ＝ \\mathbf v+\\mathbf u \\\\<br>  (\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w) \\\\<br>  c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v \\\\<br>  (c+d)\\mathbf u=c\\mathbf u+d\\mathbf u \\\\<br>  c(d\\mathbf u)=(cd)\\mathbf u \\\\<br>  1\\mathbf u=\\mathbf u  \\\\<br>  0\\mathbf u=0 \\\\<br>  c0=0 \\\\<br>  -\\mathbf u=(-1)\\mathbf u\\\\<br>$$</li>\n</ul>\n<h2 id=\"零空间、列空间和线性变换\"><a href=\"#零空间、列空间和线性变换\" class=\"headerlink\" title=\"零空间、列空间和线性变换\"></a>零空间、列空间和线性变换</h2><h3 id=\"零空间\"><a href=\"#零空间\" class=\"headerlink\" title=\"零空间\"></a>零空间</h3><p>$m\\times n$矩阵$A$的零空间写成$NulA$，是齐次方程$A\\mathbf x=0$的全体解的集合，用集合符号表示即：<br>$$<br>    NulA = {\\mathbf x:\\mathbf x \\in \\mathbb R^n, A\\mathbf x =0}<br>$$<br>$NulA$可以进一步的描述为$\\mathbb R^n$中在线性变换$\\mathbf x \\mapsto A\\mathbf x$下映射到$\\mathbb R^m$中的零向量的全体向量的集合。</p>\n<p>求矩阵$A$的零空间生成集的过程，就是解方程$A\\mathbf x=0$的过程。</p>\n<blockquote>\n<ul>\n<li>由该方法产生的生成集必然是线性无关的。</li>\n<li>生成集中向量的个数等于方程$A\\mathbx x=0$中自由变量的个数</li>\n</ul>\n</blockquote>\n<h3 id=\"子空间\"><a href=\"#子空间\" class=\"headerlink\" title=\"子空间\"></a>子空间</h3><p>向量空间$V$的一个子空间是$V$的一个满足以下三个性质的子集$H$：</p>\n<ul>\n<li>$V$中的零向量在$H$中</li>\n<li>$H$对向量加法封闭，即对$H$中任意向量$\\mathbf u,\\mathbf v$，和$\\mathbf u+\\mathbf v$仍在$H$中</li>\n<li>$H$对标量乘法封闭，即对$H$中任意向量$\\mathbf u$和任意标量$c$，向量$c\\mathbf u$仍在$H$中</li>\n</ul>\n<h3 id=\"矩阵的列空间\"><a href=\"#矩阵的列空间\" class=\"headerlink\" title=\"矩阵的列空间\"></a>矩阵的列空间</h3><p>$m\\times n$矩阵的列空间(记为$ColA$)是由$A$的列的所有线性组合组成的集合，若$A=[\\mathbf a_1,\\cdots,\\mathbf a_n]$，则$ColA = Span\\{\\mathbf a_1,\\cdots,\\mathbf a_n\\}$<br>$ColA$)可写成$A\\mathbf x$的形式，其中$\\mathbf x$为某向量，$A\\mathbf x$表示$A$的列向量的一个线性组合，即<br>$$<br>    ColA = {\\mathbf b:\\mathbf b = A\\mathbf x, \\mathbf x \\in \\mathbb R^n}<br>$$<br>$m\\times n$矩阵的列空间等于$\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对$\\mathbb R^m$中每个$\\mathbf b$有解</p>\n<h3 id=\"NulA-与-ColA-的对比\"><a href=\"#NulA-与-ColA-的对比\" class=\"headerlink\" title=\"$NulA$与$ColA$的对比\"></a>$NulA$与$ColA$的对比</h3><p>对于$m\\times n$矩阵$A$，$NulA$与$ColA$之间的对比</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">$NulA$</th>\n<th style=\"text-align:left\">$ColA$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$NulA$是$\\mathbb R^n$的一个子空间</td>\n<td style=\"text-align:left\">$ColA$是$\\mathbb R^m$的子空间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$是隐式定义的，即仅给出了一个$NulA$中向量必须满足的条件($A\\mathbf x=0$)</td>\n<td style=\"text-align:left\">$ColA$是显式定义，即明确指出如何建立$ColA$中的向量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">求$NulA$中的向量需要对$[A 0]$做行变换</td>\n<td style=\"text-align:left\">$A$中的列就是$ColA$的向量，其余的可由$A$的列表示出来</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$与$A$的数值之间没有明显的关系</td>\n<td style=\"text-align:left\">$ColA$与$A$的数值由明显的关系，因为$A$的列就在$ColA$中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA$的一个典型向量$\\mathbf v$具有$A\\mathbf v=0$的特质</td>\n<td style=\"text-align:left\">$ColA$中一个典型的向量$v$具有方程$A\\mathbf x=\\mathbf v$是相容的性质</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">给一个特定的向量$\\mathbf v$，容易判断$\\mathbf v$是否在$NulA$中，仅需计算$A\\mathbf v$</td>\n<td style=\"text-align:left\">给一个特定的向量$\\mathbf v$，判断$\\mathbf v$是否在$ColA$中，需对$[A \\mathbf v]$作行变换</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA ={0}$ 当且仅当方程$A\\mathbf x=0$仅有平凡解</td>\n<td style=\"text-align:left\">$ColA =\\mathbb R^m$当且仅当方程$A\\mathbf x=\\mathbf b$对每一个$\\mathbf b \\in \\mathbb R^m$有一个解</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$NulA ={0}$ 当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$是一对一的</td>\n<td style=\"text-align:left\">$ColA =\\mathbb R^m$当且仅当线性变换$\\mathbf x\\mapsto A\\mathbf x$将$\\mathbb R^n$映射到$\\mathbb R^m$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"线性变换的核与值域\"><a href=\"#线性变换的核与值域\" class=\"headerlink\" title=\"线性变换的核与值域\"></a>线性变换的核与值域</h3><p>由向量空间$V$映射到向量空间$W$内的线性变换$T$是一个规则，它将$V$中每个向量$\\mathbf x$映射城$W$中惟一向量$T(\\mathbf x)$，且满足<br>$$<br>    T(\\mathbf u+\\mathbf v) = T(\\mathbf u)+T(\\mathbf v), 对V中所有\\mathbf u,\\mathbf v 均成立 \\\\<br>    T(c\\mathbf u) = cT(\\mathbf u),对V中所有\\mathbf u及所有数c均成立<br>$$<br>线性变换$T$的<em>核</em>(或称零空间)是$V$中所有满足$T(\\mathbf u)=0$的向量$\\mathbf u$的集合。<br>$T$的<em>值域</em>是$W$中所有具有形式$T(\\mathbf x)$的向量的集合。<br>如果$T$是由一个矩阵变换得到的，例如$T(\\mathbf x)=A\\mathbf x$，则$T$的核与值域对应$A$的零空间和列空间。 </p>\n<h2 id=\"线性无关集和基\"><a href=\"#线性无关集和基\" class=\"headerlink\" title=\"线性无关集和基\"></a>线性无关集和基</h2><h3 id=\"线性无关集\"><a href=\"#线性无关集\" class=\"headerlink\" title=\"线性无关集\"></a>线性无关集</h3><p>$V$中向量的一个指标集$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，称为线性无关的，如果向量方程<br>$$<br>    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p = 0<br>$$<br>只有平凡解。<br><em>矩阵的行初等变换不影响矩阵的列的线性相关关系</em></p>\n<h3 id=\"基\"><a href=\"#基\" class=\"headerlink\" title=\"基\"></a>基</h3><p>令$H$是向量空间$V$的一个子空间，$V$中向量的指标集$B＝\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$称为$H$的一个基，如果</p>\n<ul>\n<li>$B$是现象无关集</li>\n<li>由$B$生成的子空间与$H$相同，即$H=Span\\{\\mathbf b_1,\\cdots,\\mathbf b_p\\}$</li>\n</ul>\n<h4 id=\"基的两个特性\"><a href=\"#基的两个特性\" class=\"headerlink\" title=\"基的两个特性\"></a>基的两个特性</h4><blockquote>\n<ul>\n<li>基是一个尽可能小的生成集</li>\n<li>基是尽可能大的线性无关集</li>\n</ul>\n</blockquote>\n<h3 id=\"NulA-和-ColA-的基\"><a href=\"#NulA-和-ColA-的基\" class=\"headerlink\" title=\"$NulA$和$ColA$的基\"></a>$NulA$和$ColA$的基</h3><p>通过解$A\\mathbf x=0$的出的生成集总是线性无关的，即$NulA$的基。<br>$ColA$的基由矩阵$A$的主元列构成。</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><ol>\n<li>若$\\mathbf v_1,\\cdots,\\mathbf v_p$在向量空间$V$中，则$Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$的一个子空间</li>\n<li>$m\\times n$矩阵$A$的零空间是$\\mathbb R^n$的一个子空间，也就是说，$m$个方程、$n$个未知数的齐次线性方程组$A\\mathbf x=0$的全体解的集合是$\\mathbb R^n$的一个子空间。</li>\n<li>$m\\times n$矩阵$A$的列空间是$\\mathbb R^m$的一个子空间</li>\n<li>不少于两个有编号的向量的集合$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，如果有$\\mathbf v_1 \\neq0$，则$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是线性相关的，当且仅当某$\\mathbf v_1(j&gt;1)$是其前面向量$v_1,\\cdots,v_{j-1}$的线性组合</li>\n<li>生成集定理: 令$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$是$V$中的向量集，$H=Span\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$.<ul>\n<li>若$S$中某一向量，比如说$v_k$，是$S$中其余向量的线性组合，则$S$中去掉$v_k$之后形成的集合仍然可以生成$H$。</li>\n<li>若$H\\neq\\{0\\}$，则$S$的某一子集是$H$的一个基<br>6.矩阵$A$的主元列构成$ColA$的一个基</li>\n</ul>\n</li>\n</ol>\n"},{"title":"算法-整数－矩阵","date":"2016-10-05T02:36:08.000Z","_content":"\n## 算法\n### 常用算法\n#### 搜索算法\n* 线性搜索或顺序搜索\n* 二分搜索：用于搜索排序后的集合\n\n#### 排序\n* 冒泡排序\n* 插入排序\n\n#### 贪心算法\n每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列\n\n### 函数的增长\n$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。\n\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid \\le C\\mid g(x)\\mid\n$$我们就说$f(x)$是$\\mathrm O(g(x))$    \n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid\\ge C\\mid g(x)\\mid\n$$\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。\n\n#### 函数的组合增长\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是\n$$\n    \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))\n$$\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$\n\n### 算法复杂度\n|复杂度|术语|复杂度|术语|\n|:----|:--|:----|:--|\n|$\\Theta (1)$|常数复杂度|$\\Theta (n^b)$|多项式复杂度|\n|$\\Theta (logn)$|对数复杂度|$\\Theta (b^n),b>1$|指数复杂度|\n|$\\Theta (n)$|线性复杂度|$\\Theta (n!)$|阶乘复杂度|\n|$\\Theta (nlogn)$|$nlogn$复杂度|||\n\n* 一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   \n* 能用多项式时间验证解的问题属于NP类，易解的问题属于P类。\n* NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。\n\n## 整数\n* 如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$\n* $a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。\n* 令$a$，$b$，$c$为整数。则\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；\n    - 若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；\n    - 若$a\\mid b$，$b\\mid c$，则$a\\mid c$；\n\n### 同余\n* 带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。\n* 若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$\n* 令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$\n* 整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类\n* 令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么\n$$\n    a+c\\equiv b+d\\pmod m\\\\\n    ac\\equiv bd\\pmod m\n$$\n* 令$m$是正整数，$a$和$b$是整数，则有\n$$\n    (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\\n    ab\\mod m = ((a\\mod m)(b\\mod m))mod m\n$$\n* 根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此\n$$\n    a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\\n    ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)\n$$\n\n### 同余应用\n* 散列函数\n* 伪随机数\n\n> 最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：\n> $$\n> x_{n+1} = (ax_n +c)\\mod m\n> $$\n\n* 密码学\n\n> 凯撒密码：\n> $$\n>   f(p)=(p+k)\\mod 26\\\\\n>   f(p)=(ap+b)\\mod 26\n> $$\n\n### 素数和最大公约数\n* 每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。\n* 如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。\n* 梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。\n* 素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。\n* 令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。\n* 如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。\n* 整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$\n* 正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。\n* 令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$\n\n#### 求最大公约数算法\n* 假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n* 另一个求最大公约数的算法就是欧几里得算法。\n* 令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。\n\n#### 求最小公倍数算法\n同最大公约数算法类似，最小公倍数的由以下公式给出：\n$$\nlcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}\n$$\n\n### 整数和进制\n令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：\n$$\n    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0\n$$\n其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。\n\n### 数论应用\n*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。\n* 如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。\n* 如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$\n* 令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$\n* \n","source":"_posts/Math-算法-整数－矩阵.md","raw":"---\ntitle: 算法-整数－矩阵\ndate: 2016-10-05 10:36:08\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n\n## 算法\n### 常用算法\n#### 搜索算法\n* 线性搜索或顺序搜索\n* 二分搜索：用于搜索排序后的集合\n\n#### 排序\n* 冒泡排序\n* 插入排序\n\n#### 贪心算法\n每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列\n\n### 函数的增长\n$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。\n\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid \\le C\\mid g(x)\\mid\n$$我们就说$f(x)$是$\\mathrm O(g(x))$    \n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x>k$，就有\n$$\n    \\mid f(x)\\mid\\ge C\\mid g(x)\\mid\n$$\n* 令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。\n\n#### 函数的组合增长\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是\n$$\n    \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))\n$$\n* 假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$\n\n### 算法复杂度\n|复杂度|术语|复杂度|术语|\n|:----|:--|:----|:--|\n|$\\Theta (1)$|常数复杂度|$\\Theta (n^b)$|多项式复杂度|\n|$\\Theta (logn)$|对数复杂度|$\\Theta (b^n),b>1$|指数复杂度|\n|$\\Theta (n)$|线性复杂度|$\\Theta (n!)$|阶乘复杂度|\n|$\\Theta (nlogn)$|$nlogn$复杂度|||\n\n* 一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   \n* 能用多项式时间验证解的问题属于NP类，易解的问题属于P类。\n* NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。\n\n## 整数\n* 如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$\n* $a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。\n* 令$a$，$b$，$c$为整数。则\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；\n    - 若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；\n    - 若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；\n    - 若$a\\mid b$，$b\\mid c$，则$a\\mid c$；\n\n### 同余\n* 带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。\n* 若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$\n* 令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$\n* 整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类\n* 令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么\n$$\n    a+c\\equiv b+d\\pmod m\\\\\n    ac\\equiv bd\\pmod m\n$$\n* 令$m$是正整数，$a$和$b$是整数，则有\n$$\n    (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\\n    ab\\mod m = ((a\\mod m)(b\\mod m))mod m\n$$\n* 根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此\n$$\n    a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\\n    ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)\n$$\n\n### 同余应用\n* 散列函数\n* 伪随机数\n\n> 最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：\n> $$\n> x_{n+1} = (ax_n +c)\\mod m\n> $$\n\n* 密码学\n\n> 凯撒密码：\n> $$\n>   f(p)=(p+k)\\mod 26\\\\\n>   f(p)=(ap+b)\\mod 26\n> $$\n\n### 素数和最大公约数\n* 每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。\n* 如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。\n* 梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。\n* 素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。\n* 令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。\n* 如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。\n* 整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$\n* 正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。\n* 令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$\n\n#### 求最大公约数算法\n* 假定两个不全为$0$的整数$a$和$b$的素因子分解为：\n$$\na=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\\nb=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}\n$$\n每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出\n$$\ngcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}\n$$\n例如，求$120$和$500$的最大公约数：\n$$\n    120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\\n    gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\\n    = 2^3\\cdot 3^0\\cdot 5^1 = 20\n$$\n* 另一个求最大公约数的算法就是欧几里得算法。\n* 令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。\n\n#### 求最小公倍数算法\n同最大公约数算法类似，最小公倍数的由以下公式给出：\n$$\nlcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}\n$$\n\n### 整数和进制\n令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：\n$$\n    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0\n$$\n其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。\n\n### 数论应用\n*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。\n* 如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。\n* 如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$\n* 令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$\n* \n","slug":"Math-算法-整数－矩阵","published":1,"updated":"2016-10-06T15:05:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq449000w9rui328pjwnn","content":"<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"搜索算法\"><a href=\"#搜索算法\" class=\"headerlink\" title=\"搜索算法\"></a>搜索算法</h4><ul>\n<li>线性搜索或顺序搜索</li>\n<li>二分搜索：用于搜索排序后的集合</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>冒泡排序</li>\n<li>插入排序</li>\n</ul>\n<h4 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h4><p>每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列</p>\n<h3 id=\"函数的增长\"><a href=\"#函数的增长\" class=\"headerlink\" title=\"函数的增长\"></a>函数的增长</h3><p>$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。</p>\n<ul>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid \\le C\\mid g(x)\\mid<br>$$我们就说$f(x)$是$\\mathrm O(g(x))$    </li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid\\ge C\\mid g(x)\\mid<br>$$</li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。</li>\n</ul>\n<h4 id=\"函数的组合增长\"><a href=\"#函数的组合增长\" class=\"headerlink\" title=\"函数的组合增长\"></a>函数的组合增长</h4><ul>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是<br>$$<br>  \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))<br>$$</li>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$</li>\n</ul>\n<h3 id=\"算法复杂度\"><a href=\"#算法复杂度\" class=\"headerlink\" title=\"算法复杂度\"></a>算法复杂度</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">复杂度</th>\n<th style=\"text-align:left\">术语</th>\n<th style=\"text-align:left\">复杂度</th>\n<th style=\"text-align:left\">术语</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\Theta (1)$</td>\n<td style=\"text-align:left\">常数复杂度</td>\n<td style=\"text-align:left\">$\\Theta (n^b)$</td>\n<td style=\"text-align:left\">多项式复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (logn)$</td>\n<td style=\"text-align:left\">对数复杂度</td>\n<td style=\"text-align:left\">$\\Theta (b^n),b&gt;1$</td>\n<td style=\"text-align:left\">指数复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (n)$</td>\n<td style=\"text-align:left\">线性复杂度</td>\n<td style=\"text-align:left\">$\\Theta (n!)$</td>\n<td style=\"text-align:left\">阶乘复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (nlogn)$</td>\n<td style=\"text-align:left\">$nlogn$复杂度</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   </li>\n<li>能用多项式时间验证解的问题属于NP类，易解的问题属于P类。</li>\n<li>NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。</li>\n</ul>\n<h2 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h2><ul>\n<li>如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$</li>\n<li>$a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。</li>\n<li>令$a$，$b$，$c$为整数。则<ul>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；</li>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；</li>\n<li>若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；</li>\n<li>若$a\\mid b$，$b\\mid c$，则$a\\mid c$；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"同余\"><a href=\"#同余\" class=\"headerlink\" title=\"同余\"></a>同余</h3><ul>\n<li>带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。</li>\n<li>若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$</li>\n<li>令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$</li>\n<li>整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类</li>\n<li>令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么<br>$$<br>  a+c\\equiv b+d\\pmod m\\\\<br>  ac\\equiv bd\\pmod m<br>$$</li>\n<li>令$m$是正整数，$a$和$b$是整数，则有<br>$$<br>  (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\<br>  ab\\mod m = ((a\\mod m)(b\\mod m))mod m<br>$$</li>\n<li>根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此<br>$$<br>  a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\<br>  ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)<br>$$</li>\n</ul>\n<h3 id=\"同余应用\"><a href=\"#同余应用\" class=\"headerlink\" title=\"同余应用\"></a>同余应用</h3><ul>\n<li>散列函数</li>\n<li>伪随机数</li>\n</ul>\n<blockquote>\n<p>最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：<br>$$<br>x_{n+1} = (ax_n +c)\\mod m<br>$$</p>\n</blockquote>\n<ul>\n<li>密码学</li>\n</ul>\n<blockquote>\n<p>凯撒密码：<br>$$<br>  f(p)=(p+k)\\mod 26\\\\<br>  f(p)=(ap+b)\\mod 26<br>$$</p>\n</blockquote>\n<h3 id=\"素数和最大公约数\"><a href=\"#素数和最大公约数\" class=\"headerlink\" title=\"素数和最大公约数\"></a>素数和最大公约数</h3><ul>\n<li>每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。</li>\n<li>如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。</li>\n<li>梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。</li>\n<li>素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。</li>\n<li>令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。</li>\n<li>如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。</li>\n<li>整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$</li>\n<li>正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。</li>\n<li>令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$</li>\n</ul>\n<h4 id=\"求最大公约数算法\"><a href=\"#求最大公约数算法\" class=\"headerlink\" title=\"求最大公约数算法\"></a>求最大公约数算法</h4><ul>\n<li>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>  120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\<br>  gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\<br>  = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</li>\n<li>另一个求最大公约数的算法就是欧几里得算法。</li>\n<li>令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。</li>\n</ul>\n<h4 id=\"求最小公倍数算法\"><a href=\"#求最小公倍数算法\" class=\"headerlink\" title=\"求最小公倍数算法\"></a>求最小公倍数算法</h4><p>同最大公约数算法类似，最小公倍数的由以下公式给出：<br>$$<br>lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}<br>$$</p>\n<h3 id=\"整数和进制\"><a href=\"#整数和进制\" class=\"headerlink\" title=\"整数和进制\"></a>整数和进制</h3><p>令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：<br>$$<br>    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0<br>$$<br>其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。</p>\n<h3 id=\"数论应用\"><a href=\"#数论应用\" class=\"headerlink\" title=\"数论应用\"></a>数论应用</h3><p>*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。</p>\n<ul>\n<li>如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。</li>\n<li>如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$</li>\n<li>令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$</li>\n<li></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"搜索算法\"><a href=\"#搜索算法\" class=\"headerlink\" title=\"搜索算法\"></a>搜索算法</h4><ul>\n<li>线性搜索或顺序搜索</li>\n<li>二分搜索：用于搜索排序后的集合</li>\n</ul>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><ul>\n<li>冒泡排序</li>\n<li>插入排序</li>\n</ul>\n<h4 id=\"贪心算法\"><a href=\"#贪心算法\" class=\"headerlink\" title=\"贪心算法\"></a>贪心算法</h4><p>每一步都选择最好的选项，而不考虑可能导致最优解的所有步骤序列</p>\n<h3 id=\"函数的增长\"><a href=\"#函数的增长\" class=\"headerlink\" title=\"函数的增长\"></a>函数的增长</h3><p>$\\mathrm O$记号用于描述$g(x)$的上限，$\\Omega$用于描述$g(x)$的下限，$\\Theta$用于描述$g(x)$的上下限。</p>\n<ul>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果存在正常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid \\le C\\mid g(x)\\mid<br>$$我们就说$f(x)$是$\\mathrm O(g(x))$    </li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果有常数$C$和$k$，使得只要$x&gt;k$，就有<br>$$<br>  \\mid f(x)\\mid\\ge C\\mid g(x)\\mid<br>$$</li>\n<li>令$f$和$g$为从整数集合或实数集合到实数集合的函数，如果$f(x)$是$\\mathrm O(g(x))$及$f(x)$是$\\Omega (g(x))$，就说$f(x)$是$\\Theta (g(x))$。</li>\n</ul>\n<h4 id=\"函数的组合增长\"><a href=\"#函数的组合增长\" class=\"headerlink\" title=\"函数的组合增长\"></a>函数的组合增长</h4><ul>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1+f_2)(x)$是<br>$$<br>  \\mathrm O(max(\\mid g_1(x)\\mid , \\mid g_2(x)\\mid))<br>$$</li>\n<li>假定$f_1(x)$是$\\mathrm O(g_1(x))$，$f_2(x)$是$\\mathrm O(g_2(x))$，那么$(f_1 f_2)(x)$是$\\mathrm O(g_1(x)g_2(x))$</li>\n</ul>\n<h3 id=\"算法复杂度\"><a href=\"#算法复杂度\" class=\"headerlink\" title=\"算法复杂度\"></a>算法复杂度</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">复杂度</th>\n<th style=\"text-align:left\">术语</th>\n<th style=\"text-align:left\">复杂度</th>\n<th style=\"text-align:left\">术语</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$\\Theta (1)$</td>\n<td style=\"text-align:left\">常数复杂度</td>\n<td style=\"text-align:left\">$\\Theta (n^b)$</td>\n<td style=\"text-align:left\">多项式复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (logn)$</td>\n<td style=\"text-align:left\">对数复杂度</td>\n<td style=\"text-align:left\">$\\Theta (b^n),b&gt;1$</td>\n<td style=\"text-align:left\">指数复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (n)$</td>\n<td style=\"text-align:left\">线性复杂度</td>\n<td style=\"text-align:left\">$\\Theta (n!)$</td>\n<td style=\"text-align:left\">阶乘复杂度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\Theta (nlogn)$</td>\n<td style=\"text-align:left\">$nlogn$复杂度</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>一般来讲，能用多项式复杂度的算法解决的问题都是易解的，反之是难解的。   </li>\n<li>能用多项式时间验证解的问题属于NP类，易解的问题属于P类。</li>\n<li>NP完全问题，这类问题的性质是，只要其中任何一个问题能用一个多项式时间最坏情形算法来解答，那么所有这些问题都能用多项式时间最坏情形算法解答。</li>\n</ul>\n<h2 id=\"整数\"><a href=\"#整数\" class=\"headerlink\" title=\"整数\"></a>整数</h2><ul>\n<li>如果$a$和$b$是整数，$a\\neq 0$，若有整数$c$使$b=ac$，就说$a$整除$b$。在$a$整除$b$时，$a$是$b$的一个因子，$b$是$a$的倍数，符号$a\\mid b$表示$a$整除$b$。当$a$不能整除$b$时写成$a∤b$</li>\n<li>$a\\mid b$也可以表示成$\\exists c(ac=b)$，论域是整个整数集合。</li>\n<li>令$a$，$b$，$c$为整数。则<ul>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid (b+c)$；</li>\n<li>若$a\\mid b$和$a\\mid c$，则$a\\mid mb+nc$，其中$m$和$n$为整数；</li>\n<li>若$a\\mid b$，那么对所有整数$c$都有$a\\mid bc$；</li>\n<li>若$a\\mid b$，$b\\mid c$，则$a\\mid c$；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"同余\"><a href=\"#同余\" class=\"headerlink\" title=\"同余\"></a>同余</h3><ul>\n<li>带余除法：令$a$为整数，$d$为正整数，有唯一的整数$q$和$r$，并且$0\\le rlt d$，满足$a=dq+r$。</li>\n<li>若$a$和$b$为整数而$m$为正整数，如果$m$整除$a-b$，就说$a$模m同余$b$。用$a\\equiv b\\pmod m$。也就是说$a\\equiv b\\pmod m$当且仅当$a \\mod m=b\\mod m$</li>\n<li>令$m$为正整数，整数$a$和$b$模$m$同余的充分必要条件是存在整数$k$，使$a=b+km$</li>\n<li>整数$a$模$m$所有整数同余的集合称为$a$模$m$的同余类</li>\n<li>令$m$为正整数。若$a\\equiv b\\pmod m$，$c\\equiv d\\pmod m$，那么<br>$$<br>  a+c\\equiv b+d\\pmod m\\\\<br>  ac\\equiv bd\\pmod m<br>$$</li>\n<li>令$m$是正整数，$a$和$b$是整数，则有<br>$$<br>  (a+b)\\mod m = ((a\\mod m)+(b\\mod m))\\mod m\\\\<br>  ab\\mod m = ((a\\mod m)(b\\mod m))mod m<br>$$</li>\n<li>根据$\\mod m$和关于模$m$同余的定义，可得$a\\equiv (a\\mod m)(\\mod m)$，并且$b\\equiv (b\\mod m)(\\mod m)$，因此<br>$$<br>  a+b\\equiv (a\\mod m)+(b\\mod m)(\\mod m)\\\\<br>  ab\\equiv (a\\mod m)(b\\mod m)(\\mod m)<br>$$</li>\n</ul>\n<h3 id=\"同余应用\"><a href=\"#同余应用\" class=\"headerlink\" title=\"同余应用\"></a>同余应用</h3><ul>\n<li>散列函数</li>\n<li>伪随机数</li>\n</ul>\n<blockquote>\n<p>最常用的产生伪随机数的过程称为线性同余。选择4个数：模数$m$，乘数$a$，增量$c$和种子$x_0$，使得$2\\le a\\lt m$，$0\\le c\\lt m$，$0\\le x_0 m$。生成伪随机序列$\\{x_n\\}$，使得对所有$n$，$0\\le x_n \\lt m$。生成的办法是逐次同余：<br>$$<br>x_{n+1} = (ax_n +c)\\mod m<br>$$</p>\n</blockquote>\n<ul>\n<li>密码学</li>\n</ul>\n<blockquote>\n<p>凯撒密码：<br>$$<br>  f(p)=(p+k)\\mod 26\\\\<br>  f(p)=(ap+b)\\mod 26<br>$$</p>\n</blockquote>\n<h3 id=\"素数和最大公约数\"><a href=\"#素数和最大公约数\" class=\"headerlink\" title=\"素数和最大公约数\"></a>素数和最大公约数</h3><ul>\n<li>每个大于1的正整数都可以唯一写为素数的乘积。对大整数进行素因子分解所需的时限在密码学中起着重要的作用。</li>\n<li>如果$n$是个合数，那么$n$必有小于或等于$\\sqrt n$的一个素因子。</li>\n<li>梅森素数，是形如$2^p-1$这样的整数。目前已知最大的素数都是这种形式，可用卢卡斯－莱莫尔(Lucas-Lehmer)检验的方法判断$2^p-1$是否为素数。</li>\n<li>素数定理：当$x$无限增长时，不超过$x$的素数个数与$x/Inx$之比趋于1。</li>\n<li>令$a$和$b$是不全为$0$的两个整数。能使$d\\mid a$和$d\\mid b$的最大整数$d$称为$a$和$b$的最大公约数。$a$和$b$的_最大公约数_用$gcd(a, b)$表示。</li>\n<li>如果整数$a$和$b$的最大公约数是$1$，就说它们是互素的。</li>\n<li>整数$a_1,a_2,\\cdots,a_n$是两两互素的，如果只要$1\\le i\\lt j\\le n$，就有$gcd(a_i, b_j)=1$</li>\n<li>正整数$a$和$b$的_最小公倍数_是能被$a$和$b$整除的最小正整数。$a$和$b$的最小公倍数用$lcm(a, b)$表示。</li>\n<li>令$a$和$b$为正整数，则$ab = gcd(a, b)\\cdot lcm(a, b)$</li>\n</ul>\n<h4 id=\"求最大公约数算法\"><a href=\"#求最大公约数算法\" class=\"headerlink\" title=\"求最大公约数算法\"></a>求最大公约数算法</h4><ul>\n<li>假定两个不全为$0$的整数$a$和$b$的素因子分解为：<br>$$<br>a=p_1^{a_1}p_2^{a_2}\\dots p_n^{a_n} \\\\<br>b=p_1^{b_1}p_2^{b_2}\\dots p_n^{b_n}<br>$$<br>每个整数都是非负整数，而且出现在$a$和$b$分解中的所有素数都包含在两个分解之中，必要时以0为指数出现。于是$gcd(a, b)$由下面的公式给出<br>$$<br>gcd(a, b) = p_1^{min(a_1,b_1)}p_2^{min(a_2, b_2)}\\dots p_n^{min(a_n,b_n)}<br>$$<br>例如，求$120$和$500$的最大公约数：<br>$$<br>  120 = 2^3\\cdot 3\\cdot 5 , 500 = 2^2\\cdot 5^3\\\\<br>  gcd(120, 500) = 2^{min(3,2)}\\cdot 3^{min(1,0)}\\cdot 5^{min(1,3)}\\\\<br>  = 2^3\\cdot 3^0\\cdot 5^1 = 20<br>$$</li>\n<li>另一个求最大公约数的算法就是欧几里得算法。</li>\n<li>令$a=bq+r$，其中$a,b,c,q$均为整数，则$gcd(a, b)＝gcd(b,r)$。</li>\n</ul>\n<h4 id=\"求最小公倍数算法\"><a href=\"#求最小公倍数算法\" class=\"headerlink\" title=\"求最小公倍数算法\"></a>求最小公倍数算法</h4><p>同最大公约数算法类似，最小公倍数的由以下公式给出：<br>$$<br>lcm(a, b) = p_1^{max(a_1,b_1)}p_2^{max(a_2, b_2)}\\dots p_n^{max(a_n,b_n)}<br>$$</p>\n<h3 id=\"整数和进制\"><a href=\"#整数和进制\" class=\"headerlink\" title=\"整数和进制\"></a>整数和进制</h3><p>令$b$为不等于$1$的正整数，那么如果$n$是个正整数，就可以唯一地表示为下面的形式：<br>$$<br>    n = a_kb^k+a_{k-1}b^{k-1}+\\cdots +a_1b+a_0<br>$$<br>其中$k$是非负整数，$a_0,a_1,\\cdots,a_k$是小于$b$的非负整数，$a_k\\neq 0$。该形式被称为$n$的$b$进制展开。</p>\n<h3 id=\"数论应用\"><a href=\"#数论应用\" class=\"headerlink\" title=\"数论应用\"></a>数论应用</h3><p>*$a$和$b$为正整数，则存在整数$s$和$t$，使得为$gcd(a,b)=sa+tb$。</p>\n<ul>\n<li>如果$a,b,c$为正整数，使得$gcd(a, b)=1$且$a\\mid bc$，那么$a\\mid c$。</li>\n<li>如果$p$是素数，且$p\\mid a_1a_2\\cdots a_n$，其中$a_j$为整数，则对某个$i$，$p\\mid a_i$</li>\n<li>令$m$为正整数，$a,b,c$为整数，如果$ac\\equiv bc\\pmod m$且$gcd(c, m)=1$，那么$a\\equiv b\\pmod m$</li>\n<li></li>\n</ul>\n"},{"title":"行列式－《线性代数及应用》","date":"2016-09-08T12:44:04.000Z","updated":"2016-09-10T12:00:00.000Z","_content":"> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 定义\n当$n\\ge 2$时，$n\\times n$矩阵$A=[a_{ij}]$的行列式是形如$\\pm a_{1j}detA_{1j}$的$n$个项的和，其中加号和减号交替出现，这里元素$a_{11},a_{12},\\cdots,a_{1n}$来自$A$的第一行，即\n$$\n    detA=a_{11}\\cdot detA_{11}-a_{12}\\cdot detA_{12}+\\cdots+(-1)^{1+n}a_{1n}\\cdot detA_{1n} \\\\\n    = \\sum_{j=1}^n (-1)^{1+j}a_{1j}detA_{1j}\n$$\n其中，$A_{ij}$表示通过划去$A$中第$i$行和第$j$列而得到的子矩阵。\n\n## 性质\n### 行列式函数\n若$A$为$n\\times n$矩阵，我们可以将$detA$看作$A$中$n$个列向量的函数。如果将$A$其中一列作为可变列，则$detA$可作为可变列向量的线性函数。\n$$\n    A=[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x  \\mathbf a_{j+1} \\cdots \\mathbf a_n]\n$$\n定义由$R^n$到$R$的变化T为\n$$\n    T(\\mathbf x) = det[[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x \\mathbf a_{j+1} \\cdots \\mathbf a_n]]\n$$\n则有有以下性质\n$$\n    T(c\\mathbf x) = cT(\\mathbf x), 对任意常数c和R^n中的任意\\mathbf x成立 \\\\\n    T(\\mathbf u+\\mathbf v)=T(\\mathbf u)+T(\\mathbf v), 对R^n中所有\\mathbf u,\\mathbf v成立\n$$\n\n## 定理\n1. $n\\times n$矩阵$A$的行列式可按任意行或列的余因子展开式来计算。    \n按第$i$行展开\n$$\n    C_{ij} = (-1)^{i+j}detA_{ij} \\\\\n    detA = a_{i1}C_{i1}+a_{i2}C_{i2}+\\cdots+a_{in}C_{in}\n$$\n按第$j$列展开\n$$\n    C_{ij} = (-1)^{i+j}detA_{ij} \\\\\n    detA = a_{1j}C_{1j}+a_{2j}C_{2j}+\\cdots+a_{nj}C_{nj}\n$$\n2. 若$A$为三角阵，则$detA$等于$A$的主对角线上元素的乘积\n3. 行变换，令$A$是一个方阵\n    * 若$A$的某一行的倍数加到另一行得矩阵$B$，则$detB=detA$\n    * 若$A$的两行互换得矩阵$B$，则$detB=-detA$\n    * 若$A$的某行乘以$k$倍得到矩阵$B$，则$detB=k\\cdot detA$\n4. 方阵$A$是可逆的当且仅当$detA\\neq 0$\n5. 若$A$为一个$n\\times n$矩阵，则$detA^T = detA$\n6. 若$A$和$B$均为$n\\times n$矩阵，则$detAB = (detA)(detB)$\n7. 克拉默法则，设$A$是一个可逆的$n\\times n$矩阵，对$R^n$中任意向量$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$的唯一解可由下式给出，其中$detA_i(\\mathbf b)$表示$A$中第$i$列由向量$\\mathbf b$替换得到的矩阵\n$$\n    x_i = {detA_i(\\mathbf b)\\over {detA}}, i=1,2,\\cdots,n\n$$\n8. 逆矩阵公式， 设$A$是一个可逆的$n\\times n$矩阵，则$A^{-1}={1\\over detA}adjA$\n9. 若$A$是一个$2\\times 2$矩阵，则由$A$的列确定的平行四边形的面积为$|detA|$，若$A$是一个$3\\times 3$矩阵，则由$A$列确定的平行六面体的体积为$|detA|$\n10. 设$T:R^2\\to R^2$是由一个$2\\times 2$矩阵$A$确定的线性变换，若$S$是$R^2$中一个平行四边形，则\n$$\n    \\{T(S)的面积\\}=|detA|\\cdot\\{S的面积\\} \n$$\n若$T$是一个由$3\\times 3$矩阵$A$确定的线性变换，而$S$是$R^3$中的一个平行六面体，则\n$$\n    \\{T(S)的体积\\}=|detA|\\cdot \\{S的体积\\}\n$$\n\n## 推论\n### $adjA$可逆\n若$A$可逆，则$adjA$也可逆，且$(adjA)^{-1}={1\\over detA}A$\n$$\n    A^{-1} = {1\\over detA}adjA \\\\\n    adjA = (detA)A^{-1} \\\\\n    adjA(adjA)^{-1} = I \\\\\n    adjA \\cdot {1\\over detA}A = I \\\\\n    (detA)A^{-1} \\cdot {1\\over detA}A = I \\\\\n    A^{-1}A = I\n$$\n\n\n\n\n\n\n\n","source":"_posts/Math-行列式－《线性代数及应用》.md","raw":"---\ntitle: 行列式－《线性代数及应用》\ndate: 2016-09-08 20:44:04\nupdated: 2016-09-10 20:00:00\ntags: [Math, Linear Algebra, note]\ncategories: Math\n---\n> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 定义\n当$n\\ge 2$时，$n\\times n$矩阵$A=[a_{ij}]$的行列式是形如$\\pm a_{1j}detA_{1j}$的$n$个项的和，其中加号和减号交替出现，这里元素$a_{11},a_{12},\\cdots,a_{1n}$来自$A$的第一行，即\n$$\n    detA=a_{11}\\cdot detA_{11}-a_{12}\\cdot detA_{12}+\\cdots+(-1)^{1+n}a_{1n}\\cdot detA_{1n} \\\\\n    = \\sum_{j=1}^n (-1)^{1+j}a_{1j}detA_{1j}\n$$\n其中，$A_{ij}$表示通过划去$A$中第$i$行和第$j$列而得到的子矩阵。\n\n## 性质\n### 行列式函数\n若$A$为$n\\times n$矩阵，我们可以将$detA$看作$A$中$n$个列向量的函数。如果将$A$其中一列作为可变列，则$detA$可作为可变列向量的线性函数。\n$$\n    A=[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x  \\mathbf a_{j+1} \\cdots \\mathbf a_n]\n$$\n定义由$R^n$到$R$的变化T为\n$$\n    T(\\mathbf x) = det[[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x \\mathbf a_{j+1} \\cdots \\mathbf a_n]]\n$$\n则有有以下性质\n$$\n    T(c\\mathbf x) = cT(\\mathbf x), 对任意常数c和R^n中的任意\\mathbf x成立 \\\\\n    T(\\mathbf u+\\mathbf v)=T(\\mathbf u)+T(\\mathbf v), 对R^n中所有\\mathbf u,\\mathbf v成立\n$$\n\n## 定理\n1. $n\\times n$矩阵$A$的行列式可按任意行或列的余因子展开式来计算。    \n按第$i$行展开\n$$\n    C_{ij} = (-1)^{i+j}detA_{ij} \\\\\n    detA = a_{i1}C_{i1}+a_{i2}C_{i2}+\\cdots+a_{in}C_{in}\n$$\n按第$j$列展开\n$$\n    C_{ij} = (-1)^{i+j}detA_{ij} \\\\\n    detA = a_{1j}C_{1j}+a_{2j}C_{2j}+\\cdots+a_{nj}C_{nj}\n$$\n2. 若$A$为三角阵，则$detA$等于$A$的主对角线上元素的乘积\n3. 行变换，令$A$是一个方阵\n    * 若$A$的某一行的倍数加到另一行得矩阵$B$，则$detB=detA$\n    * 若$A$的两行互换得矩阵$B$，则$detB=-detA$\n    * 若$A$的某行乘以$k$倍得到矩阵$B$，则$detB=k\\cdot detA$\n4. 方阵$A$是可逆的当且仅当$detA\\neq 0$\n5. 若$A$为一个$n\\times n$矩阵，则$detA^T = detA$\n6. 若$A$和$B$均为$n\\times n$矩阵，则$detAB = (detA)(detB)$\n7. 克拉默法则，设$A$是一个可逆的$n\\times n$矩阵，对$R^n$中任意向量$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$的唯一解可由下式给出，其中$detA_i(\\mathbf b)$表示$A$中第$i$列由向量$\\mathbf b$替换得到的矩阵\n$$\n    x_i = {detA_i(\\mathbf b)\\over {detA}}, i=1,2,\\cdots,n\n$$\n8. 逆矩阵公式， 设$A$是一个可逆的$n\\times n$矩阵，则$A^{-1}={1\\over detA}adjA$\n9. 若$A$是一个$2\\times 2$矩阵，则由$A$的列确定的平行四边形的面积为$|detA|$，若$A$是一个$3\\times 3$矩阵，则由$A$列确定的平行六面体的体积为$|detA|$\n10. 设$T:R^2\\to R^2$是由一个$2\\times 2$矩阵$A$确定的线性变换，若$S$是$R^2$中一个平行四边形，则\n$$\n    \\{T(S)的面积\\}=|detA|\\cdot\\{S的面积\\} \n$$\n若$T$是一个由$3\\times 3$矩阵$A$确定的线性变换，而$S$是$R^3$中的一个平行六面体，则\n$$\n    \\{T(S)的体积\\}=|detA|\\cdot \\{S的体积\\}\n$$\n\n## 推论\n### $adjA$可逆\n若$A$可逆，则$adjA$也可逆，且$(adjA)^{-1}={1\\over detA}A$\n$$\n    A^{-1} = {1\\over detA}adjA \\\\\n    adjA = (detA)A^{-1} \\\\\n    adjA(adjA)^{-1} = I \\\\\n    adjA \\cdot {1\\over detA}A = I \\\\\n    (detA)A^{-1} \\cdot {1\\over detA}A = I \\\\\n    A^{-1}A = I\n$$\n\n\n\n\n\n\n\n","slug":"Math-行列式－《线性代数及应用》","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44b00119ruif06m0tvu","content":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>当$n\\ge 2$时，$n\\times n$矩阵$A=[a_{ij}]$的行列式是形如$\\pm a_{1j}detA_{1j}$的$n$个项的和，其中加号和减号交替出现，这里元素$a_{11},a_{12},\\cdots,a_{1n}$来自$A$的第一行，即<br>$$<br>    detA=a_{11}\\cdot detA_{11}-a_{12}\\cdot detA_{12}+\\cdots+(-1)^{1+n}a_{1n}\\cdot detA_{1n} \\\\<br>    = \\sum_{j=1}^n (-1)^{1+j}a_{1j}detA_{1j}<br>$$<br>其中，$A_{ij}$表示通过划去$A$中第$i$行和第$j$列而得到的子矩阵。</p>\n<h2 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h2><h3 id=\"行列式函数\"><a href=\"#行列式函数\" class=\"headerlink\" title=\"行列式函数\"></a>行列式函数</h3><p>若$A$为$n\\times n$矩阵，我们可以将$detA$看作$A$中$n$个列向量的函数。如果将$A$其中一列作为可变列，则$detA$可作为可变列向量的线性函数。<br>$$<br>    A=[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x  \\mathbf a_{j+1} \\cdots \\mathbf a_n]<br>$$<br>定义由$R^n$到$R$的变化T为<br>$$<br>    T(\\mathbf x) = det[[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x \\mathbf a_{j+1} \\cdots \\mathbf a_n]]<br>$$<br>则有有以下性质<br>$$<br>    T(c\\mathbf x) = cT(\\mathbf x), 对任意常数c和R^n中的任意\\mathbf x成立 \\\\<br>    T(\\mathbf u+\\mathbf v)=T(\\mathbf u)+T(\\mathbf v), 对R^n中所有\\mathbf u,\\mathbf v成立<br>$$</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><ol>\n<li>$n\\times n$矩阵$A$的行列式可按任意行或列的余因子展开式来计算。<br>按第$i$行展开<br>$$<br> C_{ij} = (-1)^{i+j}detA_{ij} \\\\<br> detA = a_{i1}C_{i1}+a_{i2}C_{i2}+\\cdots+a_{in}C_{in}<br>$$<br>按第$j$列展开<br>$$<br> C_{ij} = (-1)^{i+j}detA_{ij} \\\\<br> detA = a_{1j}C_{1j}+a_{2j}C_{2j}+\\cdots+a_{nj}C_{nj}<br>$$</li>\n<li>若$A$为三角阵，则$detA$等于$A$的主对角线上元素的乘积</li>\n<li>行变换，令$A$是一个方阵<ul>\n<li>若$A$的某一行的倍数加到另一行得矩阵$B$，则$detB=detA$</li>\n<li>若$A$的两行互换得矩阵$B$，则$detB=-detA$</li>\n<li>若$A$的某行乘以$k$倍得到矩阵$B$，则$detB=k\\cdot detA$</li>\n</ul>\n</li>\n<li>方阵$A$是可逆的当且仅当$detA\\neq 0$</li>\n<li>若$A$为一个$n\\times n$矩阵，则$detA^T = detA$</li>\n<li>若$A$和$B$均为$n\\times n$矩阵，则$detAB = (detA)(detB)$</li>\n<li>克拉默法则，设$A$是一个可逆的$n\\times n$矩阵，对$R^n$中任意向量$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$的唯一解可由下式给出，其中$detA_i(\\mathbf b)$表示$A$中第$i$列由向量$\\mathbf b$替换得到的矩阵<br>$$<br> x_i = {detA_i(\\mathbf b)\\over {detA}}, i=1,2,\\cdots,n<br>$$</li>\n<li>逆矩阵公式， 设$A$是一个可逆的$n\\times n$矩阵，则$A^{-1}={1\\over detA}adjA$</li>\n<li>若$A$是一个$2\\times 2$矩阵，则由$A$的列确定的平行四边形的面积为$|detA|$，若$A$是一个$3\\times 3$矩阵，则由$A$列确定的平行六面体的体积为$|detA|$</li>\n<li>设$T:R^2\\to R^2$是由一个$2\\times 2$矩阵$A$确定的线性变换，若$S$是$R^2$中一个平行四边形，则<br>$$<br>\\{T(S)的面积\\}=|detA|\\cdot\\{S的面积\\}<br>$$<br>若$T$是一个由$3\\times 3$矩阵$A$确定的线性变换，而$S$是$R^3$中的一个平行六面体，则<br>$$<br>\\{T(S)的体积\\}=|detA|\\cdot \\{S的体积\\}<br>$$</li>\n</ol>\n<h2 id=\"推论\"><a href=\"#推论\" class=\"headerlink\" title=\"推论\"></a>推论</h2><h3 id=\"adjA-可逆\"><a href=\"#adjA-可逆\" class=\"headerlink\" title=\"$adjA$可逆\"></a>$adjA$可逆</h3><p>若$A$可逆，则$adjA$也可逆，且$(adjA)^{-1}={1\\over detA}A$<br>$$<br>    A^{-1} = {1\\over detA}adjA \\\\<br>    adjA = (detA)A^{-1} \\\\<br>    adjA(adjA)^{-1} = I \\\\<br>    adjA \\cdot {1\\over detA}A = I \\\\<br>    (detA)A^{-1} \\cdot {1\\over detA}A = I \\\\<br>    A^{-1}A = I<br>$$</p>\n","excerpt":"","more":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>当$n\\ge 2$时，$n\\times n$矩阵$A=[a_{ij}]$的行列式是形如$\\pm a_{1j}detA_{1j}$的$n$个项的和，其中加号和减号交替出现，这里元素$a_{11},a_{12},\\cdots,a_{1n}$来自$A$的第一行，即<br>$$<br>    detA=a_{11}\\cdot detA_{11}-a_{12}\\cdot detA_{12}+\\cdots+(-1)^{1+n}a_{1n}\\cdot detA_{1n} \\\\<br>    = \\sum_{j=1}^n (-1)^{1+j}a_{1j}detA_{1j}<br>$$<br>其中，$A_{ij}$表示通过划去$A$中第$i$行和第$j$列而得到的子矩阵。</p>\n<h2 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h2><h3 id=\"行列式函数\"><a href=\"#行列式函数\" class=\"headerlink\" title=\"行列式函数\"></a>行列式函数</h3><p>若$A$为$n\\times n$矩阵，我们可以将$detA$看作$A$中$n$个列向量的函数。如果将$A$其中一列作为可变列，则$detA$可作为可变列向量的线性函数。<br>$$<br>    A=[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x  \\mathbf a_{j+1} \\cdots \\mathbf a_n]<br>$$<br>定义由$R^n$到$R$的变化T为<br>$$<br>    T(\\mathbf x) = det[[\\mathbf a_1 \\cdots \\mathbf a_{j-1} \\mathbf x \\mathbf a_{j+1} \\cdots \\mathbf a_n]]<br>$$<br>则有有以下性质<br>$$<br>    T(c\\mathbf x) = cT(\\mathbf x), 对任意常数c和R^n中的任意\\mathbf x成立 \\\\<br>    T(\\mathbf u+\\mathbf v)=T(\\mathbf u)+T(\\mathbf v), 对R^n中所有\\mathbf u,\\mathbf v成立<br>$$</p>\n<h2 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h2><ol>\n<li>$n\\times n$矩阵$A$的行列式可按任意行或列的余因子展开式来计算。<br>按第$i$行展开<br>$$<br> C_{ij} = (-1)^{i+j}detA_{ij} \\\\<br> detA = a_{i1}C_{i1}+a_{i2}C_{i2}+\\cdots+a_{in}C_{in}<br>$$<br>按第$j$列展开<br>$$<br> C_{ij} = (-1)^{i+j}detA_{ij} \\\\<br> detA = a_{1j}C_{1j}+a_{2j}C_{2j}+\\cdots+a_{nj}C_{nj}<br>$$</li>\n<li>若$A$为三角阵，则$detA$等于$A$的主对角线上元素的乘积</li>\n<li>行变换，令$A$是一个方阵<ul>\n<li>若$A$的某一行的倍数加到另一行得矩阵$B$，则$detB=detA$</li>\n<li>若$A$的两行互换得矩阵$B$，则$detB=-detA$</li>\n<li>若$A$的某行乘以$k$倍得到矩阵$B$，则$detB=k\\cdot detA$</li>\n</ul>\n</li>\n<li>方阵$A$是可逆的当且仅当$detA\\neq 0$</li>\n<li>若$A$为一个$n\\times n$矩阵，则$detA^T = detA$</li>\n<li>若$A$和$B$均为$n\\times n$矩阵，则$detAB = (detA)(detB)$</li>\n<li>克拉默法则，设$A$是一个可逆的$n\\times n$矩阵，对$R^n$中任意向量$\\mathbf b$，方程$A\\mathbf x=\\mathbf b$的唯一解可由下式给出，其中$detA_i(\\mathbf b)$表示$A$中第$i$列由向量$\\mathbf b$替换得到的矩阵<br>$$<br> x_i = {detA_i(\\mathbf b)\\over {detA}}, i=1,2,\\cdots,n<br>$$</li>\n<li>逆矩阵公式， 设$A$是一个可逆的$n\\times n$矩阵，则$A^{-1}={1\\over detA}adjA$</li>\n<li>若$A$是一个$2\\times 2$矩阵，则由$A$的列确定的平行四边形的面积为$|detA|$，若$A$是一个$3\\times 3$矩阵，则由$A$列确定的平行六面体的体积为$|detA|$</li>\n<li>设$T:R^2\\to R^2$是由一个$2\\times 2$矩阵$A$确定的线性变换，若$S$是$R^2$中一个平行四边形，则<br>$$<br>\\{T(S)的面积\\}=|detA|\\cdot\\{S的面积\\}<br>$$<br>若$T$是一个由$3\\times 3$矩阵$A$确定的线性变换，而$S$是$R^3$中的一个平行六面体，则<br>$$<br>\\{T(S)的体积\\}=|detA|\\cdot \\{S的体积\\}<br>$$</li>\n</ol>\n<h2 id=\"推论\"><a href=\"#推论\" class=\"headerlink\" title=\"推论\"></a>推论</h2><h3 id=\"adjA-可逆\"><a href=\"#adjA-可逆\" class=\"headerlink\" title=\"$adjA$可逆\"></a>$adjA$可逆</h3><p>若$A$可逆，则$adjA$也可逆，且$(adjA)^{-1}={1\\over detA}A$<br>$$<br>    A^{-1} = {1\\over detA}adjA \\\\<br>    adjA = (detA)A^{-1} \\\\<br>    adjA(adjA)^{-1} = I \\\\<br>    adjA \\cdot {1\\over detA}A = I \\\\<br>    (detA)A^{-1} \\cdot {1\\over detA}A = I \\\\<br>    A^{-1}A = I<br>$$</p>\n"},{"title":"线性方程组－《线性代数及应用》","date":"2016-09-03T10:27:24.000Z","_content":"> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 方程以及方程的解\n### 方程\n以下为同一方程组的不同表示形式\n#### 线性方程组\n$$\n    a_1 x_1 + a_2 x_2 +...+a_n x_n=b_1\\\\\n    c_1 x_1 + c_2 x_2 +...+c_n x_n=b_2\\\\\n            ...\n$$\n#### 增广矩阵\n$$\n    \\begin{matrix}\n    a_1 & a_2 & \\cdots & a_n & b_1\\\\\n    c_1 & c_2 & \\cdots & c_n & b_1\\\\\n    \\end{matrix}\n$$\n#### 向量方程\n$v_1 ,v_2 ,\\cdots,v_n$是$R^n$中的向量\n$$\n    x_1 \\mathbf v_1 + x_2 \\mathbf v_2 +\\cdots+ x_n \\mathbf v_n =\\mathbf b\n$$\n#### 矩阵方程\n$$\n    A\\mathbf x =\\mathbf b\n$$\n\n### 解集\n#### 阶梯形矩阵定义\n1. 每一个非零行在每一零行上\n2. 某一行的先导元素所在列位于前一行先导元素的右面\n3. 某一先导元素所在列下方元素都是零，若一个阶梯形矩阵还满足以下性质，称它为简化阶梯形\n4. 每一非零行的先导元素都是1\n5. 每一先导元素1是该元素所在列的唯一非零元素\n\n#### 齐次方程\n称$A\\mathbf x=0$的形式的方程为齐次方程。当该方程只有一个解时，即$\\mathbf x=0$，这个解称为平凡解。若齐次方程右多个解，称齐次方程有非平凡解。\n\n#### 解方程组的算法\n##### 行初等变换\n* 倍加变换：把某一行换成它本身与另外一行的倍数的和\n* 对换变换：把两行对换\n* 倍乘变换：把某一行的所有元素乘以同一个非零元素\n\n##### 行化简算法\n任何情况下，线性方程组、向量方程、矩阵方程都可用相同方法来解－行化简算法来化简增广矩阵。\n1. 由最左边的非零列开始，这是一个主元列，主元位置在该列顶端\n2. 在主元列中选取一个非零元作为主元。若有必要的话，可对换两行使这个元素移到主元位置上\n3. 用倍加行变换将主元下面的元素变成0\n4. 暂时不管包含主元位置的行以及它上面的各行，对剩下的子矩阵使用上述的三个步骤直到没有非零行需要处理为止。\n5. 由最右面的主元开始，把每个主元上方的各元素变成0，若某个主元不是1，用倍乘将其变为1\n\n##### 线性方程组的解\n1. 写出方程组的增广矩阵\n2. 应用行化简算法把增广矩阵化为阶梯形，确定方程组是否有解，如果没有解则停止；否则进行下一步\n3. 继续行化简算法得到它的简化阶梯形\n4. 写出由第3步所得矩阵所对应的方程组\n5. 把第4步所得的每个方程改写为用自由变量(假如有自由变量)表示基本变了的形式\n\n##### 参数向量形式的解集\n1. 把增广矩阵行化简为简化阶梯形\n2. 把每个基本变量用自由变量表示\n3. 把一般解$\\mathbf x$表示成向量，如果有自由变量，其元素依赖于自由变量\n4. 把$\\mathbf x$分解为向量的线性组合，用自由变量作为参数\n\n\n## 线性组合和线性变换\n### 线性组合\n给定$R^n$中向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$和标量$c_1,c_2,\\cdots,c_p$,向量\n$$\n    \\mathbf y=c_1\\mathbf v_1+\\cdots+c_p\\mathbf v_p\n$$\n称为向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$，以$c_1,c_2,\\cdots,c_p$为权的*线性组合*，其中所有向量$y$的集合用记号$Span\\{\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p\\}$表示。\n\n### 线性相关\n对于$R^n$中一组向量$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，若向量方程\n$$\n    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p=0\n$$\n仅有平凡解，则称向量组(集)$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性无关，否则称为线性相关。     \n由此可以推论出，当方程$A\\mathbf x=0$仅有平凡解时，矩阵$A$中各列线性无关。\n\n### 线性变换\n由$R^n$到$R^m$的一个变换(映射、函数)$T$，它将$R^n$中的每个向量$\\mathbf x$对应$R^m$中的一个向量$T(\\mathbf x)$，集$R^n$称为$T$的定义域，$R^m$称为$T$的语定义域。记作 $T:R^n \\to R^m$\n$R^m$中的向量$T(\\mathbf x)$称为$\\mathbf x$在$T$作用下的像。     \n若$T$为线性的，则它满足以下性质\n$$\n    T(c\\mathbf u+d\\mathbf v)=cT(\\mathbf u)+dT(\\mathbf v)\\\\\n    T(0)=0\\\\\n    T(c\\mathbf u)=cT(\\mathbf u)\\\\\n$$\n\n#### 线性变换中的矩阵\n从$R^n$到$R^m$的每一个线性变换，实际上都是一个矩阵变换$\\mathbf x\\mapsto A\\mathbf x$。\n$$\n    T(\\mathbf x)= A\\mathbf x\n$$\n\n## 定理和性质\n### 定理\n1. 简化阶梯形矩阵的唯一性：每个矩阵行等价于唯一的简化阶梯形矩阵\n2. 存在与唯一性定理：线性方程组相容的充要条件是增广矩阵的最右列不是主元列\n3. 若$A$是$m\\times n$矩阵，它的各列为$a_1,a_2,\\cdots,a_n$，而$b$属于$R^n$，则矩阵方程\n$$\n    A\\mathbf x=\\mathbf b\n$$\n与向量方程\n$$\n    x_1 \\mathbf a_1+x_2 \\mathbf a_2+\\cdots +x_n \\mathbf a_n =\\mathbf b\n$$\n有相同的解集，它有与增广矩阵为\n$$\n    [\\mathbf a_1,\\mathbf a_2,\\cdots,\\mathbf a_n,\\mathbf b]\n$$\n的线性方程组有相同的解集\n\n4. 设$A$是$m\\times n$矩阵(系数矩阵)，则下列命题是逻辑上等价的，也就是说，对于某个A，它们都成立或都不成立\n    - 对于$R^n$中的每个$b$，方程$Ax=b$都有解\n    - $R^n$中的每个$b$都是$A$的列的一个线性组合\n    - $A$的各列生成$R^m$\n    - $A$在每一行都有一个主元位置\n5. 若$A$是$m\\times n$矩阵，$\\mathbf u$和$\\mathbf v$是$R^n$的向量，$c$是标量，则\n$$\n    A(\\mathbf u+\\mathbf v)=A\\mathbf u + A\\mathbf v\\\\\n    A(c\\mathbf u)=c(A\\mathbf u)\n$$\n6. 设方程$A\\mathbf x=\\mathbf b$对某个$\\mathbf b$是相容的，$\\mathbf p$作为一个特解，则$A\\mathbf x=\\mathbf b$的解集是所有形如$\\mathbf w=\\mathbf p+\\mathbf v_h$的向量的集，其中，$\\mathbf v_h$ 是齐次方程$A\\mathbf x=0$的任意一个解。\n7. 线性相关集的特征：两个或更多个向量的集合$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性相关，当且仅当$S$中至少有一个向量是其他向量的线性组合。事实上，若$S$线性相关，且$\\mathbf v_1 \\neq 0$，则某个$\\mathbf v_j (j>1)$ 是它前面几个向量$\\mathbf v_1,\\cdots,\\mathbf v_{j-1}$的线性组合。\n8. 若一个向量组的向量个数超过每个向量元素个数，那么这个向量组线性相关，就是说，$R^n$中任意向量组$\\{\\mathbf v_1,\\cdots,v_n\\}$，当$p>n$时线性相关。\n9. 若向量组$S=\\{\\mathbf v_1,\\cdots,v_n\\}$包含零向量，则它线性相关。\n10. 设$T:R^n \\to R^m$线性变换，则存在唯一的矩阵$A$，使$T(\\mathbf x)=A\\mathbf x$，对$R^n$中一切$\\mathbf x$。事实上，$A$是$m\\times n$矩阵，它的第$j$列是向量$T(\\mathbf e_j)$，其中$\\mathbf e_j$是单位矩阵$I_n$的第$j$列：\n$$\n    A=[T(\\mathbf e_1) \\cdots T(\\mathbf e_n)]\n$$\n11. 设$T:R^n \\to R^m$为线性变换，则$T$是一对一当且仅当方程$A\\mathbf x=0$仅有平凡解。\n\n### 性质\n#### $R^n$中向量的代数性质\n* $\\mathbf u+\\mathbf v=\\mathbf v+\\mathbf u$\n* $(\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w)$\n* $\\mathbf u+0=0+\\mathbf u=\\mathbf u$\n* $\\mathbf u+(-\\mathbf u)=-\\mathbf u+\\mathbf u=0$\n* $c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v$\n* $(c+d)\\mathbf u=c\\mathbf u+d\\mathbf u$\n* $c(d\\mathbf u)=(cd)(\\mathbf u)$\n* $1\\mathbf u=\\mathbf y$\n","source":"_posts/Math-线性方程组－《线性代数及应用》.md","raw":"---\ntitle: 线性方程组－《线性代数及应用》\ndate: 2016-09-03 18:27:24\ntags: [Math, Linear Algebra, note]\ncategories: Math\n---\n> 加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$    \n> 不加粗小写字母代表标量也就是实数，例如$a,c$   \n> 大写字母代表矩阵，例如 $A,B$\n\n## 方程以及方程的解\n### 方程\n以下为同一方程组的不同表示形式\n#### 线性方程组\n$$\n    a_1 x_1 + a_2 x_2 +...+a_n x_n=b_1\\\\\n    c_1 x_1 + c_2 x_2 +...+c_n x_n=b_2\\\\\n            ...\n$$\n#### 增广矩阵\n$$\n    \\begin{matrix}\n    a_1 & a_2 & \\cdots & a_n & b_1\\\\\n    c_1 & c_2 & \\cdots & c_n & b_1\\\\\n    \\end{matrix}\n$$\n#### 向量方程\n$v_1 ,v_2 ,\\cdots,v_n$是$R^n$中的向量\n$$\n    x_1 \\mathbf v_1 + x_2 \\mathbf v_2 +\\cdots+ x_n \\mathbf v_n =\\mathbf b\n$$\n#### 矩阵方程\n$$\n    A\\mathbf x =\\mathbf b\n$$\n\n### 解集\n#### 阶梯形矩阵定义\n1. 每一个非零行在每一零行上\n2. 某一行的先导元素所在列位于前一行先导元素的右面\n3. 某一先导元素所在列下方元素都是零，若一个阶梯形矩阵还满足以下性质，称它为简化阶梯形\n4. 每一非零行的先导元素都是1\n5. 每一先导元素1是该元素所在列的唯一非零元素\n\n#### 齐次方程\n称$A\\mathbf x=0$的形式的方程为齐次方程。当该方程只有一个解时，即$\\mathbf x=0$，这个解称为平凡解。若齐次方程右多个解，称齐次方程有非平凡解。\n\n#### 解方程组的算法\n##### 行初等变换\n* 倍加变换：把某一行换成它本身与另外一行的倍数的和\n* 对换变换：把两行对换\n* 倍乘变换：把某一行的所有元素乘以同一个非零元素\n\n##### 行化简算法\n任何情况下，线性方程组、向量方程、矩阵方程都可用相同方法来解－行化简算法来化简增广矩阵。\n1. 由最左边的非零列开始，这是一个主元列，主元位置在该列顶端\n2. 在主元列中选取一个非零元作为主元。若有必要的话，可对换两行使这个元素移到主元位置上\n3. 用倍加行变换将主元下面的元素变成0\n4. 暂时不管包含主元位置的行以及它上面的各行，对剩下的子矩阵使用上述的三个步骤直到没有非零行需要处理为止。\n5. 由最右面的主元开始，把每个主元上方的各元素变成0，若某个主元不是1，用倍乘将其变为1\n\n##### 线性方程组的解\n1. 写出方程组的增广矩阵\n2. 应用行化简算法把增广矩阵化为阶梯形，确定方程组是否有解，如果没有解则停止；否则进行下一步\n3. 继续行化简算法得到它的简化阶梯形\n4. 写出由第3步所得矩阵所对应的方程组\n5. 把第4步所得的每个方程改写为用自由变量(假如有自由变量)表示基本变了的形式\n\n##### 参数向量形式的解集\n1. 把增广矩阵行化简为简化阶梯形\n2. 把每个基本变量用自由变量表示\n3. 把一般解$\\mathbf x$表示成向量，如果有自由变量，其元素依赖于自由变量\n4. 把$\\mathbf x$分解为向量的线性组合，用自由变量作为参数\n\n\n## 线性组合和线性变换\n### 线性组合\n给定$R^n$中向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$和标量$c_1,c_2,\\cdots,c_p$,向量\n$$\n    \\mathbf y=c_1\\mathbf v_1+\\cdots+c_p\\mathbf v_p\n$$\n称为向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$，以$c_1,c_2,\\cdots,c_p$为权的*线性组合*，其中所有向量$y$的集合用记号$Span\\{\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p\\}$表示。\n\n### 线性相关\n对于$R^n$中一组向量$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，若向量方程\n$$\n    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p=0\n$$\n仅有平凡解，则称向量组(集)$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性无关，否则称为线性相关。     \n由此可以推论出，当方程$A\\mathbf x=0$仅有平凡解时，矩阵$A$中各列线性无关。\n\n### 线性变换\n由$R^n$到$R^m$的一个变换(映射、函数)$T$，它将$R^n$中的每个向量$\\mathbf x$对应$R^m$中的一个向量$T(\\mathbf x)$，集$R^n$称为$T$的定义域，$R^m$称为$T$的语定义域。记作 $T:R^n \\to R^m$\n$R^m$中的向量$T(\\mathbf x)$称为$\\mathbf x$在$T$作用下的像。     \n若$T$为线性的，则它满足以下性质\n$$\n    T(c\\mathbf u+d\\mathbf v)=cT(\\mathbf u)+dT(\\mathbf v)\\\\\n    T(0)=0\\\\\n    T(c\\mathbf u)=cT(\\mathbf u)\\\\\n$$\n\n#### 线性变换中的矩阵\n从$R^n$到$R^m$的每一个线性变换，实际上都是一个矩阵变换$\\mathbf x\\mapsto A\\mathbf x$。\n$$\n    T(\\mathbf x)= A\\mathbf x\n$$\n\n## 定理和性质\n### 定理\n1. 简化阶梯形矩阵的唯一性：每个矩阵行等价于唯一的简化阶梯形矩阵\n2. 存在与唯一性定理：线性方程组相容的充要条件是增广矩阵的最右列不是主元列\n3. 若$A$是$m\\times n$矩阵，它的各列为$a_1,a_2,\\cdots,a_n$，而$b$属于$R^n$，则矩阵方程\n$$\n    A\\mathbf x=\\mathbf b\n$$\n与向量方程\n$$\n    x_1 \\mathbf a_1+x_2 \\mathbf a_2+\\cdots +x_n \\mathbf a_n =\\mathbf b\n$$\n有相同的解集，它有与增广矩阵为\n$$\n    [\\mathbf a_1,\\mathbf a_2,\\cdots,\\mathbf a_n,\\mathbf b]\n$$\n的线性方程组有相同的解集\n\n4. 设$A$是$m\\times n$矩阵(系数矩阵)，则下列命题是逻辑上等价的，也就是说，对于某个A，它们都成立或都不成立\n    - 对于$R^n$中的每个$b$，方程$Ax=b$都有解\n    - $R^n$中的每个$b$都是$A$的列的一个线性组合\n    - $A$的各列生成$R^m$\n    - $A$在每一行都有一个主元位置\n5. 若$A$是$m\\times n$矩阵，$\\mathbf u$和$\\mathbf v$是$R^n$的向量，$c$是标量，则\n$$\n    A(\\mathbf u+\\mathbf v)=A\\mathbf u + A\\mathbf v\\\\\n    A(c\\mathbf u)=c(A\\mathbf u)\n$$\n6. 设方程$A\\mathbf x=\\mathbf b$对某个$\\mathbf b$是相容的，$\\mathbf p$作为一个特解，则$A\\mathbf x=\\mathbf b$的解集是所有形如$\\mathbf w=\\mathbf p+\\mathbf v_h$的向量的集，其中，$\\mathbf v_h$ 是齐次方程$A\\mathbf x=0$的任意一个解。\n7. 线性相关集的特征：两个或更多个向量的集合$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性相关，当且仅当$S$中至少有一个向量是其他向量的线性组合。事实上，若$S$线性相关，且$\\mathbf v_1 \\neq 0$，则某个$\\mathbf v_j (j>1)$ 是它前面几个向量$\\mathbf v_1,\\cdots,\\mathbf v_{j-1}$的线性组合。\n8. 若一个向量组的向量个数超过每个向量元素个数，那么这个向量组线性相关，就是说，$R^n$中任意向量组$\\{\\mathbf v_1,\\cdots,v_n\\}$，当$p>n$时线性相关。\n9. 若向量组$S=\\{\\mathbf v_1,\\cdots,v_n\\}$包含零向量，则它线性相关。\n10. 设$T:R^n \\to R^m$线性变换，则存在唯一的矩阵$A$，使$T(\\mathbf x)=A\\mathbf x$，对$R^n$中一切$\\mathbf x$。事实上，$A$是$m\\times n$矩阵，它的第$j$列是向量$T(\\mathbf e_j)$，其中$\\mathbf e_j$是单位矩阵$I_n$的第$j$列：\n$$\n    A=[T(\\mathbf e_1) \\cdots T(\\mathbf e_n)]\n$$\n11. 设$T:R^n \\to R^m$为线性变换，则$T$是一对一当且仅当方程$A\\mathbf x=0$仅有平凡解。\n\n### 性质\n#### $R^n$中向量的代数性质\n* $\\mathbf u+\\mathbf v=\\mathbf v+\\mathbf u$\n* $(\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w)$\n* $\\mathbf u+0=0+\\mathbf u=\\mathbf u$\n* $\\mathbf u+(-\\mathbf u)=-\\mathbf u+\\mathbf u=0$\n* $c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v$\n* $(c+d)\\mathbf u=c\\mathbf u+d\\mathbf u$\n* $c(d\\mathbf u)=(cd)(\\mathbf u)$\n* $1\\mathbf u=\\mathbf y$\n","slug":"Math-线性方程组－《线性代数及应用》","published":1,"updated":"2016-09-12T15:00:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44c00149rui7fl86jct","content":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"方程以及方程的解\"><a href=\"#方程以及方程的解\" class=\"headerlink\" title=\"方程以及方程的解\"></a>方程以及方程的解</h2><h3 id=\"方程\"><a href=\"#方程\" class=\"headerlink\" title=\"方程\"></a>方程</h3><p>以下为同一方程组的不同表示形式</p>\n<h4 id=\"线性方程组\"><a href=\"#线性方程组\" class=\"headerlink\" title=\"线性方程组\"></a>线性方程组</h4><p>$$<br>    a_1 x_1 + a_2 x_2 +…+a_n x_n=b_1\\\\<br>    c_1 x_1 + c_2 x_2 +…+c_n x_n=b_2\\\\<br>            …<br>$$</p>\n<h4 id=\"增广矩阵\"><a href=\"#增广矩阵\" class=\"headerlink\" title=\"增广矩阵\"></a>增广矩阵</h4><p>$$<br>    \\begin{matrix}<br>    a_1 &amp; a_2 &amp; \\cdots &amp; a_n &amp; b_1\\\\<br>    c_1 &amp; c_2 &amp; \\cdots &amp; c_n &amp; b_1\\\\<br>    \\end{matrix}<br>$$</p>\n<h4 id=\"向量方程\"><a href=\"#向量方程\" class=\"headerlink\" title=\"向量方程\"></a>向量方程</h4><p>$v_1 ,v_2 ,\\cdots,v_n$是$R^n$中的向量<br>$$<br>    x_1 \\mathbf v_1 + x_2 \\mathbf v_2 +\\cdots+ x_n \\mathbf v_n =\\mathbf b<br>$$</p>\n<h4 id=\"矩阵方程\"><a href=\"#矩阵方程\" class=\"headerlink\" title=\"矩阵方程\"></a>矩阵方程</h4><p>$$<br>    A\\mathbf x =\\mathbf b<br>$$</p>\n<h3 id=\"解集\"><a href=\"#解集\" class=\"headerlink\" title=\"解集\"></a>解集</h3><h4 id=\"阶梯形矩阵定义\"><a href=\"#阶梯形矩阵定义\" class=\"headerlink\" title=\"阶梯形矩阵定义\"></a>阶梯形矩阵定义</h4><ol>\n<li>每一个非零行在每一零行上</li>\n<li>某一行的先导元素所在列位于前一行先导元素的右面</li>\n<li>某一先导元素所在列下方元素都是零，若一个阶梯形矩阵还满足以下性质，称它为简化阶梯形</li>\n<li>每一非零行的先导元素都是1</li>\n<li>每一先导元素1是该元素所在列的唯一非零元素</li>\n</ol>\n<h4 id=\"齐次方程\"><a href=\"#齐次方程\" class=\"headerlink\" title=\"齐次方程\"></a>齐次方程</h4><p>称$A\\mathbf x=0$的形式的方程为齐次方程。当该方程只有一个解时，即$\\mathbf x=0$，这个解称为平凡解。若齐次方程右多个解，称齐次方程有非平凡解。</p>\n<h4 id=\"解方程组的算法\"><a href=\"#解方程组的算法\" class=\"headerlink\" title=\"解方程组的算法\"></a>解方程组的算法</h4><h5 id=\"行初等变换\"><a href=\"#行初等变换\" class=\"headerlink\" title=\"行初等变换\"></a>行初等变换</h5><ul>\n<li>倍加变换：把某一行换成它本身与另外一行的倍数的和</li>\n<li>对换变换：把两行对换</li>\n<li>倍乘变换：把某一行的所有元素乘以同一个非零元素</li>\n</ul>\n<h5 id=\"行化简算法\"><a href=\"#行化简算法\" class=\"headerlink\" title=\"行化简算法\"></a>行化简算法</h5><p>任何情况下，线性方程组、向量方程、矩阵方程都可用相同方法来解－行化简算法来化简增广矩阵。</p>\n<ol>\n<li>由最左边的非零列开始，这是一个主元列，主元位置在该列顶端</li>\n<li>在主元列中选取一个非零元作为主元。若有必要的话，可对换两行使这个元素移到主元位置上</li>\n<li>用倍加行变换将主元下面的元素变成0</li>\n<li>暂时不管包含主元位置的行以及它上面的各行，对剩下的子矩阵使用上述的三个步骤直到没有非零行需要处理为止。</li>\n<li>由最右面的主元开始，把每个主元上方的各元素变成0，若某个主元不是1，用倍乘将其变为1</li>\n</ol>\n<h5 id=\"线性方程组的解\"><a href=\"#线性方程组的解\" class=\"headerlink\" title=\"线性方程组的解\"></a>线性方程组的解</h5><ol>\n<li>写出方程组的增广矩阵</li>\n<li>应用行化简算法把增广矩阵化为阶梯形，确定方程组是否有解，如果没有解则停止；否则进行下一步</li>\n<li>继续行化简算法得到它的简化阶梯形</li>\n<li>写出由第3步所得矩阵所对应的方程组</li>\n<li>把第4步所得的每个方程改写为用自由变量(假如有自由变量)表示基本变了的形式</li>\n</ol>\n<h5 id=\"参数向量形式的解集\"><a href=\"#参数向量形式的解集\" class=\"headerlink\" title=\"参数向量形式的解集\"></a>参数向量形式的解集</h5><ol>\n<li>把增广矩阵行化简为简化阶梯形</li>\n<li>把每个基本变量用自由变量表示</li>\n<li>把一般解$\\mathbf x$表示成向量，如果有自由变量，其元素依赖于自由变量</li>\n<li>把$\\mathbf x$分解为向量的线性组合，用自由变量作为参数</li>\n</ol>\n<h2 id=\"线性组合和线性变换\"><a href=\"#线性组合和线性变换\" class=\"headerlink\" title=\"线性组合和线性变换\"></a>线性组合和线性变换</h2><h3 id=\"线性组合\"><a href=\"#线性组合\" class=\"headerlink\" title=\"线性组合\"></a>线性组合</h3><p>给定$R^n$中向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$和标量$c_1,c_2,\\cdots,c_p$,向量<br>$$<br>    \\mathbf y=c_1\\mathbf v_1+\\cdots+c_p\\mathbf v_p<br>$$<br>称为向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$，以$c_1,c_2,\\cdots,c_p$为权的<em>线性组合</em>，其中所有向量$y$的集合用记号$Span\\{\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p\\}$表示。</p>\n<h3 id=\"线性相关\"><a href=\"#线性相关\" class=\"headerlink\" title=\"线性相关\"></a>线性相关</h3><p>对于$R^n$中一组向量$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，若向量方程<br>$$<br>    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p=0<br>$$<br>仅有平凡解，则称向量组(集)$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性无关，否则称为线性相关。<br>由此可以推论出，当方程$A\\mathbf x=0$仅有平凡解时，矩阵$A$中各列线性无关。</p>\n<h3 id=\"线性变换\"><a href=\"#线性变换\" class=\"headerlink\" title=\"线性变换\"></a>线性变换</h3><p>由$R^n$到$R^m$的一个变换(映射、函数)$T$，它将$R^n$中的每个向量$\\mathbf x$对应$R^m$中的一个向量$T(\\mathbf x)$，集$R^n$称为$T$的定义域，$R^m$称为$T$的语定义域。记作 $T:R^n \\to R^m$<br>$R^m$中的向量$T(\\mathbf x)$称为$\\mathbf x$在$T$作用下的像。<br>若$T$为线性的，则它满足以下性质<br>$$<br>    T(c\\mathbf u+d\\mathbf v)=cT(\\mathbf u)+dT(\\mathbf v)\\\\<br>    T(0)=0\\\\<br>    T(c\\mathbf u)=cT(\\mathbf u)\\\\<br>$$</p>\n<h4 id=\"线性变换中的矩阵\"><a href=\"#线性变换中的矩阵\" class=\"headerlink\" title=\"线性变换中的矩阵\"></a>线性变换中的矩阵</h4><p>从$R^n$到$R^m$的每一个线性变换，实际上都是一个矩阵变换$\\mathbf x\\mapsto A\\mathbf x$。<br>$$<br>    T(\\mathbf x)= A\\mathbf x<br>$$</p>\n<h2 id=\"定理和性质\"><a href=\"#定理和性质\" class=\"headerlink\" title=\"定理和性质\"></a>定理和性质</h2><h3 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h3><ol>\n<li>简化阶梯形矩阵的唯一性：每个矩阵行等价于唯一的简化阶梯形矩阵</li>\n<li>存在与唯一性定理：线性方程组相容的充要条件是增广矩阵的最右列不是主元列</li>\n<li><p>若$A$是$m\\times n$矩阵，它的各列为$a_1,a_2,\\cdots,a_n$，而$b$属于$R^n$，则矩阵方程<br>$$<br> A\\mathbf x=\\mathbf b<br>$$<br>与向量方程<br>$$<br> x_1 \\mathbf a_1+x_2 \\mathbf a_2+\\cdots +x_n \\mathbf a_n =\\mathbf b<br>$$<br>有相同的解集，它有与增广矩阵为<br>$$<br> [\\mathbf a_1,\\mathbf a_2,\\cdots,\\mathbf a_n,\\mathbf b]<br>$$<br>的线性方程组有相同的解集</p>\n</li>\n<li><p>设$A$是$m\\times n$矩阵(系数矩阵)，则下列命题是逻辑上等价的，也就是说，对于某个A，它们都成立或都不成立</p>\n<ul>\n<li>对于$R^n$中的每个$b$，方程$Ax=b$都有解</li>\n<li>$R^n$中的每个$b$都是$A$的列的一个线性组合</li>\n<li>$A$的各列生成$R^m$</li>\n<li>$A$在每一行都有一个主元位置</li>\n</ul>\n</li>\n<li>若$A$是$m\\times n$矩阵，$\\mathbf u$和$\\mathbf v$是$R^n$的向量，$c$是标量，则<br>$$<br> A(\\mathbf u+\\mathbf v)=A\\mathbf u + A\\mathbf v\\\\<br> A(c\\mathbf u)=c(A\\mathbf u)<br>$$</li>\n<li>设方程$A\\mathbf x=\\mathbf b$对某个$\\mathbf b$是相容的，$\\mathbf p$作为一个特解，则$A\\mathbf x=\\mathbf b$的解集是所有形如$\\mathbf w=\\mathbf p+\\mathbf v_h$的向量的集，其中，$\\mathbf v_h$ 是齐次方程$A\\mathbf x=0$的任意一个解。</li>\n<li>线性相关集的特征：两个或更多个向量的集合$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性相关，当且仅当$S$中至少有一个向量是其他向量的线性组合。事实上，若$S$线性相关，且$\\mathbf v_1 \\neq 0$，则某个$\\mathbf v_j (j&gt;1)$ 是它前面几个向量$\\mathbf v_1,\\cdots,\\mathbf v_{j-1}$的线性组合。</li>\n<li>若一个向量组的向量个数超过每个向量元素个数，那么这个向量组线性相关，就是说，$R^n$中任意向量组$\\{\\mathbf v_1,\\cdots,v_n\\}$，当$p&gt;n$时线性相关。</li>\n<li>若向量组$S=\\{\\mathbf v_1,\\cdots,v_n\\}$包含零向量，则它线性相关。</li>\n<li>设$T:R^n \\to R^m$线性变换，则存在唯一的矩阵$A$，使$T(\\mathbf x)=A\\mathbf x$，对$R^n$中一切$\\mathbf x$。事实上，$A$是$m\\times n$矩阵，它的第$j$列是向量$T(\\mathbf e_j)$，其中$\\mathbf e_j$是单位矩阵$I_n$的第$j$列：<br>$$<br>A=[T(\\mathbf e_1) \\cdots T(\\mathbf e_n)]<br>$$</li>\n<li>设$T:R^n \\to R^m$为线性变换，则$T$是一对一当且仅当方程$A\\mathbf x=0$仅有平凡解。</li>\n</ol>\n<h3 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h3><h4 id=\"R-n-中向量的代数性质\"><a href=\"#R-n-中向量的代数性质\" class=\"headerlink\" title=\"$R^n$中向量的代数性质\"></a>$R^n$中向量的代数性质</h4><ul>\n<li>$\\mathbf u+\\mathbf v=\\mathbf v+\\mathbf u$</li>\n<li>$(\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w)$</li>\n<li>$\\mathbf u+0=0+\\mathbf u=\\mathbf u$</li>\n<li>$\\mathbf u+(-\\mathbf u)=-\\mathbf u+\\mathbf u=0$</li>\n<li>$c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v$</li>\n<li>$(c+d)\\mathbf u=c\\mathbf u+d\\mathbf u$</li>\n<li>$c(d\\mathbf u)=(cd)(\\mathbf u)$</li>\n<li>$1\\mathbf u=\\mathbf y$</li>\n</ul>\n","excerpt":"","more":"<blockquote>\n<p>加粗小写字母代表向量，例如$\\mathbf u, \\mathbf v$<br>不加粗小写字母代表标量也就是实数，例如$a,c$<br>大写字母代表矩阵，例如 $A,B$</p>\n</blockquote>\n<h2 id=\"方程以及方程的解\"><a href=\"#方程以及方程的解\" class=\"headerlink\" title=\"方程以及方程的解\"></a>方程以及方程的解</h2><h3 id=\"方程\"><a href=\"#方程\" class=\"headerlink\" title=\"方程\"></a>方程</h3><p>以下为同一方程组的不同表示形式</p>\n<h4 id=\"线性方程组\"><a href=\"#线性方程组\" class=\"headerlink\" title=\"线性方程组\"></a>线性方程组</h4><p>$$<br>    a_1 x_1 + a_2 x_2 +…+a_n x_n=b_1\\\\<br>    c_1 x_1 + c_2 x_2 +…+c_n x_n=b_2\\\\<br>            …<br>$$</p>\n<h4 id=\"增广矩阵\"><a href=\"#增广矩阵\" class=\"headerlink\" title=\"增广矩阵\"></a>增广矩阵</h4><p>$$<br>    \\begin{matrix}<br>    a_1 &amp; a_2 &amp; \\cdots &amp; a_n &amp; b_1\\\\<br>    c_1 &amp; c_2 &amp; \\cdots &amp; c_n &amp; b_1\\\\<br>    \\end{matrix}<br>$$</p>\n<h4 id=\"向量方程\"><a href=\"#向量方程\" class=\"headerlink\" title=\"向量方程\"></a>向量方程</h4><p>$v_1 ,v_2 ,\\cdots,v_n$是$R^n$中的向量<br>$$<br>    x_1 \\mathbf v_1 + x_2 \\mathbf v_2 +\\cdots+ x_n \\mathbf v_n =\\mathbf b<br>$$</p>\n<h4 id=\"矩阵方程\"><a href=\"#矩阵方程\" class=\"headerlink\" title=\"矩阵方程\"></a>矩阵方程</h4><p>$$<br>    A\\mathbf x =\\mathbf b<br>$$</p>\n<h3 id=\"解集\"><a href=\"#解集\" class=\"headerlink\" title=\"解集\"></a>解集</h3><h4 id=\"阶梯形矩阵定义\"><a href=\"#阶梯形矩阵定义\" class=\"headerlink\" title=\"阶梯形矩阵定义\"></a>阶梯形矩阵定义</h4><ol>\n<li>每一个非零行在每一零行上</li>\n<li>某一行的先导元素所在列位于前一行先导元素的右面</li>\n<li>某一先导元素所在列下方元素都是零，若一个阶梯形矩阵还满足以下性质，称它为简化阶梯形</li>\n<li>每一非零行的先导元素都是1</li>\n<li>每一先导元素1是该元素所在列的唯一非零元素</li>\n</ol>\n<h4 id=\"齐次方程\"><a href=\"#齐次方程\" class=\"headerlink\" title=\"齐次方程\"></a>齐次方程</h4><p>称$A\\mathbf x=0$的形式的方程为齐次方程。当该方程只有一个解时，即$\\mathbf x=0$，这个解称为平凡解。若齐次方程右多个解，称齐次方程有非平凡解。</p>\n<h4 id=\"解方程组的算法\"><a href=\"#解方程组的算法\" class=\"headerlink\" title=\"解方程组的算法\"></a>解方程组的算法</h4><h5 id=\"行初等变换\"><a href=\"#行初等变换\" class=\"headerlink\" title=\"行初等变换\"></a>行初等变换</h5><ul>\n<li>倍加变换：把某一行换成它本身与另外一行的倍数的和</li>\n<li>对换变换：把两行对换</li>\n<li>倍乘变换：把某一行的所有元素乘以同一个非零元素</li>\n</ul>\n<h5 id=\"行化简算法\"><a href=\"#行化简算法\" class=\"headerlink\" title=\"行化简算法\"></a>行化简算法</h5><p>任何情况下，线性方程组、向量方程、矩阵方程都可用相同方法来解－行化简算法来化简增广矩阵。</p>\n<ol>\n<li>由最左边的非零列开始，这是一个主元列，主元位置在该列顶端</li>\n<li>在主元列中选取一个非零元作为主元。若有必要的话，可对换两行使这个元素移到主元位置上</li>\n<li>用倍加行变换将主元下面的元素变成0</li>\n<li>暂时不管包含主元位置的行以及它上面的各行，对剩下的子矩阵使用上述的三个步骤直到没有非零行需要处理为止。</li>\n<li>由最右面的主元开始，把每个主元上方的各元素变成0，若某个主元不是1，用倍乘将其变为1</li>\n</ol>\n<h5 id=\"线性方程组的解\"><a href=\"#线性方程组的解\" class=\"headerlink\" title=\"线性方程组的解\"></a>线性方程组的解</h5><ol>\n<li>写出方程组的增广矩阵</li>\n<li>应用行化简算法把增广矩阵化为阶梯形，确定方程组是否有解，如果没有解则停止；否则进行下一步</li>\n<li>继续行化简算法得到它的简化阶梯形</li>\n<li>写出由第3步所得矩阵所对应的方程组</li>\n<li>把第4步所得的每个方程改写为用自由变量(假如有自由变量)表示基本变了的形式</li>\n</ol>\n<h5 id=\"参数向量形式的解集\"><a href=\"#参数向量形式的解集\" class=\"headerlink\" title=\"参数向量形式的解集\"></a>参数向量形式的解集</h5><ol>\n<li>把增广矩阵行化简为简化阶梯形</li>\n<li>把每个基本变量用自由变量表示</li>\n<li>把一般解$\\mathbf x$表示成向量，如果有自由变量，其元素依赖于自由变量</li>\n<li>把$\\mathbf x$分解为向量的线性组合，用自由变量作为参数</li>\n</ol>\n<h2 id=\"线性组合和线性变换\"><a href=\"#线性组合和线性变换\" class=\"headerlink\" title=\"线性组合和线性变换\"></a>线性组合和线性变换</h2><h3 id=\"线性组合\"><a href=\"#线性组合\" class=\"headerlink\" title=\"线性组合\"></a>线性组合</h3><p>给定$R^n$中向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$和标量$c_1,c_2,\\cdots,c_p$,向量<br>$$<br>    \\mathbf y=c_1\\mathbf v_1+\\cdots+c_p\\mathbf v_p<br>$$<br>称为向量$\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p$，以$c_1,c_2,\\cdots,c_p$为权的<em>线性组合</em>，其中所有向量$y$的集合用记号$Span\\{\\mathbf v_1,\\mathbf v_2,\\cdots,\\mathbf v_p\\}$表示。</p>\n<h3 id=\"线性相关\"><a href=\"#线性相关\" class=\"headerlink\" title=\"线性相关\"></a>线性相关</h3><p>对于$R^n$中一组向量$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$，若向量方程<br>$$<br>    c_1\\mathbf v_1+c_2\\mathbf v_2+\\cdots+c_p\\mathbf v_p=0<br>$$<br>仅有平凡解，则称向量组(集)$\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性无关，否则称为线性相关。<br>由此可以推论出，当方程$A\\mathbf x=0$仅有平凡解时，矩阵$A$中各列线性无关。</p>\n<h3 id=\"线性变换\"><a href=\"#线性变换\" class=\"headerlink\" title=\"线性变换\"></a>线性变换</h3><p>由$R^n$到$R^m$的一个变换(映射、函数)$T$，它将$R^n$中的每个向量$\\mathbf x$对应$R^m$中的一个向量$T(\\mathbf x)$，集$R^n$称为$T$的定义域，$R^m$称为$T$的语定义域。记作 $T:R^n \\to R^m$<br>$R^m$中的向量$T(\\mathbf x)$称为$\\mathbf x$在$T$作用下的像。<br>若$T$为线性的，则它满足以下性质<br>$$<br>    T(c\\mathbf u+d\\mathbf v)=cT(\\mathbf u)+dT(\\mathbf v)\\\\<br>    T(0)=0\\\\<br>    T(c\\mathbf u)=cT(\\mathbf u)\\\\<br>$$</p>\n<h4 id=\"线性变换中的矩阵\"><a href=\"#线性变换中的矩阵\" class=\"headerlink\" title=\"线性变换中的矩阵\"></a>线性变换中的矩阵</h4><p>从$R^n$到$R^m$的每一个线性变换，实际上都是一个矩阵变换$\\mathbf x\\mapsto A\\mathbf x$。<br>$$<br>    T(\\mathbf x)= A\\mathbf x<br>$$</p>\n<h2 id=\"定理和性质\"><a href=\"#定理和性质\" class=\"headerlink\" title=\"定理和性质\"></a>定理和性质</h2><h3 id=\"定理\"><a href=\"#定理\" class=\"headerlink\" title=\"定理\"></a>定理</h3><ol>\n<li>简化阶梯形矩阵的唯一性：每个矩阵行等价于唯一的简化阶梯形矩阵</li>\n<li>存在与唯一性定理：线性方程组相容的充要条件是增广矩阵的最右列不是主元列</li>\n<li><p>若$A$是$m\\times n$矩阵，它的各列为$a_1,a_2,\\cdots,a_n$，而$b$属于$R^n$，则矩阵方程<br>$$<br> A\\mathbf x=\\mathbf b<br>$$<br>与向量方程<br>$$<br> x_1 \\mathbf a_1+x_2 \\mathbf a_2+\\cdots +x_n \\mathbf a_n =\\mathbf b<br>$$<br>有相同的解集，它有与增广矩阵为<br>$$<br> [\\mathbf a_1,\\mathbf a_2,\\cdots,\\mathbf a_n,\\mathbf b]<br>$$<br>的线性方程组有相同的解集</p>\n</li>\n<li><p>设$A$是$m\\times n$矩阵(系数矩阵)，则下列命题是逻辑上等价的，也就是说，对于某个A，它们都成立或都不成立</p>\n<ul>\n<li>对于$R^n$中的每个$b$，方程$Ax=b$都有解</li>\n<li>$R^n$中的每个$b$都是$A$的列的一个线性组合</li>\n<li>$A$的各列生成$R^m$</li>\n<li>$A$在每一行都有一个主元位置</li>\n</ul>\n</li>\n<li>若$A$是$m\\times n$矩阵，$\\mathbf u$和$\\mathbf v$是$R^n$的向量，$c$是标量，则<br>$$<br> A(\\mathbf u+\\mathbf v)=A\\mathbf u + A\\mathbf v\\\\<br> A(c\\mathbf u)=c(A\\mathbf u)<br>$$</li>\n<li>设方程$A\\mathbf x=\\mathbf b$对某个$\\mathbf b$是相容的，$\\mathbf p$作为一个特解，则$A\\mathbf x=\\mathbf b$的解集是所有形如$\\mathbf w=\\mathbf p+\\mathbf v_h$的向量的集，其中，$\\mathbf v_h$ 是齐次方程$A\\mathbf x=0$的任意一个解。</li>\n<li>线性相关集的特征：两个或更多个向量的集合$S=\\{\\mathbf v_1,\\cdots,\\mathbf v_p\\}$线性相关，当且仅当$S$中至少有一个向量是其他向量的线性组合。事实上，若$S$线性相关，且$\\mathbf v_1 \\neq 0$，则某个$\\mathbf v_j (j&gt;1)$ 是它前面几个向量$\\mathbf v_1,\\cdots,\\mathbf v_{j-1}$的线性组合。</li>\n<li>若一个向量组的向量个数超过每个向量元素个数，那么这个向量组线性相关，就是说，$R^n$中任意向量组$\\{\\mathbf v_1,\\cdots,v_n\\}$，当$p&gt;n$时线性相关。</li>\n<li>若向量组$S=\\{\\mathbf v_1,\\cdots,v_n\\}$包含零向量，则它线性相关。</li>\n<li>设$T:R^n \\to R^m$线性变换，则存在唯一的矩阵$A$，使$T(\\mathbf x)=A\\mathbf x$，对$R^n$中一切$\\mathbf x$。事实上，$A$是$m\\times n$矩阵，它的第$j$列是向量$T(\\mathbf e_j)$，其中$\\mathbf e_j$是单位矩阵$I_n$的第$j$列：<br>$$<br>A=[T(\\mathbf e_1) \\cdots T(\\mathbf e_n)]<br>$$</li>\n<li>设$T:R^n \\to R^m$为线性变换，则$T$是一对一当且仅当方程$A\\mathbf x=0$仅有平凡解。</li>\n</ol>\n<h3 id=\"性质\"><a href=\"#性质\" class=\"headerlink\" title=\"性质\"></a>性质</h3><h4 id=\"R-n-中向量的代数性质\"><a href=\"#R-n-中向量的代数性质\" class=\"headerlink\" title=\"$R^n$中向量的代数性质\"></a>$R^n$中向量的代数性质</h4><ul>\n<li>$\\mathbf u+\\mathbf v=\\mathbf v+\\mathbf u$</li>\n<li>$(\\mathbf u+\\mathbf v)+\\mathbf w=\\mathbf u+(\\mathbf v+\\mathbf w)$</li>\n<li>$\\mathbf u+0=0+\\mathbf u=\\mathbf u$</li>\n<li>$\\mathbf u+(-\\mathbf u)=-\\mathbf u+\\mathbf u=0$</li>\n<li>$c(\\mathbf u+\\mathbf v)=c\\mathbf u+c\\mathbf v$</li>\n<li>$(c+d)\\mathbf u=c\\mathbf u+d\\mathbf u$</li>\n<li>$c(d\\mathbf u)=(cd)(\\mathbf u)$</li>\n<li>$1\\mathbf u=\\mathbf y$</li>\n</ul>\n"},{"title":"集合-函数-数列","date":"2016-10-02T14:32:10.000Z","updated":"2016-10-05T01:10:00.000Z","_content":"## 集合\n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n* 有序$n$元祖，是由$n$个元素构成的有序组。\n* 笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}\n$$\n* $∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写\n* $∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写\n\n### 集合运算\n* 并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$\n* 交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$\n* 如果两集合的交集为空集，就说它们不相交\n* 差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$\n* 令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n\n## 函数\n### 几个重要的函数\n* 下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示\n* 上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示\n* 下取整函数又称最大整数函数，又用$［x］$表示\n\n#### 下取整函数和上取整函数性质\n> n 表示整数\n\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n## 序列\n* 序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。\n* 有穷序列也被称作串，空串用$\\lambda$表示。\n* 几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。\n$$\na, ar, ar^2, \\cdots ,ar^n, \\cdots\n$$\n* 等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。\n$$\n    a, a+d, a+2d, \\cdots , a+nd, \\cdots\n$$\n\n### 找出序列规则的技巧\n* 是否有相同的值连续出现\n* 是否给前项加上常量或者与序列中位置相关的量就得到后项\n* 是否给前项乘以特定的量就能得到后项\n* 是否按照某种方式组合前项就能得到后项\n* 是否各项之间存在某种循环\n\n### 序列求和公式\n#### 几何序列求和\n$$\\sum_{j=0}^n ar^j = \\begin{cases}\n{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\\\[2ex]\n(n+1)a 若 r=1\n\\end{cases}\n$$\n\n#### 其他求和公式\n|和|闭形式|和|闭形式|\n|:-|:---|:-|:----|\n|$$\\sum_{k=0}^n ar^k(r\\neq 0)$$|$${ar^{n+1}-a\\over r-1},r\\neq 1$$|$$\\sum_{k=1}^n k^3$$|$$n^2(n+1)^2\\over 4$$|\n|$$\\sum_{k=1}^n k$$|$$n(n+1)\\over 2$$|$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$|$$1\\over 1-x$$|\n|$$\\sum_{k=1}^n k^2$$|$$n(n+1)(2n+1)\\over 6$$|$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$|$$1\\over (1-x)^2$$|\n\n### 基数\n* 集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应\n* 有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。\n* 如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。\n\n\n\n\n\n","source":"_posts/Math-集合-函数-数列.md","raw":"---\ntitle: 集合-函数-数列\ndate: 2016-10-02 22:32:10\nupdated: 2016-10-05 9:10:00\ntags: [Discrete Mathematics, Math, note]\ncategories: [Math]\n---\n## 集合\n### 集合概述\n* 集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$\n* 集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$\n* 集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$\n* 幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示\n    - 如果集合有$n$个元素，那么幂集合的个数为$2^n$个\n* 有序$n$元祖，是由$n$个元素构成的有序组。\n* 笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$\n$$\n    A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}\n$$\n* $∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写\n* $∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写\n\n### 集合运算\n* 并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$\n* 交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$\n* 如果两集合的交集为空集，就说它们不相交\n* 差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$\n* 令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$\n\n#### 集合恒等式\n|等式|名称|\n|:--|:--|\n|$A∪\\varnothing=A$ <br>$A\\cap U=A$|恒等律|\n|$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$|支配律|\n|$A\\cup A=A$<br>$A\\cap A=A$|幂等律|\n|$\\overline {(\\bar A)}=A$|补集律|\n|$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$|交换律|\n|$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$|结合律|\n|$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$|分配律|\n|$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$|德摩根定律|\n|$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$|吸收律|\n|$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$|补集|\n\n#### 扩展的交集和并集\n* 一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合  \n$$\n    A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i\n$$\n* 一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合\n$$\n    A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i\n$$\n\n## 函数\n### 几个重要的函数\n* 下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示\n* 上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示\n* 下取整函数又称最大整数函数，又用$［x］$表示\n\n#### 下取整函数和上取整函数性质\n> n 表示整数\n\n* $⎣x⎦=n $当且仅当$n\\le x\\lt n+1$\n* $⎣x⎦=n $当且仅当$x-1\\lt n\\le x$\n* $⎡x⎤=n $当且仅当$n-1\\lt x\\le n$\n* $⎡x⎤=n $当且仅当$x\\le n\\lt x+1$\n* $x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$\n* $⎣-x⎦=-⎡x⎤$\n* $⎡x⎤=-⎣-x⎦$\n* $⎣x+n⎦=⎣x⎦+n$\n* $⎡x+n⎤=⎡x⎤+n$\n\n## 序列\n* 序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。\n* 有穷序列也被称作串，空串用$\\lambda$表示。\n* 几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。\n$$\na, ar, ar^2, \\cdots ,ar^n, \\cdots\n$$\n* 等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。\n$$\n    a, a+d, a+2d, \\cdots , a+nd, \\cdots\n$$\n\n### 找出序列规则的技巧\n* 是否有相同的值连续出现\n* 是否给前项加上常量或者与序列中位置相关的量就得到后项\n* 是否给前项乘以特定的量就能得到后项\n* 是否按照某种方式组合前项就能得到后项\n* 是否各项之间存在某种循环\n\n### 序列求和公式\n#### 几何序列求和\n$$\\sum_{j=0}^n ar^j = \\begin{cases}\n{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\\\[2ex]\n(n+1)a 若 r=1\n\\end{cases}\n$$\n\n#### 其他求和公式\n|和|闭形式|和|闭形式|\n|:-|:---|:-|:----|\n|$$\\sum_{k=0}^n ar^k(r\\neq 0)$$|$${ar^{n+1}-a\\over r-1},r\\neq 1$$|$$\\sum_{k=1}^n k^3$$|$$n^2(n+1)^2\\over 4$$|\n|$$\\sum_{k=1}^n k$$|$$n(n+1)\\over 2$$|$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$|$$1\\over 1-x$$|\n|$$\\sum_{k=1}^n k^2$$|$$n(n+1)(2n+1)\\over 6$$|$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$|$$1\\over (1-x)^2$$|\n\n### 基数\n* 集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应\n* 有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。\n* 如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。\n\n\n\n\n\n","slug":"Math-集合-函数-数列","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44e00189ruihd0s7hpo","content":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n<li>有序$n$元祖，是由$n$个元素构成的有序组。</li>\n<li>笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>  A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}<br>$$</li>\n<li>$∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写</li>\n<li>$∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写</li>\n</ul>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><ul>\n<li>并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$</li>\n<li>交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$</li>\n<li>如果两集合的交集为空集，就说它们不相交</li>\n<li>差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$</li>\n<li>令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$</li>\n</ul>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td style=\"text-align:left\">恒等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td style=\"text-align:left\">支配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td style=\"text-align:left\">幂等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline {(\\bar A)}=A$</td>\n<td style=\"text-align:left\">补集律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td style=\"text-align:left\">交换律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td style=\"text-align:left\">结合律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td style=\"text-align:left\">分配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td style=\"text-align:left\">德摩根定律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td style=\"text-align:left\">吸收律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td style=\"text-align:left\">补集</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"几个重要的函数\"><a href=\"#几个重要的函数\" class=\"headerlink\" title=\"几个重要的函数\"></a>几个重要的函数</h3><ul>\n<li>下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示</li>\n<li>上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示</li>\n<li>下取整函数又称最大整数函数，又用$［x］$表示</li>\n</ul>\n<h4 id=\"下取整函数和上取整函数性质\"><a href=\"#下取整函数和上取整函数性质\" class=\"headerlink\" title=\"下取整函数和上取整函数性质\"></a>下取整函数和上取整函数性质</h4><blockquote>\n<p>n 表示整数</p>\n</blockquote>\n<ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<h2 id=\"序列\"><a href=\"#序列\" class=\"headerlink\" title=\"序列\"></a>序列</h2><ul>\n<li>序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。</li>\n<li>有穷序列也被称作串，空串用$\\lambda$表示。</li>\n<li>几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。<br>$$<br>a, ar, ar^2, \\cdots ,ar^n, \\cdots<br>$$</li>\n<li>等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。<br>$$<br>  a, a+d, a+2d, \\cdots , a+nd, \\cdots<br>$$</li>\n</ul>\n<h3 id=\"找出序列规则的技巧\"><a href=\"#找出序列规则的技巧\" class=\"headerlink\" title=\"找出序列规则的技巧\"></a>找出序列规则的技巧</h3><ul>\n<li>是否有相同的值连续出现</li>\n<li>是否给前项加上常量或者与序列中位置相关的量就得到后项</li>\n<li>是否给前项乘以特定的量就能得到后项</li>\n<li>是否按照某种方式组合前项就能得到后项</li>\n<li>是否各项之间存在某种循环</li>\n</ul>\n<h3 id=\"序列求和公式\"><a href=\"#序列求和公式\" class=\"headerlink\" title=\"序列求和公式\"></a>序列求和公式</h3><h4 id=\"几何序列求和\"><a href=\"#几何序列求和\" class=\"headerlink\" title=\"几何序列求和\"></a>几何序列求和</h4><p>$$\\sum_{j=0}^n ar^j = \\begin{cases}<br>{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\[2ex]<br>(n+1)a 若 r=1<br>\\end{cases}<br>$$</p>\n<h4 id=\"其他求和公式\"><a href=\"#其他求和公式\" class=\"headerlink\" title=\"其他求和公式\"></a>其他求和公式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">和</th>\n<th style=\"text-align:left\">闭形式</th>\n<th style=\"text-align:left\">和</th>\n<th style=\"text-align:left\">闭形式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=0}^n ar^k(r\\neq 0)$$</td>\n<td style=\"text-align:left\">$${ar^{n+1}-a\\over r-1},r\\neq 1$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k^3$$</td>\n<td style=\"text-align:left\">$$n^2(n+1)^2\\over 4$$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k$$</td>\n<td style=\"text-align:left\">$$n(n+1)\\over 2$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$</td>\n<td style=\"text-align:left\">$$1\\over 1-x$$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k^2$$</td>\n<td style=\"text-align:left\">$$n(n+1)(2n+1)\\over 6$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$</td>\n<td style=\"text-align:left\">$$1\\over (1-x)^2$$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基数\"><a href=\"#基数\" class=\"headerlink\" title=\"基数\"></a>基数</h3><ul>\n<li>集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应</li>\n<li>有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。</li>\n<li>如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><h3 id=\"集合概述\"><a href=\"#集合概述\" class=\"headerlink\" title=\"集合概述\"></a>集合概述</h3><ul>\n<li>集合$A$等于集合$B$当且仅当$∀x(x\\in A↔︎x\\in B)$</li>\n<li>集合$A$是集合$B$的子集当且仅当$∀x(x\\in A→x\\in B)$</li>\n<li>集合$A$是集合$B$的真子集当且仅当$∀x(x\\in A→x\\in B)∧∃x(x∈B∧x∉A)$</li>\n<li>幂集合：幂集合是集合$S$所有子集的集合，包含空集合集合$S$本身，用$P(S)$表示<ul>\n<li>如果集合有$n$个元素，那么幂集合的个数为$2^n$个</li>\n</ul>\n</li>\n<li>有序$n$元祖，是由$n$个元素构成的有序组。</li>\n<li>笛卡儿积：集合$A_1,A_2,\\dots,A_n$的笛卡儿积用$A_1\\times A_2\\times \\dots \\times A_n$表示，这是有序$n$元组$(a_1,a_2,\\dots,a_n)$的集合，其中对于$i=1,2,\\dots,n, a_i∈A$<br>$$<br>  A_1\\times A_2\\times \\dots \\times A_n = {(a_1,a_2,\\dots ,a_n)|a_i∈A,i=1,2,\\dots,n}<br>$$</li>\n<li>$∀x∈S(P(x))$是$∀x(x∈S→P(x))$的简写</li>\n<li>$∃x∈S(P(x))$是$∃x(x∈S∧P(x))$的简写</li>\n</ul>\n<h3 id=\"集合运算\"><a href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"></a>集合运算</h3><ul>\n<li>并集：$A\\cup B=\\{x\\mid x\\in A∨x\\in B\\}$</li>\n<li>交集：$A\\cap B=\\{x\\mid x\\in A∧x\\in B\\}$</li>\n<li>如果两集合的交集为空集，就说它们不相交</li>\n<li>差集：$A$与$B$的差集也称$B$对于$A$的补集，$A-B=\\{x\\mid x\\in A∧x\\notin B\\}$</li>\n<li>令$U$为全集，集合$A$的补集用$\\bar A$表示，这是$A$对$U$的补集，$\\bar A=\\{x\\mid x\\notin A\\}$</li>\n</ul>\n<h4 id=\"集合恒等式\"><a href=\"#集合恒等式\" class=\"headerlink\" title=\"集合恒等式\"></a>集合恒等式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">等式</th>\n<th style=\"text-align:left\">名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$A∪\\varnothing=A$ <br>$A\\cap U=A$</td>\n<td style=\"text-align:left\">恒等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup U=U$<br>$A\\cap \\varnothing=\\varnothing$</td>\n<td style=\"text-align:left\">支配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup A=A$<br>$A\\cap A=A$</td>\n<td style=\"text-align:left\">幂等律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline {(\\bar A)}=A$</td>\n<td style=\"text-align:left\">补集律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup B=B\\cup A$<br>$A\\cap B=B\\cap A$</td>\n<td style=\"text-align:left\">交换律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup (B\\cup C)=(A\\cup B)\\cup C$<br>$A\\cap(B\\cap C)=(A\\cap B)\\cap C$</td>\n<td style=\"text-align:left\">结合律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(B\\cap C)=(A\\cup B)\\cap(A\\cup C)$<br>$A\\cap(B\\cup C)=(A\\cap B)\\cup(A\\cap C)$</td>\n<td style=\"text-align:left\">分配律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$\\overline{A\\cup B}=\\bar A\\cap \\bar B$<br>$\\overline{A\\cap B}=\\bar A\\cup \\bar B$</td>\n<td style=\"text-align:left\">德摩根定律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup(A\\cap B)=A$<br>$A\\cap(A\\cup B)=A$</td>\n<td style=\"text-align:left\">吸收律</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$A\\cup \\bar A=U$<br>$A\\cap \\bar A=\\varnothing$</td>\n<td style=\"text-align:left\">补集</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"扩展的交集和并集\"><a href=\"#扩展的交集和并集\" class=\"headerlink\" title=\"扩展的交集和并集\"></a>扩展的交集和并集</h4><ul>\n<li>一组集合的并集是包含哪些至少是这组集合中一个集合成员的元素的集合<br>$$<br>  A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i<br>$$</li>\n<li>一组集合的交集是包含哪些属于这组集合中所有成员集合的元素的集合<br>$$<br>  A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i<br>$$</li>\n</ul>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><h3 id=\"几个重要的函数\"><a href=\"#几个重要的函数\" class=\"headerlink\" title=\"几个重要的函数\"></a>几个重要的函数</h3><ul>\n<li>下取整函数：把$x$下舍入到小于或等于$x$又最接近$x$的整数，$x$的值用$⎡x⎤$表示</li>\n<li>上取整函数：把$x$上舍入到大于或等于$x$又最接近$x$的整数，$x$的值用$⎣x⎦$表示</li>\n<li>下取整函数又称最大整数函数，又用$［x］$表示</li>\n</ul>\n<h4 id=\"下取整函数和上取整函数性质\"><a href=\"#下取整函数和上取整函数性质\" class=\"headerlink\" title=\"下取整函数和上取整函数性质\"></a>下取整函数和上取整函数性质</h4><blockquote>\n<p>n 表示整数</p>\n</blockquote>\n<ul>\n<li>$⎣x⎦=n $当且仅当$n\\le x\\lt n+1$</li>\n<li>$⎣x⎦=n $当且仅当$x-1\\lt n\\le x$</li>\n<li>$⎡x⎤=n $当且仅当$n-1\\lt x\\le n$</li>\n<li>$⎡x⎤=n $当且仅当$x\\le n\\lt x+1$</li>\n<li>$x-1\\lt ⎣x⎦\\le x\\le ⎡x⎤\\lt x+1$</li>\n<li>$⎣-x⎦=-⎡x⎤$</li>\n<li>$⎡x⎤=-⎣-x⎦$</li>\n<li>$⎣x+n⎦=⎣x⎦+n$</li>\n<li>$⎡x+n⎤=⎡x⎤+n$</li>\n</ul>\n<h2 id=\"序列\"><a href=\"#序列\" class=\"headerlink\" title=\"序列\"></a>序列</h2><ul>\n<li>序列：序列是从整数集合的子集(通常是$\\{0,1,2,\\dots \\}$或$\\{1,2,3,\\dots \\}$)到集合$S$的函数。用记号$a_n$表示整数$n$的像，称$a_n$为序列的一个项。</li>\n<li>有穷序列也被称作串，空串用$\\lambda$表示。</li>\n<li>几何序列：是如下形式的序列，即指数函数$f(x)=ar^x$离散对应物，初项$a$和公比$r$都是实数。<br>$$<br>a, ar, ar^2, \\cdots ,ar^n, \\cdots<br>$$</li>\n<li>等差数列：是如下形式的序列，即线性函数$f(x)=dx+a$的离散对应物，初项$a$和公差$d$都是实数。<br>$$<br>  a, a+d, a+2d, \\cdots , a+nd, \\cdots<br>$$</li>\n</ul>\n<h3 id=\"找出序列规则的技巧\"><a href=\"#找出序列规则的技巧\" class=\"headerlink\" title=\"找出序列规则的技巧\"></a>找出序列规则的技巧</h3><ul>\n<li>是否有相同的值连续出现</li>\n<li>是否给前项加上常量或者与序列中位置相关的量就得到后项</li>\n<li>是否给前项乘以特定的量就能得到后项</li>\n<li>是否按照某种方式组合前项就能得到后项</li>\n<li>是否各项之间存在某种循环</li>\n</ul>\n<h3 id=\"序列求和公式\"><a href=\"#序列求和公式\" class=\"headerlink\" title=\"序列求和公式\"></a>序列求和公式</h3><h4 id=\"几何序列求和\"><a href=\"#几何序列求和\" class=\"headerlink\" title=\"几何序列求和\"></a>几何序列求和</h4><p>$$\\sum_{j=0}^n ar^j = \\begin{cases}<br>{ar^{n+1}-a\\over {r-1}} 若r\\neq 1 \\[2ex]<br>(n+1)a 若 r=1<br>\\end{cases}<br>$$</p>\n<h4 id=\"其他求和公式\"><a href=\"#其他求和公式\" class=\"headerlink\" title=\"其他求和公式\"></a>其他求和公式</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">和</th>\n<th style=\"text-align:left\">闭形式</th>\n<th style=\"text-align:left\">和</th>\n<th style=\"text-align:left\">闭形式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=0}^n ar^k(r\\neq 0)$$</td>\n<td style=\"text-align:left\">$${ar^{n+1}-a\\over r-1},r\\neq 1$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k^3$$</td>\n<td style=\"text-align:left\">$$n^2(n+1)^2\\over 4$$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k$$</td>\n<td style=\"text-align:left\">$$n(n+1)\\over 2$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=0}^\\infty x^k, \\mid x\\mid\\lt 1$$</td>\n<td style=\"text-align:left\">$$1\\over 1-x$$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$$\\sum_{k=1}^n k^2$$</td>\n<td style=\"text-align:left\">$$n(n+1)(2n+1)\\over 6$$</td>\n<td style=\"text-align:left\">$$\\sum_{k=1}^\\infty kx^{k-1}, \\mid x\\mid\\lt 1$$</td>\n<td style=\"text-align:left\">$$1\\over (1-x)^2$$</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基数\"><a href=\"#基数\" class=\"headerlink\" title=\"基数\"></a>基数</h3><ul>\n<li>集合$A$与集合$B$有相同的基数，当且仅当存在从$A$到$B$的一一对应</li>\n<li>有限集或与自然数集基数相同的无限集称为可数的，反之称为不可数的。</li>\n<li>如果无穷集合$S$是可数的，我们用符号$\\aleph_0$来表示集合$S$的基数。记作$\\mid S\\mid=\\aleph_0$，且说$S$有基数希伯来零。</li>\n</ul>\n"},{"title":"MathJax tutorial","date":"2016-09-11T12:04:07.000Z","_content":"## 字符\n### 希腊字母\n|$\\alpha$|$\\beta$|$\\gamma$|$\\delta$|$\\epsilon$|$\\zeta$|$\\eta$|$\\theta$|\n|:------:|:-----:|:------:|:------:|:--------:|:-----:|:----:|:------:|\n|\\alpha|\\beta|\\gamma|\\delta|\\epsilon|\\zeta|\\eta|\\theta|\n|$\\iota$|$\\kappa$|$\\lambda$|$\\mu$|$\\nu$|$\\xi$|$\\omicron$|$\\pi$|\n|\\iota|\\kappa|\\lambda|\\mu|\\nu|\\xi|\\omicron|\\pi|\n|$\\rho$|$\\sigma$|$\\tau$|$\\upsilon$|$\\phi$|$\\chi$|$\\psi$|$\\omega$|\n|\\rho|\\sigma|\\tau|\\upsilon|\\phi|\\chi|\\psi|\\omega|\n\n|$\\Gamma$|$\\Delta$|$\\Theta$|$\\Lambda$|$\\Xi$|$\\Pi$|$\\Phi$|$\\Psi$|\n|:------:|:------:|:------:|:-------:|:---:|:---:|:----:|:----:|\n|\\Gamma|\\Delta|\\Theta|\\Lambda|\\Xi|\\Pi|\\Phi|\\Psi|\n|$\\Sigma$|$\\Upsilon$|$\\Omega$|\n|\\Sigma|\\Upsilon|\\Omega|\n\n### 运算符号\n\n|$\\lt$|$\\gt$|$\\le$|$\\ge$|$\\neq$|\n|:---:|:---:|:---:|:---:|:----:|\n|\\lt|\\gt|\\le|\\ge|\\neq|\n\n|$\\times$|$\\div$|$\\pm$|$\\mp$|$\\cdot$|\n|:---:|:---:|:---:|:---:|:---:|\n|\\times|\\div|\\pm|\\mp|\\cdot|\n\n|$\\cup$|$\\cap$|$\\setminus$|$\\subset$|$\\subseteq$|$\\subsetneq$|\n|:----:|:----:|:---------:|:-------:|:---------:|:----------:|\n|\\cup|\\cap|\\setminus|\\subset|\\subseteq|\\subsetneq|\n|$\\supset$|$\\in$|$\\notin$|$\\emptyset$|$\\varnothing$|$\\mid$|\n|\\supset|\\in|\\notin|\\emptyset|\\varnothing|\\mid|\n\n|$\\to$|$\\rightarrow$|$\\leftarrow$|$\\Rightarrow$|$\\Leftarrow$|$\\mapsto$|\n|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\to|\\rightarrow|\\leftarrow|\\Rightarrow|\\Leftarrow|\\mapsto|\n\n|$\\land$|$\\lor$|$\\lnot$|$\\forall$|$\\exists$|$\\top$|$\\bot$|$\\vdash$|$\\vDash$|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\land|\\lor|\\lnot|\\forall|\\exists|\\top|\\bot|\\vdash|\\vDash|\n\n|$\\star$|$\\ast$|$\\oplus$|$\\circ$|$\\bullet$|\n|:-----:|:----:|:------:|:-----:|:-------:|\n|\\star|\\ast|\\oplus|\\circ|\\bullet|\n\n|$\\approx$|$\\sim$|$\\simeq$|$\\cong$|$\\equiv$|$\\prec$|$\\lhd$|\n|:-------:|:----:|:------:|:-----:|:------:|:-----:|:----:|\n|\\approx|\\sim|\\simeq|\\cong|\\equiv|\\prec|\\lhd|\n\n|$\\infty$|$\\aleph_0$|$\\nabla$|$\\partial$|$\\Im$|$\\Re$|\n|:------:|:--------:|:------:|:--------:|:---:|:---:|\n|\\infty|\\aleph_0|\\nabla|\\partial|\\Im|\\Re|\n\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|\n|:------:|:----:|:--------:|:-----------:|:-------:|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\n\n\n### 字体\n* blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n\n### 实例\n`A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i`\n$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$\n`A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i`\n$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$\n```shell\n\\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n```\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n[更多](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n","source":"_posts/MathJax-tutorial.md","raw":"---\ntitle: MathJax tutorial\ndate: 2016-09-11 20:04:07\ntags: [MathJax, markdown]\ncategories: MathJax\n---\n## 字符\n### 希腊字母\n|$\\alpha$|$\\beta$|$\\gamma$|$\\delta$|$\\epsilon$|$\\zeta$|$\\eta$|$\\theta$|\n|:------:|:-----:|:------:|:------:|:--------:|:-----:|:----:|:------:|\n|\\alpha|\\beta|\\gamma|\\delta|\\epsilon|\\zeta|\\eta|\\theta|\n|$\\iota$|$\\kappa$|$\\lambda$|$\\mu$|$\\nu$|$\\xi$|$\\omicron$|$\\pi$|\n|\\iota|\\kappa|\\lambda|\\mu|\\nu|\\xi|\\omicron|\\pi|\n|$\\rho$|$\\sigma$|$\\tau$|$\\upsilon$|$\\phi$|$\\chi$|$\\psi$|$\\omega$|\n|\\rho|\\sigma|\\tau|\\upsilon|\\phi|\\chi|\\psi|\\omega|\n\n|$\\Gamma$|$\\Delta$|$\\Theta$|$\\Lambda$|$\\Xi$|$\\Pi$|$\\Phi$|$\\Psi$|\n|:------:|:------:|:------:|:-------:|:---:|:---:|:----:|:----:|\n|\\Gamma|\\Delta|\\Theta|\\Lambda|\\Xi|\\Pi|\\Phi|\\Psi|\n|$\\Sigma$|$\\Upsilon$|$\\Omega$|\n|\\Sigma|\\Upsilon|\\Omega|\n\n### 运算符号\n\n|$\\lt$|$\\gt$|$\\le$|$\\ge$|$\\neq$|\n|:---:|:---:|:---:|:---:|:----:|\n|\\lt|\\gt|\\le|\\ge|\\neq|\n\n|$\\times$|$\\div$|$\\pm$|$\\mp$|$\\cdot$|\n|:---:|:---:|:---:|:---:|:---:|\n|\\times|\\div|\\pm|\\mp|\\cdot|\n\n|$\\cup$|$\\cap$|$\\setminus$|$\\subset$|$\\subseteq$|$\\subsetneq$|\n|:----:|:----:|:---------:|:-------:|:---------:|:----------:|\n|\\cup|\\cap|\\setminus|\\subset|\\subseteq|\\subsetneq|\n|$\\supset$|$\\in$|$\\notin$|$\\emptyset$|$\\varnothing$|$\\mid$|\n|\\supset|\\in|\\notin|\\emptyset|\\varnothing|\\mid|\n\n|$\\to$|$\\rightarrow$|$\\leftarrow$|$\\Rightarrow$|$\\Leftarrow$|$\\mapsto$|\n|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\to|\\rightarrow|\\leftarrow|\\Rightarrow|\\Leftarrow|\\mapsto|\n\n|$\\land$|$\\lor$|$\\lnot$|$\\forall$|$\\exists$|$\\top$|$\\bot$|$\\vdash$|$\\vDash$|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|\\land|\\lor|\\lnot|\\forall|\\exists|\\top|\\bot|\\vdash|\\vDash|\n\n|$\\star$|$\\ast$|$\\oplus$|$\\circ$|$\\bullet$|\n|:-----:|:----:|:------:|:-----:|:-------:|\n|\\star|\\ast|\\oplus|\\circ|\\bullet|\n\n|$\\approx$|$\\sim$|$\\simeq$|$\\cong$|$\\equiv$|$\\prec$|$\\lhd$|\n|:-------:|:----:|:------:|:-----:|:------:|:-----:|:----:|\n|\\approx|\\sim|\\simeq|\\cong|\\equiv|\\prec|\\lhd|\n\n|$\\infty$|$\\aleph_0$|$\\nabla$|$\\partial$|$\\Im$|$\\Re$|\n|:------:|:--------:|:------:|:--------:|:---:|:---:|\n|\\infty|\\aleph_0|\\nabla|\\partial|\\Im|\\Re|\n\n|$\\ldots$|$\\ell$|$\\epsilon$|$\\varepsilon$|$\\varphi$|\n|:------:|:----:|:--------:|:-----------:|:-------:|\n|\\ldots|\\ell|\\epsilon|\\varepsilon|\\varphi|\n\n\n### 字体\n* blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n* Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$\n\n### 实例\n`A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i`\n$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$\n`A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i`\n$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$\n```shell\n\\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n```\n$$ \\begin{align}\n\\overline {A\\cap B} &= \\{x\\mid x\\notin A\\cap B\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\\n&   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\\n&   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\\n&   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\\n&   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\\n&   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\\n&   =\\overline{A}\\cup\\overline{B}\n\\end{align}\n$$\n\n[更多](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n","slug":"MathJax-tutorial","published":1,"updated":"2016-12-08T06:21:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44g001b9ruiknjzo9g5","content":"<h2 id=\"字符\"><a href=\"#字符\" class=\"headerlink\" title=\"字符\"></a>字符</h2><h3 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\alpha$</th>\n<th style=\"text-align:center\">$\\beta$</th>\n<th style=\"text-align:center\">$\\gamma$</th>\n<th style=\"text-align:center\">$\\delta$</th>\n<th style=\"text-align:center\">$\\epsilon$</th>\n<th style=\"text-align:center\">$\\zeta$</th>\n<th style=\"text-align:center\">$\\eta$</th>\n<th style=\"text-align:center\">$\\theta$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\alpha</td>\n<td style=\"text-align:center\">\\beta</td>\n<td style=\"text-align:center\">\\gamma</td>\n<td style=\"text-align:center\">\\delta</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">\\zeta</td>\n<td style=\"text-align:center\">\\eta</td>\n<td style=\"text-align:center\">\\theta</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\iota$</td>\n<td style=\"text-align:center\">$\\kappa$</td>\n<td style=\"text-align:center\">$\\lambda$</td>\n<td style=\"text-align:center\">$\\mu$</td>\n<td style=\"text-align:center\">$\\nu$</td>\n<td style=\"text-align:center\">$\\xi$</td>\n<td style=\"text-align:center\">$\\omicron$</td>\n<td style=\"text-align:center\">$\\pi$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\iota</td>\n<td style=\"text-align:center\">\\kappa</td>\n<td style=\"text-align:center\">\\lambda</td>\n<td style=\"text-align:center\">\\mu</td>\n<td style=\"text-align:center\">\\nu</td>\n<td style=\"text-align:center\">\\xi</td>\n<td style=\"text-align:center\">\\omicron</td>\n<td style=\"text-align:center\">\\pi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\rho$</td>\n<td style=\"text-align:center\">$\\sigma$</td>\n<td style=\"text-align:center\">$\\tau$</td>\n<td style=\"text-align:center\">$\\upsilon$</td>\n<td style=\"text-align:center\">$\\phi$</td>\n<td style=\"text-align:center\">$\\chi$</td>\n<td style=\"text-align:center\">$\\psi$</td>\n<td style=\"text-align:center\">$\\omega$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\rho</td>\n<td style=\"text-align:center\">\\sigma</td>\n<td style=\"text-align:center\">\\tau</td>\n<td style=\"text-align:center\">\\upsilon</td>\n<td style=\"text-align:center\">\\phi</td>\n<td style=\"text-align:center\">\\chi</td>\n<td style=\"text-align:center\">\\psi</td>\n<td style=\"text-align:center\">\\omega</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\Gamma$</th>\n<th style=\"text-align:center\">$\\Delta$</th>\n<th style=\"text-align:center\">$\\Theta$</th>\n<th style=\"text-align:center\">$\\Lambda$</th>\n<th style=\"text-align:center\">$\\Xi$</th>\n<th style=\"text-align:center\">$\\Pi$</th>\n<th style=\"text-align:center\">$\\Phi$</th>\n<th style=\"text-align:center\">$\\Psi$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\Gamma</td>\n<td style=\"text-align:center\">\\Delta</td>\n<td style=\"text-align:center\">\\Theta</td>\n<td style=\"text-align:center\">\\Lambda</td>\n<td style=\"text-align:center\">\\Xi</td>\n<td style=\"text-align:center\">\\Pi</td>\n<td style=\"text-align:center\">\\Phi</td>\n<td style=\"text-align:center\">\\Psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Sigma$</td>\n<td style=\"text-align:center\">$\\Upsilon$</td>\n<td style=\"text-align:center\">$\\Omega$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\Sigma</td>\n<td style=\"text-align:center\">\\Upsilon</td>\n<td style=\"text-align:center\">\\Omega</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"运算符号\"><a href=\"#运算符号\" class=\"headerlink\" title=\"运算符号\"></a>运算符号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\lt$</th>\n<th style=\"text-align:center\">$\\gt$</th>\n<th style=\"text-align:center\">$\\le$</th>\n<th style=\"text-align:center\">$\\ge$</th>\n<th style=\"text-align:center\">$\\neq$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\lt</td>\n<td style=\"text-align:center\">\\gt</td>\n<td style=\"text-align:center\">\\le</td>\n<td style=\"text-align:center\">\\ge</td>\n<td style=\"text-align:center\">\\neq</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\times$</th>\n<th style=\"text-align:center\">$\\div$</th>\n<th style=\"text-align:center\">$\\pm$</th>\n<th style=\"text-align:center\">$\\mp$</th>\n<th style=\"text-align:center\">$\\cdot$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\times</td>\n<td style=\"text-align:center\">\\div</td>\n<td style=\"text-align:center\">\\pm</td>\n<td style=\"text-align:center\">\\mp</td>\n<td style=\"text-align:center\">\\cdot</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\cup$</th>\n<th style=\"text-align:center\">$\\cap$</th>\n<th style=\"text-align:center\">$\\setminus$</th>\n<th style=\"text-align:center\">$\\subset$</th>\n<th style=\"text-align:center\">$\\subseteq$</th>\n<th style=\"text-align:center\">$\\subsetneq$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\cup</td>\n<td style=\"text-align:center\">\\cap</td>\n<td style=\"text-align:center\">\\setminus</td>\n<td style=\"text-align:center\">\\subset</td>\n<td style=\"text-align:center\">\\subseteq</td>\n<td style=\"text-align:center\">\\subsetneq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\supset$</td>\n<td style=\"text-align:center\">$\\in$</td>\n<td style=\"text-align:center\">$\\notin$</td>\n<td style=\"text-align:center\">$\\emptyset$</td>\n<td style=\"text-align:center\">$\\varnothing$</td>\n<td style=\"text-align:center\">$\\mid$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\supset</td>\n<td style=\"text-align:center\">\\in</td>\n<td style=\"text-align:center\">\\notin</td>\n<td style=\"text-align:center\">\\emptyset</td>\n<td style=\"text-align:center\">\\varnothing</td>\n<td style=\"text-align:center\">\\mid</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\to$</th>\n<th style=\"text-align:center\">$\\rightarrow$</th>\n<th style=\"text-align:center\">$\\leftarrow$</th>\n<th style=\"text-align:center\">$\\Rightarrow$</th>\n<th style=\"text-align:center\">$\\Leftarrow$</th>\n<th style=\"text-align:center\">$\\mapsto$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\to</td>\n<td style=\"text-align:center\">\\rightarrow</td>\n<td style=\"text-align:center\">\\leftarrow</td>\n<td style=\"text-align:center\">\\Rightarrow</td>\n<td style=\"text-align:center\">\\Leftarrow</td>\n<td style=\"text-align:center\">\\mapsto</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\land$</th>\n<th style=\"text-align:center\">$\\lor$</th>\n<th style=\"text-align:center\">$\\lnot$</th>\n<th style=\"text-align:center\">$\\forall$</th>\n<th style=\"text-align:center\">$\\exists$</th>\n<th style=\"text-align:center\">$\\top$</th>\n<th style=\"text-align:center\">$\\bot$</th>\n<th style=\"text-align:center\">$\\vdash$</th>\n<th style=\"text-align:center\">$\\vDash$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\land</td>\n<td style=\"text-align:center\">\\lor</td>\n<td style=\"text-align:center\">\\lnot</td>\n<td style=\"text-align:center\">\\forall</td>\n<td style=\"text-align:center\">\\exists</td>\n<td style=\"text-align:center\">\\top</td>\n<td style=\"text-align:center\">\\bot</td>\n<td style=\"text-align:center\">\\vdash</td>\n<td style=\"text-align:center\">\\vDash</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\star$</th>\n<th style=\"text-align:center\">$\\ast$</th>\n<th style=\"text-align:center\">$\\oplus$</th>\n<th style=\"text-align:center\">$\\circ$</th>\n<th style=\"text-align:center\">$\\bullet$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\star</td>\n<td style=\"text-align:center\">\\ast</td>\n<td style=\"text-align:center\">\\oplus</td>\n<td style=\"text-align:center\">\\circ</td>\n<td style=\"text-align:center\">\\bullet</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\approx$</th>\n<th style=\"text-align:center\">$\\sim$</th>\n<th style=\"text-align:center\">$\\simeq$</th>\n<th style=\"text-align:center\">$\\cong$</th>\n<th style=\"text-align:center\">$\\equiv$</th>\n<th style=\"text-align:center\">$\\prec$</th>\n<th style=\"text-align:center\">$\\lhd$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\approx</td>\n<td style=\"text-align:center\">\\sim</td>\n<td style=\"text-align:center\">\\simeq</td>\n<td style=\"text-align:center\">\\cong</td>\n<td style=\"text-align:center\">\\equiv</td>\n<td style=\"text-align:center\">\\prec</td>\n<td style=\"text-align:center\">\\lhd</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\infty$</th>\n<th style=\"text-align:center\">$\\aleph_0$</th>\n<th style=\"text-align:center\">$\\nabla$</th>\n<th style=\"text-align:center\">$\\partial$</th>\n<th style=\"text-align:center\">$\\Im$</th>\n<th style=\"text-align:center\">$\\Re$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\infty</td>\n<td style=\"text-align:center\">\\aleph_0</td>\n<td style=\"text-align:center\">\\nabla</td>\n<td style=\"text-align:center\">\\partial</td>\n<td style=\"text-align:center\">\\Im</td>\n<td style=\"text-align:center\">\\Re</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\ldots$</th>\n<th style=\"text-align:center\">$\\ell$</th>\n<th style=\"text-align:center\">$\\epsilon$</th>\n<th style=\"text-align:center\">$\\varepsilon$</th>\n<th style=\"text-align:center\">$\\varphi$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\ldots</td>\n<td style=\"text-align:center\">\\ell</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">\\varepsilon</td>\n<td style=\"text-align:center\">\\varphi</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li>blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n</ul>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p><code>A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i</code><br>$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$<br><code>A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i</code><br>$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;align&#125;</div><div class=\"line\">\\overline &#123;A\\cap B&#125; &amp;= \\&#123;x\\mid x\\notin A\\cap B\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in(A\\cap B))\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in A\\land x\\in B)\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\&#125;\\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\notin A\\lor x\\notin B\\&#125;\\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\lor x\\in \\overline&#123;B&#125;\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\cup\\overline&#123;B&#125;\\&#125; \\\\</div><div class=\"line\">&amp;   =\\overline&#123;A&#125;\\cup\\overline&#123;B&#125;</div><div class=\"line\">\\end&#123;align&#125;</div></pre></td></tr></table></figure></p>\n<p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= \\{x\\mid x\\notin A\\cap B\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\<br>&amp;   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\<br>&amp;   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<p><a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"external\">更多</a></p>\n","excerpt":"","more":"<h2 id=\"字符\"><a href=\"#字符\" class=\"headerlink\" title=\"字符\"></a>字符</h2><h3 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\alpha$</th>\n<th style=\"text-align:center\">$\\beta$</th>\n<th style=\"text-align:center\">$\\gamma$</th>\n<th style=\"text-align:center\">$\\delta$</th>\n<th style=\"text-align:center\">$\\epsilon$</th>\n<th style=\"text-align:center\">$\\zeta$</th>\n<th style=\"text-align:center\">$\\eta$</th>\n<th style=\"text-align:center\">$\\theta$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\alpha</td>\n<td style=\"text-align:center\">\\beta</td>\n<td style=\"text-align:center\">\\gamma</td>\n<td style=\"text-align:center\">\\delta</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">\\zeta</td>\n<td style=\"text-align:center\">\\eta</td>\n<td style=\"text-align:center\">\\theta</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\iota$</td>\n<td style=\"text-align:center\">$\\kappa$</td>\n<td style=\"text-align:center\">$\\lambda$</td>\n<td style=\"text-align:center\">$\\mu$</td>\n<td style=\"text-align:center\">$\\nu$</td>\n<td style=\"text-align:center\">$\\xi$</td>\n<td style=\"text-align:center\">$\\omicron$</td>\n<td style=\"text-align:center\">$\\pi$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\iota</td>\n<td style=\"text-align:center\">\\kappa</td>\n<td style=\"text-align:center\">\\lambda</td>\n<td style=\"text-align:center\">\\mu</td>\n<td style=\"text-align:center\">\\nu</td>\n<td style=\"text-align:center\">\\xi</td>\n<td style=\"text-align:center\">\\omicron</td>\n<td style=\"text-align:center\">\\pi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\rho$</td>\n<td style=\"text-align:center\">$\\sigma$</td>\n<td style=\"text-align:center\">$\\tau$</td>\n<td style=\"text-align:center\">$\\upsilon$</td>\n<td style=\"text-align:center\">$\\phi$</td>\n<td style=\"text-align:center\">$\\chi$</td>\n<td style=\"text-align:center\">$\\psi$</td>\n<td style=\"text-align:center\">$\\omega$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\rho</td>\n<td style=\"text-align:center\">\\sigma</td>\n<td style=\"text-align:center\">\\tau</td>\n<td style=\"text-align:center\">\\upsilon</td>\n<td style=\"text-align:center\">\\phi</td>\n<td style=\"text-align:center\">\\chi</td>\n<td style=\"text-align:center\">\\psi</td>\n<td style=\"text-align:center\">\\omega</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\Gamma$</th>\n<th style=\"text-align:center\">$\\Delta$</th>\n<th style=\"text-align:center\">$\\Theta$</th>\n<th style=\"text-align:center\">$\\Lambda$</th>\n<th style=\"text-align:center\">$\\Xi$</th>\n<th style=\"text-align:center\">$\\Pi$</th>\n<th style=\"text-align:center\">$\\Phi$</th>\n<th style=\"text-align:center\">$\\Psi$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\Gamma</td>\n<td style=\"text-align:center\">\\Delta</td>\n<td style=\"text-align:center\">\\Theta</td>\n<td style=\"text-align:center\">\\Lambda</td>\n<td style=\"text-align:center\">\\Xi</td>\n<td style=\"text-align:center\">\\Pi</td>\n<td style=\"text-align:center\">\\Phi</td>\n<td style=\"text-align:center\">\\Psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Sigma$</td>\n<td style=\"text-align:center\">$\\Upsilon$</td>\n<td style=\"text-align:center\">$\\Omega$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\Sigma</td>\n<td style=\"text-align:center\">\\Upsilon</td>\n<td style=\"text-align:center\">\\Omega</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"运算符号\"><a href=\"#运算符号\" class=\"headerlink\" title=\"运算符号\"></a>运算符号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\lt$</th>\n<th style=\"text-align:center\">$\\gt$</th>\n<th style=\"text-align:center\">$\\le$</th>\n<th style=\"text-align:center\">$\\ge$</th>\n<th style=\"text-align:center\">$\\neq$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\lt</td>\n<td style=\"text-align:center\">\\gt</td>\n<td style=\"text-align:center\">\\le</td>\n<td style=\"text-align:center\">\\ge</td>\n<td style=\"text-align:center\">\\neq</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\times$</th>\n<th style=\"text-align:center\">$\\div$</th>\n<th style=\"text-align:center\">$\\pm$</th>\n<th style=\"text-align:center\">$\\mp$</th>\n<th style=\"text-align:center\">$\\cdot$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\times</td>\n<td style=\"text-align:center\">\\div</td>\n<td style=\"text-align:center\">\\pm</td>\n<td style=\"text-align:center\">\\mp</td>\n<td style=\"text-align:center\">\\cdot</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\cup$</th>\n<th style=\"text-align:center\">$\\cap$</th>\n<th style=\"text-align:center\">$\\setminus$</th>\n<th style=\"text-align:center\">$\\subset$</th>\n<th style=\"text-align:center\">$\\subseteq$</th>\n<th style=\"text-align:center\">$\\subsetneq$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\cup</td>\n<td style=\"text-align:center\">\\cap</td>\n<td style=\"text-align:center\">\\setminus</td>\n<td style=\"text-align:center\">\\subset</td>\n<td style=\"text-align:center\">\\subseteq</td>\n<td style=\"text-align:center\">\\subsetneq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\supset$</td>\n<td style=\"text-align:center\">$\\in$</td>\n<td style=\"text-align:center\">$\\notin$</td>\n<td style=\"text-align:center\">$\\emptyset$</td>\n<td style=\"text-align:center\">$\\varnothing$</td>\n<td style=\"text-align:center\">$\\mid$</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\supset</td>\n<td style=\"text-align:center\">\\in</td>\n<td style=\"text-align:center\">\\notin</td>\n<td style=\"text-align:center\">\\emptyset</td>\n<td style=\"text-align:center\">\\varnothing</td>\n<td style=\"text-align:center\">\\mid</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\to$</th>\n<th style=\"text-align:center\">$\\rightarrow$</th>\n<th style=\"text-align:center\">$\\leftarrow$</th>\n<th style=\"text-align:center\">$\\Rightarrow$</th>\n<th style=\"text-align:center\">$\\Leftarrow$</th>\n<th style=\"text-align:center\">$\\mapsto$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\to</td>\n<td style=\"text-align:center\">\\rightarrow</td>\n<td style=\"text-align:center\">\\leftarrow</td>\n<td style=\"text-align:center\">\\Rightarrow</td>\n<td style=\"text-align:center\">\\Leftarrow</td>\n<td style=\"text-align:center\">\\mapsto</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\land$</th>\n<th style=\"text-align:center\">$\\lor$</th>\n<th style=\"text-align:center\">$\\lnot$</th>\n<th style=\"text-align:center\">$\\forall$</th>\n<th style=\"text-align:center\">$\\exists$</th>\n<th style=\"text-align:center\">$\\top$</th>\n<th style=\"text-align:center\">$\\bot$</th>\n<th style=\"text-align:center\">$\\vdash$</th>\n<th style=\"text-align:center\">$\\vDash$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\land</td>\n<td style=\"text-align:center\">\\lor</td>\n<td style=\"text-align:center\">\\lnot</td>\n<td style=\"text-align:center\">\\forall</td>\n<td style=\"text-align:center\">\\exists</td>\n<td style=\"text-align:center\">\\top</td>\n<td style=\"text-align:center\">\\bot</td>\n<td style=\"text-align:center\">\\vdash</td>\n<td style=\"text-align:center\">\\vDash</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\star$</th>\n<th style=\"text-align:center\">$\\ast$</th>\n<th style=\"text-align:center\">$\\oplus$</th>\n<th style=\"text-align:center\">$\\circ$</th>\n<th style=\"text-align:center\">$\\bullet$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\star</td>\n<td style=\"text-align:center\">\\ast</td>\n<td style=\"text-align:center\">\\oplus</td>\n<td style=\"text-align:center\">\\circ</td>\n<td style=\"text-align:center\">\\bullet</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\approx$</th>\n<th style=\"text-align:center\">$\\sim$</th>\n<th style=\"text-align:center\">$\\simeq$</th>\n<th style=\"text-align:center\">$\\cong$</th>\n<th style=\"text-align:center\">$\\equiv$</th>\n<th style=\"text-align:center\">$\\prec$</th>\n<th style=\"text-align:center\">$\\lhd$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\approx</td>\n<td style=\"text-align:center\">\\sim</td>\n<td style=\"text-align:center\">\\simeq</td>\n<td style=\"text-align:center\">\\cong</td>\n<td style=\"text-align:center\">\\equiv</td>\n<td style=\"text-align:center\">\\prec</td>\n<td style=\"text-align:center\">\\lhd</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\infty$</th>\n<th style=\"text-align:center\">$\\aleph_0$</th>\n<th style=\"text-align:center\">$\\nabla$</th>\n<th style=\"text-align:center\">$\\partial$</th>\n<th style=\"text-align:center\">$\\Im$</th>\n<th style=\"text-align:center\">$\\Re$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\infty</td>\n<td style=\"text-align:center\">\\aleph_0</td>\n<td style=\"text-align:center\">\\nabla</td>\n<td style=\"text-align:center\">\\partial</td>\n<td style=\"text-align:center\">\\Im</td>\n<td style=\"text-align:center\">\\Re</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">$\\ldots$</th>\n<th style=\"text-align:center\">$\\ell$</th>\n<th style=\"text-align:center\">$\\epsilon$</th>\n<th style=\"text-align:center\">$\\varepsilon$</th>\n<th style=\"text-align:center\">$\\varphi$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\ldots</td>\n<td style=\"text-align:center\">\\ell</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">\\varepsilon</td>\n<td style=\"text-align:center\">\\varphi</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li>blackboard bold: \\mathbb or\\Bbb $\\mathbb {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>boldface: \\mathbf $\\mathbf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>typewriter: \\mathtt $\\mathtt {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>roman font: \\mathrm $\\mathrm {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>sans-serif font: \\mathsf $\\mathsf {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>calligraphic: \\mathcal $\\mathcal {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>script:\\mathscr $\\mathscr {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n<li>Fraktur:\\mathfrak $\\mathfrak {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnpqrstuvwxyz}$</li>\n</ul>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p><code>A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i</code><br>$$A_i\\cap A_2\\cap \\cdots\\cap A_n=\\underset{i=1}{\\overset{n}\\bigcap}A_i$$<br><code>A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i</code><br>$$A_1\\cup A_2\\cup \\cdots\\cup A_n=\\underset{i=1}{\\overset{n}\\bigcup}A_i$$<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;align&#125;</div><div class=\"line\">\\overline &#123;A\\cap B&#125; &amp;= \\&#123;x\\mid x\\notin A\\cap B\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in(A\\cap B))\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot(x\\in A\\land x\\in B)\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\&#125;\\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\notin A\\lor x\\notin B\\&#125;\\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\lor x\\in \\overline&#123;B&#125;\\&#125; \\\\</div><div class=\"line\">&amp;   =\\&#123;x\\mid x\\in \\overline&#123;A&#125;\\cup\\overline&#123;B&#125;\\&#125; \\\\</div><div class=\"line\">&amp;   =\\overline&#123;A&#125;\\cup\\overline&#123;B&#125;</div><div class=\"line\">\\end&#123;align&#125;</div></pre></td></tr></table></figure></p>\n<p>$$ \\begin{align}<br>\\overline {A\\cap B} &amp;= \\{x\\mid x\\notin A\\cap B\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in(A\\cap B))\\} \\\\<br>&amp;   =\\{x\\mid \\lnot(x\\in A\\land x\\in B)\\} \\\\<br>&amp;   =\\{x\\mid \\lnot (x\\in A)\\lor \\lnot(x\\in B)\\}\\\\<br>&amp;   =\\{x\\mid x\\notin A\\lor x\\notin B\\}\\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\lor x\\in \\overline{B}\\} \\\\<br>&amp;   =\\{x\\mid x\\in \\overline{A}\\cup\\overline{B}\\} \\\\<br>&amp;   =\\overline{A}\\cup\\overline{B}<br>\\end{align}<br>$$</p>\n<p><a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\">更多</a></p>\n"},{"title":"My Sublime Text Setting","date":"2016-09-13T13:30:25.000Z","_content":"\n# My Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|[OmniMarkdownPerviwer](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/)|预览、导出Markdown|\n|[Evernote](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/)|实现用Markdown 编写印象笔记|\n\n\n# Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|advenceNewfile|  快速新建文件，文件夹|\n|httpRequest|测试HTTP请求。[说明文档](https://github.com/braindamageinc/SublimeHttpRequester)|\n|fetch|管理和下载类库|\n|sidebarEnhancement| 增强side bar的功能|\n|docblockr|js注释|\n|sublimeLinter|ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。   |\n|SublimeLinter-jshint|针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。|\n|SublimeREPL|支持在 Sublime 中运行交互式开发环境｜\n|Anaconda| python扩展包|\n|htmlpretty| 格式化html、js、json插件|\n","source":"_posts/My-Sublime-Text-Setting.md","raw":"---\ntitle: My Sublime Text Setting\ndate: 2016-09-13 21:30:25\ntags: [sublime]\ncategories: [sublime]\n---\n\n# My Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|[OmniMarkdownPerviwer](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/)|预览、导出Markdown|\n|[Evernote](http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/)|实现用Markdown 编写印象笔记|\n\n\n# Sublime Text Package\n| 插件| 描述|\n|:--|:--|\n|advenceNewfile|  快速新建文件，文件夹|\n|httpRequest|测试HTTP请求。[说明文档](https://github.com/braindamageinc/SublimeHttpRequester)|\n|fetch|管理和下载类库|\n|sidebarEnhancement| 增强side bar的功能|\n|docblockr|js注释|\n|sublimeLinter|ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。   |\n|SublimeLinter-jshint|针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。|\n|SublimeREPL|支持在 Sublime 中运行交互式开发环境｜\n|Anaconda| python扩展包|\n|htmlpretty| 格式化html、js、json插件|\n","slug":"My-Sublime-Text-Setting","published":1,"updated":"2016-09-13T13:39:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44i001d9rui6g4v0w1x","content":"<h1 id=\"My-Sublime-Text-Package\"><a href=\"#My-Sublime-Text-Package\" class=\"headerlink\" title=\"My Sublime Text Package\"></a>My Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">插件</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/\" target=\"_blank\" rel=\"external\">OmniMarkdownPerviwer</a></td>\n<td style=\"text-align:left\">预览、导出Markdown</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/\" target=\"_blank\" rel=\"external\">Evernote</a></td>\n<td style=\"text-align:left\">实现用Markdown 编写印象笔记</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"Sublime-Text-Package\"><a href=\"#Sublime-Text-Package\" class=\"headerlink\" title=\"Sublime Text Package\"></a>Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">插件</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">advenceNewfile</td>\n<td style=\"text-align:left\">快速新建文件，文件夹</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">httpRequest</td>\n<td style=\"text-align:left\">测试HTTP请求。<a href=\"https://github.com/braindamageinc/SublimeHttpRequester\" target=\"_blank\" rel=\"external\">说明文档</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fetch</td>\n<td style=\"text-align:left\">管理和下载类库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sidebarEnhancement</td>\n<td style=\"text-align:left\">增强side bar的功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">docblockr</td>\n<td style=\"text-align:left\">js注释</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sublimeLinter</td>\n<td style=\"text-align:left\">ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SublimeLinter-jshint</td>\n<td style=\"text-align:left\">针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SublimeREPL</td>\n<td style=\"text-align:left\">支持在 Sublime 中运行交互式开发环境｜</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Anaconda</td>\n<td style=\"text-align:left\">python扩展包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">htmlpretty</td>\n<td style=\"text-align:left\">格式化html、js、json插件</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h1 id=\"My-Sublime-Text-Package\"><a href=\"#My-Sublime-Text-Package\" class=\"headerlink\" title=\"My Sublime Text Package\"></a>My Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">插件</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BOmniMarkupPreviewer/\">OmniMarkdownPerviwer</a></td>\n<td style=\"text-align:left\">预览、导出Markdown</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"http://blog.freeabyss.science:4000/2016/09/13/Sublime-Text%E4%B9%8BEvernote/\">Evernote</a></td>\n<td style=\"text-align:left\">实现用Markdown 编写印象笔记</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"Sublime-Text-Package\"><a href=\"#Sublime-Text-Package\" class=\"headerlink\" title=\"Sublime Text Package\"></a>Sublime Text Package</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">插件</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">advenceNewfile</td>\n<td style=\"text-align:left\">快速新建文件，文件夹</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">httpRequest</td>\n<td style=\"text-align:left\">测试HTTP请求。<a href=\"https://github.com/braindamageinc/SublimeHttpRequester\">说明文档</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fetch</td>\n<td style=\"text-align:left\">管理和下载类库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sidebarEnhancement</td>\n<td style=\"text-align:left\">增强side bar的功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">docblockr</td>\n<td style=\"text-align:left\">js注释</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sublimeLinter</td>\n<td style=\"text-align:left\">ublimeLinter用语代码语法和风格的检查，sublimeLinter是个基类插件，若想支持对应语言的检查需要安装对应的插件。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SublimeLinter-jshint</td>\n<td style=\"text-align:left\">针对js语法检查的插件。安装后还需要用npm安装jshint，因为该插件依赖与nodejs的jshint模块。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SublimeREPL</td>\n<td style=\"text-align:left\">支持在 Sublime 中运行交互式开发环境｜</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Anaconda</td>\n<td style=\"text-align:left\">python扩展包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">htmlpretty</td>\n<td style=\"text-align:left\">格式化html、js、json插件</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"QuartZ Cron表达式详解","date":"2016-05-28T16:29:57.000Z","_content":"\n## Cron表达式\n> 格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]  \n> year是可选的\n\n| 字段名| 允许的值| 允许的字符| \n| :--: | :----:| :------| \n| 秒| 0-59 |  , - * / |\n| 分| 0-59  | , - * / |\n| 小时| 0-23 | , - * / |\n| 日| 1-32 | , - * / ? L W C |\n| 月| 1-12 or JAN-DEC |, - * / |\n| 周| 1-7 or SUN-SAT | , - * / ? L #|\n| 年| empty,1970-2099 | , - * / |\n\n> day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。   \n> day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。  \n> month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 \n\n## 字符解释\n> \\* :匹配该域的任意值，如\\* 用在分所在的域，表示每分钟都会触发事件。     \n> ?  :该字符仅用在`day of month`与`day of week`两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。  \n> \\- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。  \n> ,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。    \n> /  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如`senconds`的值为'5/15' 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。   \n> L  :表示最后的意思。   \n>   \n> * 在`day of month`表示每月最后一天；\n> * 在`day of week`表示周日；\n> * 如果前面加上数字，表示本月最后一天，例如'6L'表示每月最后一个周五；\n> * 还可以指定从最后一天到开始时间，例如，'L-2'表示每月的第2天到最后一天。\n> \n> W  :表示工作日，例如，值为'15W'，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。 \n>    ** *'L'可以与'W'结合使用，'LW'表示当月最后一个工作日* **    \n> \\#  :用来表示每个月的第几个星期几，例如，'6#3'表示某个月的第3个星期五。  \n\n## 示例\n| 表达式| 意思|\n|:--- | :----|\n| 0 0 12 * * ?  | Fire at 12pm (noon) every day |\n| 0 15 10 ? * * | Fire at 10:15am every day |\n| 0 15 10 * * ? | Fire at 10:15am every day |\n| 0 15 10 * * ? *   | Fire at 10:15am every day |\n| 0 15 10 * * ? 2005    | Fire at 10:15am every day during the year 2005 |\n| 0 * 14 * * ?  | Fire every minute starting at 2pm and ending at 2:59pm, every day |\n| 0 0/5 14 * * ?    | Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day |\n| 0 0/5 14,18 * * ? | Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day  |\n| 0 0-5 14 * * ?    | Fire every minute starting at 2pm and ending at 2:05pm, every day |\n| 0 10,44 14 ? 3 WED    | Fire at 2:10pm and at 2:44pm every Wednesday in the month of March. |\n| 0 15 10 ? * MON-FRI   | Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday  |\n| 0 15 10 15 * ?    | Fire at 10:15am on the 15th day of every month |\n| 0 15 10 L * ? | Fire at 10:15am on the last day of every month |\n| 0 15 10 L-2 * ?   | Fire at 10:15am on the 2nd-to-last last day of every month |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L 2002-2005  | Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005 |\n| 0 15 10 ? * 6#3   | Fire at 10:15am on the third Friday of every month |\n| 0 0 12 1/5 * ?    | Fire at 12pm (noon) every 5 days every month, starting on the first day of the month. |\n| 0 11 11 11 11 ?   | Fire every November 11th at 11:11am. |\n\n## 参考资料\n> [官方说明](http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger)\n","source":"_posts/Quart表达式详解.md","raw":"---\ntitle: QuartZ Cron表达式详解\ndate: 2016-05-29 00:29:57\ntags: [Java, QuartZ, Cron, note]\ncategories: Java\n---\n\n## Cron表达式\n> 格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]  \n> year是可选的\n\n| 字段名| 允许的值| 允许的字符| \n| :--: | :----:| :------| \n| 秒| 0-59 |  , - * / |\n| 分| 0-59  | , - * / |\n| 小时| 0-23 | , - * / |\n| 日| 1-32 | , - * / ? L W C |\n| 月| 1-12 or JAN-DEC |, - * / |\n| 周| 1-7 or SUN-SAT | , - * / ? L #|\n| 年| empty,1970-2099 | , - * / |\n\n> day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。   \n> day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。  \n> month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 \n\n## 字符解释\n> \\* :匹配该域的任意值，如\\* 用在分所在的域，表示每分钟都会触发事件。     \n> ?  :该字符仅用在`day of month`与`day of week`两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。  \n> \\- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。  \n> ,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。    \n> /  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如`senconds`的值为'5/15' 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。   \n> L  :表示最后的意思。   \n>   \n> * 在`day of month`表示每月最后一天；\n> * 在`day of week`表示周日；\n> * 如果前面加上数字，表示本月最后一天，例如'6L'表示每月最后一个周五；\n> * 还可以指定从最后一天到开始时间，例如，'L-2'表示每月的第2天到最后一天。\n> \n> W  :表示工作日，例如，值为'15W'，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。 \n>    ** *'L'可以与'W'结合使用，'LW'表示当月最后一个工作日* **    \n> \\#  :用来表示每个月的第几个星期几，例如，'6#3'表示某个月的第3个星期五。  \n\n## 示例\n| 表达式| 意思|\n|:--- | :----|\n| 0 0 12 * * ?  | Fire at 12pm (noon) every day |\n| 0 15 10 ? * * | Fire at 10:15am every day |\n| 0 15 10 * * ? | Fire at 10:15am every day |\n| 0 15 10 * * ? *   | Fire at 10:15am every day |\n| 0 15 10 * * ? 2005    | Fire at 10:15am every day during the year 2005 |\n| 0 * 14 * * ?  | Fire every minute starting at 2pm and ending at 2:59pm, every day |\n| 0 0/5 14 * * ?    | Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day |\n| 0 0/5 14,18 * * ? | Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day  |\n| 0 0-5 14 * * ?    | Fire every minute starting at 2pm and ending at 2:05pm, every day |\n| 0 10,44 14 ? 3 WED    | Fire at 2:10pm and at 2:44pm every Wednesday in the month of March. |\n| 0 15 10 ? * MON-FRI   | Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday  |\n| 0 15 10 15 * ?    | Fire at 10:15am on the 15th day of every month |\n| 0 15 10 L * ? | Fire at 10:15am on the last day of every month |\n| 0 15 10 L-2 * ?   | Fire at 10:15am on the 2nd-to-last last day of every month |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L    | Fire at 10:15am on the last Friday of every month  |\n| 0 15 10 ? * 6L 2002-2005  | Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005 |\n| 0 15 10 ? * 6#3   | Fire at 10:15am on the third Friday of every month |\n| 0 0 12 1/5 * ?    | Fire at 12pm (noon) every 5 days every month, starting on the first day of the month. |\n| 0 11 11 11 11 ?   | Fire every November 11th at 11:11am. |\n\n## 参考资料\n> [官方说明](http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger)\n","slug":"Quart表达式详解","published":1,"updated":"2016-09-03T16:33:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44j001h9rui95ipc8j4","content":"<h2 id=\"Cron表达式\"><a href=\"#Cron表达式\" class=\"headerlink\" title=\"Cron表达式\"></a>Cron表达式</h2><blockquote>\n<p>格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]<br>year是可选的</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字段名</th>\n<th style=\"text-align:center\">允许的值</th>\n<th style=\"text-align:left\">允许的字符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">秒</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小时</td>\n<td style=\"text-align:center\">0-23</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日</td>\n<td style=\"text-align:center\">1-32</td>\n<td style=\"text-align:left\">, - * / ? L W C</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">月</td>\n<td style=\"text-align:center\">1-12 or JAN-DEC</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">周</td>\n<td style=\"text-align:center\">1-7 or SUN-SAT</td>\n<td style=\"text-align:left\">, - * / ? L #</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">年</td>\n<td style=\"text-align:center\">empty,1970-2099</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。<br>day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。<br>month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 </p>\n</blockquote>\n<h2 id=\"字符解释\"><a href=\"#字符解释\" class=\"headerlink\" title=\"字符解释\"></a>字符解释</h2><blockquote>\n<p>* :匹配该域的任意值，如* 用在分所在的域，表示每分钟都会触发事件。<br>?  :该字符仅用在<code>day of month</code>与<code>day of week</code>两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。<br>- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。<br>,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。<br>/  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如<code>senconds</code>的值为’5/15’ 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。<br>L  :表示最后的意思。   </p>\n<ul>\n<li>在<code>day of month</code>表示每月最后一天；</li>\n<li>在<code>day of week</code>表示周日；</li>\n<li>如果前面加上数字，表示本月最后一天，例如’6L’表示每月最后一个周五；</li>\n<li>还可以指定从最后一天到开始时间，例如，’L-2’表示每月的第2天到最后一天。</li>\n</ul>\n<p>W  :表示工作日，例如，值为’15W’，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。<br>   <strong> <em>‘L’可以与’W’结合使用，’LW’表示当月最后一个工作日</em> </strong><br>#  :用来表示每个月的第几个星期几，例如，’6#3’表示某个月的第3个星期五。  </p>\n</blockquote>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">表达式</th>\n<th style=\"text-align:left\">意思</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0 0 12 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire at 12pm (noon) every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? <em> </em></td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ? *</td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ? 2005</td>\n<td style=\"text-align:left\">Fire at 10:15am every day during the year 2005</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 <em> 14 </em> * ?</td>\n<td style=\"text-align:left\">Fire every minute starting at 2pm and ending at 2:59pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0/5 14 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0/5 14,18 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0-5 14 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every minute starting at 2pm and ending at 2:05pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 10,44 14 ? 3 WED</td>\n<td style=\"text-align:left\">Fire at 2:10pm and at 2:44pm every Wednesday in the month of March.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * MON-FRI</td>\n<td style=\"text-align:left\">Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 15 * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the 15th day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 L * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 L-2 * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the 2nd-to-last last day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L 2002-2005</td>\n<td style=\"text-align:left\">Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6#3</td>\n<td style=\"text-align:left\">Fire at 10:15am on the third Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0 12 1/5 * ?</td>\n<td style=\"text-align:left\">Fire at 12pm (noon) every 5 days every month, starting on the first day of the month.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 11 11 11 11 ?</td>\n<td style=\"text-align:left\">Fire every November 11th at 11:11am.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><a href=\"http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\" target=\"_blank\" rel=\"external\">官方说明</a></p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"Cron表达式\"><a href=\"#Cron表达式\" class=\"headerlink\" title=\"Cron表达式\"></a>Cron表达式</h2><blockquote>\n<p>格式：{seconds} {minutes} {hours} {day of month} {month} {day of week} [year]<br>year是可选的</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字段名</th>\n<th style=\"text-align:center\">允许的值</th>\n<th style=\"text-align:left\">允许的字符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">秒</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\">0-59</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小时</td>\n<td style=\"text-align:center\">0-23</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日</td>\n<td style=\"text-align:center\">1-32</td>\n<td style=\"text-align:left\">, - * / ? L W C</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">月</td>\n<td style=\"text-align:center\">1-12 or JAN-DEC</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">周</td>\n<td style=\"text-align:center\">1-7 or SUN-SAT</td>\n<td style=\"text-align:left\">, - * / ? L #</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">年</td>\n<td style=\"text-align:center\">empty,1970-2099</td>\n<td style=\"text-align:left\">, - * /</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>day of month : 可以用数字1-31中的任一一个值，但要注意一些特别的月份。<br>day of week : 可以用1-7数字表示，1代表周日，或者用字符: SUN,MON,TUE,WED,THU,FRI,SAT。<br>month: 可以用1-12，或者字符: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC。 </p>\n</blockquote>\n<h2 id=\"字符解释\"><a href=\"#字符解释\" class=\"headerlink\" title=\"字符解释\"></a>字符解释</h2><blockquote>\n<p>* :匹配该域的任意值，如* 用在分所在的域，表示每分钟都会触发事件。<br>?  :该字符仅用在<code>day of month</code>与<code>day of week</code>两个域中，并且两个域的?互斥，当其中一个被指定值后，另外一个为避免冲突需要将值设为?。<br>- :匹配一个特定范围值，例如，10-12，表示10、11、12的时候触发事件。<br>,  :匹配多个值，例如，10,12,13，表示10、12、13的时候触发事件。<br>/  :左边表示开始触发时间，右边是每隔固定时间触发一次事件，如<code>senconds</code>的值为’5/15’ 表示 5 秒、20 秒、35 秒、50 秒的时候都触发一次事件。<br>L  :表示最后的意思。   </p>\n<ul>\n<li>在<code>day of month</code>表示每月最后一天；</li>\n<li>在<code>day of week</code>表示周日；</li>\n<li>如果前面加上数字，表示本月最后一天，例如’6L’表示每月最后一个周五；</li>\n<li>还可以指定从最后一天到开始时间，例如，’L-2’表示每月的第2天到最后一天。</li>\n</ul>\n<p>W  :表示工作日，例如，值为’15W’，表示在最近的工作日触发，如果15日是周六那么将在周五触发，如果是周日将在周一触发，如果是周一到周五则当天触发。<br>   <strong> <em>‘L’可以与’W’结合使用，’LW’表示当月最后一个工作日</em> </strong><br>#  :用来表示每个月的第几个星期几，例如，’6#3’表示某个月的第3个星期五。  </p>\n</blockquote>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">表达式</th>\n<th style=\"text-align:left\">意思</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0 0 12 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire at 12pm (noon) every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? <em> </em></td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ? *</td>\n<td style=\"text-align:left\">Fire at 10:15am every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 <em> </em> ? 2005</td>\n<td style=\"text-align:left\">Fire at 10:15am every day during the year 2005</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 <em> 14 </em> * ?</td>\n<td style=\"text-align:left\">Fire every minute starting at 2pm and ending at 2:59pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0/5 14 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0/5 14,18 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every 5 minutes starting at 2pm and ending at 2:55pm, AND fire every 5 minutes starting at 6pm and ending at 6:55pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0-5 14 <em> </em> ?</td>\n<td style=\"text-align:left\">Fire every minute starting at 2pm and ending at 2:05pm, every day</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 10,44 14 ? 3 WED</td>\n<td style=\"text-align:left\">Fire at 2:10pm and at 2:44pm every Wednesday in the month of March.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * MON-FRI</td>\n<td style=\"text-align:left\">Fire at 10:15am every Monday, Tuesday, Wednesday, Thursday and Friday</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 15 * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the 15th day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 L * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 L-2 * ?</td>\n<td style=\"text-align:left\">Fire at 10:15am on the 2nd-to-last last day of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L</td>\n<td style=\"text-align:left\">Fire at 10:15am on the last Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6L 2002-2005</td>\n<td style=\"text-align:left\">Fire at 10:15am on every last friday of every month during the years 2002, 2003, 2004 and 2005</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 15 10 ? * 6#3</td>\n<td style=\"text-align:left\">Fire at 10:15am on the third Friday of every month</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 0 12 1/5 * ?</td>\n<td style=\"text-align:left\">Fire at 12pm (noon) every 5 days every month, starting on the first day of the month.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0 11 11 11 11 ?</td>\n<td style=\"text-align:left\">Fire every November 11th at 11:11am.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><a href=\"http://quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger\">官方说明</a></p>\n</blockquote>\n"},{"title":"Python快速预览","date":"2015-08-22T15:18:04.000Z","_content":"## 数据类型和变量\npython语言是动态语言\n\n## 字符串和编码\n* UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。\n* 在python中，Unicode表示的字符串用u'...'表示.\n* 将Unicode字符转化为UTF-8字符用`encode('utf-8')`:\n\n```python\nu'ABC'.encode('utf-8')\n```\n* 将UTF-8字符转化为Unicode字符用`decode('utf')`:\n\n```python\n'abc'.decode('utf-8')\n```\n* 让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:\n `#-*- coding:utf-8 -*-`\n* python的格式化方法与C 语言一致,用%实现,如:\n\n```python\n'hello, %s' %'world'\nhello, world\n'Hi, %s, you have $%d.' %('Michael', 10000)\nHi, Michael, you have $1000.\n```\n* 有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.\n    - 常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.\n    - 格式化整数和浮点数还可以指定是否补0和整数与小数的位数.\n    - 在格式化字符串中,需要转义%时,可用%%表示.\n* 在python 3.x中,'xxxx'和u'xxxx' 统一成Unicode编码.\n\n## 使用list和tuple\n### list的使用\nlist里面的元素类型可以不同，也可以添加另外一个list   \n\n```python\nclassmates = ['Box', 'Ads'] #创建list变量\nclassmates[0] #访问list中的元素\noutput:'Box'\n#访问list最后一个元素\nclassmates[-1] \noutput: 'Ads'\n#添加元素到末尾\nclassmates.append('and')\n#插入元素到指定位置\nclassmates.insert(1, 'sdd')\n#删除末尾的元素\nclassmates.pop()\n#删除指定位置的元素\nclassmates.pop(i)\n#获得list的长度\nlen(classmates)\n```\n### tuple\ntuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。\n\n```python\n#创建一个tuple\nclassmates= (1,2,3)\n#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：\nclassmates = (1,)\n```\ntuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。\n\n### dict\ndict类似与其他编程语言中的map\n\n```python\n#创建一个dict\nd={'misc':93,'sds':82}\n#还可以通过key来放入value：\nd['misc'] = 23\n#判断key是否存在\n'sidh' in d\n#当key不存在时，用get方法返回的是None，或者自己指定的返回值\nd.get('sd', -1)\n```\n\n### set  \nset类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list\n\n```python\ns= set([1,23,4,5])\n#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。\n#可以通过remove(key)来移除元素。\n# set可以作数学意义上的交集、并集等操作\ns1 = set([1,2,3])\ns2 = set([3,4,5])\ns1 & s2\ns1 | s2\n```      \nset和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  \n\n## 条件判断和循环\n### if表达式格式\n\n```python\nif <条件判断1>:\n    <执行1>\nelif <条件判断2>:\n    <执行2>\nelse:\n    <执行3>\n```\n### for循环格式  \n```python            \nfor x in range(4):  #range()可以生成整数序列\n       \n```\n### while 循环格式\n```python\nwhile <条件判断> :\n```\n\n\n## 函数\npython的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  \n\n```python\n#函数定义\ndef function_name(parameter1, parameter2...) :\n    <函数体>\n```\n\n没有写return的函数会返回None。定义一个空函数可以用pass语句\n\n```python\ndef nothing():\n    pass\n```\npass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用`isinstance`函数实现\n\n```python\ndef my_abs(x):\n    if not isintance(x,(int,float)):\n        raise TypeError('bad operand type')\n    if x >=0:\n        return x\n    else :\n        return -x\n```\npython函数可以返回多个返回值：\n\n```python\nx,y = move(x,y)\n```\n实际上，返回的只是一个tuple，只是写法上简化了。\n\n### 默认参数\n\n```python\ndef call_city(x,y, city='beijing',age=12):\n    pass\n```\n默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：\n\n```python\ncall_city(x,y, age=12)\n```\n默认参数，最好指向不变对象。\n\n### 可变参数\n可变参数与定义list参数的区别就是在参数前面加个*，例如：\n\n```python\ndef calc_sum(*numbers):\n    sum =0\n    for n in numbers:\n           sum += n\n    return sum\n```\n对于函数体内部来说，`numbers`接受的是一个`tuple`。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数\n\n### 关键字参数\n关键字参数会在函数内部自动组装成一个dict。示例\n\n```python\n\ndef person(name, age, **kw)\n    print 'name:',name, 'age:',age,'other:', kw\nperson('Michael', 30,city='beijing')\n```\n在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。\n\n## 高级特性\n### 切片\n切片操作可以轻松的切成一段数列,例如`L`是一个`list`\n\n```python\n# 取前3个元素\nL[0:3]\n#或\nL[:3]\n#取后10个元素\nL[-10:]\n#前十个数,每个2个取一个\nL[:10:2]\n#所有数,每隔5个取一个\nL[::5]\n#字符串同样支持切片操作.\n```\n### 迭代\ndict可以同时迭代key和value:\n\n```python\nfor k, v in d.iteritems()\n```\n判断一个对象是否可以迭代,可以用collections模块里的iterable类型:\n\n```python\nisinstance('abd', Iterable)\noutput: True\n```\n同时迭代索引和元素\n```python\nfor i, value in enumerate(list):  \n```           \n### 列表生成式\n列表生成式可以看成对for循环语句的简化.例如\n\n```python\n[x*x for x in range(1,11)]\noutput:   [1,4,9,16,25,36,4964,81,100]\n#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断\n[x*x for x in range(1,11) if x%2==0]\noutput:[4,16,36,64,100]\n#还可以使用两层循环          \n[m+n for m in 'ABC' for n in 'XYZ']\noutput:['AX','AY','AZ','BX','BY','BZ','CX','CY','CZ']\n```\n### 生成器\n生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个`generator`.\n\n```python\ng = (x*x for x in range(1,11))\n```\n创建一个`generator`后,可以通过`next()`来打印里面的元素,或者使用`for`循环迭代.还可以使用`yield`关键字,将函数定义成`generator`,例如:    \n\n```python\n>>> def odd():\n...    print 'step1'\n...    yield 1\n...    print 'step2'\n...    yield 2\n...    print 'step3'\n...    yield 3\n...\n>>> o = odd()\n>>> o.next()\nstep1\n1\n>>> o.next()\nstep2\n2\n>>> o.next()\nstep3\n3\n```\n每当调用`next()`的时候,遇到`yield`语句返回,再次执行时,会从上次返回的`yield`语句处继续执行.\n\n## 函数式编程\n所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.\n### 匿名函数\n\n```python\nlambda x: x*x\n```\nlambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.\n### 装饰器\n函数也是个对象,赋给变量,函数还有个__name__属性,可以获得函数名称.","source":"_posts/Python语法预览.md","raw":"---\ntitle: Python快速预览\ndate: 2015-08-22 23:18:04\ntags: [Python, note]\ncategories: Python\n---\n## 数据类型和变量\npython语言是动态语言\n\n## 字符串和编码\n* UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。\n* 在python中，Unicode表示的字符串用u'...'表示.\n* 将Unicode字符转化为UTF-8字符用`encode('utf-8')`:\n\n```python\nu'ABC'.encode('utf-8')\n```\n* 将UTF-8字符转化为Unicode字符用`decode('utf')`:\n\n```python\n'abc'.decode('utf-8')\n```\n* 让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:\n `#-*- coding:utf-8 -*-`\n* python的格式化方法与C 语言一致,用%实现,如:\n\n```python\n'hello, %s' %'world'\nhello, world\n'Hi, %s, you have $%d.' %('Michael', 10000)\nHi, Michael, you have $1000.\n```\n* 有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.\n    - 常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.\n    - 格式化整数和浮点数还可以指定是否补0和整数与小数的位数.\n    - 在格式化字符串中,需要转义%时,可用%%表示.\n* 在python 3.x中,'xxxx'和u'xxxx' 统一成Unicode编码.\n\n## 使用list和tuple\n### list的使用\nlist里面的元素类型可以不同，也可以添加另外一个list   \n\n```python\nclassmates = ['Box', 'Ads'] #创建list变量\nclassmates[0] #访问list中的元素\noutput:'Box'\n#访问list最后一个元素\nclassmates[-1] \noutput: 'Ads'\n#添加元素到末尾\nclassmates.append('and')\n#插入元素到指定位置\nclassmates.insert(1, 'sdd')\n#删除末尾的元素\nclassmates.pop()\n#删除指定位置的元素\nclassmates.pop(i)\n#获得list的长度\nlen(classmates)\n```\n### tuple\ntuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。\n\n```python\n#创建一个tuple\nclassmates= (1,2,3)\n#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：\nclassmates = (1,)\n```\ntuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。\n\n### dict\ndict类似与其他编程语言中的map\n\n```python\n#创建一个dict\nd={'misc':93,'sds':82}\n#还可以通过key来放入value：\nd['misc'] = 23\n#判断key是否存在\n'sidh' in d\n#当key不存在时，用get方法返回的是None，或者自己指定的返回值\nd.get('sd', -1)\n```\n\n### set  \nset类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list\n\n```python\ns= set([1,23,4,5])\n#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。\n#可以通过remove(key)来移除元素。\n# set可以作数学意义上的交集、并集等操作\ns1 = set([1,2,3])\ns2 = set([3,4,5])\ns1 & s2\ns1 | s2\n```      \nset和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  \n\n## 条件判断和循环\n### if表达式格式\n\n```python\nif <条件判断1>:\n    <执行1>\nelif <条件判断2>:\n    <执行2>\nelse:\n    <执行3>\n```\n### for循环格式  \n```python            \nfor x in range(4):  #range()可以生成整数序列\n       \n```\n### while 循环格式\n```python\nwhile <条件判断> :\n```\n\n\n## 函数\npython的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  \n\n```python\n#函数定义\ndef function_name(parameter1, parameter2...) :\n    <函数体>\n```\n\n没有写return的函数会返回None。定义一个空函数可以用pass语句\n\n```python\ndef nothing():\n    pass\n```\npass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用`isinstance`函数实现\n\n```python\ndef my_abs(x):\n    if not isintance(x,(int,float)):\n        raise TypeError('bad operand type')\n    if x >=0:\n        return x\n    else :\n        return -x\n```\npython函数可以返回多个返回值：\n\n```python\nx,y = move(x,y)\n```\n实际上，返回的只是一个tuple，只是写法上简化了。\n\n### 默认参数\n\n```python\ndef call_city(x,y, city='beijing',age=12):\n    pass\n```\n默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：\n\n```python\ncall_city(x,y, age=12)\n```\n默认参数，最好指向不变对象。\n\n### 可变参数\n可变参数与定义list参数的区别就是在参数前面加个*，例如：\n\n```python\ndef calc_sum(*numbers):\n    sum =0\n    for n in numbers:\n           sum += n\n    return sum\n```\n对于函数体内部来说，`numbers`接受的是一个`tuple`。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数\n\n### 关键字参数\n关键字参数会在函数内部自动组装成一个dict。示例\n\n```python\n\ndef person(name, age, **kw)\n    print 'name:',name, 'age:',age,'other:', kw\nperson('Michael', 30,city='beijing')\n```\n在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。\n\n## 高级特性\n### 切片\n切片操作可以轻松的切成一段数列,例如`L`是一个`list`\n\n```python\n# 取前3个元素\nL[0:3]\n#或\nL[:3]\n#取后10个元素\nL[-10:]\n#前十个数,每个2个取一个\nL[:10:2]\n#所有数,每隔5个取一个\nL[::5]\n#字符串同样支持切片操作.\n```\n### 迭代\ndict可以同时迭代key和value:\n\n```python\nfor k, v in d.iteritems()\n```\n判断一个对象是否可以迭代,可以用collections模块里的iterable类型:\n\n```python\nisinstance('abd', Iterable)\noutput: True\n```\n同时迭代索引和元素\n```python\nfor i, value in enumerate(list):  \n```           \n### 列表生成式\n列表生成式可以看成对for循环语句的简化.例如\n\n```python\n[x*x for x in range(1,11)]\noutput:   [1,4,9,16,25,36,4964,81,100]\n#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断\n[x*x for x in range(1,11) if x%2==0]\noutput:[4,16,36,64,100]\n#还可以使用两层循环          \n[m+n for m in 'ABC' for n in 'XYZ']\noutput:['AX','AY','AZ','BX','BY','BZ','CX','CY','CZ']\n```\n### 生成器\n生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个`generator`.\n\n```python\ng = (x*x for x in range(1,11))\n```\n创建一个`generator`后,可以通过`next()`来打印里面的元素,或者使用`for`循环迭代.还可以使用`yield`关键字,将函数定义成`generator`,例如:    \n\n```python\n>>> def odd():\n...    print 'step1'\n...    yield 1\n...    print 'step2'\n...    yield 2\n...    print 'step3'\n...    yield 3\n...\n>>> o = odd()\n>>> o.next()\nstep1\n1\n>>> o.next()\nstep2\n2\n>>> o.next()\nstep3\n3\n```\n每当调用`next()`的时候,遇到`yield`语句返回,再次执行时,会从上次返回的`yield`语句处继续执行.\n\n## 函数式编程\n所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.\n### 匿名函数\n\n```python\nlambda x: x*x\n```\nlambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.\n### 装饰器\n函数也是个对象,赋给变量,函数还有个__name__属性,可以获得函数名称.","slug":"Python语法预览","published":1,"updated":"2016-09-03T15:46:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44k001k9rui9sngtd62","content":"<h2 id=\"数据类型和变量\"><a href=\"#数据类型和变量\" class=\"headerlink\" title=\"数据类型和变量\"></a>数据类型和变量</h2><p>python语言是动态语言</p>\n<h2 id=\"字符串和编码\"><a href=\"#字符串和编码\" class=\"headerlink\" title=\"字符串和编码\"></a>字符串和编码</h2><ul>\n<li>UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。</li>\n<li>在python中，Unicode表示的字符串用u’…’表示.</li>\n<li>将Unicode字符转化为UTF-8字符用<code>encode(&#39;utf-8&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">u'ABC'</span>.encode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>将UTF-8字符转化为Unicode字符用<code>decode(&#39;utf&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'abc'</span>.decode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:<br><code>#-*- coding:utf-8 -*-</code></li>\n<li>python的格式化方法与C 语言一致,用%实现,如:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'hello, %s'</span> %<span class=\"string\">'world'</span></div><div class=\"line\">hello, world</div><div class=\"line\"><span class=\"string\">'Hi, %s, you have $%d.'</span> %(<span class=\"string\">'Michael'</span>, <span class=\"number\">10000</span>)</div><div class=\"line\">Hi, Michael, you have $<span class=\"number\">1000.</span></div></pre></td></tr></table></figure>\n<ul>\n<li>有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.<ul>\n<li>常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.</li>\n<li>格式化整数和浮点数还可以指定是否补0和整数与小数的位数.</li>\n<li>在格式化字符串中,需要转义%时,可用%%表示.</li>\n</ul>\n</li>\n<li>在python 3.x中,’xxxx’和u’xxxx’ 统一成Unicode编码.</li>\n</ul>\n<h2 id=\"使用list和tuple\"><a href=\"#使用list和tuple\" class=\"headerlink\" title=\"使用list和tuple\"></a>使用list和tuple</h2><h3 id=\"list的使用\"><a href=\"#list的使用\" class=\"headerlink\" title=\"list的使用\"></a>list的使用</h3><p>list里面的元素类型可以不同，也可以添加另外一个list   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">classmates = [<span class=\"string\">'Box'</span>, <span class=\"string\">'Ads'</span>] <span class=\"comment\">#创建list变量</span></div><div class=\"line\">classmates[<span class=\"number\">0</span>] <span class=\"comment\">#访问list中的元素</span></div><div class=\"line\">output:<span class=\"string\">'Box'</span></div><div class=\"line\"><span class=\"comment\">#访问list最后一个元素</span></div><div class=\"line\">classmates[<span class=\"number\">-1</span>] </div><div class=\"line\">output: <span class=\"string\">'Ads'</span></div><div class=\"line\"><span class=\"comment\">#添加元素到末尾</span></div><div class=\"line\">classmates.append(<span class=\"string\">'and'</span>)</div><div class=\"line\"><span class=\"comment\">#插入元素到指定位置</span></div><div class=\"line\">classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">'sdd'</span>)</div><div class=\"line\"><span class=\"comment\">#删除末尾的元素</span></div><div class=\"line\">classmates.pop()</div><div class=\"line\"><span class=\"comment\">#删除指定位置的元素</span></div><div class=\"line\">classmates.pop(i)</div><div class=\"line\"><span class=\"comment\">#获得list的长度</span></div><div class=\"line\">len(classmates)</div></pre></td></tr></table></figure>\n<h3 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h3><p>tuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#创建一个tuple</span></div><div class=\"line\">classmates= (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"comment\">#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：</span></div><div class=\"line\">classmates = (<span class=\"number\">1</span>,)</div></pre></td></tr></table></figure>\n<p>tuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。</p>\n<h3 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h3><p>dict类似与其他编程语言中的map</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#创建一个dict</span></div><div class=\"line\">d=&#123;<span class=\"string\">'misc'</span>:<span class=\"number\">93</span>,<span class=\"string\">'sds'</span>:<span class=\"number\">82</span>&#125;</div><div class=\"line\"><span class=\"comment\">#还可以通过key来放入value：</span></div><div class=\"line\">d[<span class=\"string\">'misc'</span>] = <span class=\"number\">23</span></div><div class=\"line\"><span class=\"comment\">#判断key是否存在</span></div><div class=\"line\"><span class=\"string\">'sidh'</span> <span class=\"keyword\">in</span> d</div><div class=\"line\"><span class=\"comment\">#当key不存在时，用get方法返回的是None，或者自己指定的返回值</span></div><div class=\"line\">d.get(<span class=\"string\">'sd'</span>, <span class=\"number\">-1</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>set类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">s= set([<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\"><span class=\"comment\">#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。</span></div><div class=\"line\"><span class=\"comment\">#可以通过remove(key)来移除元素。</span></div><div class=\"line\"><span class=\"comment\"># set可以作数学意义上的交集、并集等操作</span></div><div class=\"line\">s1 = set([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">s2 = set([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\">s1 &amp; s2</div><div class=\"line\">s1 | s2</div><div class=\"line\">```      </div><div class=\"line\">set和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">## 条件判断和循环</span></div><div class=\"line\"><span class=\"comment\">### if表达式格式</span></div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\"><span class=\"keyword\">if</span> &lt;条件判断<span class=\"number\">1</span>&gt;:</div><div class=\"line\">    &lt;执行<span class=\"number\">1</span>&gt;</div><div class=\"line\"><span class=\"keyword\">elif</span> &lt;条件判断<span class=\"number\">2</span>&gt;:</div><div class=\"line\">    &lt;执行<span class=\"number\">2</span>&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;执行<span class=\"number\">3</span>&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"for循环格式\"><a href=\"#for循环格式\" class=\"headerlink\" title=\"for循环格式\"></a>for循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):  <span class=\"comment\">#range()可以生成整数序列</span></div></pre></td></tr></table></figure>\n<h3 id=\"while-循环格式\"><a href=\"#while-循环格式\" class=\"headerlink\" title=\"while 循环格式\"></a>while 循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> &lt;条件判断&gt; :</div></pre></td></tr></table></figure>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>python的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#函数定义</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1, parameter2...)</span> :</span></div><div class=\"line\">    &lt;函数体&gt;</div></pre></td></tr></table></figure>\n<p>没有写return的函数会返回None。定义一个空函数可以用pass语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nothing</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<p>pass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用<code>isinstance</code>函数实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isintance(x,(int,float)):</div><div class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">'bad operand type'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> x &gt;=<span class=\"number\">0</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> x</div><div class=\"line\">    <span class=\"keyword\">else</span> :</div><div class=\"line\">        <span class=\"keyword\">return</span> -x</div></pre></td></tr></table></figure>\n<p>python函数可以返回多个返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">x,y = move(x,y)</div></pre></td></tr></table></figure>\n<p>实际上，返回的只是一个tuple，只是写法上简化了。</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">call_city</span><span class=\"params\">(x,y, city=<span class=\"string\">'beijing'</span>,age=<span class=\"number\">12</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<p>默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">call_city(x,y, age=<span class=\"number\">12</span>)</div></pre></td></tr></table></figure>\n<p>默认参数，最好指向不变对象。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数与定义list参数的区别就是在参数前面加个*，例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_sum</span><span class=\"params\">(*numbers)</span>:</span></div><div class=\"line\">    sum =<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</div><div class=\"line\">           sum += n</div><div class=\"line\">    <span class=\"keyword\">return</span> sum</div></pre></td></tr></table></figure>\n<p>对于函数体内部来说，<code>numbers</code>接受的是一个<code>tuple</code>。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数</p>\n<h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><p>关键字参数会在函数内部自动组装成一个dict。示例</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">def person(name, age, **kw)</div><div class=\"line\">    print 'name:',name, 'age:',age,'other:', kw</div><div class=\"line\">person('Michael', 30,city='beijing')</div></pre></td></tr></table></figure>\n<p>在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。</p>\n<h2 id=\"高级特性\"><a href=\"#高级特性\" class=\"headerlink\" title=\"高级特性\"></a>高级特性</h2><h3 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h3><p>切片操作可以轻松的切成一段数列,例如<code>L</code>是一个<code>list</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 取前3个元素</span></div><div class=\"line\">L[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"comment\">#或</span></div><div class=\"line\">L[:<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"comment\">#取后10个元素</span></div><div class=\"line\">L[<span class=\"number\">-10</span>:]</div><div class=\"line\"><span class=\"comment\">#前十个数,每个2个取一个</span></div><div class=\"line\">L[:<span class=\"number\">10</span>:<span class=\"number\">2</span>]</div><div class=\"line\"><span class=\"comment\">#所有数,每隔5个取一个</span></div><div class=\"line\">L[::<span class=\"number\">5</span>]</div><div class=\"line\"><span class=\"comment\">#字符串同样支持切片操作.</span></div></pre></td></tr></table></figure>\n<h3 id=\"迭代\"><a href=\"#迭代\" class=\"headerlink\" title=\"迭代\"></a>迭代</h3><p>dict可以同时迭代key和value:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.iteritems()</div></pre></td></tr></table></figure>\n<p>判断一个对象是否可以迭代,可以用collections模块里的iterable类型:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">isinstance(<span class=\"string\">'abd'</span>, Iterable)</div><div class=\"line\">output: <span class=\"keyword\">True</span></div></pre></td></tr></table></figure>\n<p>同时迭代索引和元素<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i, value <span class=\"keyword\">in</span> enumerate(list):  </div><div class=\"line\">```           </div><div class=\"line\"><span class=\"comment\">### 列表生成式</span></div><div class=\"line\">列表生成式可以看成对<span class=\"keyword\">for</span>循环语句的简化.例如</div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</div><div class=\"line\">output:   [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">16</span>,<span class=\"number\">25</span>,<span class=\"number\">36</span>,<span class=\"number\">4964</span>,<span class=\"number\">81</span>,<span class=\"number\">100</span>]</div><div class=\"line\"><span class=\"comment\">#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断</span></div><div class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>) <span class=\"keyword\">if</span> x%<span class=\"number\">2</span>==<span class=\"number\">0</span>]</div><div class=\"line\">output:[<span class=\"number\">4</span>,<span class=\"number\">16</span>,<span class=\"number\">36</span>,<span class=\"number\">64</span>,<span class=\"number\">100</span>]</div><div class=\"line\"><span class=\"comment\">#还可以使用两层循环          </span></div><div class=\"line\">[m+n <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"string\">'ABC'</span> <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"string\">'XYZ'</span>]</div><div class=\"line\">output:[<span class=\"string\">'AX'</span>,<span class=\"string\">'AY'</span>,<span class=\"string\">'AZ'</span>,<span class=\"string\">'BX'</span>,<span class=\"string\">'BY'</span>,<span class=\"string\">'BZ'</span>,<span class=\"string\">'CX'</span>,<span class=\"string\">'CY'</span>,<span class=\"string\">'CZ'</span>]</div></pre></td></tr></table></figure></p>\n<h3 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h3><p>生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个<code>generator</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">g = (x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>))</div></pre></td></tr></table></figure>\n<p>创建一个<code>generator</code>后,可以通过<code>next()</code>来打印里面的元素,或者使用<code>for</code>循环迭代.还可以使用<code>yield</code>关键字,将函数定义成<code>generator</code>,例如:    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">odd</span><span class=\"params\">()</span>:</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step1'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step2'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step3'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">3</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o = odd()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step1</div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step2</div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step3</div><div class=\"line\"><span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>每当调用<code>next()</code>的时候,遇到<code>yield</code>语句返回,再次执行时,会从上次返回的<code>yield</code>语句处继续执行.</p>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.</p>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">lambda</span> x: x*x</div></pre></td></tr></table></figure>\n<p>lambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>函数也是个对象,赋给变量,函数还有个<strong>name</strong>属性,可以获得函数名称.</p>\n","excerpt":"","more":"<h2 id=\"数据类型和变量\"><a href=\"#数据类型和变量\" class=\"headerlink\" title=\"数据类型和变量\"></a>数据类型和变量</h2><p>python语言是动态语言</p>\n<h2 id=\"字符串和编码\"><a href=\"#字符串和编码\" class=\"headerlink\" title=\"字符串和编码\"></a>字符串和编码</h2><ul>\n<li>UTF-8是可变长编码，用来转化Unicode编码，UTF-8一个Unicode字符根据不同的数字大小编码成1-6个字节。</li>\n<li>在python中，Unicode表示的字符串用u’…’表示.</li>\n<li>将Unicode字符转化为UTF-8字符用<code>encode(&#39;utf-8&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">u'ABC'</span>.encode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>将UTF-8字符转化为Unicode字符用<code>decode(&#39;utf&#39;)</code>:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'abc'</span>.decode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>让python解释器按照UTF-8编码读取文件,需要在文件开头写上如下:<br><code>#-*- coding:utf-8 -*-</code></li>\n<li>python的格式化方法与C 语言一致,用%实现,如:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'hello, %s'</span> %<span class=\"string\">'world'</span></div><div class=\"line\">hello, world</div><div class=\"line\"><span class=\"string\">'Hi, %s, you have $%d.'</span> %(<span class=\"string\">'Michael'</span>, <span class=\"number\">10000</span>)</div><div class=\"line\">Hi, Michael, you have $<span class=\"number\">1000.</span></div></pre></td></tr></table></figure>\n<ul>\n<li>有几个%占位符,后面就跟多少个变量,顺序要对应好,如果只有一个%,可省略括号.<ul>\n<li>常见的占位符有,%d整数, %f浮点数,%s字符串,%x十六进制数.</li>\n<li>格式化整数和浮点数还可以指定是否补0和整数与小数的位数.</li>\n<li>在格式化字符串中,需要转义%时,可用%%表示.</li>\n</ul>\n</li>\n<li>在python 3.x中,’xxxx’和u’xxxx’ 统一成Unicode编码.</li>\n</ul>\n<h2 id=\"使用list和tuple\"><a href=\"#使用list和tuple\" class=\"headerlink\" title=\"使用list和tuple\"></a>使用list和tuple</h2><h3 id=\"list的使用\"><a href=\"#list的使用\" class=\"headerlink\" title=\"list的使用\"></a>list的使用</h3><p>list里面的元素类型可以不同，也可以添加另外一个list   </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">classmates = [<span class=\"string\">'Box'</span>, <span class=\"string\">'Ads'</span>] <span class=\"comment\">#创建list变量</span></div><div class=\"line\">classmates[<span class=\"number\">0</span>] <span class=\"comment\">#访问list中的元素</span></div><div class=\"line\">output:<span class=\"string\">'Box'</span></div><div class=\"line\"><span class=\"comment\">#访问list最后一个元素</span></div><div class=\"line\">classmates[<span class=\"number\">-1</span>] </div><div class=\"line\">output: <span class=\"string\">'Ads'</span></div><div class=\"line\"><span class=\"comment\">#添加元素到末尾</span></div><div class=\"line\">classmates.append(<span class=\"string\">'and'</span>)</div><div class=\"line\"><span class=\"comment\">#插入元素到指定位置</span></div><div class=\"line\">classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">'sdd'</span>)</div><div class=\"line\"><span class=\"comment\">#删除末尾的元素</span></div><div class=\"line\">classmates.pop()</div><div class=\"line\"><span class=\"comment\">#删除指定位置的元素</span></div><div class=\"line\">classmates.pop(i)</div><div class=\"line\"><span class=\"comment\">#获得list的长度</span></div><div class=\"line\">len(classmates)</div></pre></td></tr></table></figure>\n<h3 id=\"tuple\"><a href=\"#tuple\" class=\"headerlink\" title=\"tuple\"></a>tuple</h3><p>tuple类似与list，只是tuple一旦初始化就不可以修改。tuple没有append和insert方法，  获得元素的方法与list一样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#创建一个tuple</span></div><div class=\"line\">classmates= (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</div><div class=\"line\"><span class=\"comment\">#需要注意的是，当创建只有一个元素的tuple时，需要这样作来消除歧义：</span></div><div class=\"line\">classmates = (<span class=\"number\">1</span>,)</div></pre></td></tr></table></figure>\n<p>tuple可以包含list元素，tuple所包含的list元素中的元素内容可以更改。</p>\n<h3 id=\"dict\"><a href=\"#dict\" class=\"headerlink\" title=\"dict\"></a>dict</h3><p>dict类似与其他编程语言中的map</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#创建一个dict</span></div><div class=\"line\">d=&#123;<span class=\"string\">'misc'</span>:<span class=\"number\">93</span>,<span class=\"string\">'sds'</span>:<span class=\"number\">82</span>&#125;</div><div class=\"line\"><span class=\"comment\">#还可以通过key来放入value：</span></div><div class=\"line\">d[<span class=\"string\">'misc'</span>] = <span class=\"number\">23</span></div><div class=\"line\"><span class=\"comment\">#判断key是否存在</span></div><div class=\"line\"><span class=\"string\">'sidh'</span> <span class=\"keyword\">in</span> d</div><div class=\"line\"><span class=\"comment\">#当key不存在时，用get方法返回的是None，或者自己指定的返回值</span></div><div class=\"line\">d.get(<span class=\"string\">'sd'</span>, <span class=\"number\">-1</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><p>set类似与dict，但是只有key，没有对应的value，在set没有重复的key，创建set需要提供一个list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">s= set([<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\"><span class=\"comment\">#在set重复的元素会自动被过滤，可以通过add(key)来添加元素，但是添加重复的元素没有效果。</span></div><div class=\"line\"><span class=\"comment\">#可以通过remove(key)来移除元素。</span></div><div class=\"line\"><span class=\"comment\"># set可以作数学意义上的交集、并集等操作</span></div><div class=\"line\">s1 = set([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">s2 = set([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</div><div class=\"line\">s1 &amp; s2</div><div class=\"line\">s1 | s2</div><div class=\"line\">```      </div><div class=\"line\">set和dict不可放入可变对象，另外对于不可变对象，调用自身任何方法都不会改变自己,而是会创造一个新的对象并返回。  </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">## 条件判断和循环</span></div><div class=\"line\"><span class=\"comment\">### if表达式格式</span></div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\"><span class=\"keyword\">if</span> &lt;条件判断<span class=\"number\">1</span>&gt;:</div><div class=\"line\">    &lt;执行<span class=\"number\">1</span>&gt;</div><div class=\"line\"><span class=\"keyword\">elif</span> &lt;条件判断<span class=\"number\">2</span>&gt;:</div><div class=\"line\">    &lt;执行<span class=\"number\">2</span>&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;执行<span class=\"number\">3</span>&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"for循环格式\"><a href=\"#for循环格式\" class=\"headerlink\" title=\"for循环格式\"></a>for循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):  <span class=\"comment\">#range()可以生成整数序列</span></div></pre></td></tr></table></figure>\n<h3 id=\"while-循环格式\"><a href=\"#while-循环格式\" class=\"headerlink\" title=\"while 循环格式\"></a>while 循环格式</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> &lt;条件判断&gt; :</div></pre></td></tr></table></figure>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>python的函数相当与一个对象的引用。因此，可以将函数赋予一个变量，相当于给函数起了一个       别名。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#函数定义</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1, parameter2...)</span> :</span></div><div class=\"line\">    &lt;函数体&gt;</div></pre></td></tr></table></figure>\n<p>没有写return的函数会返回None。定义一个空函数可以用pass语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nothing</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<p>pass语句什么都不作，可以用来当占位符使用。   函数不会检查参数类型，我们可以自己加上类型检查，使用<code>isinstance</code>函数实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isintance(x,(int,float)):</div><div class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">'bad operand type'</span>)</div><div class=\"line\">    <span class=\"keyword\">if</span> x &gt;=<span class=\"number\">0</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> x</div><div class=\"line\">    <span class=\"keyword\">else</span> :</div><div class=\"line\">        <span class=\"keyword\">return</span> -x</div></pre></td></tr></table></figure>\n<p>python函数可以返回多个返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">x,y = move(x,y)</div></pre></td></tr></table></figure>\n<p>实际上，返回的只是一个tuple，只是写法上简化了。</p>\n<h3 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">call_city</span><span class=\"params\">(x,y, city=<span class=\"string\">'beijing'</span>,age=<span class=\"number\">12</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<p>默认参数原则：默认值写在最后面,也可以不按顺序提供部分默认参数，当需要指名参数名：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">call_city(x,y, age=<span class=\"number\">12</span>)</div></pre></td></tr></table></figure>\n<p>默认参数，最好指向不变对象。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>可变参数与定义list参数的区别就是在参数前面加个*，例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc_sum</span><span class=\"params\">(*numbers)</span>:</span></div><div class=\"line\">    sum =<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</div><div class=\"line\">           sum += n</div><div class=\"line\">    <span class=\"keyword\">return</span> sum</div></pre></td></tr></table></figure>\n<p>对于函数体内部来说，<code>numbers</code>接受的是一个<code>tuple</code>。   如果有一个list或者tuple变量，要调用可变参数的话，可以在变量前加*，把list和tuple转化为可变参数</p>\n<h3 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h3><p>关键字参数会在函数内部自动组装成一个dict。示例</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">def person(name, age, **kw)</div><div class=\"line\">    print 'name:',name, 'age:',age,'other:', kw</div><div class=\"line\">person('Michael', 30,city='beijing')</div></pre></td></tr></table></figure>\n<p>在调用函数时，可以只传入必选参数，也可以传入任意数量的关键字参数。</p>\n<h2 id=\"高级特性\"><a href=\"#高级特性\" class=\"headerlink\" title=\"高级特性\"></a>高级特性</h2><h3 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h3><p>切片操作可以轻松的切成一段数列,例如<code>L</code>是一个<code>list</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 取前3个元素</span></div><div class=\"line\">L[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"comment\">#或</span></div><div class=\"line\">L[:<span class=\"number\">3</span>]</div><div class=\"line\"><span class=\"comment\">#取后10个元素</span></div><div class=\"line\">L[<span class=\"number\">-10</span>:]</div><div class=\"line\"><span class=\"comment\">#前十个数,每个2个取一个</span></div><div class=\"line\">L[:<span class=\"number\">10</span>:<span class=\"number\">2</span>]</div><div class=\"line\"><span class=\"comment\">#所有数,每隔5个取一个</span></div><div class=\"line\">L[::<span class=\"number\">5</span>]</div><div class=\"line\"><span class=\"comment\">#字符串同样支持切片操作.</span></div></pre></td></tr></table></figure>\n<h3 id=\"迭代\"><a href=\"#迭代\" class=\"headerlink\" title=\"迭代\"></a>迭代</h3><p>dict可以同时迭代key和value:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.iteritems()</div></pre></td></tr></table></figure>\n<p>判断一个对象是否可以迭代,可以用collections模块里的iterable类型:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">isinstance(<span class=\"string\">'abd'</span>, Iterable)</div><div class=\"line\">output: <span class=\"keyword\">True</span></div></pre></td></tr></table></figure>\n<p>同时迭代索引和元素<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i, value <span class=\"keyword\">in</span> enumerate(list):  </div><div class=\"line\">```           </div><div class=\"line\"><span class=\"comment\">### 列表生成式</span></div><div class=\"line\">列表生成式可以看成对<span class=\"keyword\">for</span>循环语句的简化.例如</div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</div><div class=\"line\">output:   [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">16</span>,<span class=\"number\">25</span>,<span class=\"number\">36</span>,<span class=\"number\">4964</span>,<span class=\"number\">81</span>,<span class=\"number\">100</span>]</div><div class=\"line\"><span class=\"comment\">#将生成的元素x*x放在前面,后面跟for循环.for循环后还可以加上if判断</span></div><div class=\"line\">[x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>) <span class=\"keyword\">if</span> x%<span class=\"number\">2</span>==<span class=\"number\">0</span>]</div><div class=\"line\">output:[<span class=\"number\">4</span>,<span class=\"number\">16</span>,<span class=\"number\">36</span>,<span class=\"number\">64</span>,<span class=\"number\">100</span>]</div><div class=\"line\"><span class=\"comment\">#还可以使用两层循环          </span></div><div class=\"line\">[m+n <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"string\">'ABC'</span> <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"string\">'XYZ'</span>]</div><div class=\"line\">output:[<span class=\"string\">'AX'</span>,<span class=\"string\">'AY'</span>,<span class=\"string\">'AZ'</span>,<span class=\"string\">'BX'</span>,<span class=\"string\">'BY'</span>,<span class=\"string\">'BZ'</span>,<span class=\"string\">'CX'</span>,<span class=\"string\">'CY'</span>,<span class=\"string\">'CZ'</span>]</div></pre></td></tr></table></figure></p>\n<h3 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h3><p>生成器只存储算法,需要时才会将后续的元素计算出来,从而节省大量的空间.将上述列表生成式的[]改成()就创建了一个<code>generator</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">g = (x*x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>))</div></pre></td></tr></table></figure>\n<p>创建一个<code>generator</code>后,可以通过<code>next()</code>来打印里面的元素,或者使用<code>for</code>循环迭代.还可以使用<code>yield</code>关键字,将函数定义成<code>generator</code>,例如:    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">odd</span><span class=\"params\">()</span>:</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step1'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step2'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">2</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">print</span> <span class=\"string\">'step3'</span></div><div class=\"line\"><span class=\"meta\">... </span>   <span class=\"keyword\">yield</span> <span class=\"number\">3</span></div><div class=\"line\">...</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o = odd()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step1</div><div class=\"line\"><span class=\"number\">1</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step2</div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>o.next()</div><div class=\"line\">step3</div><div class=\"line\"><span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>每当调用<code>next()</code>的时候,遇到<code>yield</code>语句返回,再次执行时,会从上次返回的<code>yield</code>语句处继续执行.</p>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>所谓高阶函数可以理解为,可以接受另外一个函数作为参数的函数,还可将函数作为返回值.</p>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">lambda</span> x: x*x</div></pre></td></tr></table></figure>\n<p>lambda表示匿名函数,冒号前面的x表示参数,匿名函数只能有一个表达式.返回值就是该表达式的结果.</p>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><p>函数也是个对象,赋给变量,函数还有个<strong>name</strong>属性,可以获得函数名称.</p>\n"},{"title":"Python资料收集","date":"2016-09-13T13:18:05.000Z","_content":"## 常用网站\n|网站|备注|\n|:--:|:---|\n|[Python 官方网站](https://www.python.org/)|Python 官方网站|\n|[pip主页](https://pypi.python.org/pypi/pip)|pip主页|\n|[pip文档](http://pip.readthedocs.io/en/stable/)|pip文档|\n|[Pycharm](https://www.jetbrains.com/pycharm/)|最流行的Python IDE|\n|[ANACONDA](https://www.continuum.io/downloads)|最适合做科学计算的IDE|\n|[python-virtualenv](https://groups.google.com/forum/#!forum/python-virtualenv)|Google python社区|\n|[awesome python](http://awesome-python.com/)|Python 资料大全|\n|[numpy exercises](https://github.com/rougier/numpy-100)|numpy 练习|\n|[Python中文官方文档](http://python.usyiyi.cn/)|中文官方文档|\n\n## 常用包\n|网站|备注|\n|:--:|:---|\n|[scrapy](https://scrapy.org/)|最出名的网络爬虫|\n|[PyQuery](https://github.com/gawel/pyquery)|仿照jQuery的实现，语法与jQuery相同|\n\n## 书籍推荐\n* 《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看\n* 《Python 语言及其应用》：适合初学者入门\n* 《Python 高级编程》：进阶书籍\n* 《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。\n* 《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》\n* 《Effective Python: 编写高质量 Python 代码的 59 个有效方法》\n* 《Python Web 开发实战》\n* 《Python 网络数据采集》\n\n## 技术文章\n* [量化编程、Python 入门及量化策略、量化知识总结贴](https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务](http://python.jobbole.com/86296/)\n* [Python 不能不知的模块](http://python.jobbole.com/86332/)\n* [Python 中的关键字 with 详解](https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [A Python Interpreter Written in Python](http://qingyunha.github.io/taotao/)\n* [Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)\n* [Python 高效编程技巧](http://blogread.cn/it/article/6159?f=wb)\n* [2015 年十大流行 Python 库](http://www.imooc.com/article/3831)\n* [我理解的 Python 最佳实践](http://www.imooc.com/article/2994)\n* [从零构建一个简单的 Python 框架](https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo)\n* [NumPy 的详细教程](http://www.tuicool.com/articles/r2yyei)","source":"_posts/Python资料收集.md","raw":"---\ntitle: Python资料收集\ndate: 2016-09-13 21:18:05\ntags: [Python]\ncategories: Python\n---\n## 常用网站\n|网站|备注|\n|:--:|:---|\n|[Python 官方网站](https://www.python.org/)|Python 官方网站|\n|[pip主页](https://pypi.python.org/pypi/pip)|pip主页|\n|[pip文档](http://pip.readthedocs.io/en/stable/)|pip文档|\n|[Pycharm](https://www.jetbrains.com/pycharm/)|最流行的Python IDE|\n|[ANACONDA](https://www.continuum.io/downloads)|最适合做科学计算的IDE|\n|[python-virtualenv](https://groups.google.com/forum/#!forum/python-virtualenv)|Google python社区|\n|[awesome python](http://awesome-python.com/)|Python 资料大全|\n|[numpy exercises](https://github.com/rougier/numpy-100)|numpy 练习|\n|[Python中文官方文档](http://python.usyiyi.cn/)|中文官方文档|\n\n## 常用包\n|网站|备注|\n|:--:|:---|\n|[scrapy](https://scrapy.org/)|最出名的网络爬虫|\n|[PyQuery](https://github.com/gawel/pyquery)|仿照jQuery的实现，语法与jQuery相同|\n\n## 书籍推荐\n* 《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看\n* 《Python 语言及其应用》：适合初学者入门\n* 《Python 高级编程》：进阶书籍\n* 《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。\n* 《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》\n* 《Effective Python: 编写高质量 Python 代码的 59 个有效方法》\n* 《Python Web 开发实战》\n* 《Python 网络数据采集》\n\n## 技术文章\n* [量化编程、Python 入门及量化策略、量化知识总结贴](https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务](http://python.jobbole.com/86296/)\n* [Python 不能不知的模块](http://python.jobbole.com/86332/)\n* [Python 中的关键字 with 详解](https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [A Python Interpreter Written in Python](http://qingyunha.github.io/taotao/)\n* [Python 包、模块、类以及代码文件和目录的一种管理方案](Python 包、模块、类以及代码文件和目录的一种管理方案)\n* [Python 高效编程技巧](http://blogread.cn/it/article/6159?f=wb)\n* [2015 年十大流行 Python 库](http://www.imooc.com/article/3831)\n* [我理解的 Python 最佳实践](http://www.imooc.com/article/2994)\n* [从零构建一个简单的 Python 框架](https://linux.cn/article-7765-1.html?utm_source=weibo&utm_medium=weibo)\n* [NumPy 的详细教程](http://www.tuicool.com/articles/r2yyei)","slug":"Python资料收集","published":1,"updated":"2016-09-25T04:47:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44l001o9ruiwmopyxvc","content":"<h2 id=\"常用网站\"><a href=\"#常用网站\" class=\"headerlink\" title=\"常用网站\"></a>常用网站</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">网站</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.python.org/\" target=\"_blank\" rel=\"external\">Python 官方网站</a></td>\n<td style=\"text-align:left\">Python 官方网站</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://pypi.python.org/pypi/pip\" target=\"_blank\" rel=\"external\">pip主页</a></td>\n<td style=\"text-align:left\">pip主页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://pip.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"external\">pip文档</a></td>\n<td style=\"text-align:left\">pip文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\" rel=\"external\">Pycharm</a></td>\n<td style=\"text-align:left\">最流行的Python IDE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.continuum.io/downloads\" target=\"_blank\" rel=\"external\">ANACONDA</a></td>\n<td style=\"text-align:left\">最适合做科学计算的IDE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://groups.google.com/forum/#!forum/python-virtualenv\" target=\"_blank\" rel=\"external\">python-virtualenv</a></td>\n<td style=\"text-align:left\">Google python社区</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://awesome-python.com/\" target=\"_blank\" rel=\"external\">awesome python</a></td>\n<td style=\"text-align:left\">Python 资料大全</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/rougier/numpy-100\" target=\"_blank\" rel=\"external\">numpy exercises</a></td>\n<td style=\"text-align:left\">numpy 练习</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://python.usyiyi.cn/\" target=\"_blank\" rel=\"external\">Python中文官方文档</a></td>\n<td style=\"text-align:left\">中文官方文档</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">网站</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://scrapy.org/\" target=\"_blank\" rel=\"external\">scrapy</a></td>\n<td style=\"text-align:left\">最出名的网络爬虫</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/gawel/pyquery\" target=\"_blank\" rel=\"external\">PyQuery</a></td>\n<td style=\"text-align:left\">仿照jQuery的实现，语法与jQuery相同</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h2><ul>\n<li>《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看</li>\n<li>《Python 语言及其应用》：适合初学者入门</li>\n<li>《Python 高级编程》：进阶书籍</li>\n<li>《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。</li>\n<li>《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》</li>\n<li>《Effective Python: 编写高质量 Python 代码的 59 个有效方法》</li>\n<li>《Python Web 开发实战》</li>\n<li>《Python 网络数据采集》</li>\n</ul>\n<h2 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h2><ul>\n<li><a href=\"https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"external\">量化编程、Python 入门及量化策略、量化知识总结贴</a></li>\n<li><a href=\"http://python.jobbole.com/86296/\" target=\"_blank\" rel=\"external\">网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务</a></li>\n<li><a href=\"http://python.jobbole.com/86332/\" target=\"_blank\" rel=\"external\">Python 不能不知的模块</a></li>\n<li><a href=\"https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"external\">Python 中的关键字 with 详解</a></li>\n<li><a href=\"http://qingyunha.github.io/taotao/\" target=\"_blank\" rel=\"external\">A Python Interpreter Written in Python</a></li>\n<li><a href=\"Python 包、模块、类以及代码文件和目录的一种管理方案\">Python 包、模块、类以及代码文件和目录的一种管理方案</a></li>\n<li><a href=\"http://blogread.cn/it/article/6159?f=wb\" target=\"_blank\" rel=\"external\">Python 高效编程技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/3831\" target=\"_blank\" rel=\"external\">2015 年十大流行 Python 库</a></li>\n<li><a href=\"http://www.imooc.com/article/2994\" target=\"_blank\" rel=\"external\">我理解的 Python 最佳实践</a></li>\n<li><a href=\"https://linux.cn/article-7765-1.html?utm_source=weibo&amp;utm_medium=weibo\" target=\"_blank\" rel=\"external\">从零构建一个简单的 Python 框架</a></li>\n<li><a href=\"http://www.tuicool.com/articles/r2yyei\" target=\"_blank\" rel=\"external\">NumPy 的详细教程</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"常用网站\"><a href=\"#常用网站\" class=\"headerlink\" title=\"常用网站\"></a>常用网站</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">网站</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.python.org/\">Python 官方网站</a></td>\n<td style=\"text-align:left\">Python 官方网站</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://pypi.python.org/pypi/pip\">pip主页</a></td>\n<td style=\"text-align:left\">pip主页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://pip.readthedocs.io/en/stable/\">pip文档</a></td>\n<td style=\"text-align:left\">pip文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.jetbrains.com/pycharm/\">Pycharm</a></td>\n<td style=\"text-align:left\">最流行的Python IDE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://www.continuum.io/downloads\">ANACONDA</a></td>\n<td style=\"text-align:left\">最适合做科学计算的IDE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://groups.google.com/forum/#!forum/python-virtualenv\">python-virtualenv</a></td>\n<td style=\"text-align:left\">Google python社区</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://awesome-python.com/\">awesome python</a></td>\n<td style=\"text-align:left\">Python 资料大全</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/rougier/numpy-100\">numpy exercises</a></td>\n<td style=\"text-align:left\">numpy 练习</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"http://python.usyiyi.cn/\">Python中文官方文档</a></td>\n<td style=\"text-align:left\">中文官方文档</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">网站</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://scrapy.org/\">scrapy</a></td>\n<td style=\"text-align:left\">最出名的网络爬虫</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/gawel/pyquery\">PyQuery</a></td>\n<td style=\"text-align:left\">仿照jQuery的实现，语法与jQuery相同</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h2><ul>\n<li>《Python 学习手册》:对 Python 介绍最全面的书了，包含了绝大多数 Python 语言的关键内容。推荐初学者看</li>\n<li>《Python 语言及其应用》：适合初学者入门</li>\n<li>《Python 高级编程》：进阶书籍</li>\n<li>《Python 高手之路》：本书的作者是开源项目 OpenStack 的 PTL（项目技术负责人）之一的 Julien Danjou。这本书虽然只有 2 百多页，但是本书对项目的结构设计，对模块和库的管理，如何编写文档，如何分发，以及如何通过虚拟环境对项目进行测试都有自己的见解。此外，本书还涉及了很多高级主题，如性能优化、插件化结构的设计与架构、Python 3 的支持策略等。</li>\n<li>《Python 编程实战：运用设计模式、并发和程序库创建高质量程序》</li>\n<li>《Effective Python: 编写高质量 Python 代码的 59 个有效方法》</li>\n<li>《Python Web 开发实战》</li>\n<li>《Python 网络数据采集》</li>\n</ul>\n<h2 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h2><ul>\n<li><a href=\"https://xueqiu.com/7381621247/64925383?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\">量化编程、Python 入门及量化策略、量化知识总结贴</a></li>\n<li><a href=\"http://python.jobbole.com/86296/\">网络爬虫：使用 Scrapy 框架编写一个抓取书籍信息的爬虫服务</a></li>\n<li><a href=\"http://python.jobbole.com/86332/\">Python 不能不知的模块</a></li>\n<li><a href=\"https://yuez.me/python-zhong-de-guan-jian-zi-with-xiang-jie/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\">Python 中的关键字 with 详解</a></li>\n<li><a href=\"http://qingyunha.github.io/taotao/\">A Python Interpreter Written in Python</a></li>\n<li><a href=\"Python 包、模块、类以及代码文件和目录的一种管理方案\">Python 包、模块、类以及代码文件和目录的一种管理方案</a></li>\n<li><a href=\"http://blogread.cn/it/article/6159?f=wb\">Python 高效编程技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/3831\">2015 年十大流行 Python 库</a></li>\n<li><a href=\"http://www.imooc.com/article/2994\">我理解的 Python 最佳实践</a></li>\n<li><a href=\"https://linux.cn/article-7765-1.html?utm_source=weibo&amp;utm_medium=weibo\">从零构建一个简单的 Python 框架</a></li>\n<li><a href=\"http://www.tuicool.com/articles/r2yyei\">NumPy 的详细教程</a></li>\n</ul>\n"},{"title":"Sublime Text之Evernote","date":"2016-09-13T13:27:26.000Z","_content":"\n# Evernote\n\n下载了`Evernote`之后可以用Markdown编写印象笔记了。 [sublime evernote主页](https://github.com/bordaigorl/sublime-evernote)\n\n## 功能\n\n|功能|说明|commond|\n|:---|:--|:----|\n|Delete Node|删除笔记||\n|Search Note|搜索笔记||\n|Show Attachments|显示当前笔记的附件||\n|Attach current file to a note|将当前文件作为附件发送给指定笔记||\n|Insert Attachment Here|在光标处插入附件||\n|Delete Attachment|删除附件||\n|View Note in Web App|打开该笔记的网页版||\n|View Note in Evernote client|在客户端中打开该笔记||\n|Update Evernote Note|更新笔记|save_evernote_note|\n|Send to Evernote as new note|创建新笔记send_to_evernote|\n|Create New Notebook|创建新的笔记本||\n|Open Evernote Note| 打开笔记|open_evernote_note|\n|Clip to Evernote as new note|将当前选中的内容作为新的笔记创建||\n|List linked notes|显示当前笔记引用的其它笔记链接||\n|Insert link to a note|插入其它笔记的链接||\n\n## 配置\n\n访问[Developer Tokens](https://app.yinxiang.com/api/DeveloperToken.action)获取Token，打开Evernote.sublime-settings\n\n```shell\n{\n    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",\n    \"token\": \"\"\n}\n```\n\n### 添加快捷键示例\n\n```shell\n{ \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\", \"text\": \"Evernote: \"} },\n{ \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" },\n```\n\n### 个性化配置\n\n  * md_syntax：定义md语法\n  * inline_css：定义部分CSS样式\n  * code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac","source":"_posts/Sublime-Text之Evernote.md","raw":"---\ntitle: Sublime Text之Evernote\ndate: 2016-09-13 21:27:26\ntags: [sublime, markdown]\ncategories: [sublime]\n---\n\n# Evernote\n\n下载了`Evernote`之后可以用Markdown编写印象笔记了。 [sublime evernote主页](https://github.com/bordaigorl/sublime-evernote)\n\n## 功能\n\n|功能|说明|commond|\n|:---|:--|:----|\n|Delete Node|删除笔记||\n|Search Note|搜索笔记||\n|Show Attachments|显示当前笔记的附件||\n|Attach current file to a note|将当前文件作为附件发送给指定笔记||\n|Insert Attachment Here|在光标处插入附件||\n|Delete Attachment|删除附件||\n|View Note in Web App|打开该笔记的网页版||\n|View Note in Evernote client|在客户端中打开该笔记||\n|Update Evernote Note|更新笔记|save_evernote_note|\n|Send to Evernote as new note|创建新笔记send_to_evernote|\n|Create New Notebook|创建新的笔记本||\n|Open Evernote Note| 打开笔记|open_evernote_note|\n|Clip to Evernote as new note|将当前选中的内容作为新的笔记创建||\n|List linked notes|显示当前笔记引用的其它笔记链接||\n|Insert link to a note|插入其它笔记的链接||\n\n## 配置\n\n访问[Developer Tokens](https://app.yinxiang.com/api/DeveloperToken.action)获取Token，打开Evernote.sublime-settings\n\n```shell\n{\n    \"noteStoreUrl\": \"https://app.yinxiang.com/shard/s1/notestore\",\n    \"token\": \"\"\n}\n```\n\n### 添加快捷键示例\n\n```shell\n{ \"keys\": [\"super+e\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\", \"text\": \"Evernote: \"} },\n{ \"keys\": [\"ctrl+e\", \"ctrl+s\"], \"command\": \"send_to_evernote\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+o\"], \"command\": \"open_evernote_note\" },\n{ \"keys\": [\"ctrl+e\", \"ctrl+u\"], \"command\": \"save_evernote_note\" },\n```\n\n### 个性化配置\n\n  * md_syntax：定义md语法\n  * inline_css：定义部分CSS样式\n  * code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac","slug":"Sublime-Text之Evernote","published":1,"updated":"2016-09-13T13:34:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44o001s9ruibhfcl6j4","content":"<h1 id=\"Evernote\"><a href=\"#Evernote\" class=\"headerlink\" title=\"Evernote\"></a>Evernote</h1><p>下载了<code>Evernote</code>之后可以用Markdown编写印象笔记了。 <a href=\"https://github.com/bordaigorl/sublime-evernote\" target=\"_blank\" rel=\"external\">sublime evernote主页</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">功能</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">commond</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Delete Node</td>\n<td style=\"text-align:left\">删除笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Search Note</td>\n<td style=\"text-align:left\">搜索笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Show Attachments</td>\n<td style=\"text-align:left\">显示当前笔记的附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Attach current file to a note</td>\n<td style=\"text-align:left\">将当前文件作为附件发送给指定笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Insert Attachment Here</td>\n<td style=\"text-align:left\">在光标处插入附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Delete Attachment</td>\n<td style=\"text-align:left\">删除附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">View Note in Web App</td>\n<td style=\"text-align:left\">打开该笔记的网页版</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">View Note in Evernote client</td>\n<td style=\"text-align:left\">在客户端中打开该笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Update Evernote Note</td>\n<td style=\"text-align:left\">更新笔记</td>\n<td style=\"text-align:left\">save_evernote_note</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Send to Evernote as new note</td>\n<td style=\"text-align:left\">创建新笔记send_to_evernote</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Create New Notebook</td>\n<td style=\"text-align:left\">创建新的笔记本</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Open Evernote Note</td>\n<td style=\"text-align:left\">打开笔记</td>\n<td style=\"text-align:left\">open_evernote_note</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Clip to Evernote as new note</td>\n<td style=\"text-align:left\">将当前选中的内容作为新的笔记创建</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">List linked notes</td>\n<td style=\"text-align:left\">显示当前笔记引用的其它笔记链接</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Insert link to a note</td>\n<td style=\"text-align:left\">插入其它笔记的链接</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>访问<a href=\"https://app.yinxiang.com/api/DeveloperToken.action\" target=\"_blank\" rel=\"external\">Developer Tokens</a>获取Token，打开Evernote.sublime-settings</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;noteStoreUrl&quot;: &quot;https://app.yinxiang.com/shard/s1/notestore&quot;,</div><div class=\"line\">    &quot;token&quot;: &quot;&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"添加快捷键示例\"><a href=\"#添加快捷键示例\" class=\"headerlink\" title=\"添加快捷键示例\"></a>添加快捷键示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;keys&quot;: [&quot;super+e&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;command_palette&quot;, &quot;text&quot;: &quot;Evernote: &quot;&#125; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+s&quot;], &quot;command&quot;: &quot;send_to_evernote&quot; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+o&quot;], &quot;command&quot;: &quot;open_evernote_note&quot; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+u&quot;], &quot;command&quot;: &quot;save_evernote_note&quot; &#125;,</div></pre></td></tr></table></figure>\n<h3 id=\"个性化配置\"><a href=\"#个性化配置\" class=\"headerlink\" title=\"个性化配置\"></a>个性化配置</h3><ul>\n<li>md_syntax：定义md语法</li>\n<li>inline_css：定义部分CSS样式</li>\n<li>code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Evernote\"><a href=\"#Evernote\" class=\"headerlink\" title=\"Evernote\"></a>Evernote</h1><p>下载了<code>Evernote</code>之后可以用Markdown编写印象笔记了。 <a href=\"https://github.com/bordaigorl/sublime-evernote\">sublime evernote主页</a></p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">功能</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">commond</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Delete Node</td>\n<td style=\"text-align:left\">删除笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Search Note</td>\n<td style=\"text-align:left\">搜索笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Show Attachments</td>\n<td style=\"text-align:left\">显示当前笔记的附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Attach current file to a note</td>\n<td style=\"text-align:left\">将当前文件作为附件发送给指定笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Insert Attachment Here</td>\n<td style=\"text-align:left\">在光标处插入附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Delete Attachment</td>\n<td style=\"text-align:left\">删除附件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">View Note in Web App</td>\n<td style=\"text-align:left\">打开该笔记的网页版</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">View Note in Evernote client</td>\n<td style=\"text-align:left\">在客户端中打开该笔记</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Update Evernote Note</td>\n<td style=\"text-align:left\">更新笔记</td>\n<td style=\"text-align:left\">save_evernote_note</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Send to Evernote as new note</td>\n<td style=\"text-align:left\">创建新笔记send_to_evernote</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Create New Notebook</td>\n<td style=\"text-align:left\">创建新的笔记本</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Open Evernote Note</td>\n<td style=\"text-align:left\">打开笔记</td>\n<td style=\"text-align:left\">open_evernote_note</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Clip to Evernote as new note</td>\n<td style=\"text-align:left\">将当前选中的内容作为新的笔记创建</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">List linked notes</td>\n<td style=\"text-align:left\">显示当前笔记引用的其它笔记链接</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Insert link to a note</td>\n<td style=\"text-align:left\">插入其它笔记的链接</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>访问<a href=\"https://app.yinxiang.com/api/DeveloperToken.action\">Developer Tokens</a>获取Token，打开Evernote.sublime-settings</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;noteStoreUrl&quot;: &quot;https://app.yinxiang.com/shard/s1/notestore&quot;,</div><div class=\"line\">    &quot;token&quot;: &quot;&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"添加快捷键示例\"><a href=\"#添加快捷键示例\" class=\"headerlink\" title=\"添加快捷键示例\"></a>添加快捷键示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;keys&quot;: [&quot;super+e&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;command_palette&quot;, &quot;text&quot;: &quot;Evernote: &quot;&#125; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+s&quot;], &quot;command&quot;: &quot;send_to_evernote&quot; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+o&quot;], &quot;command&quot;: &quot;open_evernote_note&quot; &#125;,</div><div class=\"line\">&#123; &quot;keys&quot;: [&quot;ctrl+e&quot;, &quot;ctrl+u&quot;], &quot;command&quot;: &quot;save_evernote_note&quot; &#125;,</div></pre></td></tr></table></figure>\n<h3 id=\"个性化配置\"><a href=\"#个性化配置\" class=\"headerlink\" title=\"个性化配置\"></a>个性化配置</h3><ul>\n<li>md_syntax：定义md语法</li>\n<li>inline_css：定义部分CSS样式</li>\n<li>code_highlighting_style：代码高亮样式，autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac</li>\n</ul>\n"},{"title":"Sublime Text之OmniMarkupPreviewer","date":"2016-09-13T13:37:44.000Z","_content":"\n# OmniMarkupPreviewer\n## 功能概述\n\n* 实时预览，多设备同时刷新\n* 扩展语法\n* MathJax 公式\n* 文档内标题导航\n* 支持HTML、PDF格式导出\n\nOmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅[python-markdown](https://pythonhosted.org/Markdown/extensions/index.html)\n\n## 快捷键\n\n|快捷键| 说明|\n|:--|:-|\n|`option`+`command`+O|打开浏览器进行预览|\n\n## 配置\n\n| 配置| 说明|\n|:--|:--|\n|server_host|开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可|\n|server_port|访问端口号，默认即可|\n|refresh_on_modified| 是否开启实时刷新，默认即可|\n|refresh_on_modified_delay|刷新延时，单位毫秒，默认即可|\n|refresh_on_saved|保存时刷新预览，默认即可|\n|browser_command|设置预览的浏览器|\n|html_template_name|预览模版|\n|ignored_renderers|忽略标记语言的渲染器|\n|mathjax_enabled|开启LaTex|\n|renderer_options-MarkdownRenderer|渲染扩展，扩展Markdown的语法|\n\n### 渲染说明\n\n* attr_list ：开启文档内跳转\n* footnotes ：文档脚注  \n* codehilite：代码语法高亮     \n* toc ：在文章开头自动生成目录，并附带跳转链接  \n* strikeout：删除线   ~~ 删除线 ~~\n* superscript ：上标  H^2^\n* subscript：下标   H~2~  ","source":"_posts/Sublime-Text之OmniMarkupPreviewer.md","raw":"---\ntitle: Sublime Text之OmniMarkupPreviewer\ndate: 2016-09-13 21:37:44\ntags: [sublime, markdown]\ncategories: [sublime]\n---\n\n# OmniMarkupPreviewer\n## 功能概述\n\n* 实时预览，多设备同时刷新\n* 扩展语法\n* MathJax 公式\n* 文档内标题导航\n* 支持HTML、PDF格式导出\n\nOmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅[python-markdown](https://pythonhosted.org/Markdown/extensions/index.html)\n\n## 快捷键\n\n|快捷键| 说明|\n|:--|:-|\n|`option`+`command`+O|打开浏览器进行预览|\n\n## 配置\n\n| 配置| 说明|\n|:--|:--|\n|server_host|开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可|\n|server_port|访问端口号，默认即可|\n|refresh_on_modified| 是否开启实时刷新，默认即可|\n|refresh_on_modified_delay|刷新延时，单位毫秒，默认即可|\n|refresh_on_saved|保存时刷新预览，默认即可|\n|browser_command|设置预览的浏览器|\n|html_template_name|预览模版|\n|ignored_renderers|忽略标记语言的渲染器|\n|mathjax_enabled|开启LaTex|\n|renderer_options-MarkdownRenderer|渲染扩展，扩展Markdown的语法|\n\n### 渲染说明\n\n* attr_list ：开启文档内跳转\n* footnotes ：文档脚注  \n* codehilite：代码语法高亮     \n* toc ：在文章开头自动生成目录，并附带跳转链接  \n* strikeout：删除线   ~~ 删除线 ~~\n* superscript ：上标  H^2^\n* subscript：下标   H~2~  ","slug":"Sublime-Text之OmniMarkupPreviewer","published":1,"updated":"2016-09-13T13:38:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44p001v9ruiam5pvma5","content":"<h1 id=\"OmniMarkupPreviewer\"><a href=\"#OmniMarkupPreviewer\" class=\"headerlink\" title=\"OmniMarkupPreviewer\"></a>OmniMarkupPreviewer</h1><h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><ul>\n<li>实时预览，多设备同时刷新</li>\n<li>扩展语法</li>\n<li>MathJax 公式</li>\n<li>文档内标题导航</li>\n<li>支持HTML、PDF格式导出</li>\n</ul>\n<p>OmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅<a href=\"https://pythonhosted.org/Markdown/extensions/index.html\" target=\"_blank\" rel=\"external\">python-markdown</a></p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>option</code>+<code>command</code>+O</td>\n<td style=\"text-align:left\">打开浏览器进行预览</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">配置</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">server_host</td>\n<td style=\"text-align:left\">开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">server_port</td>\n<td style=\"text-align:left\">访问端口号，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_modified</td>\n<td style=\"text-align:left\">是否开启实时刷新，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_modified_delay</td>\n<td style=\"text-align:left\">刷新延时，单位毫秒，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_saved</td>\n<td style=\"text-align:left\">保存时刷新预览，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">browser_command</td>\n<td style=\"text-align:left\">设置预览的浏览器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">html_template_name</td>\n<td style=\"text-align:left\">预览模版</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ignored_renderers</td>\n<td style=\"text-align:left\">忽略标记语言的渲染器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mathjax_enabled</td>\n<td style=\"text-align:left\">开启LaTex</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">renderer_options-MarkdownRenderer</td>\n<td style=\"text-align:left\">渲染扩展，扩展Markdown的语法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"渲染说明\"><a href=\"#渲染说明\" class=\"headerlink\" title=\"渲染说明\"></a>渲染说明</h3><ul>\n<li>attr_list ：开启文档内跳转</li>\n<li>footnotes ：文档脚注  </li>\n<li>codehilite：代码语法高亮     </li>\n<li>toc ：在文章开头自动生成目录，并附带跳转链接  </li>\n<li>strikeout：删除线   ~~ 删除线 ~~</li>\n<li>superscript ：上标  H^2^</li>\n<li>subscript：下标   H~2~  </li>\n</ul>\n","excerpt":"","more":"<h1 id=\"OmniMarkupPreviewer\"><a href=\"#OmniMarkupPreviewer\" class=\"headerlink\" title=\"OmniMarkupPreviewer\"></a>OmniMarkupPreviewer</h1><h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><ul>\n<li>实时预览，多设备同时刷新</li>\n<li>扩展语法</li>\n<li>MathJax 公式</li>\n<li>文档内标题导航</li>\n<li>支持HTML、PDF格式导出</li>\n</ul>\n<p>OmniMarkdownPreviewer采用python-markdown解析，相关的扩展配置，请参阅<a href=\"https://pythonhosted.org/Markdown/extensions/index.html\">python-markdown</a></p>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>option</code>+<code>command</code>+O</td>\n<td style=\"text-align:left\">打开浏览器进行预览</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">配置</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">server_host</td>\n<td style=\"text-align:left\">开启预览服务的IP地址，建议为本机固定IP，这样可实现局域网内的设备均可访问，不需要的话默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">server_port</td>\n<td style=\"text-align:left\">访问端口号，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_modified</td>\n<td style=\"text-align:left\">是否开启实时刷新，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_modified_delay</td>\n<td style=\"text-align:left\">刷新延时，单位毫秒，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh_on_saved</td>\n<td style=\"text-align:left\">保存时刷新预览，默认即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">browser_command</td>\n<td style=\"text-align:left\">设置预览的浏览器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">html_template_name</td>\n<td style=\"text-align:left\">预览模版</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ignored_renderers</td>\n<td style=\"text-align:left\">忽略标记语言的渲染器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mathjax_enabled</td>\n<td style=\"text-align:left\">开启LaTex</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">renderer_options-MarkdownRenderer</td>\n<td style=\"text-align:left\">渲染扩展，扩展Markdown的语法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"渲染说明\"><a href=\"#渲染说明\" class=\"headerlink\" title=\"渲染说明\"></a>渲染说明</h3><ul>\n<li>attr_list ：开启文档内跳转</li>\n<li>footnotes ：文档脚注  </li>\n<li>codehilite：代码语法高亮     </li>\n<li>toc ：在文章开头自动生成目录，并附带跳转链接  </li>\n<li>strikeout：删除线   ~~ 删除线 ~~</li>\n<li>superscript ：上标  H^2^</li>\n<li>subscript：下标   H~2~  </li>\n</ul>\n"},{"title":"对象的创建和销毁-《Effective Java》笔记","date":"2016-08-18T10:18:03.000Z","_content":"\n## 使用静态方法代替构造器\n> * 静态方法有名称，便于理解\n> * 静态方法可以返回已存在的对象，避免创建不必要的重复对象\n> * 静态方法可以返回原返回类型的任何子类型，增加灵活性\n> * 在创建参数化类型实例的时候，使代码更加简洁\n\n## 存在多个构造器参数时考虑使用构造器\n> * 易于阅读\n> * 加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功\n> * 可以非常灵活的增加参数数量\n> * Builder模式适用于有多个参数构造时使用，一般是4个或多个。\n> * 通常最好一开始就使用Builder模式\n\n以下是使用构造器的示例\n\n```java\npublic class NutritionFacts {\n    private final int servingSize;\n    private final int servings;\n    private final int calories;\n    private final int fat;\n    private final int sodium;\n    private final int carbohydrate;\n\n    public static class Builder {\n        private final int servingSize;\n        private final int servings;\n\n        /**\n         * 带默认值的\n         */\n        private int calories = 0;\n        private int fat = 0;\n        private int sodium = 0;\n        private int carbohydrate = 0;\n\n        public Builder(int servingSize, int servings) {\n            this.servings = servings;\n            this.servingSize = servingSize;\n        }\n\n        public Builder calories(int val) {\n            calories=val;\n            return this;\n        }\n\n        public Builder fat(int val) {\n            fat = val;\n            return this;\n        }\n\n        public Builder carbohydrate(int val) {\n            carbohydrate = val;\n            return this;\n        }\n\n        public Builder sodium(int val) {\n            sodium = val;\n            return this;\n        }\n        public  NutritionFacts build() {\n            return new NutritionFacts(this);\n        }\n\n    }\n\n    private NutritionFacts(Builder builder) {\n        servings = builder.servings;\n        servingSize = builder.servingSize;\n        calories = builder.calories;\n        fat = builder.fat;\n        carbohydrate = builder.carbohydrate;\n        sodium = builder.sodium;\n    }\n    public static void main(String[] args) {\n        NutritionFacts nutritionFacts = new NutritionFacts.Builder(20, 20)\n                .calories(10).carbohydrate(12).build();\n    }\n}\n```\n\n## 使用枚举类型实现单例模式\n> 单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考[设计模式之单例模式](http://blog.csdn.net/abyss521/article/details/52232409)\n\n## 对于不想被实例化的类添加私有构造器\n> 例如`java.lang.Math`这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化\n\n## 避免创建不必要的对象\n> 尤其是要避免在大规模应用场景中使用字符串连接符`+`连接字符串，以及对包装类`Integer`、`Long`等类型使用运算符。 \n\n## 避免使用finalize\n> * `finalize()`不能保证被及时地执行，甚至根本不保证它们会执行\n> * 在`finalize()`中创建和销毁对象对性能损耗非常大\n> * 在`finalize()` 中抛出的异常会被忽略，使对象处于破坏状态\n> * 假如需要释放资源，推荐使用`try-finally` ","source":"_posts/对象的创建和销毁-《Effective-Java》笔记.md","raw":"---\ntitle: 对象的创建和销毁-《Effective Java》笔记\ndate: 2016-08-18 18:18:03\ntags: [Java, Effective, note]\ncategories: Java\n---\n\n## 使用静态方法代替构造器\n> * 静态方法有名称，便于理解\n> * 静态方法可以返回已存在的对象，避免创建不必要的重复对象\n> * 静态方法可以返回原返回类型的任何子类型，增加灵活性\n> * 在创建参数化类型实例的时候，使代码更加简洁\n\n## 存在多个构造器参数时考虑使用构造器\n> * 易于阅读\n> * 加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功\n> * 可以非常灵活的增加参数数量\n> * Builder模式适用于有多个参数构造时使用，一般是4个或多个。\n> * 通常最好一开始就使用Builder模式\n\n以下是使用构造器的示例\n\n```java\npublic class NutritionFacts {\n    private final int servingSize;\n    private final int servings;\n    private final int calories;\n    private final int fat;\n    private final int sodium;\n    private final int carbohydrate;\n\n    public static class Builder {\n        private final int servingSize;\n        private final int servings;\n\n        /**\n         * 带默认值的\n         */\n        private int calories = 0;\n        private int fat = 0;\n        private int sodium = 0;\n        private int carbohydrate = 0;\n\n        public Builder(int servingSize, int servings) {\n            this.servings = servings;\n            this.servingSize = servingSize;\n        }\n\n        public Builder calories(int val) {\n            calories=val;\n            return this;\n        }\n\n        public Builder fat(int val) {\n            fat = val;\n            return this;\n        }\n\n        public Builder carbohydrate(int val) {\n            carbohydrate = val;\n            return this;\n        }\n\n        public Builder sodium(int val) {\n            sodium = val;\n            return this;\n        }\n        public  NutritionFacts build() {\n            return new NutritionFacts(this);\n        }\n\n    }\n\n    private NutritionFacts(Builder builder) {\n        servings = builder.servings;\n        servingSize = builder.servingSize;\n        calories = builder.calories;\n        fat = builder.fat;\n        carbohydrate = builder.carbohydrate;\n        sodium = builder.sodium;\n    }\n    public static void main(String[] args) {\n        NutritionFacts nutritionFacts = new NutritionFacts.Builder(20, 20)\n                .calories(10).carbohydrate(12).build();\n    }\n}\n```\n\n## 使用枚举类型实现单例模式\n> 单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考[设计模式之单例模式](http://blog.csdn.net/abyss521/article/details/52232409)\n\n## 对于不想被实例化的类添加私有构造器\n> 例如`java.lang.Math`这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化\n\n## 避免创建不必要的对象\n> 尤其是要避免在大规模应用场景中使用字符串连接符`+`连接字符串，以及对包装类`Integer`、`Long`等类型使用运算符。 \n\n## 避免使用finalize\n> * `finalize()`不能保证被及时地执行，甚至根本不保证它们会执行\n> * 在`finalize()`中创建和销毁对象对性能损耗非常大\n> * 在`finalize()` 中抛出的异常会被忽略，使对象处于破坏状态\n> * 假如需要释放资源，推荐使用`try-finally` ","slug":"对象的创建和销毁-《Effective-Java》笔记","published":1,"updated":"2016-09-07T15:28:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44r001y9ruinl9lgqmc","content":"<h2 id=\"使用静态方法代替构造器\"><a href=\"#使用静态方法代替构造器\" class=\"headerlink\" title=\"使用静态方法代替构造器\"></a>使用静态方法代替构造器</h2><blockquote>\n<ul>\n<li>静态方法有名称，便于理解</li>\n<li>静态方法可以返回已存在的对象，避免创建不必要的重复对象</li>\n<li>静态方法可以返回原返回类型的任何子类型，增加灵活性</li>\n<li>在创建参数化类型实例的时候，使代码更加简洁</li>\n</ul>\n</blockquote>\n<h2 id=\"存在多个构造器参数时考虑使用构造器\"><a href=\"#存在多个构造器参数时考虑使用构造器\" class=\"headerlink\" title=\"存在多个构造器参数时考虑使用构造器\"></a>存在多个构造器参数时考虑使用构造器</h2><blockquote>\n<ul>\n<li>易于阅读</li>\n<li>加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功</li>\n<li>可以非常灵活的增加参数数量</li>\n<li>Builder模式适用于有多个参数构造时使用，一般是4个或多个。</li>\n<li>通常最好一开始就使用Builder模式</li>\n</ul>\n</blockquote>\n<p>以下是使用构造器的示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NutritionFacts</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> calories;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fat;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> sodium;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> carbohydrate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Builder</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/**</span></div><div class=\"line\">         * 带默认值的</div><div class=\"line\">         */</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> calories = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> fat = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sodium = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> carbohydrate = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Builder</span><span class=\"params\">(<span class=\"keyword\">int</span> servingSize, <span class=\"keyword\">int</span> servings)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.servings = servings;</div><div class=\"line\">            <span class=\"keyword\">this</span>.servingSize = servingSize;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">calories</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            calories=val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">fat</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            fat = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">carbohydrate</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            carbohydrate = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">sodium</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            sodium = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span>  NutritionFacts <span class=\"title\">build</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> NutritionFacts(<span class=\"keyword\">this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NutritionFacts</span><span class=\"params\">(Builder builder)</span> </span>&#123;</div><div class=\"line\">        servings = builder.servings;</div><div class=\"line\">        servingSize = builder.servingSize;</div><div class=\"line\">        calories = builder.calories;</div><div class=\"line\">        fat = builder.fat;</div><div class=\"line\">        carbohydrate = builder.carbohydrate;</div><div class=\"line\">        sodium = builder.sodium;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        NutritionFacts nutritionFacts = <span class=\"keyword\">new</span> NutritionFacts.Builder(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</div><div class=\"line\">                .calories(<span class=\"number\">10</span>).carbohydrate(<span class=\"number\">12</span>).build();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"使用枚举类型实现单例模式\"><a href=\"#使用枚举类型实现单例模式\" class=\"headerlink\" title=\"使用枚举类型实现单例模式\"></a>使用枚举类型实现单例模式</h2><blockquote>\n<p>单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考<a href=\"http://blog.csdn.net/abyss521/article/details/52232409\" target=\"_blank\" rel=\"external\">设计模式之单例模式</a></p>\n</blockquote>\n<h2 id=\"对于不想被实例化的类添加私有构造器\"><a href=\"#对于不想被实例化的类添加私有构造器\" class=\"headerlink\" title=\"对于不想被实例化的类添加私有构造器\"></a>对于不想被实例化的类添加私有构造器</h2><blockquote>\n<p>例如<code>java.lang.Math</code>这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化</p>\n</blockquote>\n<h2 id=\"避免创建不必要的对象\"><a href=\"#避免创建不必要的对象\" class=\"headerlink\" title=\"避免创建不必要的对象\"></a>避免创建不必要的对象</h2><blockquote>\n<p>尤其是要避免在大规模应用场景中使用字符串连接符<code>+</code>连接字符串，以及对包装类<code>Integer</code>、<code>Long</code>等类型使用运算符。 </p>\n</blockquote>\n<h2 id=\"避免使用finalize\"><a href=\"#避免使用finalize\" class=\"headerlink\" title=\"避免使用finalize\"></a>避免使用finalize</h2><blockquote>\n<ul>\n<li><code>finalize()</code>不能保证被及时地执行，甚至根本不保证它们会执行</li>\n<li>在<code>finalize()</code>中创建和销毁对象对性能损耗非常大</li>\n<li>在<code>finalize()</code> 中抛出的异常会被忽略，使对象处于破坏状态</li>\n<li>假如需要释放资源，推荐使用<code>try-finally</code> </li>\n</ul>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"使用静态方法代替构造器\"><a href=\"#使用静态方法代替构造器\" class=\"headerlink\" title=\"使用静态方法代替构造器\"></a>使用静态方法代替构造器</h2><blockquote>\n<ul>\n<li>静态方法有名称，便于理解</li>\n<li>静态方法可以返回已存在的对象，避免创建不必要的重复对象</li>\n<li>静态方法可以返回原返回类型的任何子类型，增加灵活性</li>\n<li>在创建参数化类型实例的时候，使代码更加简洁</li>\n</ul>\n</blockquote>\n<h2 id=\"存在多个构造器参数时考虑使用构造器\"><a href=\"#存在多个构造器参数时考虑使用构造器\" class=\"headerlink\" title=\"存在多个构造器参数时考虑使用构造器\"></a>存在多个构造器参数时考虑使用构造器</h2><blockquote>\n<ul>\n<li>易于阅读</li>\n<li>加强参数的约束条件，一旦有一个参数违反约束条件就创建不成功</li>\n<li>可以非常灵活的增加参数数量</li>\n<li>Builder模式适用于有多个参数构造时使用，一般是4个或多个。</li>\n<li>通常最好一开始就使用Builder模式</li>\n</ul>\n</blockquote>\n<p>以下是使用构造器的示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NutritionFacts</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> calories;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fat;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> sodium;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> carbohydrate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Builder</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servingSize;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> servings;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/**</div><div class=\"line\">         * 带默认值的</div><div class=\"line\">         */</span></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> calories = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> fat = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sodium = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> carbohydrate = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Builder</span><span class=\"params\">(<span class=\"keyword\">int</span> servingSize, <span class=\"keyword\">int</span> servings)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.servings = servings;</div><div class=\"line\">            <span class=\"keyword\">this</span>.servingSize = servingSize;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">calories</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            calories=val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">fat</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            fat = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">carbohydrate</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            carbohydrate = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Builder <span class=\"title\">sodium</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span> </span>&#123;</div><div class=\"line\">            sodium = val;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span>  NutritionFacts <span class=\"title\">build</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> NutritionFacts(<span class=\"keyword\">this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NutritionFacts</span><span class=\"params\">(Builder builder)</span> </span>&#123;</div><div class=\"line\">        servings = builder.servings;</div><div class=\"line\">        servingSize = builder.servingSize;</div><div class=\"line\">        calories = builder.calories;</div><div class=\"line\">        fat = builder.fat;</div><div class=\"line\">        carbohydrate = builder.carbohydrate;</div><div class=\"line\">        sodium = builder.sodium;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        NutritionFacts nutritionFacts = <span class=\"keyword\">new</span> NutritionFacts.Builder(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</div><div class=\"line\">                .calories(<span class=\"number\">10</span>).carbohydrate(<span class=\"number\">12</span>).build();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"使用枚举类型实现单例模式\"><a href=\"#使用枚举类型实现单例模式\" class=\"headerlink\" title=\"使用枚举类型实现单例模式\"></a>使用枚举类型实现单例模式</h2><blockquote>\n<p>单元素的枚举类型是实现单例模式的最佳方法 ，详情可参考<a href=\"http://blog.csdn.net/abyss521/article/details/52232409\">设计模式之单例模式</a></p>\n</blockquote>\n<h2 id=\"对于不想被实例化的类添加私有构造器\"><a href=\"#对于不想被实例化的类添加私有构造器\" class=\"headerlink\" title=\"对于不想被实例化的类添加私有构造器\"></a>对于不想被实例化的类添加私有构造器</h2><blockquote>\n<p>例如<code>java.lang.Math</code>这种的工具类，不希望被实例化，最好添加私有构造器避免被实例化</p>\n</blockquote>\n<h2 id=\"避免创建不必要的对象\"><a href=\"#避免创建不必要的对象\" class=\"headerlink\" title=\"避免创建不必要的对象\"></a>避免创建不必要的对象</h2><blockquote>\n<p>尤其是要避免在大规模应用场景中使用字符串连接符<code>+</code>连接字符串，以及对包装类<code>Integer</code>、<code>Long</code>等类型使用运算符。 </p>\n</blockquote>\n<h2 id=\"避免使用finalize\"><a href=\"#避免使用finalize\" class=\"headerlink\" title=\"避免使用finalize\"></a>避免使用finalize</h2><blockquote>\n<ul>\n<li><code>finalize()</code>不能保证被及时地执行，甚至根本不保证它们会执行</li>\n<li>在<code>finalize()</code>中创建和销毁对象对性能损耗非常大</li>\n<li>在<code>finalize()</code> 中抛出的异常会被忽略，使对象处于破坏状态</li>\n<li>假如需要释放资源，推荐使用<code>try-finally</code> </li>\n</ul>\n</blockquote>\n"},{"title":"在IDEA上远程调试Java Web项目","date":"2015-12-27T16:12:59.000Z","_content":"在catalina.bat文件的，最上方添加以下代码\n```shell\nset JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n\n```\n- -Xdebug：启用调试特性\n- -Xrunjdwp：启用JDWP实现，包含以下选项：\n    - transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输\n    - address=9999：JVM在9999端口上监听请求\n    - server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器\n    - suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y\n接下来再IDEA上新增一个Remote Tomcat\n![](../images/java_idea_1.png)\nHost地址不用加Http\nPort：为tomcat的端口\n![](../images/java_idea_2.png)\n这里的port为调试端口，1中所设置的端口一直\n","source":"_posts/在IDEA上远程调试Java-Web项目.md","raw":"---\ntitle: 在IDEA上远程调试Java Web项目\ndate: 2015-12-28 00:12:59\ntags: [Java, IntelliJ IDEA, skill]\ncategories: [IDEA]\n---\n在catalina.bat文件的，最上方添加以下代码\n```shell\nset JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n\n```\n- -Xdebug：启用调试特性\n- -Xrunjdwp：启用JDWP实现，包含以下选项：\n    - transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输\n    - address=9999：JVM在9999端口上监听请求\n    - server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器\n    - suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y\n接下来再IDEA上新增一个Remote Tomcat\n![](../images/java_idea_1.png)\nHost地址不用加Http\nPort：为tomcat的端口\n![](../images/java_idea_2.png)\n这里的port为调试端口，1中所设置的端口一直\n","slug":"在IDEA上远程调试Java-Web项目","published":1,"updated":"2016-09-03T16:19:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44s00219rui5rrhfgic","content":"<p>在catalina.bat文件的，最上方添加以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n</div></pre></td></tr></table></figure></p>\n<ul>\n<li>-Xdebug：启用调试特性</li>\n<li>-Xrunjdwp：启用JDWP实现，包含以下选项：<ul>\n<li>transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输</li>\n<li>address=9999：JVM在9999端口上监听请求</li>\n<li>server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器</li>\n<li>suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y<br>接下来再IDEA上新增一个Remote Tomcat<br><img src=\"../images/java_idea_1.png\" alt=\"\"><br>Host地址不用加Http<br>Port：为tomcat的端口<br><img src=\"../images/java_idea_2.png\" alt=\"\"><br>这里的port为调试端口，1中所设置的端口一直</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<p>在catalina.bat文件的，最上方添加以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set JAVA_OPTS=%JAVA_OPTS%  -server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,suspend=n</div></pre></td></tr></table></figure></p>\n<ul>\n<li>-Xdebug：启用调试特性</li>\n<li>-Xrunjdwp：启用JDWP实现，包含以下选项：<ul>\n<li>transport=dt_socket：JPDA front-end和back-end之间的传输方法。dt_socket表示使用套接字传输</li>\n<li>address=9999：JVM在9999端口上监听请求</li>\n<li>server=y：y表示启动的JVM是被调试者，n表示启动的JVM是调试器</li>\n<li>suspend=y：y表示启动的JVM会暂停等待，直到调试器连接上（如果从tomcat一开始就进行调试，那么必须设置suspend=y<br>接下来再IDEA上新增一个Remote Tomcat<br><img src=\"../images/java_idea_1.png\" alt=\"\"><br>Host地址不用加Http<br>Port：为tomcat的端口<br><img src=\"../images/java_idea_2.png\" alt=\"\"><br>这里的port为调试端口，1中所设置的端口一直</li>\n</ul>\n</li>\n</ul>\n"},{"title":"设计模式概述","date":"2016-09-12T15:21:32.000Z","_content":"\n## 预览\n|名称|定义|\n|:---|:---|\n|策略模式|封装了算法，为不同的算法提供统一的接口|\n|单一职责|就一个类而言，应当仅有一个引起它变化的原因|\n|开放封闭原则|类、模块、函数可以扩展，但是不可以修改|\n|依赖倒转原则|抽象不应该依赖细节，细节应该依赖于抽象|\n|里氏替换原则|子类型必须能够替换掉它们的父类型|\n|装饰模式|动态的给对象添加额外的职责|\n|代理模式|为其他对象提供一种代理以控制对这个对象的访问|\n|工厂模式|定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类|\n|模版方法|定义封装算法的骨架，而将特定的细节交由子类实现|\n|建造者模式|将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用|\n\n\n## 策略模式\n### 定义\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户\n\n### 优点\n* 策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。\n* 易于进行单元测试\n\n### 使用场景\n测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。\n\n## 单一职责\n### 定义\n就一个类而言，应当仅有一个引起它变化的原因\n\n### 为何需要单一职责\n当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏\n\n### 何时需要职责分离 \n如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责\n\n## 开放封闭原则\n* 无论模块是多么的\"封闭\"，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。\n* 等到变化发生时立即采取行动\n* 面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码\n* 开发人员应改仅对程序中频繁变化的那些部分做出抽象\n\n## 依赖倒转原则\n* 高层模块不应该依赖低层模块，两个都应该依赖抽象\n* 抽象不应该依赖细节。细节应该依赖抽象\n* 依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。\n\n## 里氏替换原则\n* 只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。\n* 由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。\n\n## 装饰模式(Decorator)\n动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。\n* 装饰模式是为已有功能动态的添加更多功能的一种方式\n* 当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。\n* 装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。\n\n## 代理模式\n为其他对象提供一种代理以控制对这个对象的访问。\n* 远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。\n* 虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。\n* 安全代理，用来控制真实对象访问时的权限。\n* 智能指引，是指当调用真实对象时，代理处理另外一些事。\n\n## 工厂方法模式\n* 简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。\n* 工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。\n\n## 模版方法\n定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。\n* 模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势\n* 当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。\n\n## 迪米特法则\n如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。\n* 迪米特法则的前提是，每个类都应当尽量降低成员的访问权限\n* 迪米特法则的根本思想是强调类与类之间的松耦合。\n* 类之间的耦合越弱，越有利于复用。\n\n## 外观(Facade )模式\n为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用\n\n### 用途\n* 在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构\n* 在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖\n* 维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。\n\n## 建造者模式(Builder)\n### 用途\n主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。   \n建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式\n\n### 优势\n使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。\n\n## 观察者模式(Observer)\n又称发布订阅模式(Publish/Subscribe)\n观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。\n\n### 优势\n* 观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。\n* 一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。\n\n### 用途\n* 将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。\n* 当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。\n\n\n\n\n\n\n\n","source":"_posts/设计模式概述.md","raw":"---\ntitle: 设计模式概述\ndate: 2016-09-12 23:21:32\ntags: [设计模式]\ncategories: 设计模式\n---\n\n## 预览\n|名称|定义|\n|:---|:---|\n|策略模式|封装了算法，为不同的算法提供统一的接口|\n|单一职责|就一个类而言，应当仅有一个引起它变化的原因|\n|开放封闭原则|类、模块、函数可以扩展，但是不可以修改|\n|依赖倒转原则|抽象不应该依赖细节，细节应该依赖于抽象|\n|里氏替换原则|子类型必须能够替换掉它们的父类型|\n|装饰模式|动态的给对象添加额外的职责|\n|代理模式|为其他对象提供一种代理以控制对这个对象的访问|\n|工厂模式|定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类|\n|模版方法|定义封装算法的骨架，而将特定的细节交由子类实现|\n|建造者模式|将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用|\n\n\n## 策略模式\n### 定义\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户\n\n### 优点\n* 策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。\n* 易于进行单元测试\n\n### 使用场景\n测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。\n\n## 单一职责\n### 定义\n就一个类而言，应当仅有一个引起它变化的原因\n\n### 为何需要单一职责\n当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏\n\n### 何时需要职责分离 \n如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责\n\n## 开放封闭原则\n* 无论模块是多么的\"封闭\"，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。\n* 等到变化发生时立即采取行动\n* 面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码\n* 开发人员应改仅对程序中频繁变化的那些部分做出抽象\n\n## 依赖倒转原则\n* 高层模块不应该依赖低层模块，两个都应该依赖抽象\n* 抽象不应该依赖细节。细节应该依赖抽象\n* 依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。\n\n## 里氏替换原则\n* 只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。\n* 由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。\n\n## 装饰模式(Decorator)\n动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。\n* 装饰模式是为已有功能动态的添加更多功能的一种方式\n* 当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。\n* 装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。\n\n## 代理模式\n为其他对象提供一种代理以控制对这个对象的访问。\n* 远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。\n* 虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。\n* 安全代理，用来控制真实对象访问时的权限。\n* 智能指引，是指当调用真实对象时，代理处理另外一些事。\n\n## 工厂方法模式\n* 简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。\n* 工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。\n\n## 模版方法\n定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。\n* 模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势\n* 当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。\n\n## 迪米特法则\n如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。\n* 迪米特法则的前提是，每个类都应当尽量降低成员的访问权限\n* 迪米特法则的根本思想是强调类与类之间的松耦合。\n* 类之间的耦合越弱，越有利于复用。\n\n## 外观(Facade )模式\n为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用\n\n### 用途\n* 在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构\n* 在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖\n* 维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。\n\n## 建造者模式(Builder)\n### 用途\n主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。   \n建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式\n\n### 优势\n使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。\n\n## 观察者模式(Observer)\n又称发布订阅模式(Publish/Subscribe)\n观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。\n\n### 优势\n* 观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。\n* 一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。\n\n### 用途\n* 将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。\n* 当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。\n\n\n\n\n\n\n\n","slug":"设计模式概述","published":1,"updated":"2016-09-12T16:17:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44t00259rui8ztop5mh","content":"<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">策略模式</td>\n<td style=\"text-align:left\">封装了算法，为不同的算法提供统一的接口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">单一职责</td>\n<td style=\"text-align:left\">就一个类而言，应当仅有一个引起它变化的原因</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">开放封闭原则</td>\n<td style=\"text-align:left\">类、模块、函数可以扩展，但是不可以修改</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">依赖倒转原则</td>\n<td style=\"text-align:left\">抽象不应该依赖细节，细节应该依赖于抽象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">里氏替换原则</td>\n<td style=\"text-align:left\">子类型必须能够替换掉它们的父类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">装饰模式</td>\n<td style=\"text-align:left\">动态的给对象添加额外的职责</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">代理模式</td>\n<td style=\"text-align:left\">为其他对象提供一种代理以控制对这个对象的访问</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">工厂模式</td>\n<td style=\"text-align:left\">定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">模版方法</td>\n<td style=\"text-align:left\">定义封装算法的骨架，而将特定的细节交由子类实现</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">建造者模式</td>\n<td style=\"text-align:left\">将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ul>\n<li>策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。</li>\n<li>易于进行单元测试</li>\n</ul>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。</p>\n<h2 id=\"单一职责\"><a href=\"#单一职责\" class=\"headerlink\" title=\"单一职责\"></a>单一职责</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>就一个类而言，应当仅有一个引起它变化的原因</p>\n<h3 id=\"为何需要单一职责\"><a href=\"#为何需要单一职责\" class=\"headerlink\" title=\"为何需要单一职责\"></a>为何需要单一职责</h3><p>当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏</p>\n<h3 id=\"何时需要职责分离\"><a href=\"#何时需要职责分离\" class=\"headerlink\" title=\"何时需要职责分离\"></a>何时需要职责分离</h3><p>如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><ul>\n<li>无论模块是多么的”封闭”，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。</li>\n<li>等到变化发生时立即采取行动</li>\n<li>面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码</li>\n<li>开发人员应改仅对程序中频繁变化的那些部分做出抽象</li>\n</ul>\n<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><ul>\n<li>高层模块不应该依赖低层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节。细节应该依赖抽象</li>\n<li>依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。</li>\n</ul>\n<h2 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h2><ul>\n<li>只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。</li>\n<li>由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。</li>\n</ul>\n<h2 id=\"装饰模式-Decorator\"><a href=\"#装饰模式-Decorator\" class=\"headerlink\" title=\"装饰模式(Decorator)\"></a>装饰模式(Decorator)</h2><p>动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。</p>\n<ul>\n<li>装饰模式是为已有功能动态的添加更多功能的一种方式</li>\n<li>当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。</li>\n<li>装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。</li>\n</ul>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><p>为其他对象提供一种代理以控制对这个对象的访问。</p>\n<ul>\n<li>远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。</li>\n<li>虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。</li>\n<li>安全代理，用来控制真实对象访问时的权限。</li>\n<li>智能指引，是指当调用真实对象时，代理处理另外一些事。</li>\n</ul>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ul>\n<li>简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。</li>\n<li>工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。</li>\n</ul>\n<h2 id=\"模版方法\"><a href=\"#模版方法\" class=\"headerlink\" title=\"模版方法\"></a>模版方法</h2><p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p>\n<ul>\n<li>模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势</li>\n<li>当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。</li>\n</ul>\n<h2 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h2><p>如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。</p>\n<ul>\n<li>迪米特法则的前提是，每个类都应当尽量降低成员的访问权限</li>\n<li>迪米特法则的根本思想是强调类与类之间的松耦合。</li>\n<li>类之间的耦合越弱，越有利于复用。</li>\n</ul>\n<h2 id=\"外观-Facade-模式\"><a href=\"#外观-Facade-模式\" class=\"headerlink\" title=\"外观(Facade )模式\"></a>外观(Facade )模式</h2><p>为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构</li>\n<li>在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖</li>\n<li>维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。</li>\n</ul>\n<h2 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式(Builder)\"></a>建造者模式(Builder)</h2><h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><p>主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。<br>建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。</p>\n<h2 id=\"观察者模式-Observer\"><a href=\"#观察者模式-Observer\" class=\"headerlink\" title=\"观察者模式(Observer)\"></a>观察者模式(Observer)</h2><p>又称发布订阅模式(Publish/Subscribe)<br>观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</p>\n<h3 id=\"优势-1\"><a href=\"#优势-1\" class=\"headerlink\" title=\"优势\"></a>优势</h3><ul>\n<li>观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。</li>\n<li>一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。</li>\n</ul>\n<h3 id=\"用途-2\"><a href=\"#用途-2\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。</li>\n<li>当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">策略模式</td>\n<td style=\"text-align:left\">封装了算法，为不同的算法提供统一的接口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">单一职责</td>\n<td style=\"text-align:left\">就一个类而言，应当仅有一个引起它变化的原因</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">开放封闭原则</td>\n<td style=\"text-align:left\">类、模块、函数可以扩展，但是不可以修改</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">依赖倒转原则</td>\n<td style=\"text-align:left\">抽象不应该依赖细节，细节应该依赖于抽象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">里氏替换原则</td>\n<td style=\"text-align:left\">子类型必须能够替换掉它们的父类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">装饰模式</td>\n<td style=\"text-align:left\">动态的给对象添加额外的职责</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">代理模式</td>\n<td style=\"text-align:left\">为其他对象提供一种代理以控制对这个对象的访问</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">工厂模式</td>\n<td style=\"text-align:left\">定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">模版方法</td>\n<td style=\"text-align:left\">定义封装算法的骨架，而将特定的细节交由子类实现</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">建造者模式</td>\n<td style=\"text-align:left\">将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的应用</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变换不会影响到使用算法的客户</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ul>\n<li>策略模式定义了一系列算法，这些算法完成相同的工作，只是实现不同，策略模式可以以相同的方式调用所有算法，减少了算法和使用算法类之间的耦合。</li>\n<li>易于进行单元测试</li>\n</ul>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>测旅模式可以封装任何类型的规则，只要在分析过程中需要在不同时间应用的业务规则，就可以使用策略模式处理这种变化的可能性。</p>\n<h2 id=\"单一职责\"><a href=\"#单一职责\" class=\"headerlink\" title=\"单一职责\"></a>单一职责</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>就一个类而言，应当仅有一个引起它变化的原因</p>\n<h3 id=\"为何需要单一职责\"><a href=\"#为何需要单一职责\" class=\"headerlink\" title=\"为何需要单一职责\"></a>为何需要单一职责</h3><p>当一个类承担的职责太多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或抑制这个类完成其他职责的能力，这种耦合会导致脆弱的设计，当变化发生时，设计会遭到意想不到的破坏</p>\n<h3 id=\"何时需要职责分离\"><a href=\"#何时需要职责分离\" class=\"headerlink\" title=\"何时需要职责分离\"></a>何时需要职责分离</h3><p>如果你能够想到多于一个的动机去改变一个类，那么这个类就具有多于一个的职责</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><ul>\n<li>无论模块是多么的”封闭”，都会存在一些无法对之封闭的变化，既然不可能完全封闭，设计人员必须对他设计的模块应该对那种变化封闭做出选择，他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那么变化。</li>\n<li>等到变化发生时立即采取行动</li>\n<li>面对需求，对程序的改动是通过增加薪代码进行的，而不是更改现有的代码</li>\n<li>开发人员应改仅对程序中频繁变化的那些部分做出抽象</li>\n</ul>\n<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><ul>\n<li>高层模块不应该依赖低层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节。细节应该依赖抽象</li>\n<li>依赖倒转可以说是面向对象设计的标志，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计。</li>\n</ul>\n<h2 id=\"里氏替换原则\"><a href=\"#里氏替换原则\" class=\"headerlink\" title=\"里氏替换原则\"></a>里氏替换原则</h2><ul>\n<li>只有当子类可以替换掉父类，软件单位的功能不受影响时，父类才能真正被复用，而子类也能够在父类基础上增加新的行为。</li>\n<li>由于子类的可替换性才使得使用父类类型的模块在无需修改的情况下可以扩展。</li>\n</ul>\n<h2 id=\"装饰模式-Decorator\"><a href=\"#装饰模式-Decorator\" class=\"headerlink\" title=\"装饰模式(Decorator)\"></a>装饰模式(Decorator)</h2><p>动态地给对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更加灵活。</p>\n<ul>\n<li>装饰模式是为已有功能动态的添加更多功能的一种方式</li>\n<li>当系统需要新的功能时，把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。</li>\n<li>装饰模式有效的将核心职责和装饰功能区分开，而且可以去除相关类中重复的装饰逻辑。</li>\n</ul>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><p>为其他对象提供一种代理以控制对这个对象的访问。</p>\n<ul>\n<li>远程代理，为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。</li>\n<li>虚拟代理，是根据需要创建开销很大的对象，通过它存放实例化需要很长时间的真实对象。</li>\n<li>安全代理，用来控制真实对象访问时的权限。</li>\n<li>智能指引，是指当调用真实对象时，代理处理另外一些事。</li>\n</ul>\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ul>\n<li>简单工厂模式的最大优点在于工厂类中包含必要的逻辑判断，根据客户端的选择条件动态实例化相关类，对客户端来说，去除了于具体产品的依赖。</li>\n<li>工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在，也就是说工厂方法把简单工厂的内部逻辑判断移到来客户端代码来进行。</li>\n</ul>\n<h2 id=\"模版方法\"><a href=\"#模版方法\" class=\"headerlink\" title=\"模版方法\"></a>模版方法</h2><p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模版方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p>\n<ul>\n<li>模版方法模式是通过把不变行为搬移到超类，去除子类中重复的代码来体现它的优势</li>\n<li>当不变的和可变的行为在方法的子类实现中混合在一起的时候，不变的行为就会在子类中重复出现。我们通过模版方法模式把这些行为搬移到单一的地方，这样就帮助子类摆脱重复的不变行为的纠缠。</li>\n</ul>\n<h2 id=\"迪米特法则\"><a href=\"#迪米特法则\" class=\"headerlink\" title=\"迪米特法则\"></a>迪米特法则</h2><p>如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。</p>\n<ul>\n<li>迪米特法则的前提是，每个类都应当尽量降低成员的访问权限</li>\n<li>迪米特法则的根本思想是强调类与类之间的松耦合。</li>\n<li>类之间的耦合越弱，越有利于复用。</li>\n</ul>\n<h2 id=\"外观-Facade-模式\"><a href=\"#外观-Facade-模式\" class=\"headerlink\" title=\"外观(Facade )模式\"></a>外观(Facade )模式</h2><p>为子系统中的一组接口提供一个一致的界面，此模式定义来一个高层接口，这个接口使得这一子系统更加容易使用</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>在设计初期应该有意识的将不同的两个层分离，例如典型的MVN结构</li>\n<li>在开发阶段，随着系统不断重构演化而变得越来越复杂，增加外观可以提供一个简单的接口，减少它们之间的依赖</li>\n<li>维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互。</li>\n</ul>\n<h2 id=\"建造者模式-Builder\"><a href=\"#建造者模式-Builder\" class=\"headerlink\" title=\"建造者模式(Builder)\"></a>建造者模式(Builder)</h2><h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><p>主要用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化。<br>建造者模式是在当创建复杂对象的算法应该独立与该对象的组成部分以及它们的装配方式时适用的模式</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。</p>\n<h2 id=\"观察者模式-Observer\"><a href=\"#观察者模式-Observer\" class=\"headerlink\" title=\"观察者模式(Observer)\"></a>观察者模式(Observer)</h2><p>又称发布订阅模式(Publish/Subscribe)<br>观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一主题对象，这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</p>\n<h3 id=\"优势-1\"><a href=\"#优势-1\" class=\"headerlink\" title=\"优势\"></a>优势</h3><ul>\n<li>观察者模式所做的工作其实就是在解除耦合。让偶和的双方都依赖于抽象，而不是具体的实现。</li>\n<li>一个抽象模型有两个方面，其中一个方面依赖于另一个方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立的改变和复用。</li>\n</ul>\n<h3 id=\"用途-2\"><a href=\"#用途-2\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。我们不希望为了维持一致性而使得各类紧密耦合。</li>\n<li>当一个对象的改变需要同时改变其他对象时，而且它不知道有多少个对象有待改变。</li>\n</ul>\n"},{"title":"开源项目推荐","date":"2016-09-03T15:46:12.000Z","_content":"## C 开源项目\n### [Webbench](http://home.tiscali.cz/~cz210552/webbench.html)\nWebbench 是一个在 linux 下使用的非常简单的网站压测工具。它使用 fork() 模拟多个客户端同时访问我们设定的 URL，测试网站在压力下工作的性能，最多可以模拟 3 万个并发连接去测试网站的负载能力。Webbench 使用 C 语言编写, 代码实在太简洁，源码加起来不到 600 行。\n\n### [Tinyhttpd](http://sourceforge.net/projects/tinyhttpd/)\ntinyhttpd 是一个超轻量型 Http Server，使用 C 语言开发，全部代码只有 502 行 (包括注释)，附带一个简单的 Client，可以通过阅读这段代码理解一个 Http Server 的本质。\n下载链接：Tiny HTTPd | SourceForge.net\n\n### [cJSON](https://sourceforge.net/projects/cjson/)\ncJSON 是 C 语言中的一个 JSON 编解码器，非常轻量级，C 文件只有 500 多行，速度也非常理想。\ncJSON 也存在几个弱点，虽然功能不是非常强大，但 cJSON 的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的 C 语言项目进行学习。 \n### [CMockery](http://code.google.com/p/cmockery/downloads/list)\ncmockery 是 google 发布的用于 C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery 的源代码行数不到 3K，你阅读一下 will_return 和 mock 的源代码就一目了然了。   \n主要特点：    \n* 免费且开源，google 提供技术支持；\n* 轻量级的框架，使测试更加快速简单；\n* 避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;\n* 并不强制要求待测代码必须依赖 C99 标准，这一特性对许多嵌入式系统的开发很有用\n\n### [Libev](http://software.schmorp.de/pkg/libev.html)\nlibev 是一个开源的事件驱动库，基于 epoll，kqueue 等 OS 提供的基础设施。其以高效出名，它可以将 IO 事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于 Reactor 模式，效率较高，并且代码精简（4.15 版本 8000 多行），是学习事件驱动编程的很好的资源。\n\n### [Memcached](http://memcached.org/)\nMemcached 是一个高性能的分布式内存对象缓存系统，用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7 的代码量还是可以接受的，只有 10K 行左右。\n\n### [Lua](http://www.lua.org/)\nLua 的源代码，百分之一百的 ANSI C，一点都不掺杂。在任何支持 ANSI C 编译器的平台上都可以轻松编译通过。Lua 的代码数量足够小，5.1.4 仅仅 1.5W 行，去掉空白行和注释估计能到 1W 行。\n\n### [SQLite](http://www.sqlite.org/ )\nSQLite 是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的 SQL 数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致 3 万行 C 代码，250K。\n\n### [UNIX v6](http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6)\nUNIX V6 的内核源代码包括设备驱动程序在内约有1万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为 1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。\n另一方面，最近的操作系统，例如 Linux 最新版的内核源代码据说超过了 1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。\n\n### [NETBSD](http://www.netbsd.org/)\nNetBSD 是一个免费的，具有高度移植性的UNIX-like操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD 计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过 NetBSD Packages Collection 获得。\n\n## Java 开源项目\n### 爬虫项目\n#### [nutch](https://github.com/apache/nutch)\napache 下的开源爬虫程序，功能丰富，文档完整。有数据抓取解析以及存储的模块。\n\n### [Heritrix](https://github.com/internetarchive/heritrix3)\n很早就有了，经历过很多次更新，使用的人比较多，功能齐全，文档完整，网上的资料也多。有自己的 web 管理控制台，包含了一个 HTTP 服务器。操作者可以通过选择 Crawler 命令来操作控制台。\n\n### [crawler4j](https://github.com/yasserg/crawler4j)\n因为只拥有爬虫的核心功能，所以上手极为简单，几分钟就可以写一个多线程爬虫程序。\n\n### [webmagic](https://github.com/code4craft/webmagic)\n国人黄亿华先生的良心大作\n\n## 其他\n### [aosabook](https://github.com/aosabook/500lines)\n这是一本牛书 aosabook 的续集 500 Lines or Less 的源码。里面每一章的代码不超过 500 行，实现了 web 服务器、爬虫、OCR等等“大型系统”，每一章由不同领域的大牛完成。看看作者列表，可以说是软件领域的名人堂。\n\n ","source":"_posts/开源项目推荐.md","raw":"---\ntitle: 开源项目推荐\ndate: 2016-09-03 23:46:12\ntags: [open source]\ncategories: 资源\n---\n## C 开源项目\n### [Webbench](http://home.tiscali.cz/~cz210552/webbench.html)\nWebbench 是一个在 linux 下使用的非常简单的网站压测工具。它使用 fork() 模拟多个客户端同时访问我们设定的 URL，测试网站在压力下工作的性能，最多可以模拟 3 万个并发连接去测试网站的负载能力。Webbench 使用 C 语言编写, 代码实在太简洁，源码加起来不到 600 行。\n\n### [Tinyhttpd](http://sourceforge.net/projects/tinyhttpd/)\ntinyhttpd 是一个超轻量型 Http Server，使用 C 语言开发，全部代码只有 502 行 (包括注释)，附带一个简单的 Client，可以通过阅读这段代码理解一个 Http Server 的本质。\n下载链接：Tiny HTTPd | SourceForge.net\n\n### [cJSON](https://sourceforge.net/projects/cjson/)\ncJSON 是 C 语言中的一个 JSON 编解码器，非常轻量级，C 文件只有 500 多行，速度也非常理想。\ncJSON 也存在几个弱点，虽然功能不是非常强大，但 cJSON 的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的 C 语言项目进行学习。 \n### [CMockery](http://code.google.com/p/cmockery/downloads/list)\ncmockery 是 google 发布的用于 C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery 的源代码行数不到 3K，你阅读一下 will_return 和 mock 的源代码就一目了然了。   \n主要特点：    \n* 免费且开源，google 提供技术支持；\n* 轻量级的框架，使测试更加快速简单；\n* 避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;\n* 并不强制要求待测代码必须依赖 C99 标准，这一特性对许多嵌入式系统的开发很有用\n\n### [Libev](http://software.schmorp.de/pkg/libev.html)\nlibev 是一个开源的事件驱动库，基于 epoll，kqueue 等 OS 提供的基础设施。其以高效出名，它可以将 IO 事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于 Reactor 模式，效率较高，并且代码精简（4.15 版本 8000 多行），是学习事件驱动编程的很好的资源。\n\n### [Memcached](http://memcached.org/)\nMemcached 是一个高性能的分布式内存对象缓存系统，用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7 的代码量还是可以接受的，只有 10K 行左右。\n\n### [Lua](http://www.lua.org/)\nLua 的源代码，百分之一百的 ANSI C，一点都不掺杂。在任何支持 ANSI C 编译器的平台上都可以轻松编译通过。Lua 的代码数量足够小，5.1.4 仅仅 1.5W 行，去掉空白行和注释估计能到 1W 行。\n\n### [SQLite](http://www.sqlite.org/ )\nSQLite 是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的 SQL 数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致 3 万行 C 代码，250K。\n\n### [UNIX v6](http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6)\nUNIX V6 的内核源代码包括设备驱动程序在内约有1万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为 1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。\n另一方面，最近的操作系统，例如 Linux 最新版的内核源代码据说超过了 1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。\n\n### [NETBSD](http://www.netbsd.org/)\nNetBSD 是一个免费的，具有高度移植性的UNIX-like操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD 计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过 NetBSD Packages Collection 获得。\n\n## Java 开源项目\n### 爬虫项目\n#### [nutch](https://github.com/apache/nutch)\napache 下的开源爬虫程序，功能丰富，文档完整。有数据抓取解析以及存储的模块。\n\n### [Heritrix](https://github.com/internetarchive/heritrix3)\n很早就有了，经历过很多次更新，使用的人比较多，功能齐全，文档完整，网上的资料也多。有自己的 web 管理控制台，包含了一个 HTTP 服务器。操作者可以通过选择 Crawler 命令来操作控制台。\n\n### [crawler4j](https://github.com/yasserg/crawler4j)\n因为只拥有爬虫的核心功能，所以上手极为简单，几分钟就可以写一个多线程爬虫程序。\n\n### [webmagic](https://github.com/code4craft/webmagic)\n国人黄亿华先生的良心大作\n\n## 其他\n### [aosabook](https://github.com/aosabook/500lines)\n这是一本牛书 aosabook 的续集 500 Lines or Less 的源码。里面每一章的代码不超过 500 行，实现了 web 服务器、爬虫、OCR等等“大型系统”，每一章由不同领域的大牛完成。看看作者列表，可以说是软件领域的名人堂。\n\n ","slug":"开源项目推荐","published":1,"updated":"2016-09-03T16:09:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44u00299rui80qy4ro0","content":"<h2 id=\"C-开源项目\"><a href=\"#C-开源项目\" class=\"headerlink\" title=\"C 开源项目\"></a>C 开源项目</h2><h3 id=\"Webbench\"><a href=\"#Webbench\" class=\"headerlink\" title=\"Webbench\"></a><a href=\"http://home.tiscali.cz/~cz210552/webbench.html\" target=\"_blank\" rel=\"external\">Webbench</a></h3><p>Webbench 是一个在 linux 下使用的非常简单的网站压测工具。它使用 fork() 模拟多个客户端同时访问我们设定的 URL，测试网站在压力下工作的性能，最多可以模拟 3 万个并发连接去测试网站的负载能力。Webbench 使用 C 语言编写, 代码实在太简洁，源码加起来不到 600 行。</p>\n<h3 id=\"Tinyhttpd\"><a href=\"#Tinyhttpd\" class=\"headerlink\" title=\"Tinyhttpd\"></a><a href=\"http://sourceforge.net/projects/tinyhttpd/\" target=\"_blank\" rel=\"external\">Tinyhttpd</a></h3><p>tinyhttpd 是一个超轻量型 Http Server，使用 C 语言开发，全部代码只有 502 行 (包括注释)，附带一个简单的 Client，可以通过阅读这段代码理解一个 Http Server 的本质。<br>下载链接：Tiny HTTPd | SourceForge.net</p>\n<h3 id=\"cJSON\"><a href=\"#cJSON\" class=\"headerlink\" title=\"cJSON\"></a><a href=\"https://sourceforge.net/projects/cjson/\" target=\"_blank\" rel=\"external\">cJSON</a></h3><p>cJSON 是 C 语言中的一个 JSON 编解码器，非常轻量级，C 文件只有 500 多行，速度也非常理想。<br>cJSON 也存在几个弱点，虽然功能不是非常强大，但 cJSON 的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的 C 语言项目进行学习。 </p>\n<h3 id=\"CMockery\"><a href=\"#CMockery\" class=\"headerlink\" title=\"CMockery\"></a><a href=\"http://code.google.com/p/cmockery/downloads/list\" target=\"_blank\" rel=\"external\">CMockery</a></h3><p>cmockery 是 google 发布的用于 C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery 的源代码行数不到 3K，你阅读一下 will_return 和 mock 的源代码就一目了然了。<br>主要特点：    </p>\n<ul>\n<li>免费且开源，google 提供技术支持；</li>\n<li>轻量级的框架，使测试更加快速简单；</li>\n<li>避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;</li>\n<li>并不强制要求待测代码必须依赖 C99 标准，这一特性对许多嵌入式系统的开发很有用</li>\n</ul>\n<h3 id=\"Libev\"><a href=\"#Libev\" class=\"headerlink\" title=\"Libev\"></a><a href=\"http://software.schmorp.de/pkg/libev.html\" target=\"_blank\" rel=\"external\">Libev</a></h3><p>libev 是一个开源的事件驱动库，基于 epoll，kqueue 等 OS 提供的基础设施。其以高效出名，它可以将 IO 事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于 Reactor 模式，效率较高，并且代码精简（4.15 版本 8000 多行），是学习事件驱动编程的很好的资源。</p>\n<h3 id=\"Memcached\"><a href=\"#Memcached\" class=\"headerlink\" title=\"Memcached\"></a><a href=\"http://memcached.org/\" target=\"_blank\" rel=\"external\">Memcached</a></h3><p>Memcached 是一个高性能的分布式内存对象缓存系统，用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7 的代码量还是可以接受的，只有 10K 行左右。</p>\n<h3 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a><a href=\"http://www.lua.org/\" target=\"_blank\" rel=\"external\">Lua</a></h3><p>Lua 的源代码，百分之一百的 ANSI C，一点都不掺杂。在任何支持 ANSI C 编译器的平台上都可以轻松编译通过。Lua 的代码数量足够小，5.1.4 仅仅 1.5W 行，去掉空白行和注释估计能到 1W 行。</p>\n<h3 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a><a href=\"http://www.sqlite.org/\" target=\"_blank\" rel=\"external\">SQLite</a></h3><p>SQLite 是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的 SQL 数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致 3 万行 C 代码，250K。</p>\n<h3 id=\"UNIX-v6\"><a href=\"#UNIX-v6\" class=\"headerlink\" title=\"UNIX v6\"></a><a href=\"http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6\" target=\"_blank\" rel=\"external\">UNIX v6</a></h3><p>UNIX V6 的内核源代码包括设备驱动程序在内约有1万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为 1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。<br>另一方面，最近的操作系统，例如 Linux 最新版的内核源代码据说超过了 1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。</p>\n<h3 id=\"NETBSD\"><a href=\"#NETBSD\" class=\"headerlink\" title=\"NETBSD\"></a><a href=\"http://www.netbsd.org/\" target=\"_blank\" rel=\"external\">NETBSD</a></h3><p>NetBSD 是一个免费的，具有高度移植性的UNIX-like操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD 计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过 NetBSD Packages Collection 获得。</p>\n<h2 id=\"Java-开源项目\"><a href=\"#Java-开源项目\" class=\"headerlink\" title=\"Java 开源项目\"></a>Java 开源项目</h2><h3 id=\"爬虫项目\"><a href=\"#爬虫项目\" class=\"headerlink\" title=\"爬虫项目\"></a>爬虫项目</h3><h4 id=\"nutch\"><a href=\"#nutch\" class=\"headerlink\" title=\"nutch\"></a><a href=\"https://github.com/apache/nutch\" target=\"_blank\" rel=\"external\">nutch</a></h4><p>apache 下的开源爬虫程序，功能丰富，文档完整。有数据抓取解析以及存储的模块。</p>\n<h3 id=\"Heritrix\"><a href=\"#Heritrix\" class=\"headerlink\" title=\"Heritrix\"></a><a href=\"https://github.com/internetarchive/heritrix3\" target=\"_blank\" rel=\"external\">Heritrix</a></h3><p>很早就有了，经历过很多次更新，使用的人比较多，功能齐全，文档完整，网上的资料也多。有自己的 web 管理控制台，包含了一个 HTTP 服务器。操作者可以通过选择 Crawler 命令来操作控制台。</p>\n<h3 id=\"crawler4j\"><a href=\"#crawler4j\" class=\"headerlink\" title=\"crawler4j\"></a><a href=\"https://github.com/yasserg/crawler4j\" target=\"_blank\" rel=\"external\">crawler4j</a></h3><p>因为只拥有爬虫的核心功能，所以上手极为简单，几分钟就可以写一个多线程爬虫程序。</p>\n<h3 id=\"webmagic\"><a href=\"#webmagic\" class=\"headerlink\" title=\"webmagic\"></a><a href=\"https://github.com/code4craft/webmagic\" target=\"_blank\" rel=\"external\">webmagic</a></h3><p>国人黄亿华先生的良心大作</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"aosabook\"><a href=\"#aosabook\" class=\"headerlink\" title=\"aosabook\"></a><a href=\"https://github.com/aosabook/500lines\" target=\"_blank\" rel=\"external\">aosabook</a></h3><p>这是一本牛书 aosabook 的续集 500 Lines or Less 的源码。里面每一章的代码不超过 500 行，实现了 web 服务器、爬虫、OCR等等“大型系统”，每一章由不同领域的大牛完成。看看作者列表，可以说是软件领域的名人堂。</p>\n","excerpt":"","more":"<h2 id=\"C-开源项目\"><a href=\"#C-开源项目\" class=\"headerlink\" title=\"C 开源项目\"></a>C 开源项目</h2><h3 id=\"Webbench\"><a href=\"#Webbench\" class=\"headerlink\" title=\"Webbench\"></a><a href=\"http://home.tiscali.cz/~cz210552/webbench.html\">Webbench</a></h3><p>Webbench 是一个在 linux 下使用的非常简单的网站压测工具。它使用 fork() 模拟多个客户端同时访问我们设定的 URL，测试网站在压力下工作的性能，最多可以模拟 3 万个并发连接去测试网站的负载能力。Webbench 使用 C 语言编写, 代码实在太简洁，源码加起来不到 600 行。</p>\n<h3 id=\"Tinyhttpd\"><a href=\"#Tinyhttpd\" class=\"headerlink\" title=\"Tinyhttpd\"></a><a href=\"http://sourceforge.net/projects/tinyhttpd/\">Tinyhttpd</a></h3><p>tinyhttpd 是一个超轻量型 Http Server，使用 C 语言开发，全部代码只有 502 行 (包括注释)，附带一个简单的 Client，可以通过阅读这段代码理解一个 Http Server 的本质。<br>下载链接：Tiny HTTPd | SourceForge.net</p>\n<h3 id=\"cJSON\"><a href=\"#cJSON\" class=\"headerlink\" title=\"cJSON\"></a><a href=\"https://sourceforge.net/projects/cjson/\">cJSON</a></h3><p>cJSON 是 C 语言中的一个 JSON 编解码器，非常轻量级，C 文件只有 500 多行，速度也非常理想。<br>cJSON 也存在几个弱点，虽然功能不是非常强大，但 cJSON 的小身板和速度是最值得赞赏的。其代码被非常好地维护着，结构也简单易懂，可以作为一个非常好的 C 语言项目进行学习。 </p>\n<h3 id=\"CMockery\"><a href=\"#CMockery\" class=\"headerlink\" title=\"CMockery\"></a><a href=\"http://code.google.com/p/cmockery/downloads/list\">CMockery</a></h3><p>cmockery 是 google 发布的用于 C单元测试的一个轻量级的框架。它很小巧，对其他开源包没有依赖，对被测试代码侵入性小。cmockery 的源代码行数不到 3K，你阅读一下 will_return 和 mock 的源代码就一目了然了。<br>主要特点：    </p>\n<ul>\n<li>免费且开源，google 提供技术支持；</li>\n<li>轻量级的框架，使测试更加快速简单；</li>\n<li>避免使用复杂的编译器特性，对老版本的编译器来讲，兼容性好;</li>\n<li>并不强制要求待测代码必须依赖 C99 标准，这一特性对许多嵌入式系统的开发很有用</li>\n</ul>\n<h3 id=\"Libev\"><a href=\"#Libev\" class=\"headerlink\" title=\"Libev\"></a><a href=\"http://software.schmorp.de/pkg/libev.html\">Libev</a></h3><p>libev 是一个开源的事件驱动库，基于 epoll，kqueue 等 OS 提供的基础设施。其以高效出名，它可以将 IO 事件，定时器，和信号统一起来，统一放在事件处理这一套框架下处理。基于 Reactor 模式，效率较高，并且代码精简（4.15 版本 8000 多行），是学习事件驱动编程的很好的资源。</p>\n<h3 id=\"Memcached\"><a href=\"#Memcached\" class=\"headerlink\" title=\"Memcached\"></a><a href=\"http://memcached.org/\">Memcached</a></h3><p>Memcached 是一个高性能的分布式内存对象缓存系统，用于动态 Web 应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态数据库驱动网站的速度。Memcached 基于一个存储键/值对的 hashmap。Memcached-1.4.7 的代码量还是可以接受的，只有 10K 行左右。</p>\n<h3 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a><a href=\"http://www.lua.org/\">Lua</a></h3><p>Lua 的源代码，百分之一百的 ANSI C，一点都不掺杂。在任何支持 ANSI C 编译器的平台上都可以轻松编译通过。Lua 的代码数量足够小，5.1.4 仅仅 1.5W 行，去掉空白行和注释估计能到 1W 行。</p>\n<h3 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a><a href=\"http://www.sqlite.org/\">SQLite</a></h3><p>SQLite 是一个开源的嵌入式关系数据库，实现自包容、零配置、支持事务的 SQL 数据库引擎。 其特点是高度便携、使用方便、结构紧凑、高效、可靠。足够小，大致 3 万行 C 代码，250K。</p>\n<h3 id=\"UNIX-v6\"><a href=\"#UNIX-v6\" class=\"headerlink\" title=\"UNIX v6\"></a><a href=\"http://minnie.tuhs.org/cgi-bin/utree.pl?file=V6\">UNIX v6</a></h3><p>UNIX V6 的内核源代码包括设备驱动程序在内约有1万行，这个数量的源代码，初学者是能够充分理解的。有一种说法是一个人所能理解的代码量上限为 1 万行，UNIX V6的内核源代码从数量上看正好在这个范围之内。<br>另一方面，最近的操作系统，例如 Linux 最新版的内核源代码据说超过了 1000 万行。就算不是初学者，想完全理解全部代码基本上也是不可能的。</p>\n<h3 id=\"NETBSD\"><a href=\"#NETBSD\" class=\"headerlink\" title=\"NETBSD\"></a><a href=\"http://www.netbsd.org/\">NETBSD</a></h3><p>NetBSD 是一个免费的，具有高度移植性的UNIX-like操作系统，是现行可移植平台最多的操作系统，可以在许多平台上执行，从 64bit alpha 服务器到手持设备和嵌入式设备。NetBSD 计划的口号是：”Of course it runs NetBSD”。它设计简洁，代码规范，拥有众多先进特性，使得它在业界和学术界广受好评。由于简洁的设计和先进的特征，使得它在生产和研究方面，都有卓越的表现，而且它也有受使用者支持的完整的源代码。许多程序都可以很容易地通过 NetBSD Packages Collection 获得。</p>\n<h2 id=\"Java-开源项目\"><a href=\"#Java-开源项目\" class=\"headerlink\" title=\"Java 开源项目\"></a>Java 开源项目</h2><h3 id=\"爬虫项目\"><a href=\"#爬虫项目\" class=\"headerlink\" title=\"爬虫项目\"></a>爬虫项目</h3><h4 id=\"nutch\"><a href=\"#nutch\" class=\"headerlink\" title=\"nutch\"></a><a href=\"https://github.com/apache/nutch\">nutch</a></h4><p>apache 下的开源爬虫程序，功能丰富，文档完整。有数据抓取解析以及存储的模块。</p>\n<h3 id=\"Heritrix\"><a href=\"#Heritrix\" class=\"headerlink\" title=\"Heritrix\"></a><a href=\"https://github.com/internetarchive/heritrix3\">Heritrix</a></h3><p>很早就有了，经历过很多次更新，使用的人比较多，功能齐全，文档完整，网上的资料也多。有自己的 web 管理控制台，包含了一个 HTTP 服务器。操作者可以通过选择 Crawler 命令来操作控制台。</p>\n<h3 id=\"crawler4j\"><a href=\"#crawler4j\" class=\"headerlink\" title=\"crawler4j\"></a><a href=\"https://github.com/yasserg/crawler4j\">crawler4j</a></h3><p>因为只拥有爬虫的核心功能，所以上手极为简单，几分钟就可以写一个多线程爬虫程序。</p>\n<h3 id=\"webmagic\"><a href=\"#webmagic\" class=\"headerlink\" title=\"webmagic\"></a><a href=\"https://github.com/code4craft/webmagic\">webmagic</a></h3><p>国人黄亿华先生的良心大作</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"aosabook\"><a href=\"#aosabook\" class=\"headerlink\" title=\"aosabook\"></a><a href=\"https://github.com/aosabook/500lines\">aosabook</a></h3><p>这是一本牛书 aosabook 的续集 500 Lines or Less 的源码。里面每一章的代码不超过 500 行，实现了 web 服务器、爬虫、OCR等等“大型系统”，每一章由不同领域的大牛完成。看看作者列表，可以说是软件领域的名人堂。</p>\n"},{"title":"初等函数","date":"2016-09-03T08:47:57.000Z","_content":"\n## 定义\n设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$\n${x}$称为自变量，其取值范围${A}$叫做函数的定义域。   \n${y}$称为函数值，其取值范围称为函数的值域。\n\n### 区间的概念\n* 闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$\n* 开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$\n* 半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$\n\n### 函数地表示方法\n* 解析法：用数学表达式表示\n* 图像法\n* 列表法\n\n## 函数的性质\n### 单调性\n* 减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)> f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。\n* 增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)< f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。\n\n如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。\n### 奇偶性\n* 偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$\n* 奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$\n\n## 初等函数\n### 指数函数\n#### 指数和幂运算\n次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。\n根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。\n运算公式：\n> ${a^ra^s=a^{r+s}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(a^r)^s=a^{rs}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(ab)^r=a^rb^s}$ ${(a>0 , b>0, r,s \\in Q)}$   \n> ${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a>0 ; m,n \\in N^+ 且n>1)}$   \n> ${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a>0 ; m,n \\in N^+ 且n>1)}$  \n\n#### 指数函数及其性质\n一般的，函数${y=a^x} (a>0,且a\\neq 1) x\\in R$ 具有以下性质\n![](../images/math_function_1.png)\n\n### 对数函数\n#### 对数\n如果 $a^x=N (a>0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:    \n$$\n    x=\\log_a N\n$$\n其中，$a$叫做对数的底数，$N$叫做真数。    \n常用对数：以10为底的对数，记作 $\\lg N$   \n自然对数：以$e$为底的对数，记作$In N$\n\n运算公式: \n> 前提条件，$a>0 且a\\neq 1,M>0, N>0$   \n> $\\log_a (M*N) = \\log_a M + \\log_a N$     \n> $\\log_a {M\\over N} = \\log_a M -\\log_a N $   \n> $\\log_a {M^n}= n\\log_a M (n\\in R)$\n\n#### 对数函数及性质\n一般的，函数$y=\\log_a x (a>0 且 a\\neq 1) x\\in (0,+\\infty)$\n![](../images/math_function_2.png)\n\n\n","source":"_drafts/初等函数.md","raw":"---\ntitle: 初等函数\ndate: 2016-09-03 16:47:57\ntags: [Math, Elementary mathematics, note]\ncategories: Math\n---\n\n## 定义\n设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$\n${x}$称为自变量，其取值范围${A}$叫做函数的定义域。   \n${y}$称为函数值，其取值范围称为函数的值域。\n\n### 区间的概念\n* 闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$\n* 开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$\n* 半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$\n\n### 函数地表示方法\n* 解析法：用数学表达式表示\n* 图像法\n* 列表法\n\n## 函数的性质\n### 单调性\n* 减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)> f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。\n* 增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)< f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。\n\n如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。\n### 奇偶性\n* 偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$\n* 奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$\n\n## 初等函数\n### 指数函数\n#### 指数和幂运算\n次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。\n根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。\n运算公式：\n> ${a^ra^s=a^{r+s}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(a^r)^s=a^{rs}}$ ${(a>0 , r,s \\in Q)}$   \n> ${(ab)^r=a^rb^s}$ ${(a>0 , b>0, r,s \\in Q)}$   \n> ${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a>0 ; m,n \\in N^+ 且n>1)}$   \n> ${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a>0 ; m,n \\in N^+ 且n>1)}$  \n\n#### 指数函数及其性质\n一般的，函数${y=a^x} (a>0,且a\\neq 1) x\\in R$ 具有以下性质\n![](../images/math_function_1.png)\n\n### 对数函数\n#### 对数\n如果 $a^x=N (a>0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:    \n$$\n    x=\\log_a N\n$$\n其中，$a$叫做对数的底数，$N$叫做真数。    \n常用对数：以10为底的对数，记作 $\\lg N$   \n自然对数：以$e$为底的对数，记作$In N$\n\n运算公式: \n> 前提条件，$a>0 且a\\neq 1,M>0, N>0$   \n> $\\log_a (M*N) = \\log_a M + \\log_a N$     \n> $\\log_a {M\\over N} = \\log_a M -\\log_a N $   \n> $\\log_a {M^n}= n\\log_a M (n\\in R)$\n\n#### 对数函数及性质\n一般的，函数$y=\\log_a x (a>0 且 a\\neq 1) x\\in (0,+\\infty)$\n![](../images/math_function_2.png)\n\n\n","slug":"初等函数","published":0,"updated":"2016-09-03T09:31:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwfzq44w002d9ruig1ut2mur","content":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$<br>${x}$称为自变量，其取值范围${A}$叫做函数的定义域。<br>${y}$称为函数值，其取值范围称为函数的值域。</p>\n<h3 id=\"区间的概念\"><a href=\"#区间的概念\" class=\"headerlink\" title=\"区间的概念\"></a>区间的概念</h3><ul>\n<li>闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$</li>\n<li>开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$</li>\n<li>半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$</li>\n</ul>\n<h3 id=\"函数地表示方法\"><a href=\"#函数地表示方法\" class=\"headerlink\" title=\"函数地表示方法\"></a>函数地表示方法</h3><ul>\n<li>解析法：用数学表达式表示</li>\n<li>图像法</li>\n<li>列表法</li>\n</ul>\n<h2 id=\"函数的性质\"><a href=\"#函数的性质\" class=\"headerlink\" title=\"函数的性质\"></a>函数的性质</h2><h3 id=\"单调性\"><a href=\"#单调性\" class=\"headerlink\" title=\"单调性\"></a>单调性</h3><ul>\n<li>减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&gt; f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。</li>\n<li>增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&lt; f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。</li>\n</ul>\n<p>如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。</p>\n<h3 id=\"奇偶性\"><a href=\"#奇偶性\" class=\"headerlink\" title=\"奇偶性\"></a>奇偶性</h3><ul>\n<li>偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$</li>\n<li>奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$</li>\n</ul>\n<h2 id=\"初等函数\"><a href=\"#初等函数\" class=\"headerlink\" title=\"初等函数\"></a>初等函数</h2><h3 id=\"指数函数\"><a href=\"#指数函数\" class=\"headerlink\" title=\"指数函数\"></a>指数函数</h3><h4 id=\"指数和幂运算\"><a href=\"#指数和幂运算\" class=\"headerlink\" title=\"指数和幂运算\"></a>指数和幂运算</h4><p>次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。<br>根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。<br>运算公式：</p>\n<blockquote>\n<p>${a^ra^s=a^{r+s}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(a^r)^s=a^{rs}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(ab)^r=a^rb^s}$ ${(a&gt;0 , b&gt;0, r,s \\in Q)}$<br>${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$<br>${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$  </p>\n</blockquote>\n<h4 id=\"指数函数及其性质\"><a href=\"#指数函数及其性质\" class=\"headerlink\" title=\"指数函数及其性质\"></a>指数函数及其性质</h4><p>一般的，函数${y=a^x} (a&gt;0,且a\\neq 1) x\\in R$ 具有以下性质<br><img src=\"../images/math_function_1.png\" alt=\"\"></p>\n<h3 id=\"对数函数\"><a href=\"#对数函数\" class=\"headerlink\" title=\"对数函数\"></a>对数函数</h3><h4 id=\"对数\"><a href=\"#对数\" class=\"headerlink\" title=\"对数\"></a>对数</h4><p>如果 $a^x=N (a&gt;0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:<br>$$<br>    x=\\log_a N<br>$$<br>其中，$a$叫做对数的底数，$N$叫做真数。<br>常用对数：以10为底的对数，记作 $\\lg N$<br>自然对数：以$e$为底的对数，记作$In N$</p>\n<p>运算公式: </p>\n<blockquote>\n<p>前提条件，$a&gt;0 且a\\neq 1,M&gt;0, N&gt;0$<br>$\\log_a (M*N) = \\log_a M + \\log_a N$<br>$\\log_a {M\\over N} = \\log_a M -\\log_a N $<br>$\\log_a {M^n}= n\\log_a M (n\\in R)$</p>\n</blockquote>\n<h4 id=\"对数函数及性质\"><a href=\"#对数函数及性质\" class=\"headerlink\" title=\"对数函数及性质\"></a>对数函数及性质</h4><p>一般的，函数$y=\\log_a x (a&gt;0 且 a\\neq 1) x\\in (0,+\\infty)$<br><img src=\"../images/math_function_2.png\" alt=\"\"></p>\n","excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>设${A，B}$是非空的数集，如果按照某种对应关系${f}$，使对于集合A中任意一个数${x}$，在集合B中都有唯一确定的数${f(x)}$和它对应，那么就称${f:A\\to B}$为集合A到集合B的一个元素。记作：${y=f(x), x\\in A}$<br>${x}$称为自变量，其取值范围${A}$叫做函数的定义域。<br>${y}$称为函数值，其取值范围称为函数的值域。</p>\n<h3 id=\"区间的概念\"><a href=\"#区间的概念\" class=\"headerlink\" title=\"区间的概念\"></a>区间的概念</h3><ul>\n<li>闭区间：满足不等式${a\\le x \\le b}$的实数${x}$的集合，表示为${[a,b]}$</li>\n<li>开区间，满足不等式${a\\lt x \\lt b}$的实数${x}$的集合，表示为${(a,b)}$</li>\n<li>半开半闭区间，满足不等式${a\\le x \\lt b}$或${a\\lt x\\le b}$的集合，表示为${[a,b)}$、${(a,b]}$</li>\n</ul>\n<h3 id=\"函数地表示方法\"><a href=\"#函数地表示方法\" class=\"headerlink\" title=\"函数地表示方法\"></a>函数地表示方法</h3><ul>\n<li>解析法：用数学表达式表示</li>\n<li>图像法</li>\n<li>列表法</li>\n</ul>\n<h2 id=\"函数的性质\"><a href=\"#函数的性质\" class=\"headerlink\" title=\"函数的性质\"></a>函数的性质</h2><h3 id=\"单调性\"><a href=\"#单调性\" class=\"headerlink\" title=\"单调性\"></a>单调性</h3><ul>\n<li>减函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&gt; f(x_2)}$，则称${f(x)}$在区间${D}$上是减函数。</li>\n<li>增函数：对于定义域${I}$内某个区间${D}$上的任意两个自变量的值${x_1,x_2}$，当${x_1 \\lt x_2}$时，都有${f(x_1)&lt; f(x_2)}$，则称${f(x)}$在区间${D}$上是增函数。</li>\n</ul>\n<p>如果${f(x)}$在区间${D}$上是增函数，或是减函数，则称${f(x)}$具有单调性,区间${D}$叫做单调区间。</p>\n<h3 id=\"奇偶性\"><a href=\"#奇偶性\" class=\"headerlink\" title=\"奇偶性\"></a>奇偶性</h3><ul>\n<li>偶函数：对于定义域内任意${x}$，都有${f(-x)=f(x)}$</li>\n<li>奇函数：对于定义域内任意${x}$，都有${f(-x)=-f(x)}$</li>\n</ul>\n<h2 id=\"初等函数\"><a href=\"#初等函数\" class=\"headerlink\" title=\"初等函数\"></a>初等函数</h2><h3 id=\"指数函数\"><a href=\"#指数函数\" class=\"headerlink\" title=\"指数函数\"></a>指数函数</h3><h4 id=\"指数和幂运算\"><a href=\"#指数和幂运算\" class=\"headerlink\" title=\"指数和幂运算\"></a>指数和幂运算</h4><p>次方根：如果${x^n=a}$，${x}$叫做${a}$的${n}$次方根。<br>根式：${\\sqrt[n]a}$叫做根式，${n}$叫做根指数，${a}$叫做被开方数。<br>运算公式：</p>\n<blockquote>\n<p>${a^ra^s=a^{r+s}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(a^r)^s=a^{rs}}$ ${(a&gt;0 , r,s \\in Q)}$<br>${(ab)^r=a^rb^s}$ ${(a&gt;0 , b&gt;0, r,s \\in Q)}$<br>${a^{m\\over n}=\\sqrt[n]{a^m}}$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$<br>${a^{-{m\\over n}}= {1\\over {a^{m\\over n}}} }$ ${(a&gt;0 ; m,n \\in N^+ 且n&gt;1)}$  </p>\n</blockquote>\n<h4 id=\"指数函数及其性质\"><a href=\"#指数函数及其性质\" class=\"headerlink\" title=\"指数函数及其性质\"></a>指数函数及其性质</h4><p>一般的，函数${y=a^x} (a&gt;0,且a\\neq 1) x\\in R$ 具有以下性质<br><img src=\"../images/math_function_1.png\" alt=\"\"></p>\n<h3 id=\"对数函数\"><a href=\"#对数函数\" class=\"headerlink\" title=\"对数函数\"></a>对数函数</h3><h4 id=\"对数\"><a href=\"#对数\" class=\"headerlink\" title=\"对数\"></a>对数</h4><p>如果 $a^x=N (a&gt;0,且a\\neq 1)$.那么$x$叫做以$a$为底，$N$的对数，记作:<br>$$<br>    x=\\log_a N<br>$$<br>其中，$a$叫做对数的底数，$N$叫做真数。<br>常用对数：以10为底的对数，记作 $\\lg N$<br>自然对数：以$e$为底的对数，记作$In N$</p>\n<p>运算公式: </p>\n<blockquote>\n<p>前提条件，$a&gt;0 且a\\neq 1,M&gt;0, N&gt;0$<br>$\\log_a (M*N) = \\log_a M + \\log_a N$<br>$\\log_a {M\\over N} = \\log_a M -\\log_a N $<br>$\\log_a {M^n}= n\\log_a M (n\\in R)$</p>\n</blockquote>\n<h4 id=\"对数函数及性质\"><a href=\"#对数函数及性质\" class=\"headerlink\" title=\"对数函数及性质\"></a>对数函数及性质</h4><p>一般的，函数$y=\\log_a x (a&gt;0 且 a\\neq 1) x\\in (0,+\\infty)$<br><img src=\"../images/math_function_2.png\" alt=\"\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciwfzq43i00029ruir1681t19","category_id":"ciwfzq43s00069ruikkc2j25a","_id":"ciwfzq440000e9ruiriz9bo4u"},{"post_id":"ciwfzq43n00049ruiawbgjz0d","category_id":"ciwfzq43s00069ruikkc2j25a","_id":"ciwfzq443000j9rui4q51fa4y"},{"post_id":"ciwfzq442000i9ruixymx5eih","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq445000o9rui72433wxx"},{"post_id":"ciwfzq43u00089ruibqavkrq8","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq447000s9ruid3af3mp7"},{"post_id":"ciwfzq443000k9rui0xmdr0ky","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq449000v9rui3vqk44mk"},{"post_id":"ciwfzq444000n9rui0p42u2se","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44a000z9ruigng1tc32"},{"post_id":"ciwfzq43v00099ruilqbwkybw","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44c00139ruikzlvqrzn"},{"post_id":"ciwfzq445000p9ruif7p7r86e","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44e00179ruibz6baow9"},{"post_id":"ciwfzq447000t9rui3eg4o1d4","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44g001a9rui7yklsvzc"},{"post_id":"ciwfzq43w000b9ruiwfp5wuqx","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44h001c9ruid63ja29h"},{"post_id":"ciwfzq449000w9rui328pjwnn","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44j001g9ruirkkdzaut"},{"post_id":"ciwfzq44b00119ruif06m0tvu","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44j001j9ruiwxctiee5"},{"post_id":"ciwfzq43y000d9ruibyzghpx9","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44l001n9ruieysmurrj"},{"post_id":"ciwfzq44c00149rui7fl86jct","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44n001r9ruin79o009m"},{"post_id":"ciwfzq44e00189ruihd0s7hpo","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44p001t9rui2tbmesae"},{"post_id":"ciwfzq440000f9ruiqg98qxx8","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq44q001x9ruiv4zsr0wj"},{"post_id":"ciwfzq44g001b9ruiknjzo9g5","category_id":"ciwfzq44j001f9ruitciv1vdn","_id":"ciwfzq44r001z9ruiwxsh3zwt"},{"post_id":"ciwfzq44o001s9ruibhfcl6j4","category_id":"ciwfzq44n001p9ruim2llspok","_id":"ciwfzq44t00249ruiburk8fl1"},{"post_id":"ciwfzq44i001d9rui6g4v0w1x","category_id":"ciwfzq44n001p9ruim2llspok","_id":"ciwfzq44u00279ruic1x7qclw"},{"post_id":"ciwfzq44p001v9ruiam5pvma5","category_id":"ciwfzq44n001p9ruim2llspok","_id":"ciwfzq44w002c9ruieqatybfd"},{"post_id":"ciwfzq44r001y9ruinl9lgqmc","category_id":"ciwfzq44q001w9ruipz86twqb","_id":"ciwfzq44y002e9rui9yg5hp6x"},{"post_id":"ciwfzq44j001h9rui95ipc8j4","category_id":"ciwfzq44q001w9ruipz86twqb","_id":"ciwfzq44z002h9ruic7k9zvwi"},{"post_id":"ciwfzq44k001k9rui9sngtd62","category_id":"ciwfzq44t00229ruix2sa075p","_id":"ciwfzq44z002i9ruioneqm7b5"},{"post_id":"ciwfzq44w002d9ruig1ut2mur","category_id":"ciwfzq441000g9rui7youz0iv","_id":"ciwfzq450002l9ruikjle6mzg"},{"post_id":"ciwfzq44l001o9ruiwmopyxvc","category_id":"ciwfzq44t00229ruix2sa075p","_id":"ciwfzq450002o9rui623oesgg"},{"post_id":"ciwfzq44s00219rui5rrhfgic","category_id":"ciwfzq44z002g9rui90or68rt","_id":"ciwfzq451002r9rui5b8wxszt"},{"post_id":"ciwfzq44t00259rui8ztop5mh","category_id":"ciwfzq450002m9ruizhirxe7f","_id":"ciwfzq452002u9ruifh385s00"},{"post_id":"ciwfzq44u00299rui80qy4ro0","category_id":"ciwfzq451002s9rui45p1ajww","_id":"ciwfzq453002x9rui8mekbtj2"}],"PostTag":[{"post_id":"ciwfzq43i00029ruir1681t19","tag_id":"ciwfzq43q00059ruihs0tt202","_id":"ciwfzq448000u9ruil53iapc7"},{"post_id":"ciwfzq43i00029ruir1681t19","tag_id":"ciwfzq43v000a9rui992k2ioo","_id":"ciwfzq44a000y9ruizkhtx47b"},{"post_id":"ciwfzq43i00029ruir1681t19","tag_id":"ciwfzq441000h9ruicukq23qs","_id":"ciwfzq44b00129ruij439nppr"},{"post_id":"ciwfzq43i00029ruir1681t19","tag_id":"ciwfzq444000m9ruicskpcji3","_id":"ciwfzq44e00169ruiv1kow95u"},{"post_id":"ciwfzq43n00049ruiawbgjz0d","tag_id":"ciwfzq447000r9ruicugj6gbb","_id":"ciwfzq44j001i9ruia1tqwhmd"},{"post_id":"ciwfzq43n00049ruiawbgjz0d","tag_id":"ciwfzq44a00109ruijb0c03py","_id":"ciwfzq44k001l9ruioi6u7j4a"},{"post_id":"ciwfzq43n00049ruiawbgjz0d","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq44n001q9rui939stno0"},{"post_id":"ciwfzq43u00089ruibqavkrq8","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq44t00239ruirds62y2k"},{"post_id":"ciwfzq43u00089ruibqavkrq8","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq44u00269rui4nckpio0"},{"post_id":"ciwfzq43u00089ruibqavkrq8","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq44v002a9ruiffkw2y2l"},{"post_id":"ciwfzq43v00099ruilqbwkybw","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq450002k9ruid1cxpdgx"},{"post_id":"ciwfzq43v00099ruilqbwkybw","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq450002n9ruiesugn62x"},{"post_id":"ciwfzq43v00099ruilqbwkybw","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq451002q9ruijetinvw2"},{"post_id":"ciwfzq43w000b9ruiwfp5wuqx","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq453002w9rui7xzmz330"},{"post_id":"ciwfzq43w000b9ruiwfp5wuqx","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq453002y9rui0y462ibd"},{"post_id":"ciwfzq43w000b9ruiwfp5wuqx","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45400309rui6xs7ehae"},{"post_id":"ciwfzq43y000d9ruibyzghpx9","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45500339ruicr2oindp"},{"post_id":"ciwfzq43y000d9ruibyzghpx9","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45500349ruiataovu1d"},{"post_id":"ciwfzq43y000d9ruibyzghpx9","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45600369rui81e8pnc9"},{"post_id":"ciwfzq440000f9ruiqg98qxx8","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45700399ruid7xexuia"},{"post_id":"ciwfzq440000f9ruiqg98qxx8","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq457003a9ruikhmhuotv"},{"post_id":"ciwfzq440000f9ruiqg98qxx8","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq458003c9ruimp3wj7mu"},{"post_id":"ciwfzq442000i9ruixymx5eih","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45b003f9ruif63i4xt8"},{"post_id":"ciwfzq442000i9ruixymx5eih","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45b003g9ruivj81ltag"},{"post_id":"ciwfzq442000i9ruixymx5eih","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45b003i9ruikps4loz1"},{"post_id":"ciwfzq443000k9rui0xmdr0ky","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45c003l9ruiz2e6r3u0"},{"post_id":"ciwfzq443000k9rui0xmdr0ky","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45c003m9ruiwk414cf0"},{"post_id":"ciwfzq443000k9rui0xmdr0ky","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45d003o9ruiyxsyjec0"},{"post_id":"ciwfzq444000n9rui0p42u2se","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45e003r9rui6ridos8s"},{"post_id":"ciwfzq444000n9rui0p42u2se","tag_id":"ciwfzq45c003n9ruii8ayyosj","_id":"ciwfzq45e003s9ruiq1onxvbt"},{"post_id":"ciwfzq444000n9rui0p42u2se","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45e003u9ruic562bp5e"},{"post_id":"ciwfzq445000p9ruif7p7r86e","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45f003x9ruiw3r7q2e5"},{"post_id":"ciwfzq445000p9ruif7p7r86e","tag_id":"ciwfzq45e003t9ruizyhqgj9u","_id":"ciwfzq45f003y9ruijr28efiv"},{"post_id":"ciwfzq445000p9ruif7p7r86e","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45f00409ruitrcgjivo"},{"post_id":"ciwfzq447000t9rui3eg4o1d4","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45f00439ruifrgxmvpg"},{"post_id":"ciwfzq447000t9rui3eg4o1d4","tag_id":"ciwfzq45e003t9ruizyhqgj9u","_id":"ciwfzq45f00449rui2yoj8ak8"},{"post_id":"ciwfzq447000t9rui3eg4o1d4","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45f00469ruic8n72dv8"},{"post_id":"ciwfzq449000w9rui328pjwnn","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45g00499ruilcfh0r2n"},{"post_id":"ciwfzq449000w9rui328pjwnn","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45g004a9ruikuxi8qfs"},{"post_id":"ciwfzq449000w9rui328pjwnn","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45g004c9rui104r8skh"},{"post_id":"ciwfzq44b00119ruif06m0tvu","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45h004f9ruiihe4j3py"},{"post_id":"ciwfzq44b00119ruif06m0tvu","tag_id":"ciwfzq45e003t9ruizyhqgj9u","_id":"ciwfzq45h004g9ruim6o994tj"},{"post_id":"ciwfzq44b00119ruif06m0tvu","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45h004i9ruicux27l9e"},{"post_id":"ciwfzq44c00149rui7fl86jct","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45h004l9rui0w207nou"},{"post_id":"ciwfzq44c00149rui7fl86jct","tag_id":"ciwfzq45e003t9ruizyhqgj9u","_id":"ciwfzq45i004m9ruia4ys6qie"},{"post_id":"ciwfzq44c00149rui7fl86jct","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45i004o9ruiipg99jsx"},{"post_id":"ciwfzq44e00189ruihd0s7hpo","tag_id":"ciwfzq44i001e9ruivh2377b5","_id":"ciwfzq45j004r9ruiicqiep44"},{"post_id":"ciwfzq44e00189ruihd0s7hpo","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45j004s9rui85c8llrf"},{"post_id":"ciwfzq44e00189ruihd0s7hpo","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45j004u9rui8j2v8j6v"},{"post_id":"ciwfzq44g001b9ruiknjzo9g5","tag_id":"ciwfzq45i004q9ruifcv5qr02","_id":"ciwfzq45j004w9rui2243zpoz"},{"post_id":"ciwfzq44g001b9ruiknjzo9g5","tag_id":"ciwfzq45j004t9ruiot6f4dsy","_id":"ciwfzq45j004x9ruig55kx092"},{"post_id":"ciwfzq44i001d9rui6g4v0w1x","tag_id":"ciwfzq45j004v9ruimclauca2","_id":"ciwfzq45j004z9rui9ihlmhsa"},{"post_id":"ciwfzq44j001h9rui95ipc8j4","tag_id":"ciwfzq45j004y9ruitdlby7gy","_id":"ciwfzq45k00539ruix159hgut"},{"post_id":"ciwfzq44j001h9rui95ipc8j4","tag_id":"ciwfzq45k00509ruim45nsopz","_id":"ciwfzq45k00549rui2xhcv7rn"},{"post_id":"ciwfzq44j001h9rui95ipc8j4","tag_id":"ciwfzq45k00519rui2ok6z0ai","_id":"ciwfzq45l00569rui1nar7f8k"},{"post_id":"ciwfzq44j001h9rui95ipc8j4","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45l00579ruibmsk3hwq"},{"post_id":"ciwfzq44k001k9rui9sngtd62","tag_id":"ciwfzq45k00529ruicgyekfo2","_id":"ciwfzq45l00599ruiasme6qzh"},{"post_id":"ciwfzq44k001k9rui9sngtd62","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45l005a9rui8q1x6opu"},{"post_id":"ciwfzq44l001o9ruiwmopyxvc","tag_id":"ciwfzq45k00529ruicgyekfo2","_id":"ciwfzq45l005c9ruic1maqj1k"},{"post_id":"ciwfzq44o001s9ruibhfcl6j4","tag_id":"ciwfzq45j004v9ruimclauca2","_id":"ciwfzq45m005e9ruiby42uypq"},{"post_id":"ciwfzq44o001s9ruibhfcl6j4","tag_id":"ciwfzq45j004t9ruiot6f4dsy","_id":"ciwfzq45m005f9ruih427wqfk"},{"post_id":"ciwfzq44p001v9ruiam5pvma5","tag_id":"ciwfzq45j004v9ruimclauca2","_id":"ciwfzq45n005i9ruish2q1uyb"},{"post_id":"ciwfzq44p001v9ruiam5pvma5","tag_id":"ciwfzq45j004t9ruiot6f4dsy","_id":"ciwfzq45n005j9ruis96jkjh3"},{"post_id":"ciwfzq44r001y9ruinl9lgqmc","tag_id":"ciwfzq45j004y9ruitdlby7gy","_id":"ciwfzq45o005m9ruiknzgssc3"},{"post_id":"ciwfzq44r001y9ruinl9lgqmc","tag_id":"ciwfzq45n005k9ruiffolqaef","_id":"ciwfzq45o005n9rui4m70zgjp"},{"post_id":"ciwfzq44r001y9ruinl9lgqmc","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45o005p9ruihv8swyg6"},{"post_id":"ciwfzq44s00219rui5rrhfgic","tag_id":"ciwfzq45j004y9ruitdlby7gy","_id":"ciwfzq45p005s9ruiyqe25pve"},{"post_id":"ciwfzq44s00219rui5rrhfgic","tag_id":"ciwfzq45o005o9rui0qhxgiuz","_id":"ciwfzq45p005t9ruijcbz6blx"},{"post_id":"ciwfzq44s00219rui5rrhfgic","tag_id":"ciwfzq45o005q9ruiv7y8wsad","_id":"ciwfzq45p005v9ruiwwiz0csb"},{"post_id":"ciwfzq44t00259rui8ztop5mh","tag_id":"ciwfzq45o005r9ruiguggn2gz","_id":"ciwfzq45p005w9ruix3ocv8fe"},{"post_id":"ciwfzq44u00299rui80qy4ro0","tag_id":"ciwfzq45p005u9rui1xu0rydt","_id":"ciwfzq45p005y9ruiz6pal8pq"},{"post_id":"ciwfzq44w002d9ruig1ut2mur","tag_id":"ciwfzq44l001m9rui3m3bdfi6","_id":"ciwfzq45q005z9ruiqi3bcuj5"},{"post_id":"ciwfzq44w002d9ruig1ut2mur","tag_id":"ciwfzq45p005x9ruif5ztvuiq","_id":"ciwfzq45q00609rui5d5p8t1s"},{"post_id":"ciwfzq44w002d9ruig1ut2mur","tag_id":"ciwfzq44f00199ruiiz9wt89n","_id":"ciwfzq45q00619ruipz9v3kru"}],"Tag":[{"name":"app","_id":"ciwfzq43q00059ruihs0tt202"},{"name":"Mac","_id":"ciwfzq43v000a9rui992k2ioo"},{"name":"Window","_id":"ciwfzq441000h9ruicukq23qs"},{"name":"Linux","_id":"ciwfzq444000m9ruicskpcji3"},{"name":"JavaScript","_id":"ciwfzq447000r9ruicugj6gbb"},{"name":"Web","_id":"ciwfzq44a00109ruijb0c03py"},{"name":"note","_id":"ciwfzq44f00199ruiiz9wt89n"},{"name":"Discrete Mathematics","_id":"ciwfzq44i001e9ruivh2377b5"},{"name":"Math","_id":"ciwfzq44l001m9rui3m3bdfi6"},{"name":"Calculus","_id":"ciwfzq45c003n9ruii8ayyosj"},{"name":"Linear Algebra","_id":"ciwfzq45e003t9ruizyhqgj9u"},{"name":"MathJax","_id":"ciwfzq45i004q9ruifcv5qr02"},{"name":"markdown","_id":"ciwfzq45j004t9ruiot6f4dsy"},{"name":"sublime","_id":"ciwfzq45j004v9ruimclauca2"},{"name":"Java","_id":"ciwfzq45j004y9ruitdlby7gy"},{"name":"QuartZ","_id":"ciwfzq45k00509ruim45nsopz"},{"name":"Cron","_id":"ciwfzq45k00519rui2ok6z0ai"},{"name":"Python","_id":"ciwfzq45k00529ruicgyekfo2"},{"name":"Effective","_id":"ciwfzq45n005k9ruiffolqaef"},{"name":"IntelliJ IDEA","_id":"ciwfzq45o005o9rui0qhxgiuz"},{"name":"skill","_id":"ciwfzq45o005q9ruiv7y8wsad"},{"name":"设计模式","_id":"ciwfzq45o005r9ruiguggn2gz"},{"name":"open source","_id":"ciwfzq45p005u9rui1xu0rydt"},{"name":"Elementary mathematics","_id":"ciwfzq45p005x9ruif5ztvuiq"}]}}